2024-04-18 : *** Version 2.5.0 ***

2024-04-18 Nicolas Pomarede

        New release 2.5.0, update dates in corresponding files
        [09614692]

2024-04-17 Eero Tamminen

        Improve Rainbow 2 description

        Reported-By: Laurent Sallafranque
        [cc9e6e28]

2024-04-16 Nicolas Pomarede

        Remove unneeded entries from macOS localized InfoPlist.strings (as
        suggested by Andreas Grabher)
        - CFBundleShortVersionString because it matches the entry in
        Info-Hatari.plist
         and therefore does not need to be localized
        - CFBundleGetInfoString because it is obsolete since Mac OS X 10.6
         (and SDL2 requires 10.6 or later)
        [26217342]

2024-04-16 Nicolas Pomarede

        Update macOS's InfoPlist.strings (as suggested by Andreas Grabher)
        [5ec83954]

2024-04-15 Eero Tamminen

        Update compatibility doc + release notes
        [a7615126]

2024-04-15 Laurent Sallafranque

        Fix DSP: 2nd patch for dsp effective adress fix. When modifier =
        modulo, effective adress must be increased. This fix Audio Fun
        Machine sound quality when the equalizer is ON.
        [2e0802b0]

2024-04-15 Laurent Sallafranque

        DSP fix : effective adress with modifier = modulo wasn't correctly 
        updated. This fix Audio Fun Machine (AFM) sound when the equalizer
        is on.
        [e718ba34]

2024-04-15 Eero Tamminen

        SCC: change (way) too common debug logs to trace messages

        To make debug logging be useful again.
        [9a136d7e]

2024-04-15 Eero Tamminen

        SCC: trace and debug log output consistency

        Trace calls use "scc " prefix, debug logs "SCC: " one.
        [bdd1d2a6]

2024-04-15 Eero Tamminen

        Release notes: split debugger upates to 3 sub-categories

        To makes changes easier to read.
        [09e7f071]

2024-04-14 Eero Tamminen

        Falcon compatibility: Moongame starts only with Joypad button 3
        [e28cd56b]

2024-04-14 Eero Tamminen

        Compatibility doc: 2.5-dev -> 2.5, typo fix
        [7bb39cf7]

2024-04-14 Eero Tamminen

        Update release notes
        [ad5da09b]

2024-04-14 Eero Tamminen

        Update EmuTOS doc to latest Hatari/EmuTOS state
        [3347a913]

2024-04-14 Eero Tamminen

        Add Psycho Hack 2024 demos to EmuTOS compatibility list

        Going & Old demos have some very nice fullscreen effects:
        https://demozoo.org/parties/4759/
        [18e8469a]

2024-04-13 Nicolas Pomarède

        Prevent defining conflicting enum named 'bits' when including
        readcpu.h outside of cpu/ dir GCC 14 reports a warning when using a
        variable named 'bits', for example :

        src/hatari.git/src/scc.c: In function 'SCC_Update_RR0_Clear': 
        src/hatari.git/src/scc.c:1355:58: warning: declaration of 'bits'
        shadows a previous local [-Wshadow=local]
        1355 | static void     SCC_Update_RR0_Clear ( int Channel , int bits
        )
             |                                                      ~~~~^~~~ 
        In file included from src/hatari.git/src/cpu/newcpu.h:13,
                        from src/hatari.git/src/includes/m68000.h:25,
                        from src/hatari.git/src/scc.c:92: 
        src/hatari.git/src/cpu/readcpu.h:83:5: note: shadowed declaration is
        here
          83 |     bits, bitS, bitd, bitD, bitr, bitR, bitz, bitE, bitp,
        lastbit

        This is because readcpu.h is defining some enum's and one of them is
        'bits' As those enum's are only needed in the cpu core part, we
        disable them when including readcpu.h (through newcpu.h) outside of
        cpu/
        [943006bc]

2024-04-13 Nicolas Pomarède

        Remove commented include
        [f023a931]

2024-04-13 Nicolas Pomarède

        Remove redundant include for newcpu.h (already done in m68000.h)
        [4646c6bc]

2024-04-13 Thomas Huth

        Don't use _FORTIFY_SOURCE by default in debug builds

        Some debug builds are compiled without optimizations, which are then 
        causing lots of warnings when _FORTIFY_SOURCE has been enabled. So
        let's stop enabling it by default and add them to some of our CI 
        pipelines instead.
        [a5b1539c]

2024-04-13 Eero Tamminen

        More logical order for exception lists and their define values

        And release notes update.
        [c15f99b8]

2024-04-13 Thorsten Otto

        Support entering debugger on Line-F and Line-A instructions
        [e6ad1dbc]

2024-04-12 Eero Tamminen

        Update m68k NetBSD information

        For new NetBSD 10.0 release, and for improved Hatari emulation, 
        allowing kernel to work better than earlier:
        * MMU does not cause crashes
        * SCSI does not cause freeze
        * RGB screen works
        [744da26d]

2024-04-12 Thomas Huth

        Avoid crashes when using HD floppy images that are completely empty

        Thanks to Thorsten Otto for the hint: We must avoid that
        SectorsPerTrack gets set to 0, otherwise Hatari crashes with a
        divide-by-zero later.

        According to Wikipedia, there are some computers that use only 5
        sectors per track, so use that as a minimum number for the sanity
        check.
        [b684476b]

2024-04-01 Eero Tamminen

        Update docs in regards to MMU compatibility
        [29cf6b73]

2024-03-30 Thomas Huth

        Create Hatari.icns dynamically during the build
        [c149684a]

2024-03-29 Eero Tamminen

        Update release notes
        [773c90ba]

2024-03-28 Christian Zietz

        GEMDOS HD: Fix Fread/Fwrite combination on Windows

        The C99 standard mandates that a "file positioning function" is
        called when following fread() by fwrite(). To simplify the logic, a
        dummy fseek() is performed before every write operation.
        [1e398be7]

2024-03-27 Eero Tamminen

        Update compatibility doc

        * Command & Conquer (new game ported)
        * Imperfect demo works OK (Fixes: 9873d296f65c)
        * MiNT works better
        [07199fc0]

2024-03-27 Eero Tamminen

        Update EmuTOS compatibility notes: v1.3 -> git

        Git version has preliminary console text output support for TC mode.
        [7cd2b7c3]

2024-03-27 Nicolas Pomarede

        Improve SNDINT/SOUNDINT for Falcon DMA audio (based on measures on a
        real Falcon)
        [76b5de3e]

2024-03-27 Eero Tamminen

        Rate-limit xconout VT52 parser warning messages

        By using Hatari logging functions instead of fprintf().

        (Boot of 2017 MiNT version showed quite a lot of them...)
        [86579f61]

2024-03-24 Eero Tamminen

        Update problematic Falcon programs info in compatibility list

        Some games work now also when MMU is enabled.  Switched ScummVM
        notes to latest upstream release.  Dropped few notes for ancient
        Hatari versions. And updated version for checked items to 2.5-dev.
        [9873d296]

2024-03-25 Nicolas Pomarede

        Update release notes
        [6bf3a727]

2024-03-24 Eero Tamminen

        Update EmuTOS compatibility notes: git -> v1.3
        [f6a3f1be]

2024-03-24 Eero Tamminen

        Add notes about 1024k EmuTOS version to manual
        [98c124b0]

2024-03-24 Eero Tamminen

        Rate-limit DSP error messages output

        By switching from printf() to Log_Printf().

        This also reverts f5c66f710379 (manual rate-limiting for one of the
        messages triggered frequently by "Terrorize your soul") as it's now
        redundant.
        [4da75e6b]

2024-03-24 Thomas Huth

        Clean up code in ScreenSnapShot_SaveNEO()

        Coverity complains about the "if (bpp >= 10)" part being dead code
        here, since bpp >= 10 cannot happen due to the earlier checks.
        That's right, so let's clean up this part, make the code a little
        bit more readable, and while we're at it, also fix some bad
        indentations in this function.
        [4d7bf1f9]

2024-03-24 Thomas Huth

        Avoid strcpy() without length check
        [d56e53e1]

2024-03-24 Eero Tamminen

        m68k-linux: update scripts & docs

        Changes:
        - Enabling CPU cache does not cause init crash any more, after
         updating to latest m68k Debian BusyBox (it still happens with
         BusyBox version from 2019, but let's ignore that)
        - Scripts & docs are updated for Debian /usr merge:
         https://wiki.debian.org/UsrMerge
        - EmuTOS links updated to 1.3 release
        [151c117c]

2024-03-24 Laurent Sallafranque

        Fix typo: parallel and not parallal.
        [e47e060e]

2024-03-24 Laurent Sallafranque

        Format DSP disasm ALU_instruction X_move and Y_move for better 
        readibility.
        [043c6d16]

2024-03-24 Laurent Sallafranque

        Cleaning: remove the spaces at end of line before uploading a patch
        [75b1f16a]

2024-03-23 Nicolas Pomarède

        JMP/JSR bus error fix (from WinUAE 5.3.0 beta1 2024/03/23)
        [dd5d9dd3]

2024-03-21 Eero Tamminen

        Fix: allow any values for absolute / arbitrary symbol types

        They could be e.g. HW register values with upper bits set:
        VID_BASEHI equ $ffff8201

        And 24-bit addressing being in effect should not limit those.

        Reported-By: J. Young.
        [39523d4c]

2024-03-22 Nicolas Pomarède

        Update WinUAE's cpu core version
        [ff108396]

2024-03-22 Nicolas Pomarède

        Add VBL/HBL to crossbar traces
        [1e830514]

2024-03-22 Nicolas Pomarède

        Branch/jump instruction bus error fixes (from WinUAE 5.3.0 beta1
        2024/03/22)
        [62d85cb7]

2024-03-19 Eero Tamminen

        Fix: scrollbar arrows act until mouse button is released

        Regardless of whether mouse remains within the object i.e. all 
        interactive scrollbar elements behave now the same.

        This fixes SDL2 issue of it reporting mouse _state_ coord scaled so 
        that their exact position in the application framebuffer cannot be 
        calculated in letterboxed fullscreen, unlike mouse button _events_ 
        coords can.
        [b8efe3a3]

2024-03-17 Eero Tamminen

        Fix: scale fsel scrollbar mouse coords for scaled SDL2 windows

        Apply same fix also to one missing place in SDLGui_DoDialogExt() 
        object finding.
        [9a63cf44]

2024-03-17 Eero Tamminen

        Fix fileselector SDL GUI code indenting
        [743c88e9]

2024-03-19 Nicolas Pomarede

        Remove old references to src/uae-cpu/ we use src/cpu/
        [8c8d1df5]

2024-03-19 Nicolas Pomarede

        Hatari 2.5 ships with latest EmuTOS 1.3 from 2024/03/17
        [2c6db8a8]

2024-03-17 Eero Tamminen

        Fix: debugger memdump command count argument handling

        * Avoid infinite looping by rejecting negative counts
        * Show only requested number of items, instead of
         rounding number of items to next MEMDUMP_COLS
         (reported by J. Young)
        [ea6cbab7]

2024-03-16 Eero Tamminen

        Python UI: drop Hatari <2.4 (oldUAE) support

        Also improve TT-RAM / 24-bit addressing support slightly and update
        Python UI docs.
        [e1364f72]

2024-03-16 Eero Tamminen

        Python UI: drop Hatari v2.2, and add v2.4 options compatibility

        Additional complication is names for SCC-B config options changes.
        [9e356137]

2024-03-16 Eero Tamminen

        Fix: use more reasonable remote command buffer size

        400 bytes was way too small if e.g. Python UI wanted to pass 
        slightly more options to Hatari.
        [205f662d]

2024-03-15 Eero Tamminen

        m68k-linux: 040/060 work again after interrupt vector fix
        [6e673ef8]

2024-03-15 Nicolas Pomarede

        exception_debug() should use vector_nr not nr (#2)
        [74fc693e]

2024-03-15 Nicolas Pomarede

        exception_debug() should use vector_nr not nr
        [6bebca7f]

2024-03-15 Nicolas Pomarede

        Fix wrong vector number for interrupt in Exception_mmu() for
        68040/60
        [dfb9373c]

2024-03-14 Nicolas Pomarede

        Make currently unusable extra 68020 wait states conditional (from
        WinUAE 5.2.0+ 2024/03/16)
        [a167cb4b]

2024-03-13 Eero Tamminen

        Update release notes

        - list all changed config variables
        - add Chaos A.D. to fixed demos
        - Sort fixed programs by name
        [891f190e]

2024-03-13 Eero Tamminen

        m68k-linux: FPSP060.PRG required on 060
        [71183d25]

2024-03-12 Eero Tamminen

        Update bug information for Linux v6.8 on Hatari v2.5-dev

        All issues from testing v6.4 on v2.4.1 seem to be still there, and 
        there's an additional issue with 060 emulation.
        [91ae4de3]

2024-03-12 Eero Tamminen

        m68k-linux: update build instructions to v6.8

        Because upstream dropped other allocators than SLUB one: 
        https://www.phoronix.com/news/Linux-6.8-SLAB-SLUB-Changes

        I switched config from SLAB to SLUB_TINY.
        [11d3adfe]

2024-03-12 Eero Tamminen

        docs: Chaos A.D. demo is not noisy any more
        [4adbc0a1]

2024-03-12 Eero Tamminen

        Add RTC timer interrupts to todo list
        [a6ecc810]

2024-03-09 Nicolas Pomarède

        Missing update for SNDINT_Signal (fix Falcon DMA audio "end of
        frame" interrupt on GPIP7)
        [b5c4deb1]

2024-03-09 Thomas Huth

        Update the macOS Ventura job to Sonoma
        [3ff847f6]

2024-03-09 Thomas Huth

        Update release notes for the upcoming release
        [8133202a]

2024-03-09 Thomas Huth

        Update Cirrus-CI to FreeBSD 13.3
        [be97baed]

2024-03-08 Eero Tamminen

        Fix SCC config file name checks

        Given variables are pointers to Hatari config string arrays, so 
        variables are always true, but they can be empty.
        [1005bbb4]

2024-03-08 Eero Tamminen

        TOS bootup tester: update SCC-B config option names

        Changed in 6087c3d3344e89, otherwise Falcon tests fail.
        [6ade9318]

2024-03-07 Eero Tamminen

        TOS bootup tester: minor documentation improvements
        [d0b31eab]

2024-03-07 Eero Tamminen

        TOS bootup tester: update test binaries

        For a small code change done in 2022...
        [088b4582]

2024-03-08 Nicolas Pomarede

        Update release notes for Falcon
        [b357167a]

2024-03-04 Eero Tamminen

        Add "echo" command to debugger
        [e3ba7bc6]

2024-03-03 Eero Tamminen

        Breakpoint ":quit" option inhibits extra output also for ":file" one
        [5be5f707]

2024-03-06 Nicolas Pomarede

        Update WinUAE's cpu core version
        [b882497e]

2024-03-06 Nicolas Pomarede

        For Falcon, use ScreenRefreshRate in
        ClocksTimings_GetCyclesPerVBL(), as we now have VIDEL_Get_VFreq()
        instead of fixed 50Hz This fixes DMA sound being too slow when
        ScreenRefreshRate=60 Hz in VGA mode
        [10b9de0c]

2024-03-04 Nicolas Pomarede

        For Falcon DMA sound, SNDINT/SOUNDINT are set to 0/LOW when playing
        and 1/HIGH when idle + fix use of FF8900 This means that Timer A
        Input or GPIP7 can be used on the MFP to detect/count each time a
        new audio frame is starting (this is the opposite of STE/TT) 
        Additionally reg FF8900 can be configured to trigger an interrupt on
        TAI or GPIP7 at the end of each audio frame when playing or
        recording
        [506b673d]

2024-03-04 Nicolas Pomarede

        Remove unused function VIDEL_Get_MonitorType()
        [f285453b]

2024-03-01 Nicolas Pomarede

        In Falcon mode use VFT and VC0 to get the current video vertical
        freq (50, 60, ...)
        [3151d0da]

2024-02-25 Nicolas Pomarede

        Add debug line
        [7f564567]

2024-02-25 Nicolas Pomarede

        In Falcon mode set video refresh rate to 60 Hz if monitor type is
        VGA
        [3a4bbca9]

2024-02-24 Thomas Huth

        ide: Cap LBA28 capacity announcement to 2^28-1

        The LBA28 capacity (at offsets 60/61 of identification) is supposed
        to express the maximum size supported by LBA28 commands. If the
        device is larger than this, we have to cap it to 2^28-1.

        At least NetBSD happens to be using this value to determine whether
        to use LBA28 or LBA48 for its commands, using LBA28 for sectors that
        don't need LBA48. This commit thus fixes NetBSD access to disks
        larger than 128GiB.

        This change is based on Samuel Thibault QEMU commit here: 
        https://gitlab.com/qemu-project/qemu/-/commit/46e018e9b741731842b93ce23a86fad6
        [8e8a911e]

2024-02-24 Thomas Huth

        ide: model HOB correctly

        When writing to the command registers, the old value is shifted into
        a HOB copy of the register and the new value is written into the
        primary register. When reading registers, the value retrieved is
        dependent on the HOB bit in the CONTROL register.

        By setting bit 7 (0x80) in CONTROL, any register read will, if it
        has one, yield the HOB value for that register instead.

        Our code has a problem: We were using bit 7 of the DEVICE register
        to model this. We use bus->cmd roughly as the control register
        already, as it stores the value from ide_ctrl_write.

        Lastly, all command register writes reset the HOB, so fix that, too.

        This change is based on John Snow's QEMU commit here: 
        https://gitlab.com/qemu-project/qemu/-/commit/be8c9423dec7bd0a0af7f57ecbbcb271
        [3c7e987a]

2024-02-24 Thomas Huth

        ide: rename cmd_write to ctrl_write

        It's the Control register, part of the Control block -- Command is 
        misleading here. Rename all related functions and constants.

        This change is based on John Snow's QEMU commit here: 
        https://gitlab.com/qemu-project/qemu/-/commit/98d98912238d9f4f4c41bda0a3d944d0
        [386e4992]

2024-02-24 Thomas Huth

        ide: Add register hints to tracing

        Name the registers for tracing purposes.

        This change is based on John Snow's QEMU commit here: 
        https://gitlab.com/qemu-project/qemu/-/commit/335ca2f2f0f540c2e24fb9d4d5859322
        [455d0e1b]

2024-02-24 Thomas Huth

        ide: don't tamper with the device register

        In real ISA operation, register writes go out to an entire bus
        channel and all listening devices receive the write. The devices do
        not toggle the DEV bit based on their own configuration, nor does
        the HBA intermediate or tamper with that value.

        The reality of the matter is that DEV0/DEV1 accordingly will react
        to command register writes based on whether or not the device was
        selected.

        This does not fix a known bug, but it makes the code slightly
        simpler and more obvious.

        This change is based on John Snow's QEMU commit here: 
        https://gitlab.com/qemu-project/qemu/-/commit/f14bc040b073257f0eb8200042634c0d
        [b334c5f3]

2024-02-24 Thomas Huth

        Silence two compiler warnings by using a proper function declaration
        [94c96a79]

2024-02-20 Nicolas Pomarede

        Add note in DmaSnd_Update_XSINT_Line() about Timer A counting "end
        of frame" events on STE/TT
        [8a7c1428]

2024-02-13 Nicolas Pomarède

        Update WinUAE's version to 5.2.0 beta9 2024/02/12
        [aa25c451]

2024-02-13 Nicolas Pomarède

        Fix 68040 MMU MOVES special case (patch by Andreas Grabher) (from
        WinUAE 5.2.0 beta9 2024/02/12)
        [2a11e29d]

2024-02-13 Nicolas Pomarède

        DraCo misc updates, some Casablanca update (not used in Hatari)
        (from WinUAE 5.2.0 beta5 2024/01/22)
        [37400833]

2024-02-04 Nicolas Pomarede

        Add XIMG screenshot format to release notes
        [ed4c43db]

2024-02-04 Eero Tamminen

        Improve dev version release notes categorization
        [a9c3bcea]

2024-02-04 Eero Tamminen

        Fix script comment typo
        [9d3af443]

2024-02-02 Nicolas Pomarede

        Update release notes
        [93535798]

2024-02-02 Thomas Huth

        Update documentation with regards to joypad support
        [46788d11]

2024-01-31 Nicolas Pomarede

        Fix for bug in caps library that reset FDC's TR and DR on warm reset
        (thanks Ijor) The game 'F29 Retaliator' uses the CPU "reset"
        instruction which wrongly clears
        "r_track" and "r_data" in the caps library instead of keeping their
        values. The loader will then fail and the game won't start, staying
        on track 71 instead of seeking to track 0.
        [97eddba4]

2024-01-29 Eero Tamminen

        Python UI: Add SCC-A support to GUI

        - Add SCC-A enabling options
        - Fix Hatari remote API "sccalan" command name
        - Sort paths dialog entries by label instead of Hatari command name,
         and change path labels so that they start with the device type i.e.
         get ordered nicer in the dialog

        Fixes: 5eff40495db
        [e4f54e41]

2024-01-29 Eero Tamminen

        Python UI: Fix uihelpers function comments
        [d3e9a3a0]

2024-01-28 Thomas Huth

        Add the possibility to configure the extended joypad keys in the SDL
        GUI
        [5b5cd426]

2024-01-28 Thomas Huth

        Add emulation of additional joypad buttons via the keyboard
        [72254a82]

2024-01-28 Thomas Huth

        Rename JOYID_STEPAD* to JOYID_JOYPAD*
        [d2e9772a]

2024-01-27 Thomas Huth

        Mention analog/paddle support in the documentation
        [bea5aaae]

2024-01-27 Thomas Huth

        Fix compilation issue when NDEBUG is enabled
        [21c3bd79]

2024-01-27 Thomas Huth

        Remove unnecessary #ifdef check

        We require at least SDL 2.0.6 nowadays, so we don't nee this check
        anymore.
        [cf031b17]

2024-01-27 Nicolas Pomarede

        "line_size" computation is also common NEO/XIMG code (patch by Brad
        Smith) make flags field for NEO explicit 0 + some NEO header
        comments for clarity
        + remove unused variable "SDL_PixelFormat *fmt"
        [ee524aec]

2024-01-27 Nicolas Pomarede

        hatariui.py : update parameters' name for SCC A / SCC A Lan / SCC B
        in [RS232] config
        [5eff4049]

2024-01-27 Thomas Huth

        Simplify the BytesPerPixel checks

        Since we only support 32 bpp nowadays, there is really no need
        anymore to check BytesPerPixel in each iteration of the loops. Let's
        simply add an assert() statement at the beginning of the functions
        instead that we remember to update this code if we ever support
        anything beside 32 bpp again.
        [4d1818cd]

2024-01-27 Thomas Huth

        Wire up the analog joypad support in Falcon mode, too
        [3c4c5439]

2024-01-26 Nicolas Pomarede

        Update screen dialog documentation and image with new screenshot
        format options (patch by Brad Smith)
        [5fb431df]

2024-01-26 Nicolas Pomarede

        Fix NEO header resolution field (patch by Brad Smith)
        [2d3bfcf1]

2024-01-26 Nicolas Pomarede

        Add XIMG to screenshot GUI (patch by Brad Smith)
        [99a94956]

2024-01-26 Nicolas Pomarede

        Consolidate shared code from SaveNEO/SaveXIMG (patch by Brad Smith)
        [48e9ab27]

2024-01-26 Nicolas Pomarede

        Cleanup of palettized-PNG, NEO and XIMG support (patch by Brad
        Smith) Snapshot functions use stack arrays instead of static, use
        be_swap16 instead of custom StoreU16NEO function, add ximg to
        --screenshot-format formats, document in manual.html
        [d0bf4bf6]

2024-01-26 Nicolas Pomarede

        XIMG screenshot support (patch by Brad Smith) See
        https://freemint.github.io/tos.hyp/en/VDI_fundamentals.html#The_20XIMG_20format_20for_20pixel_20images 
        for a description of the format Notes from Brad Smith
        (https://github.com/hatari/hatari/pull/34 for more details) : XIMG,
        though less popular than NEO, can represent all video modes
        supported by Hatari.
        [d9f957ee]

2024-01-26 Nicolas Pomarede

        NEO screenshot support for more modes still compatible with the
        format (patch by Brad Smith)
        [1c134177]

2024-01-24 Nicolas Pomarede

        Remove old code using 16bpp (not needed since commit 4d78e24 from
        2022/10/02)
        [870f78c3]

2024-01-24 Nicolas Pomarede

        Use new choice of screenshot format immediately when pressing
        'Screenshot' button
        [c6ddae64]

2024-01-23 Nicolas Pomarède

        Add buttons in the 'Hatari Screen' menu to choose the screenshot
        format (png/bmp/neo)
        [14505297]

2024-01-14 Alex Hornby

        add ste pad analog support as used by PP Oids

        PP has an Oids patch that can use the STE controller input analog
        options. See https://www.atari-forum.com/viewtopic.php?t=31796 for
        technical details and https://atari.8bitchip.info/SCRSH/oids.html
        for game download. The OIDSAJ download includes an analog stick test
        program.

        Steem SSE IO handling equivalent is in 
        https://sourceforge.net/p/steemsse/code/HEAD/tree/trunk/steemsse/steem/stjoy.cpp#l633

        Some more docs at:
        https://info-coach.fr/atari/hardware/STE-HW.php#joysticks
        [cf7cd075]

2024-01-21 Nicolas Pomarede

        Update release notes with .NEO screenshot and "--screenshot-format"
        [48bc55ca]

2024-01-21 Nicolas Pomarede

        Add option "--screenshot-format" to choose the file format used when
        taking screenshot (bmp, png or neo) Corresponding option in
        hatari.cfg is Screen.ScreenShotFormat (1=bmp, 2=png, 3=neo) Default
        format is "png" if libpng is available, else it will be "bmp"
        "bmp" or "png" format work for any resolution.
        "neo" format works only for ST/STE resolutions
        [7d95c583]

2024-01-21 Nicolas Pomarede

        Allow .NEO screenshot in TT/Falcon, only if resolution is compatible
        with ST/STE (based on patch by Brad Smith) Original patch by Brad
        Smith allowed saving any resolution in .NEO file but as the result
        would not be readable with Neochrome or Neochrome Master I added
        some check to allow only ST/STE compatible resolutions. Display an
        error message if the current resolution is not compatible with .NEO
        [12a31785]

2024-01-20 Nicolas Pomarede

        Define HAVE_DIRENT_H in WinUAE's sysconfig.h (all recent OSes should
        have dirent) Prevent some conflict with "struct direct *" when
        including stMemory.h in files that already include dirent.h
        [5a946f7a]

2024-01-16 Nicolas Pomarède

        NEO direct video memory dump option for screen snapshot (patch by
        Brad Smith) This needs to be enabled via
        Config.bNEOScreenSnapShot=TRUE (no UI added for it)

        Notes from Brad Smith (https://github.com/hatari/hatari/pull/31 for
        more details) : This creates a NEO file format screenshot, out of
        the data in FrameBuffer (screen.c). This works for ST low, medium,
        and high resolutions. The palette is taken from the centre line of
        the FrameBuffer for Low and Medium resolutions. For High resolution
        don't seem to store per-line palette, but I instead extracted the
        GenConvert palette for it.
        [dd0c3b99]

2024-01-15 Nicolas Pomarede

        Use ST palette for PNG screenshots if possible (patch by Brad Smith) 
        Notes from Brad Smith (https://github.com/hatari/hatari/pull/30) : 
        This allows PNG screenshots to use the ST palette where possible.

        A palettized image has a few advantages. The file size is slightly
        smaller. Any graphics program that can view the palette can now be
        used to see what the ST's 16-colour palette looked like at the time
        of screenshot. It makes palette-based editing of the image easier
        (e.g. changing colours). Conversion into an ST-ready image format is
        also more straightforward.

        This automatically falls back to a full RGB image if the image
        contains any colours outside the current ST palette. This means that
        modes with more colours, or mid-screen palette changes will still
        produce valid screenshots as full RGB.

        This works for low res and med res video modes.

        NOTE 2 : As the Hatari UI also uses its own colors, you need to
        check "Crop Statusbar" in the "Hatari Screen" menu to ensure the
        status bar is not included in the screenshot. If not, it will use
        more colors than the emulated screen and resulting PNG will be saved
        as RGB image and not as palettized image.
        [3f6874f3]

2024-01-14 Thomas Huth

        Add missing #include for Hatari_rand() prototype
        [28e57669]

2024-01-14 Thomas Huth

        Remove old and unused variables from the memory snapshots

        The memory snapshot file format has recently been changed, so it
        should be fine now to remove these old variables now, too.
        [727abe36]

2024-01-14 Nicolas Pomarede

        hmsa tool needs utils.c to compile
        [c10ca6e5]

2024-01-14 Nicolas Pomarede

        Use Hatari_rand() wrapper instead of calling rand() directly (to
        allow customising the random function)
        [61a8744f]

2024-01-14 Nicolas Pomarede

        Add BusCyclePenalty, IoAccessInstrPrevClock and IoAccessInstrCount
        to the memory snapshot (patch by Brad Smith)
        [09595f70]

2024-01-14 Nicolas Pomarede

        Add currcycle and extra_cycle from WinUAE's CPU core to the memory
        snapshot (patch by Brad Smith)
        [6fa3af8d]

2024-01-14 Nicolas Pomarede

        Add more CPU variables from m68000.c to the memory snapshot (patch
        by Brad Smith)
        [d4de5482]

2024-01-14 Nicolas Pomarede

        Add MachineClocks struct, CycInt_From_Opcode and PendingCyclesOver
        variables to the memory snapshot (patch by Brad Smith)
        [e217eada]

2024-01-14 Nicolas Pomarede

        Add VBL_ClockCounter variable to the memory snapshot (patch by Brad
        Smith)
        [4921a109]

2024-01-14 Nicolas Pomarede

        Add more sound variables to the memory snapshot (patch by Brad
        Smith)
        [cf69d5d6]

2024-01-14 Nicolas Pomarede

        Include YM_Buffer_250 to the memory snapshot for seamless audio when
        restoring (patch by Brad Smith) Buffer was previously cleared on
        restore
        [a88b9e4c]

2024-01-14 Nicolas Pomarede

        Add missing blitter's varaibles to the memory snapshot (patch by
        Brad Smith)
        [cb8b61b8]

2024-01-13 Nicolas Pomarède

        Update RS232 part in the manual with a table of all available
        ports/options + fixes some spelling
        [d8d97118]

2024-01-08 Eero Tamminen

        Add Miro's recent programs to compatibility lists
        [a5cd0ca3]

2024-01-11 Nicolas Pomarède

        Update SCC status in doc to "fully working"
        [e74f06cf]

2024-01-11 Nicolas Pomarède

        Add options --scc-a-lan-in and --scc-a-lan-out to the manual
        [5719ba0c]

2024-01-10 Nicolas Pomarède

        Enable Serial or LAN on SCC A depending on bit 7 in reg 14 of the
        YM2149 for MegaSTE and TT (0=Lan, 1=Serial)
        [e1e274a0]

2024-01-10 Nicolas Pomarède

        Add options --scc-a-lan-in and --scc-a-lan-out to configure the LAN
        port on SCC Channel A for MegaSTE and TT
        [05908959]

2024-01-08 Nicolas Pomarède

        SCC : add support for 2 filehandles per channel (serial and lan) On
        MegaSTE and TT, SCC channel A can be connected to the serial port or
        to the lan port using bit 7 in reg 14 of the YM2149 (0=Lan,
        1=Serial)
        [3692376f]

2024-01-07 Nicolas Pomarède

        SCC : use ioctl TIOCSBRK/TIOCCBRK to set/clear BRK on the serial
        line
        [0d2711fb]

2024-01-06 Nicolas Pomarède

        NMI handling fix (patch by Andreas Grabher) (from WinUAE 5.2.0 beta1
        2024/01/06)
        [420e0998]

2024-01-06 Nicolas Pomarède

        Remove --scc-a and --scc-b options to keep consistency with rs232
        options
        [f2958308]

2024-01-06 Thomas Huth

        Fix previous commit (adapt endif() statement, too)
        [e70f6189]

2024-01-06 Thomas Huth

        Do not capitalize 'hatari.exe' on Windows
        [b2f2000d]

2024-01-05 Eero Tamminen

        Make SCC option define names more readable/consistent with others

        As SSCB_IN, it will not be interpreted as SCC_BIN...
        [12c3da06]

2024-01-04 Nicolas Pomarède

        Don't use "speed_t" type when termios.h is not found
        [b848a7bb]

2024-01-04 Nicolas Pomarède

        SCC : remove old code + rename some variables
        [2f3e8999]

2024-01-03 Nicolas Pomarède

        Update SCC options in manual
        [dd5e5b9d]

2024-01-03 Nicolas Pomarède

        Add options --scc-a, --scc-a-in and --scc-a-out + store SCC's
        configuration for channels A/B in an array
        [6087c3d3]

2024-01-02 Nicolas Pomarède

        SCC : Improve TX part (TSR status "full", interrupt on TX)
        [b942d400]

2024-01-02 Nicolas Pomarède

        SCC : improve SCC_Serial_Get_CTS and SCC_Serial_Get_DCD +
        indent/rename
        [270c546e]

2024-01-01 Nicolas Pomarède

        Enable again previously commented options "-scc-b" and "-scc-b-in"
        [ea20f8de]

2023-12-29 Nicolas Pomarède

        When updating intlev / pendingInterrupts, always copy regs.ipl_pin
        to regs.ipl_pin_p If not, some wrong interrupts can trigger, based
        on the previous content of egs.ipl_pin_p This workaround is required
        at the moment because Hatari resets currcycle to count internal
        cycles, which messes with ipl_fetch_next() and gives wrong value for
        regs.ipl_pin_change_evt TODO : we should not reset currcycle and use
        it directly for Hatari's internal cycles counter
        [0584bb6a]

2023-12-13 Nicolas Pomarède

        SCC : improve doc for description and naming of the ports on the
        different machine types
        [bd52871a]

2023-12-11 Nicolas Pomarède

        SCC : reorder some code
        [d8f8acbe]

2023-12-11 Nicolas Pomarède

        SCC : Ext/Status IP in RR3 are set when bits in RR0 are changing,
        not when bit are high
        [6c38d6aa]

2024-01-02 Nicolas Pomarède

        Debugger MMU mode instruction byte read missing masking (from WinUAE
        5.1.0+ 2024/01/01)
        [01d32508]

2024-01-02 Nicolas Pomarède

        Fix 68040/060 bus error RTE + Trace (from WinUAE 5.1.0+ 2024/01/01)
        [4c94e698]

2024-01-02 Nicolas Pomarède

        MMU table dump includes description valid state (from WinUAE 5.1.0+
        2024/01/01)
        [6daea17f]

2024-01-02 Nicolas Pomarède

        Revert part of "Fast 68020+ modes didn't start pending interrupt
        immediately" fix (from WinUAE 5.1.0+ 2023/12/29) only SR
        modifications must check interrupt immediately
        [9dd63033]

2023-12-29 Eero Tamminen

        Support for (missing) "pl" + (new) "ro" EmuTOS language options

        Romania support was recently added to EmuTOS daily snapshots, but
        Poland support has been there since EmuTOS v1.1.1 release
        (= I had missed it in Hatari v2.4.0 release).
        [14bcf9b0]

2023-12-28 Nicolas Pomarede

        68040/060 MMU fault handler bug fix for MOVEM (part 2) +
        regs.spcflags cleanups (from WinUAE 5.1.0+ 2023/12/28)
        [f437b8fd]

2023-12-28 Nicolas Pomarede

        Move SPCFLAG_xxx from custom.h to newcpu.h + change values for
        Hatari's specific flags
        [47f3ebbe]

2023-12-28 Nicolas Pomarede

        68040/060 MMU fault handler bug fix for MOVEM (from WinUAE 5.1.0+
        2023/12/28) If interrupt level increased during 68040/060 MMU fault
        handler execution, interrupt's first instruction was "restarted", if
        both original and exception's instruction were MOVEM, things went
        horribly wrong.
        [c47c3bf4]

2023-12-28 Nicolas Pomarede

        68030 MMU configuration exception was incorrectly followed by f-line
        exception (from WinUAE 5.1.0 beta14+ 2023/12/16)
        [2d172cb0]

2023-12-27 Thomas Huth

        Fix typos (discovered with codespell)
        [fd027acd]

2023-12-22 Thomas Huth

        Use uae types in the CPU code

        Thanks to Andreas for the patch
        [2becd4e5]

2023-12-22 Thomas Huth

        Add portmidi to the macOS CI build
        [e2952e7e]

2023-12-22 Thomas Huth

        Include "savestate.h" in custom.c

        This way we can be sure that the definition of "savestate_fname"
        matches the extern declaration in the header file. While we're at
        it, also remove some other unnecessary #include statements from this
        file.
        [3ca4c5cc]

2023-12-21 Thomas Huth

        Silence compiler warning about comparing signed with unsigned values

        When building for 32-bit targets, the compiler dislikes the new
        comparison in gemdos.c. For both sides to unsigned to fix the
        problem.
        [1ce50778]

2023-12-21 Thomas Huth

        Build via rpmbuild (i.e. via hatari.spec) in the Fedora CI job

        To make sure that the spec-file does not bitrot so easily again, 
        let's use it in the Fedora CI job to build Hatari there.
        [831f6f7b]

2023-12-21 Thomas Huth

        Fix hatari.spec file

        It's apparently been a while since we used the spec file for the
        last time since it does not work out-of-the-box anymore. Fix the
        problematic parts so that it works again with a recent version of
        Fedora.
        [5716056d]

2023-12-21 Thomas Huth

        Fix compiler warning that occurs with link-time optimization

        With LTO enable, the build fails with:

         [100%] Linking C executable hatari
        .../src/cpu/savestate.h:281:14: error: type of 'savestate_fname'
        does not
         match original declaration [-Werror=lto-type-mismatch]
          281 | extern TCHAR savestate_fname[MAX_DPATH];
              |              ^
        .../src/cpu/custom.c:40:8: note:
         'savestate_fname' was previously declared here
           40 | TCHAR *savestate_fname;
              |        ^
        lto1: all warnings being treated as errors

        Declare the array according to the definition in the header file to
        fix it.
        [adccd68b]

2023-12-20 Thomas Huth

        Fix building universal binaries for macOS

        Compiling libpng as universal binary seems to work if we are using
        "arm64;x86_64" instead of "x86_64;arm64", so let's give this a try.
        [ebcb6920]

2023-12-20 Thomas Huth

        Sign png.framework, too
        [7ffa759c]

2023-12-18 Thomas Huth

        Only build for arm64 in the cirrus-CI

        Building an universal binary for both, x86_64 and arm64, does not
        seem to work for the png.framework, so limit the build to arm64 for
        now.
        [322d8b21]

2023-12-18 Thomas Huth

        Make the target name configurable (and use "Hatari" for the macOS
        bundle)

        Thanks to Andreas Grabher for the idea!
        [742a8306]

2023-12-17 Thomas Huth

        Allow the user to override the CMAKE_OSX settings again
        [f896ec61]

2023-12-17 Thomas Huth

        Reduces the differences between Hatari and Previous

        Setting CMAKE_OSX_ARCHITECTURES and CMAKE_OSX_DEPLOYMENT_TARGET must
        be set before the call to project(). Otherwise it won’t be
        recognised. Therefore building Hatari as universal binary was
        broken. Also add automatic addition of SDL2.framework and
        png.framework to the bundle. This way you get a runnable application
        out of the box (else you would have to copy the frameworks to the
        bundle manually before to make it work). This is necessary since
        Xcode 15. Also remove some unused stuff.

        Thanks to Andreas Grabher for the patch!
        [82e55cbb]

2023-12-15 Thomas Huth

        Fix installation of the png.framework if the cache is already
        available
        [4cdfc36a]

2023-12-15 Thomas Huth

        Fix problem reported by 'tidy'
        [01c2bffe]

2023-12-14 Nicolas Pomarede

        DSP cleanup (patch by Andreas Grabher)
        [bb0caf0e]

2023-12-14 Nicolas Pomarede

        Fix swapped FSINCOS destination registers in disasm (from WinUAE
        5.1.0 beta13+ 2023/12/13)
        [f1ad70b6]

2023-12-14 Nicolas Pomarede

        Fix 68060 MMU MOVEM.L (An)+,<regs> if regs contain An. Small cleanup
        (from WinUAE 5.1.0 beta13+ 2023/12/13)
        [258b0cda]

2023-12-14 Nicolas Pomarede

        Debugger and calculator updates (from WinUAE 5.1.0 beta12
        2023/12/10)
        [44ea6dd1]

2023-12-13 Eero Tamminen

        Add table for 060 Falcon games / Falcon games from tSCc
        [862c8a95]

2023-12-11 Eero Tamminen

        Document DSP improvement from Andreas
        [4017c93e]

2023-11-30 Eero Tamminen

        Add notes of 2 programs intended for 060 but working on TT too
        [d960b17e]

2023-12-09 Thomas Huth

        Install libpng in the macOS job

        Thanks to Andreas Grabher for some hints on how to build the
        png.framework.
        [01121b42]

2023-12-09 Thomas Huth

        Removed superfluous #undef NATMEM_OFFSET
        [0afa393a]

2023-12-03 Nicolas Pomarède

        Improve DSP's bootstrap support + add host received data interrupt
        (patches by Andreas Grabher)
        - Add host interface initialisation
        - Add early abort of the hacked bootstrap loader
        - Real bootstrap loader sets R0 to the amount of bytes copied and
        OMR to 2
        - Add host received data interrupt
        [619f71d9]

2023-12-03 Nicolas Pomarède

        In DSP, move the check for program space before the check for
        internal RAM + add space for rom[2] (P ROM) (patch by Andreas
        Grabher)
        [4f6504eb]

2023-12-03 Nicolas Pomarède

        Clean some DSP parts (patch by Andreas Grabher)
        [0047e845]

2023-11-28 Nicolas Pomarède

        Avoid unneeded includes when capstone is not used (by Andreas
        Grabher)
        [20993ca1]

2023-11-28 Nicolas Pomarede

        Randomize seed if hard reset (not used in Hatari) (from WinUAE 5.1.0
        beta8 2023/11/18)
        [328ebb98]

2023-11-28 Nicolas Pomarede

        Update WinUAE's version to 5.1.0 beta9 2023/11/26
        [4836521a]

2023-11-28 Nicolas Pomarede

        DISASM_FLAG_VAL_FORCE disassembler parameter: always show EA, even
        if it is simple (An) (from WinUAE 5.1.0 beta9 2023/11/24) This will
        show EA value for jsr/jmp when used with (An), for example
         00FC007E 4ED0 jmp (a0) == $00000ECC
        [58038b06]

2023-11-27 Nicolas Pomarède

        SCC : improve latching RR0 when interrupts are enabled in WR15 +
        update RR0 before updating RR3
        [fcfbd130]

2023-11-27 Eero Tamminen

        Fix DSP register name lookup table order

        Reported-By: Mariusz Buras <mariusz.buras@gmail.com>
        [eedfc317]

2023-11-19 Thomas Huth

        The content of Videl register FF820A should not depend on the
        monitor type

        Falcon TOS definitely writes bit 1 according to the selection of PAL
        or NTSC in the VSetMode() XBIOS call, and Roger Burrows confirmed
        that the lowest two bit can indeed be changed by writing to the
        register on a real Falcon (thanks a lot to him for testing!), so the
        assumption that bit 1 is a read-only flag for color or mono monitor
        is certainly wrong.
        [96d7e168]

2023-11-17 Eero Tamminen

        Add tool for printing m68k instruction breakpoints
        [16445594]

2023-11-11 Nicolas Pomarède

        Add missing #ifdef DEBUGGER (from WinUAE 5.1.0 beta7 2023/11/04)
        [955a8cb7]

2023-11-11 Thomas Huth

        Ignore symbol table length if it contains a value that is too big

        Original TOS does the same, and there are some programs in the wild 
        that apparently abuse the symbol table size field for other
        purposes, so we should ignore it in Hatari, too, to be able to load
        those baddies.
        [8a0c86bc]

2023-11-09 Nicolas Pomarède

        Typo
        [0828e281]

2023-11-09 Nicolas Pomarède

        Ensure STMemory_Reset() is called early in Reset_ST() (before
        calling memory_init()) Hatari could crash when starting with an
        'invalid' amount of RAM (eg 8 MB for STF, which writes 0xF to MMU
        conf at FF8001) and then switching to <= 4 MB RAM)
        [fe0b2821]

2023-11-07 Eero Tamminen

        Silence GCC 12 warning

        There was no problem, but that GCC version complains if last char
        (which will be overwritten with nil on next line) can be written by
        strncpy().
        [670212c8]

2023-11-06 Thomas Huth

        Silence a compiler warning in the macos12 job
        [4f931ba0]

2023-11-04 Nicolas Pomarede

        Ensure MMU_Bank0_Size has default (reset) value when changing TOS
        implies changing machine's type Fix a crash in the following case
        (thanks to Eero for the example):
          1. Start Hatari with Falcon TOS and >4MB RAM:
             hatari --machine falcon --tos tos404.img -s 8
          2. Switch to 1.x / 2.x TOS + 4MB or less RAM in Hatari setup
        dialog
          3. OK changes, so that emulation gets rebooted TODO : Instead of
        calling Memory_Reset() a safer path would be to call Reset_ST() in
        case changing TOS changes hardware parameters (as in
        Change_DoNeedReset())
        [5be3a68a]

2023-10-31 Thomas Huth

        Fix SyntaxWarning from Python 3.12 about invalid escape sequence
        '\s'
        [69ce0939]

2023-10-31 Thomas Huth

        Mention that --disable-small-mem is deprecated
        [aa1d5882]

2023-10-31 Thomas Huth

        Always enable FORTIFY_SOURCE for debug builds

        This adds some runtime checks that can detect errors, which should 
        be enabled for debugging mode.
        [adc8ae2c]

2023-10-31 Thomas Huth

        Enable -Wshadow=local if available

        Shadowing variables within a function is quite bad style and can 
        confuse the reader of the code or even lead to subtle bugs. Let's 
        try to avoid this by enabling the compiler warnings for this if 
        available.
        [e1ae777c]

2023-10-31 Thomas Huth

        Fix compiler warnings with -Wshadow=local
        [f6e2cfca]

2023-10-22 Nicolas Pomarède

        Fix FPU state if FPU is enabled but is not enabled in loaded
        statefile (from WinUAE 5.1.0 beta5 2023/10/11)
        [5cf9518e]

2023-10-22 Nicolas Pomarède

        Update WinUAE's version to 5.1.0 beta3 2023/10/07
        [35a722ba]

2023-10-10 Nicolas Pomarède

        Blitter SRC/DST addresses should use 32 bits when 32 bit TT RAM is
        used (revert previous change b5b0b1fb)
        [e8317e26]

2023-10-10 Nicolas Pomarede

        Blitter SRC/DST addresses are only 24 bit, even on machines with
        extra 32 bit "TT RAM"
        [b5b0b1fb]

2023-10-05 Nicolas Pomarède

        abs -> fabs (from WinUAE 5.1.0 beta1+ 2023/10/05)
        [0a2589d9]

2023-10-02 Eero Tamminen

        Add Sommarhack 2023 demos + new game to compatibility lists
        [24d4ab13]

2023-10-03 Thomas Huth

        relocflag is uint16_t, so use be_swap16() for this variable
        [0f0a30be]

2023-10-03 Thomas Huth

        Make sure that list->strtab[] is always NUL-terminated

        This (hopefully) fixes a problem that has been discovered with
        Coverity: We are using the data in this buffer as parameter for
        fprintf with "%s"
        (via the "name" pointer), so we should make sure that there is a NUL 
        at the end of the buffer in any case.
        [2ada29ab]

2023-10-01 Thomas Huth

        Fix address register handling in CAS2 disassembly

        This corresponds to WinUAE commit
        a820167aaff9baf8e728ce10ddac803884a0866f
        [9fe4829a]

2023-10-01 Thomas Huth

        Remove unused parameters (there is no "%" in the format string here)

        This corresponds to WinUAE commit
        595454adafb802e055e79a07920723063714e23a
        [6736a5ef]

2023-10-01 Nicolas Pomarède

        Remove old/unused CycInt code that was replaced by faster one in
        Hatari 2.4.0
        [17dcec7b]

2023-10-01 Thomas Huth

        Add a proper wrapper for tmpfile()

        We're using similar code in two places to deal with tmpfile() not
        working right on Windows. Let's move this logic into a proper
        wrapper function, so that we don't have to repeat it everywhere.
        [0232ddfd]

2023-10-01 Thomas Huth

        Check FPU revision on the fly changes

        This corresponds to WinUAE commit
        0d8e68607d958f593b810183c570d6c921ef5f00

        Thanks to Andreas Grabher for the patch!
        [cd851811]

2023-10-01 Thomas Huth

        n cannot get negative in the while loop in CycInt_InsertInt()

        So remove the n >= 0 check from the while-loop condition to silence 
        a warning by Coverity. Use an assert() instead, just to be sure.
        [30c9c562]

2023-09-28 Nicolas Pomarede

        Update fullscreen png used in 'make test' (last line was blanked by
        mistake)
        [18d78330]

2023-09-27 Nicolas Pomarede

        When Vblank signal is set to ON, ensure blanked lines are the
        correct ones (thanks to Anders and Troed for the report) Previously,
        line 307 was blanked on a 50 Hz screen, while it should be line 308
        [61c28c6b]

2023-09-26 Eero Tamminen

        Nicer negative offsets from profile post-processor

        Show negative offsets without adding redundant '+' char.
        [516f44b2]

2023-09-25 Eero Tamminen

        Better logic for replacing C symbols without leading underscore

        ELF toolchain can produce C symbols without leading underscore, so
        need to check both the current and previous name for whether they
        look like C/C++ symbols, like Hatari debugger already does.
        [00408471]

2023-09-17 Eero Tamminen

        Update EmuTOS status

        Roger fixed line-A variables for TC mode.
        [7c846b71]

2023-09-23 Eero Tamminen

        Fix potential stale file pointer use in msg repeat output

        Change here make things more robust in case log init and uninit
        could
        (in future) be called multiple times during Hatari lifetime.

        Otherwise message repeat output could have use stale (cached) file 
        pointer only if log file pointer was changed in Log_Init(), called 
        from Main_Init(), from pointer set in Log_Default(), called from 
        main(), _and_ there were repeated log messages between those during 
        Hatari startup.
        [fea55c60]

2023-09-25 Nicolas Pomarede

        Use ARRAY_SIZE instead of sizeof in SCC_Get_Standard_BaudRate()
        [55b9a481]

2023-09-24 Thomas Huth

        Avoid unbounded strcpy()
        [0497d155]

2023-09-24 Thomas Huth

        Remove superfluous line
        [3ab3c507]

2023-09-24 Thomas Huth

        GemDOS_FileName2HardDriveID() can fail, check return code
        [46b16283]

2023-09-24 Thomas Huth

        Check for file handle != NULL before running fclose() on it
        [be0f7a69]

2023-09-24 Thomas Huth

        Fix 68030 PLOAD disassembly

        Taken from WinUAE commit fe5acda2f61fc22207b88838bc4517e5c12ba8bb
        [0cdd05fa]

2023-09-24 Thomas Huth

        stat() can fail, so check return value
        [07c242b5]

2023-09-24 Thomas Huth

        Do some more sanity checks on boot sector values
        [ba74be10]

2023-09-23 Nicolas Pomarède

        Add missing define 'WITH_SOFTFLOAT' (fix crash when starting with
        'Accurate FPU emulation' enabled)
        [14eec0f5]

2023-09-23 Thomas Huth

        Fix setting of two stop bits
        [079b7a08]

2023-09-23 Thomas Huth

        filesize is unsigned, so not usable for comparison with < 0
        [de25c098]

2023-09-23 Thomas Huth

        Avoid accessing FileHandles[] with negative fh_idx
        [e2249702]

2023-09-23 Thomas Huth

        Check return codes to make static analyzers happy
        [6dd681a2]

2023-09-23 Thomas Huth

        Use abort() in unreachable code to help with static analyzers
        [c0c18f6f]

2023-09-20 Nicolas Pomarède

        softfloat fix (by Andreas Grabher for Previous) (from WinUAE 5.1.0
        beta1+ 2023/09/20)
        [84e86fc0]

2023-09-20 Nicolas Pomarède

        Autovectored interrupts in MMU/generic CPU modes fix (from WinUAE
        5.1.0 beta1+ 2023/09/20)
        [afb831e8]

2023-09-19 Nicolas Pomarède

        MMU/generic CPU mode autovectored interrupt support (from WinUAE
        5.1.0 beta1+ 2023/09/19)
        [eb446763]

2023-09-18 Eero Tamminen

        Change loaded C++ data symbols type based on symbol names

        This is minor performance optimization for profiler, as it can
        greatly reduce number of code symbols for C++ code.

        Toolchain marks symbols as text, based on which section it has added 
        them.  However, from Hatari usage point of view, whether given
        symbol actually represents runnable code, is more relevant.

        So, after symbols have been loaded, and offset based on their
        section, change non-code symbols types to data, to keep code symbol
        lists smaller / faster to binary search.

        This is done only in Hatari debugger, not in gst2ascii, because
        latter could cause symbols to be offset for the wrong program
        section, when they're later loaded to debugger.
        [15e0fea7]

2023-09-17 Nicolas Pomarède

        Update WinUAE's version to 5.1.0 beta1 2023/09/17
        [4bdfde7f]

2023-09-17 Nicolas Pomarède

        Debugger FPU output fix (from WinUAE 5.1.0 beta1 2023/09/17)
        [b561d1bb]

2023-09-17 Nicolas Pomarède

        MMU mode MOVEM.x <regs>,-(An) where <regs> includes target An update
        (from WinUAE 5.1.0 beta1 2023/09/17)
        [4e8f01bd]

2023-09-17 Nicolas Pomarède

        FIx FABS(-0) (from WinUAE 5.0.0+ 2023/07/16)
        [7b292b20]

2023-09-17 Nicolas Pomarède

        Amiga chipset updates, part 1 (not used in Hatari) (from WinUAE
        5.0.0+ 2023/07/16)
        [1e0c87cd]

2023-09-17 Nicolas Pomarède

        m68k RESET instruction activates warp mode reset (not used in
        Hatari) (from WinUAE 5.0.0+ 2023/07/25)
        [b0804deb]

2023-09-17 Nicolas Pomarède

        Added debugger reset commands (not used in Hatari) (from WinUAE
        5.0.0+ 2023/07/24)
        [94a46657]

2023-09-16 Eero Tamminen

        Improve post-processor data symbol ignoring

        Some C++ symbols (of "t" type) may be data, and some other, weak C++
        (of "W" type) may even be in data section.  Neither of them are 
        needed, but latter may also trigger post-processor checks for code 
        addresses outside text section (checks for catching wrong symbol 
        file being used), so they need to be weaned out.
        [9756e36b]

2023-09-13 Nicolas Pomarède

        Return vector=24 if a spurious interrupt happens during the IACK
        sequence
        [cc0df7c9]

2023-09-13 Nicolas Pomarede

        Remove some debug printf's for SCC
        [7a228cba]

2023-09-13 Nicolas Pomarede

        Also add a 5 VBL's delay at the end of mfp and midi serial tests (to
        be safe in the future)
        [de1ae0d2]

2023-09-13 Nicolas Pomarede

        Remove unused function do_specialties_interrupt()
        [6a95a47f]

2023-09-13 Nicolas Pomarede

        When testing transfer over serial with the SCC, wait 5 VBL after the
        last byte before exiting We wait a few VBL's to be sure all the
        bytes were transfered/received, else scc_ser.tos will exit but 2
        bytes can be lost and are never received
        [01b96eef]

2023-09-13 Nicolas Pomarede

        Add missing -iinclude directive in AHCC .prj files
        [56ca1881]

2023-09-12 Nicolas Pomarède

        Always set TBE bit in SCC_Copy_TDR_TSR()
        [eabb3549]

2023-09-12 Nicolas Pomarède

        In case of TX underrun in the SCC, don't send again the previous
        byte but stay in 'stop bit' state
        [a59a8b2e]

2023-09-12 Eero Tamminen

        Add some useful info on running and building tests

        Based on recent mailing list discussions.
        [e086ffdd]

2023-09-12 Nicolas Pomarede

        Update the 'All Sent' bit in SCC's RR[1] when TSR becomes empty/full
        [13a354fc]

2023-09-12 Nicolas Pomarede

        Add support for a VBL counter at $462 in the fake TOS used for "make
        test" This fake TOS will set SR=0x300 when running to allow VBL
        interrupt (instead of SR=0x700 before, which disabled all
        interrupts)
        [678b060d]

2023-09-08 Nicolas Pomarede

        In SCC_WriteDataReg don't clear TBE bit if SCC_Copy_TDR_TSR() was
        called immediately
        [d46cb6fc]

2023-09-08 Nicolas Pomarede

        Ignore old SCC code that used OS's state for RX_CHAR and TBE, this
        conflicts with the new code that handles these internaly The new
        code uses some timers to get accurate timings of when TX/RX states
        are changing giving some cycle accurate TX/RX interrupts from the
        point of view of the emulated machine, which should not depend on
        how the underlying is buffering/sending data over serial lines
        [ad4b64e6]

2023-09-05 Nicolas Pomarède

        Don't call SCC_serial_setData() in case nothing was written to WR[8]
        [9626a2d2]

2023-09-05 Nicolas Pomarède

        Change order of operations in SCC_WriteDataReg : first copy TDR to
        TSR then update flags
        [025e70e1]

2023-09-05 Nicolas Pomarède

        SCC_WriteDataReg should store the byte to WR[8]
        [b458d238]

2023-09-09 Thomas Huth

        Use a different condition for the repo-sync github mirror job

        Using secret variables does not work - let's check the repository 
        location instead to only run the sync for the main repository.

        Thanks to Chris Jenkins for the original version of the patch.
        [0b970a0f]

2023-09-09 Thomas Huth

        include(CheckSymbolExists) for check_symbol_exists() in the main
        CMakeLists.txt

        We are using check_symbol_exists(), so we should include the
        corresponding module in case it does not get loaded indirectly by
        one of the FindXXX files.

        Patch taken from the Gentoo project.
        [69b25960]

2023-09-09 Thomas Huth

        Only run repo-sync.yml if MIRROR_PAT has been set

        Otherwise this github action will fail for repositories where this 
        has not been set.
        [c60d5cf7]

2023-09-07 Eero Tamminen

        EmuTOS TC support update
        [e9c84dbb]

2023-09-03 Eero Tamminen

        Update release notes and debugger & gst2ascii documents
        [1da2ad6b]

2023-09-06 Eero Tamminen

        Add gst2ascii option to filter out address duplicates

        Make it also default, similarly to Hatari debugger.

        symbols_trim_names() needs to moved to common code for this.
        [74ff7b95]

2023-09-03 Eero Tamminen

        Some gst2ascii option handling improvements

        - Enable all reasonable filtering options by default
        - Allow filtered out symbol types to be enabled again
         (in case one wants to see what symbols defaults drop)
        [f03e2355]

2023-09-03 Eero Tamminen

        Improve duplicate symbol check functions

        In both the address and name check functions, list each address and
        name that has duplicates, only once, not per duplicate.
        [a3ef7d49]

2023-09-02 Eero Tamminen

        Change "symbols" command to skip duplicate addresses

        Add it as internal option, which can be later used by gst2ascii.

        Relies on address sorting heuristics added in previous commit.

        With reduction in duplicates, include file name symbols again.
        [8e3ba4de]

2023-09-02 Eero Tamminen

        Sort symbol addresses further based on their names

        With heuristics similar to profiler post-processor.

        Used by next commit.
        [17e6d88d]

2023-09-01 Eero Tamminen

        Move symbol name identification functions earlier

        And split local symbol checking to its own helper.

        This is preparation for using them in address sort function
        (without needing to add separate declarations for them).
        [f40d50bf]

2023-09-06 Eero Tamminen

        Add missing Videl TODO to todo.txt
        [c71c7f41]

2023-09-03 Nicolas Pomarède

        Connect the SCC's IRQ line to the CPU using level 5 interrupt
        [d848b61d]

2023-09-03 Nicolas Pomarède

        Remove some debug printf's
        [a452b475]

2023-09-03 Nicolas Pomarède

        Handle latches when accessing SCC's RRO and when an IP is set in RR3
        + command "Reset Ext/Status Int" in WR0
        [b593eb7b]

2023-09-02 Nicolas Pomarède

        When SCC runs in asynchronous mode, TX_UNDERRUN_EOM bit should be
        set to 1 in RR0
        [60f3a856]

2023-09-02 Nicolas Pomarède

        Add more logs for SCC's WR0 commands
        [08f82d2c]

2023-09-02 Nicolas Pomarède

        Update SCC's RR3 on every source change, not just when bit was set +
        clear ZERO_COUNT source
        [0095e6d3]

2023-09-02 Nicolas Pomarède

        SCC will trigger the TBE int when TX buffer becomes empty, not when
        it is empty This means we need to keep track of writes to data
        register and allow TBE int only if TX_Buffer_Written==true
        [00989206]

2023-08-23 Nicolas Pomarède

        Update RR3 and IRQ state when writing to SCC's WR1 or WR9 or WR15
        [8806a6f3]

2023-08-22 Nicolas Pomarède

        Change SCC_Get_Vector_Status() regarding status high/low bit
        [8f28bd51]

2023-08-22 Nicolas Pomarède

        Remove old/unused IRQ code
        [024a37d7]

2023-08-22 Nicolas Pomarède

        Correctly restore bits 2,3,4 in WR9 after software full reset of the
        SCC
        [c3f74f0f]

2023-08-22 Nicolas Pomarède

        Improve SCC : when BRG reaches zero, do a 0-1-0 transition on the ZC
        bit in RR0 to better match real HW
        [d525fdcd]

2023-08-20 Nicolas Pomarède

        Improve SCC : fix some cases for RR[] content
        [c0579739]

2023-08-20 Nicolas Pomarède

        Remove old/unused IRQ code
        [6bf0e9eb]

2023-08-20 Nicolas Pomarède

        Improve SCC : use IUS for IRQ, add Software/Hardware IACK, improve
        RR2
        [ec8fefb2]

2023-08-18 Nicolas Pomarède

        Remove old code to reset SCC's channels
        [9c551843]

2023-08-18 Nicolas Pomarède

        Improve SCC : add more interrupt sources, improve pending interrupts
        in RR3 and IRQ line's state
        [59b31bb2]

2023-08-15 Nicolas Pomarède

        Improve SCC : rewrite handling of RX data
        [4c0e2bfa]

2023-08-06 Nicolas Pomarède

        Call SCC_WriteDataReg instead of SCC_serial_setData when writing to
        data reg at $FF8C83 or $FF8C87
        [7f1a85dc]

2023-05-11 Nicolas Pomarède

        Improve SCC : add internal timers for TX/RX on channels A/B, number
        of bits for parity/char/stop, TBE bit for TX
        [168c22b2]

2023-04-02 Nicolas Pomarède

        Improve SCC : Active_Reg is common to both channels
        [5528e98e]

2023-04-01 Nicolas Pomarède

        Improve SCC : simplify SCC_handleRead and SCC_handleWrite
        [060226b7]

2023-04-01 Nicolas Pomarède

        Improce SCC : remove hardcoded/limited table of baudrates associated
        to WR12/WR13 and use SCC_Compute_BaudRate instead
        [1be34c63]

2023-04-01 Nicolas Pomarède

        Improve SCC : rename SCC.chn to SCC.Chn, better support for RR0,
        RR2, WR0, WR9 and WR15
        [0bae0705]

2023-03-23 Nicolas Pomarède

        Improve SCC : rewrite the SCC struct to store the 2 channels as well
        as some common variables
        [16eca5a3]

2023-03-22 Nicolas Pomarède

        Improve SCC : replace RR3/RR3M by RR[] and IUS register
        [7e33e65e]

2023-03-20 Nicolas Pomarède

        Improve SCC : add internal timers for the baud rate generator and
        handle zero count interrupt
        [bd7bcdd3]

2023-03-15 Nicolas Pomarède

        Improve SCC : support all clocks/machines type to compute baud rate,
        don't use hardcoded values to get standard baud rates
        [8ff45843]

2023-03-08 Nicolas Pomarede

        Improve SCC : add notes about clocks, add separate read/write
        registers, fix reset commands, preliminary baud rate calculation
        [ecdc1501]

2023-09-01 Eero Tamminen

        Add support Windows file names in breakpoint options

        By requiring that all breakpoint options are prefixed with a space:
        :once :file C:\BT.INI :quiet

        Reported by Tat:
        https://www.atari-forum.com/viewtopic.php?p=450556#p450556
        [c0265b9e]

2023-08-31 Eero Tamminen

        EmuTOS compatiblity doc update

        - >v1.1.1 meant newer snapshots, >=v1.2 means it's in release
        - Separate Hatari specific issues to their own lists
        - Few additional Falcon games work with EmuTOS
        - More info on remaining Falcon issues
        [047d4f29]

2023-08-31 Eero Tamminen

        Add Monism to compatibility lists
        [9c258efc]

2023-08-30 Eero Tamminen

        Silently ignore no-name symbols related to ELF section names

        To lessen debugger messages to users on things known not to be
        issues.

        Contributed by Thorsten Otto.
        [f3699cdd]

2023-08-30 Eero Tamminen

        Update docs for MINT+ELF support
        [df6f7c66]

2023-08-30 Eero Tamminen

        Fix ELF symbol reading crash

        'strtabidx' cannot be compared to -1 unless it's signed, and it
        should be larger than 16-bit when 32-bit value is assigned to it.
        Make also sure that assigned index is within array size, before
        accessing it.
        [a3ea6599]

2023-08-30 Eero Tamminen

        De-duplicate symbol table offset seeking code
        [6fd9d41b]

2023-08-30 Eero Tamminen

        Fix symbols-common.c code formatting

        To be consistent with rest of the code in that file and other symbol 
        handling related code.
        [84b564fe]

2023-08-29 Eero Tamminen

        Debug symbol support for upcoming MINT+ELF program format

        Contributed by Thorsten Otto.
        [83dafe07]

2023-08-25 Eero Tamminen

        EmuTOS Falcon compatibility updates
        [a8942075]

2023-08-27 Eero Tamminen

        Use named argument values for PortMidi helper functions

        To make clearer what their integer & boolean argument values are
        for.
        [68aa7b5f]

2023-08-29 Eero Tamminen

        Fix symbol address sort check

        Address check needs to be after symbol type check, otherwise it can 
        trigger on code->non-code type change, if non-code symbols start
        from lower address than the last code one (e.g. ABS symbols, or if
        compiler puts some data symbols to text section).

        Also improve function name & comments a bit.

        Fixes: e4c8dc742a
        [79d7fdcf]

2023-08-29 Eero Tamminen

        Fix ASCII symbols alloc leakage & free them at exit
        [f294e06a]

2023-08-27 Eero Tamminen

        Fix Midi_Host_GetPortName() crash

        Fix (Mac regression) crash when Midi_Host_GetPortName() is called
        with NULL, and return first port name also when called with empty
        string
        (using positive name offset).

        Reported-by: Chris Jenkins Fixes: 957d7db465970d1e
        [373fb663]

2023-08-27 Thomas Huth

        Add mapping for "(" and ")" in the keypad
        [de0db338]

2023-08-13 Brad Smith

        Fix for `~

        https://github.com/hatari/hatari/pull/26
        [af03fe0e]

2023-08-13 Brad Smith

        Fix keymappings for [{ and ]}

        https://github.com/hatari/hatari/pull/26
        [a253a405]

2023-08-14 Brad Smith

        Fix LED restore logic ("incompatible" was a backwards test)

        From https://github.com/hatari/hatari/pull/27
        [28931d13]

2023-08-24 Eero Tamminen

        Improve profile post-processor symbol selection heuristics

        Prefer function names over files names, and shorter C/C++ names over 
        long ones (C++ names can be long, and aliases add extra underscore 
        prefixes), but for things thought as asm symbols, prefer longer 
        symbols.

        Unlike latest (ELF) g++ version(s), earlier g++ version(s) seem to
        put typeinfo & vtable data objects to code section and annotate them
        as being weak text symbols.  Prune those out when loading symbols.
        [5b7eb9b4]

2023-08-23 Eero Tamminen

        Minor symbol handling improvements

        Use opt & ignore count structs + helpers also for ASCII symbol
        loading.

        Rename count struct 'unwanted' member to 'notypes' for consistency 
        with options struct.

        Split GCC internal symbols option from file/path symbols one:
         gst2ascii -o => gst2ascii -f -g

        Sort options and struct members for readability.
        [d6c12a32]

2023-08-21 Eero Tamminen

        Load weak symbols by default, but allow dropping them

        Add weak symbols as their own symbol type. Load them by default, as 
        C++ template methods seem to be available only as weak symbols.

        (This means there can be a lot more symbol address duplicates, so
        they will need to be handled better.)

        Split different a.out binary weak symbol types to proper categories.
        [e4c8dc74]

2023-08-19 Wayne Conrad

        Add unit test build product to .gitignore
        [4364afd5]

2023-08-22 Thomas Huth

        Silence warnings from CMake 3.27

        CMake 3.27 warns that compatibility with older versions than 3.5
        will be dropped soon, so bump the minimum version to 3.5 now.

        It also complains that FindPythonInterp will soon be going away. For 
        the time being, we can switch off the warning by setting policy 148 
        to "OLD".
        [b509681d]

2023-08-12 Thomas Huth

        Update the FreeBSD CI to v13.2
        [d358048f]

2023-08-07 Eero Tamminen

        Update docs for joystick button handling changes
        [a3e4b6da]

2023-08-07 Eero Tamminen

        Align + pad joy GUI buttons, and get rid of magic values

        String updates need to take into account size of the target
        strings...
        [c128e353]

2023-08-07 Eero Tamminen

        Add joystick button descriptions and generalize mapping code

        By using button mapping array instead of separate variables.

        v2: minor tweaks from Robin.
        [7efa759e]

2023-08-06 Robin Sergeant

        Fix event handling order in joy button remapping GUI

        v2: add another condition to stop ESC key repeats being handled.

        If you hold ESC before opening the dialog SDL keeps generating
        KEYDOWN events.  Nobody would ever actually do that, but only
        handling the first KEYDOWN is logical.
        [3bb814f8]

2023-07-30 Robin Sergeant

        Add SDL GUI for joystick button config
        [b0c15d53]

2023-07-30 Robin Sergeant

        Add joystick button configuration
        [a9b4fd38]

2023-08-07 Eero Tamminen

        Fix GEMDOS HD Frename() handling

        It should fail when target exists: 
        https://www.atari-forum.com/viewtopic.php?t=42581

        Reported-By: TheNameOfTheGame
        [009c4cc5]

2023-08-01 Eero Tamminen

        Document 2 additional GEMDOS HD limitations
        [133176a4]

2023-07-31 Eero Tamminen

        Fix regaddr command buffer sizes

        Buffer sizes were inverted, larger addresses do not fit into 6
        chars.

        Potential fix for: https://www.atari-forum.com/viewtopic.php?t=42939
        [a85b4bd2]

2023-07-31 Eero Tamminen

        Double limit on number of GEMDOS HD file handles

        To support ScummVM "Illusions" game engine, which uses more than 32 
        open file handles supported by GEMDOS HD, double that amount to 64.

        Notes:
        * (Emu)TOS support 75 file handles in addition to the standard 6
        ones
        * Like earlier, GEMDOS HD handles start from index 64, so that first
         64 handles are left for underlying TOS, to be used with other than
         GEMDOS HD drives.

        I.e. in total apps could now use 128 handles, if open files were on 
        different disks, but if more than 64 handles are used on TOS side, 
        things do not work corretly => Document these limits in the manual.
        [2543a0cc]

2023-07-28 Eero Tamminen

        Add missing Fopen() return value trace output

        GEMDOS HD emulation has fewer free handles available than e.g.
        EmuTOS (32 vs 75) so it's important to notify user about that.
        [1b42c9fb]

2023-07-27 Eero Tamminen

        Document joystick button bit defines better
        [33d3b0b4]

2023-07-27 Eero Tamminen

        Use fnmatch for the provided profiler post-processor symbols

        This helps in providing e.g. all functions having specific prefix, 
        or belonging to a specific C++ class, to "--only", "--ignore" and
        "--ignore-from" options.
        [90486140]

2023-07-27 Eero Tamminen

        Improve texts in release notes and group debugger changes
        [b9efe125]

2023-07-19 Nicolas Pomarède

        Merge branch 'master' of https://git.tuxfamily.org/hatari/hatari
        [0bbf5801]

2023-07-19 Eero Tamminen

        Drop patch now that m68k Linux bus error handler is fixed
        [c7196c93]

2023-07-19 Eero Tamminen

        Update Linux kernel config to v6.4

        Added seccomp syscall support, now that m68k supports it.
        [2b1b9a00]

2023-07-16 Eero Tamminen

        Add few demos, game and Falcon app to compat lists

        Replay is really nice demo, but as it's for ST, added it only to 
        EmuTOS compatibility.
        [72332139]

2023-07-17 Nicolas Pomarède

        Check interrupt level immediately always if not JIT (from WinUAE
        5.0.0+ 2023/07/10)
        [b07b08ad]

2023-07-17 Nicolas Pomarède

        Randomize emulator startup state by default (not used in Hatari)
        (from WinUAE 5.0.0+ 2023/07/09)
        [9af67fec]

2023-07-17 Nicolas Pomarède

        IPL low/high delay is optional and off by default (not used in
        Hatari) (from WinUAE 5.0.0 beta15 2023/05/28)
        [9a3aa3e8]

2023-07-15 Nicolas Pomarède

        Misc changes (not used in Hatari) (from WinUAE 5.0.0 beta14
        2023/05/26)
        [559998f8]

2023-07-15 Nicolas Pomarède

        jit_blacklist fix (from WinUAE 5.0.0 beta10 2023/05/16)
        [ccdad168]

2023-07-15 Nicolas Pomarède

        Misc change to debugger (not used in Hatari) (from WinUAE 5.0.0
        beta10 2023/05/14)
        [b7f2f7b7]

2023-07-15 Nicolas Pomarède

        Chained breakpoints, signed/unsigned comparison option (not used in
        Hatari) (from WinUAE 5.0.0 beta8 2023/05/01)
        [01e9baf6]

2023-07-15 Nicolas Pomarède

        Fix FMOVE.L/FMOVEM.L <control registers> register order (from WinUAE
        5.0.0 beta7 2023/04/23)
        [95eb024c]

2023-07-15 Nicolas Pomarède

        Add debugger calculator comparison operators (not used in Hatari)
        (from WinUAE 5.0.0 beta6 2023/04/15)
        [37577fcc]

2023-07-15 Nicolas Pomarède

        State restore cpu trace fix (from WinUAE 4.10.2 beta3 2023/04/011)
        [84f81cd7]

2023-07-15 Nicolas Pomarède

        Debugger register read update (from WinUAE 4.10.2 beta2 2023/03/25)
        [62b9735d]

2023-07-15 Nicolas Pomarède

        Report debugger breakpoint hits also during single step tracing (not
        used in Hatari) (from WinUAE 4.10.2 beta2 2023/03/25)
        [cf050287]

2023-07-01 Eero Tamminen

        Add "cpu_video_cycles" also to Python UI trace dialog
        [ee8137d2]

2023-06-30 Eero Tamminen

        Separate CPU video cycles under its own trace flag

        As requested on: 
        https://www.atari-forum.com/viewtopic.php?p=448383#p448383
        [0e4f1992]

2023-05-04 Eero Tamminen

        Include dir create/removal + file removal to "os_base" traces

        While those are rarer, they are at least as important operations to 
        know as file create / close (and pexec) operations.
        [510557e8]

2023-03-06 Eero Tamminen

        EmuTOS compatibility update

        Donkey includes GFA basic source:
        https://www.atari-forum.com/viewtopic.php?t=42754
        [8e3d315d]

2023-05-09 Eero Tamminen

        Add option to limit listed symbols to ones containing given string

        Most demangled C++ symbol names contain special characters [1] not 
        accepted by debugger commands.  Symbols can be replaced with their 
        addresses, but first one needs to find what address given symbol has
        (as symbol file address offset depends on program load address).

        Substring search for (C++) symbol address list will help with that, 
        along with TAB completion for the "symbols" command completing
        symbol names (when there was no match for a subcommand name).

        [1] Characters like the ':' bactrace option prefix, comparison
           operators, whitespace etc.
        [e8a902a5]

2023-05-01 Thomas Huth

        Add a macOS 12 Cirrus-CI task to build snapshots
        [024cc3f4]

2023-05-01 Thomas Huth

        Add hatari.app.xcent file

        It will be used during the code signing step on macOS. Thanks to
        Troed Sångberg for the file.
        [858fe8c3]

2023-05-01 Thomas Huth

        Improve macOS settings

        Thanks to Andreas Grabher and Troed Sångberg for their input
        [fbadfeba]

2023-04-23 Thomas Huth

        Silence cppcheck warning about shifted value changing its signedness
        [6b23ff07]

2023-04-23 Thomas Huth

        Avoid memory leak in read_pc_debug_names()
        [3354e7d8]

2023-04-17 Thomas Huth

        tcgetattr() can fail - check the return value
        [945d084b]

2023-04-17 Thomas Huth

        Add a wrapper for the calculation of the DMA mask

        ... and apply it to the address calculation when loading snapshots,
        too
        (just in case, to avoid that we access STRam beyond its end here)
        [9a50f6eb]

2023-04-16 Thomas Huth

        Check for availability of -Wimplicit-fallthrough=2 before using it

        Older versions of GCC and Clang do not support this option yet, so 
        we should check first whether we can use it.
        [f079a0f3]

2023-04-16 Thomas Huth

        Compile with -Wimplicit-fallthrough=2

        Warnings about unintended fallthroughs are very useful, so let's
        enable these now. The comments in fdc.c need some adjustments for
        this compiler switch, but fortunately they were already saying that
        the fallthrough is indeed intended here.
        [8dc1fe6c]

2023-03-30 Eero Tamminen

        Show PortMidi device prefix matches also in GUI

        Midi functionality already did prefix matching on devices and opened 
        them, but it did not update the config value to full MIDI device
        name. This was to avoid breaking prefix matching for devices which
        names
        (e.g. port) changes frequently.

        With this change, same matching is done for names shown in GUI, to 
        avoid confusing users.  Downside of this is that visiting devices 
        dialog WILL replace the prefix in config setting with a full device 
        name.  I.e. saving settings afterwards, will override the prefix in
        config file.
        [957d7db4]

2023-03-28 Eero Tamminen

        Shorten further c++ method args for callgraphs

        Although there are no spaces to indicate potentially multiple args
        in a signature, single C++ argument could be a really long, so use 
        shortening match regexp on any symbol that has either space or "::".

        Add also few extra example texts for operators, as those may not be 
        easy enough to differentiate if they are shortened too much.
        [9f78f510]

2023-03-24 Eero Tamminen

        Improve profile post-processor output description
        [4e584982]

2023-03-19 Eero Tamminen

        Apply --compact option also to callgraph edges

        Although parent would call the child node from multiple places, 
        showing just single connection between those two nodes makes
        resulting graph much more readable.
        [5f6d8e6b]

2023-03-19 Eero Tamminen

        Post-processor variable renames for readability

        Upper-case indicates that variable is not intended for modification.

        And few comment changes.
        [c008e3f6]

2023-03-18 Eero Tamminen

        History handling improvement for repeating instructions

        When e.g. program uses "stop" instruction to wait for something, it 
        showed as repeated instructions, that often filled the whole
        history.

        Fixed by ignoring instruction repeats for history. And counting them 
        separately, so that count of (non-zero) repeats for the last 
        instruction can be shown in history list.
        [042121b6]

2023-03-18 Eero Tamminen

        Add profile post-processor updates to release notes

        And update its symbol cleanup test script a bit.
        [d9301ac6]

2023-03-17 Eero Tamminen

        profiler: output only symbol parsing stats not all info

        Otherwise post-processor can output so much symbol resolving
        messages that actual errors are hidden in the noise.

        Verbose option can be used to still see that info.

        Added also TODO for better symbol conflict resolving.
        [38c9b00c]

2023-03-17 Eero Tamminen

        symbols: C++ '/' operator signature is not a file name symbol
        [53a0b2b3]

2023-03-17 Eero Tamminen

        profiler: disassembly addresses can be lower or upper case

        So it it needs to give post-processor a regexp handling both.
        [64be693b]

2023-03-17 Eero Tamminen

        Apply pylint suggestions to profile post-processor
        [c722092b]

2023-03-17 Eero Tamminen

        Shorten C++ symbols by default in callgraphs

        But add "--full-symbols" option to disable that.

        There's also separate script for checking how those regexps work on
        some hairy C++ signatures, which can be used when more symbol
        shortening is needed.

        It can be removed before release.
        [d87cee1b]

2023-03-17 Eero Tamminen

        Add --no-orphans profile post-processor option

        To remove unconnected nodes from callgraphs, regardless of their
        cost.

        While this makes callgraphs done with the --only option much
        clearer, it still does not remove all of them though, did not yet
        find why.
        [8cf6b57b]

2023-03-16 Eero Tamminen

        Fix evaluate command address width modifier check

        No idea how this could have gone through.

        Fixes: f6df3857f5
        [d4a83aa5]

2023-03-16 Thomas Huth

        Update to actions/checkout v3 since v2 stopped working
        [e969aa12]

2023-03-14 Eero Tamminen

        Update "socat" options for MIDI networking

        According to "socat" manual "raw" option is obsolete, and should be 
        replaced either with "rawer" or "cfmakeraw".  Both of them disable 
        echo, so that option can be removed.

        According to:
        https://www.atari-forum.com/viewtopic.php?p=444430#p444430

        MIDI can be networked between Linux and Mac OS when "socat" option
        "rawer" is used.
        [bb9e0d13]

2023-03-14 Nicolas Pomarede

        Update WinUAE's version to 4.10.2 beta2 2023/03/11
        [0dc942be]

2023-03-14 Nicolas Pomarede

        Debugger search commands now optionally support also ROM address
        spaces (not used in Hatari) (from WinUAE 4.10.1+ 2023/03/11)
        [4518b9db]

2023-03-14 Nicolas Pomarede

        Added missing #ifdef statements (from WinUAE 4.10.1+ 2023/03/03)
        [5c9306d0]

2023-03-10 Eero Tamminen

        Profiler post-processor improvements

        * Add "--separator" option that can be used when providing
         list(s) of C++ symbols (that often include commas)
        * Clarify what the shown "max" info lines are
        [b7d7d4aa]

2023-03-09 Eero Tamminen

        Workaround for theoretical button 2 SPACE key emulation issue
        [1bf57692]

2023-03-08 Eero Tamminen

        Make CPU dialog headings consistent with other dialogs

        Left aligned titles end with ':', centered titles do not.

        (And fix title object widths.)
        [f03b4a74]

2023-03-08 Eero Tamminen

        Document joystick support updates
        [00314786]

2023-03-08 Eero Tamminen

        Support joystick button 2 option in SDL GUI
        [fff4aae0]

2023-03-08 Eero Tamminen

        Support joystick button 2 option for all joysticks

        As it is already specified in Hatari configuration.

        Because TOS queries only joystick 1 (and parallel port) constantly, 
        space key emulation works for other joysticks only when game 
        explicitly queries also them.

        In theory it is also possible that button 2 space key emulation may 
        get left in pressed state for joystick 0 and joypads, if game stops 
        querying given joystick completely while user still has button 2
        down.

        For above reasons, and for consistency with earlier behavior, enable
        space key emulation only for joystick 0 by default.
        [ac104a7e]

2023-03-06 Eero Tamminen

        Fix joy button 2 space key emulation

        Earlier it worked in rapid autofire mode making it impossible to use
        for doing just a single space key press:
        https://www.atari-forum.com/viewtopic.php?p=444078

        This commit changes it to work like normal key presses.

        Simulated space key is released when the button is released, which 
        among other things meaning also that key repeat works as expected.
        [818b5a31]

2023-02-24 Eero Tamminen

        Update m68k Linux config + doc to linux v6.2 / EmuTOS v1.2.1
        [092788cf]

2023-03-04 Nicolas Pomarède

        Add 8MHz clock for SCC Z85C30 used in Mega STE/TT/Falcon
        [e8251ec1]

2023-02-27 Nicolas Pomarède

        Sync misc changes (from WinUAE 4.10.2 beta1 2023/02/25)
        [7f3f4dbe]

2023-02-27 Nicolas Pomarède

        On the fly mode change reset fix (from WinUAE 4.10.1+ 2023/02/19)
        [fe94aee2]

2023-02-27 Nicolas Pomarède

        CPU statesave update (not used in Hatari) (from WinUAE 4.10.1+
        2023/02/19)
        [97aef02f]

2023-02-26 Nicolas Pomarède

        Chipset write bufferi with 68020+ apparently does not exist (not
        used in Hatari) (from WinUAE 4.10.1+ 2023/02/10)
        [88655500]

2023-02-26 Nicolas Pomarède

        LPSTOP fix (from WinUAE 4.10.1+ 2023/02/10)
        [8def225f]

2023-02-26 Nicolas Pomarède

        Warp mode boot + Statefile accurate blitter and event support (from
        WinUAE 4.10.1+ 2023/02/10)
        [d0dba8a5]

2023-02-26 Thomas Huth

        Adjust cron schedule to a saner value
        [20308958]

2023-02-26 Thomas Huth

        Ue TABs, not spaces for indentation
        [00e03933]

2023-02-26 Thomas Huth

        Fix typo in file name
        [7923dd00]

2023-02-25 Thomas Huth

        Fix white spaces (use TABs, not spaces for indentation, remove them
        at line ends)
        [4fb10fe4]

2023-02-25 Thomas Huth

        Use Github repo-sync for mirroring to github
        [ac12d777]

2023-02-25 Thomas Huth

        Fix typo
        [111f1fd4]

2023-02-20 Eero Tamminen

        Symbols: update debugger doc + release-notes
        [0780c5cf]

2023-02-19 Eero Tamminen

        Symbols: support for program symbols override file

        If "<name>.sym" exists in addition <name>.<ext> program file itself, 
        first try to read symbols from that file, before falling back to 
        reading program symbol table.

        With this:
        * One can overriding program symbols
        * Instead of needing to provide two binaries, one with debug
         symbols, and one without, (much smaller) symbols file in
         addition to the stripped binary, suffices
        [e1e4a5bb]

2023-02-19 Eero Tamminen

        Symbols: support also demangled C++/a.out symbols

        Which can be *much* longer than DRI/GST symbols, and contain almost
        any ASCII character.

        If those symbols contain spaces (as they often do), breakpoints
        cannot be set on them, as debugger CLI interprets whitespace as
        argument separators.
        [daec3ae0]

2023-02-19 Eero Tamminen

        Profiler: add C++ symbols support note to docs
        [cca52276]

2023-02-18 Eero Tamminen

        Profiler: drop C++ symbol demangling helper script

        Now that post-processor has proper support for demangled input.
        [bc5e3ea4]

2023-02-19 Eero Tamminen

        Profiler: skip mangled C++ symbols for caller info

        This completes profile post-processor support for handling profile 
        data with demangled C++ symbols (in disassembly & symbol files).

        Caller info symbols are used only for (manually) debugging profiler 
        functionality, and need to do that for C++ is very unlikely.
        Dropping them guarantees new data works with older post-processor
        and vice verse, where as changing caller info format to accommodate
        C++ symbol parsing would have broken that.
        [2e40080a]

2023-02-19 Eero Tamminen

        Profiler: accept demangled C++ symbol names

        This assumes both profile data and symbols file have been demangled
        (with "m68k-atari-mint-c++filt") *before* being post-processed.

        Full support for post-processing profiles with demangled C++ symbol 
        names (which can contain almost any characters), requires also 
        additional change in Hatari debugger profiler support (next commit).
        [63a85c14]

2023-02-18 Eero Tamminen

        Profiler: conflict rename for mangled C++ symbols

        Switch to using "<len><str>" [1] or ".<idx>" [2] suffix, depending
        on whether symbol looks like mangled, and which one is less likely
        to break demandling.

        This assumes demangling is done *after* profile is post-processed.

        [1] Shown after demangling looking like "(AA)"

        [2] For some mangled symbols it's interpreted as vendor extension,
           typically shown as "[clone <idx>]"
        [30657a8c]

2023-02-14 Nicolas Pomarède

        Add more detalled traces when accessing SCC registers
        [d5be217c]

2023-02-13 Eero Tamminen

        Deprecate some of the Hatari FIFO / socket shortcut commands

        As debugger commands provide (nowadays) more flexible replacements
        for the listed shortcut commands, deprecate them for eventual
        removal.
        [dd6ba9ff]

2023-02-05 Thomas Huth

        Make floppy.c independent from the SDL headers

        The code looks nicer and more compact this way.
        [a1ac1767]

2022-10-18 Eero Tamminen

        Remove <SDL_endian> usage from lilo.c
        [78d7b27b]

2023-01-31 Eero Tamminen

        Fix: mouse for floppy disk dialog shortcut in fullscreen

        Mouse was not visible in floppy disk selection dialog when it was 
        invoked from a keyboard shortcut in fullscreen mode.

        Bug report and fix suggestion by "jmmparis" at Atari-forum
        (thanks!):
        https://www.atari-forum.com/viewtopic.php?p=442783

        He suggested fixing it in SDLGui_FileSelect(), but as mouse is
        missing only when being invoking from a shortcut, and not from
        Hatari options
        (which already does necessary SDL mouse calls for fullscreen), I 
        thought shortcut.c better place.

        If any other interactive items are later invoked from shortcuts,
        mouse handling for those could then be generalized.

        PS. This is old bug, it was already in the oldest Hatari version I 
        tested, v2.2.1.
        [a36c54b0]

2023-01-25 Nicolas Pomarede

        Sync misc changes (from WinUAE 4.10.1 2023/01/23)
        [9f58fa6a]

2023-01-24 Nicolas Pomarede

        Update notes
        [ca4f2667]

2023-01-24 Nicolas Pomarede

        Add support for 4 pixel hardscroll when stopping shifter When
        writing 3 to $FF8260, GLUE will switch to High res, but shifter will
        go to a 'stopped' state which can be used to create 4 pixel
        hardscroll on STF This was discovered by Troed/Sync and used in his
        "What If" game preview
        [92e6eed7]

2023-01-21 Thomas Huth

        Fix and use emscripten_shell.html
        [72a5e53a]

2023-01-14 Eero Tamminen

        Add profiling helper script to demangle/shorten C++ symbols

        In the .dot call graph files generated by profile data
        post-processor.

        Mangling format is compiler specific. Because GCC format has been 
        stable since v3.x, and nobody uses v2.x on Atari (for C++),
        eventually profile post-processor could have "--demangle" option to
        use "c++filt" directly to demangle (+ shorten) symbols on output.
        This script should be enough for now though.

        If Hatari debugger would also get C++ demangling support [1], that 
        also needs to be done only on output. C++ types are so much
        line-noise that they are better handled in mangled form internally,
        and demangled only on output.

        [1]
        https://gcc.gnu.org/onlinedocs/libstdc++/manual/ext_demangling.html
        [87f27924]

2023-01-14 Eero Tamminen

        Fix: CPU disassembler crashes with longer symbols

        (This is more of a workaround.  I think whole WinUAE CPU core 
        disassembler code would need refactoring to pass around the buffer 
        sizes, and check them.)

        Reported-By: Miro Kropáček Fixes: 62331b8e592c2d8dac8
        [8f8752e2]

2023-01-14 Eero Tamminen

        List removed features separately from improvements
        [d0bf64e0]

2023-01-08 Eero Tamminen

        Fix: use country code setting to set TOS country code

        Fixes: 8d0a7ce74ff5185f1c6f7ffa5fd89454d075ccf8
        [a59995ac]

2023-01-12 Nicolas Pomarede

        Do not reset 68030 MMU state if loading statefile (from WinUAE
        4.10.1 beta3+ 2023/01/11)
        [0741b9ea]

2023-01-12 Nicolas Pomarede

        Fix CALLM disassembly (from WinUAE 4.10.1 beta3+ 2023/01/11)
        [bff58421]

2023-01-12 Nicolas Pomarede

        Update SR before dumping CPU state + reset cpu when reloading
        savestate (from WinUAE 4.10.1 beta3+ 2023/01/11)
        [b50c555e]

2023-01-11 Eero Tamminen

        Update also Hatari UI doc install & run-time paths

        Otherwise "make install" fails.

        Reported-By: Yves Le Berre
        [2915769d]

2023-01-05 Eero Tamminen

        Use common CSS & ToC generator for Hatari UI doc

        Also add doc info & re-order images a bit for better readability.
        [388b1f32]

2023-01-05 Eero Tamminen

        Move Hatari UI HTML documentation under doc/

        So that it gets automatically exported to Hatari site.
        [e1381f17]

2023-01-05 Eero Tamminen

        Minor updates to hatariui script
        [73ff275a]

2023-01-05 Eero Tamminen

        Minor updates to python-ui TODO list
        [f688d44f]

2023-01-03 Nicolas Pomarede

        Sync misc changes (from WinUAE 4.10.1 beta2 2023/01/02)
        [6ce7774d]

2023-01-02 Nicolas Pomarede

        Change wording for disasm options (suggested by Christian Zietz)
        [7c3c359a]

2022-12-31 Thomas Huth

        Make tos.c independent from the SDL library
        [213187b2]

2022-12-30 Eero Tamminen

        Add notes about Monscope fix
        [ac77d90c]

2022-12-30 Thomas Huth

        Convert last sprintf in the DSP code into snprintf

        Thanks to Andreas Grabher for the patch!
        [7301eff3]

2022-12-30 Nicolas Pomarede

        In the case of the TT, DMA sound FIFO should be updated on each HBL
        (same as STE)
        (fix sound in 'Monscape' monochrome demo by Escape)
        [5005f23a]

2022-12-30 Thomas Huth

        Do not include SDL headers in clocks_timings.c (not needed here)
        [9e21fd1e]

2022-12-30 Thomas Huth

        Make msa.c independent from the SDL library

        This hopefully helps to fix a linking problem of the hmsa tool with
        the latest version of MSYS2 on Windows.
        [6f893900]

2022-12-29 Thomas Huth

        Update Info-Hatari.plist

        Add "NSMicrophoneUsageDescription" key - according to Andreas
        Grabher, this is required for microphone access on macOS >= 10.14.

        And while we're at it, bump the minimum system version to 10.9 since 
        this is the minimum version that is supported by Troed's macOS
        builds.
        [c55ad9dc]

2022-12-29 Thomas Huth

        Remove "Info-Hatari Winuae.plist" file

        We do not provide the possibility to compile with different CPU
        cores anymore, so this file should not be required anymore.
        [03b6a5cc]

2022-12-29 Nicolas Pomarede

        Update WinUAE's version used for CPU core
        [9ede5067]

2022-12-29 Nicolas Pomarede

        Add ARM64EC compatible build (from WinUAE 4.10.0+ 2022/12/25)
        [dd1312a0]

2022-12-29 Nicolas Pomarede

        Add SR to debugger register output (from WinUAE 4.10.0+ 2022/12/21)
        [002c808f]

2022-12-29 Nicolas Pomarede

        68040+ cycle count adjustment (from WinUAE 4.9.9 beta11 2022/12/18)
        [63977735]

2022-12-29 Nicolas Pomarede

        Clear nobreak memwatch variable (not used in Hatari) (from WinUAE
        4.9.9 beta10+ 2022/12/14)
        [cf36e178]

2022-12-29 Nicolas Pomarede

        Remaining missing DISASM_FLAG_VAL (from WinUAE 4.9.9 beta8+
        2022/12/10)
        [68f98437]

2022-12-29 Nicolas Pomarede

        Fix 040 instruction mem read (from WinUAE 4.9.9 beta8+ 2022/12/10)
        [b2b5b80d]

2022-12-29 Nicolas Pomarede

        Yet another JIT interrupt handling fix (not used in Hatari) (from
        WinUAE 4.9.9 beta8+ 2022/12/06)
        [ff2b7a9e]

2022-12-29 Nicolas Pomarede

        Remove SMC detector test code, fix special case opcodes (not used in
        Hatari) (from WinUAE 4.9.9 beta8+ 2022/12/06)
        [cfced8c0]

2022-12-29 Nicolas Pomarede

        Optimize smc detector cache flush (not used in Hatari) (from WinUAE
        4.9.9 beta8+ 2022/12/04)
        [1807b412]

2022-12-29 Nicolas Pomarede

        Return error code from debugger string to integer parser (from
        WinUAE 4.9.9 beta8 2022/12/03)
        [cbb0536f]

2022-12-29 Nicolas Pomarede

        JIT interrupt handling reverted to previous version. JIT requires it
        for best performance (not used in Hatari) (from WinUAE 4.9.9 beta7+
        2022/12/03)
        [3d0560c2]

2022-12-29 Nicolas Pomarede

        Approximate 68020+ cycle count adjustments (from WinUAE 4.9.9 beta7+
        2022/12/03)
        [d80c13f3]

2022-12-29 Nicolas Pomarede

        memwatch parameter update (not used in Hatari) (from WinUAE 4.9.9
        beta7+ 2022/12/03)
        [c9a2aaec]

2022-12-29 Nicolas Pomarede

        Removed unneeded function (from WinUAE 4.9.9 beta7+ 2022/11/28)
        [f91aa45b]

2022-12-28 Nicolas Pomarede

        Fix timing for IACK sequence in the case of the HBL/VBL interrupt 
        Similar to commit 2825f992, previous timing was wrong and could
        allow another interrupt to be taken into account even during the
        IACK sequence. Correct version allows another interrupt only during
        the initial 12 cycles and the sync to E-clock
        [cf1de0c8]

2022-12-28 Nicolas Pomarede

        Remove unused commented code
        [3479016d]

2022-12-28 Nicolas Pomarede

        Update release notes
        [8d0572fe]

2022-12-28 Nicolas Pomarede

        Fix timing for IACK sequence in the case of the MFP Previous timing
        was wrong and allowed another higher MFP interrupt to "replace" the
        current one if it happened during the first 24 cycles of processing
        the interrupt's exception. This counted by mistake the IACK sequence
        itself, where vector can't change anymore. Correct timing to allow
        anohter MFP int is 12 cycles. Fix end part of the 'Little -ME- Demo'
        by Overlanders where screen would become black after a few minutes
        [2825f992]

2022-12-27 Nicolas Pomarede

        In monochrome mode, correctly mask the video address to 22 or 24 bit
        space depending on the machine type This was already done in
        Video_CopyScreenLineColor but not in Video_CopyScreenLineMono. Fix a
        crash with the monochrome demo "Time Slice" by "Defence Force" when
        Hatari is compiled with the "small mem" option
        [ea0b6e81]

2022-12-19 Eero Tamminen

        Add compatibility notes for some Xmas + more sv2k22 demos
        [5bbc26b1]

2022-12-07 Eero Tamminen

        Add Falcon Sound CPX + few Falcon demos to compatibility lists
        [a709411c]

2022-12-08 Eero Tamminen

        Fix reverted read-only Fattrib() attribute check

        Fixes: 8fe983f2878f575ae5acf930a310195e82592a94

        Reported-By: Uwe Seimet
        [bac8ef75]

2022-12-07 Thomas Huth

        Fix the CPU frequency setting of the Mega STE

        Thanks to Christian Zietz for checking this on a real machine!
        [090bfcc9]

2022-12-07 Eero Tamminen

        Fix GEMDOS read-only status fix

        Read-only status change should be done for fopen() only when the
        file exits.

        Fixes: 8fe983f2878f575ae5acf930a310195e82592a94

        Reported-By: Uwe Seimet
        [82e12e1f]

2022-12-06 Eero Tamminen

        Add more monochrome demos to compatibility docs
        [60bfa8d5]

2022-12-05 Eero Tamminen

        Update also EmuTOS compatibility

        - Improve section structure
        - Improve STNICC 1990 3.5k demo infos
        - Add top Sommarhack 2022 entries
        - Plus few other updates
        [ebf536b5]

2022-12-05 Eero Tamminen

        Add top STE/TT/Falcon entries from Sommarhack 2022
        [cf7ffd59]

2022-12-03 Eero Tamminen

        Fix GEMDOS HD checks for files writable only by other users

        GEMDOS HD checks for read-only attribute of a file, and when to ask 
        fopen() to open files as read-only, were not working when file was 
        only writable (owned) by another user, but not by Hatari.

        Before this fix, trying to open such a file (e.g. from a shared 
        directory) as writable failed, now Hatari fopen()s it as read-only, 
        same as it does for user's own read-only files.

        Fixes: 799020b84d02

        Note that access() does check using real UID/GID instead of
        effective ones, so there can still be some rare case where this does
        not work optimally. See "access" manual page.
        [8fe983f2]

2022-12-04 Thomas Huth

        Decrease size of arrays again - the enlargement was not necessary
        [3a133cc2]

2022-12-04 Thomas Huth

        Update outdated information in the manual
        [a9b47425]

2022-12-04 Thomas Huth

        Mention the frequency switching on the Mega STE and Falcon
        [074fc13d]

2022-11-27 Eero Tamminen

        Update Hatari sudirectory contents documentation
        [3d4a30c5]

2022-11-29 Eero Tamminen

        Add Geotech Falcon demo
        [7644c934]

2022-11-26 Nicolas Pomarède

        DMA debugger changes for copper/cpu (not used in Hatari) (from
        WinUAE 4.9.9 beta7 2022/11/26)
        [337b85e3]

2022-11-20 Nicolas Pomarède

        Disassembler fix (from WinUAE 4.9.9 beta6+ 2022/11/20)
        [1792933c]

2022-11-19 Nicolas Pomarède

        Update WinUAE's version
        [137998b5]

2022-11-19 Nicolas Pomarède

        68010 DIV overflow undefined flags update (from WinUAE 4.9.9 beta6
        2022/11/19)
        [a93acb6e]

2022-11-19 Nicolas Pomarède

        Reformatting (from WinUAE 4.9.9 beta6 2022/11/19)
        [47e72b98]

2022-11-19 Nicolas Pomarède

        SMCD update (not used in Hatari) (from WinUAE 4.9.9 beta6
        2022/11/19)
        [109c735b]

2022-11-19 Nicolas Pomarède

        Keep CPU stopped when keyboard reset is active (from WinUAE 4.9.9
        beta6 2022/11/19)
        [6743c2f3]

2022-11-19 Nicolas Pomarède

        Fix BKPT stacked PC from (WinUAE 4.9.9 beta6 2022/11/19)
        [9ce4e70f]

2022-11-18 Thomas Huth

        Update the macOS job in the Cirrus-CI to "ventura"

        Cirrus-CI announced that the old x86-based builders will be
        decomissioned at the end of 2022, so we have to switch to the new
        aarch64 builders instead. While we're at it, switch to the latest
        version of macOS and add "capstone" here, too.
        [a3900103]

2022-11-18 Eero Tamminen

        Update m68k NetBSD related documentation
        [a863a01f]

2022-10-20 Eero Tamminen

        Update Linux support info to v6.0
        [daabefdb]

2022-11-18 Eero Tamminen

        Add address width support to expression evaluation

        Syntax is same as with conditional breakpoints: (<addr>).<width>
        [f6df3857]

2022-11-17 Nicolas Pomarède

        Fixed DMA debugger CPU access data value sometimes being in wrong
        cycle (not used in Hatari) (from WinUAE 4.9.9 beta5+ 2022/11/17)
        [3ff1d059]

2022-11-17 Nicolas Pomarède

        68060 FPU exception without FPU (or FPU disabled) corrupted D7 (from
        WinUAE 4.9.9 beta5+ 2022/11/17)
        [bba5bb28]

2022-10-29 Eero Tamminen

        Document msg repeat suppression and its "--msg-repeat" option
        [4b074ef3]

2022-10-30 Eero Tamminen

        Integrate direct trace file output with message suppression

        LOG_TRACE_PRINT was earlier changed to message repeat handling, 
        however that does not work properly for all code in Hatari.

        * Add LOG_TRACE_DIRECT define for multi-line output where
         going through the message repeat handling does not make sense,
         or some part of output does not use tracing infra for output
         (e.g. CPU & DSP disasm & reg tracing)

        * Add LOG_TRACE_DIRECT_LEVEL define for multi-line output in hdc.c
         which does not its output within LOG_TRACE_LEVEL block

        * Add LOG_TRACE_DIRECT_INIT define to flush any pending message
         repeats before doing direct output to trace file

        * To round off the defines, add LOG_TRACE_DIRECT_FLUSH to
         flush trace file after direct output is done
        [f4f50208]

2022-08-28 Eero Tamminen

        Change CPU+DSP symbol tracing to use Log_Trace() function

        So that repeated entries will be compressed on output.
        [85c6f70b]

2022-08-28 Eero Tamminen

        Support for suppressing successive identical log & trace messages

        There are situations (bugs) where specific log or trace messages
        start repeating constantly.  After repeating for a while, rest is
        useless, fills logs quickly and often scrolls the useful info (about
        how that sitation was entered) out of view faster than one can
        react.

        Limit on how often Hatari prints count of repeated messages is
        doubled whenever earlier limit is reached, and drops back to default
        if message changes.

        This commit includes only general log & trace message integration. 
        Later commits add special handling for few places needing extra
        care.

        Repeat suppression is enabled by default and can be toggled with the 
        new "--msg-repeat" option.
        [c7551e09]

2022-11-13 Eero Tamminen

        Update docs for the MFP IRQ handling fix
        [c8c1c593]

2022-11-07 Eero Tamminen

        EmuTOS compatibility update (v1.2.1 status)
        [69bdda5a]

2022-11-12 Nicolas Pomarède

        Cache bit corrections (from WinUAE 4.9.9 beta5 2022/11/11)
        - "cacheholdingdata_valid" sometimes used as iterator; should not be
        init as boolean.
        - Fix 060 "No Allocate Mode" CACR bit to a valid u32 value.
        [116b8a73]

2022-11-11 Nicolas Pomarède

        Fix common IRQ value on MFP's GPIP4 for IKBD and MIDI ACIAs Both
        ACIA's IRQ lines (active low) are connected to MFP's GPIP4. This
        means GPIP4 should be 0/low if any of the 2 ACIAs has its IRQ line
        set to 0/low. And GPIP4 should be 1/high only if both ACIAs have IRQ
        line set to 1/high
        [a8736c13]

2022-11-06 Nicolas Pomarède

        Reduce unnecessary do_specialties() calls (from WinUAE 4.9.9 beta5
        2022/11/06)
        [61331838]

2022-11-05 Thomas Huth

        Fix crash that happened during shutdown when GEMDOS HD had been
        ejected before

        Uwe Seimet reported a possible crash:

        "After ejecting all GEMDOS drives (I have mapped a folder containing
        several
        drives), resetting Hatari and then quitting with F12 or Ctrl-C there
        is a
        segfault in GemDOS_UnInitDrives()."

        After InternalDTAs has been set to NULL, DTACount has to be set to
        0, too, otherwise the code might still try to access InternalDTAs
        later.
        [a7365d05]

2022-11-05 Thomas Huth

        Convert sprintf() calls into snprintf() calls in the DSP
        disassembler

        sprintf() is marked as deprecated in recent versions of macOS and
        using it generates a lot of compiler warnings. Let's use snprintf()
        instead. Thank a lot to Andreas Grabher for the patch!
        [85929b92]

2022-11-05 Thomas Huth

        gitlab-ci: Merge more CI jobs

        A CI run currently still costs a lot precious CI minutes (ca. 32
        minutes), and since the CI minutes are now limited to 400 minutes
        per months, let's try to be more efficient by merging the jobs even
        further. Also remove the python packages from the mingw job since
        they are not really useful there.
        [f09c428e]

2022-11-05 Thomas Huth

        Allow to use --enable-werror and --disable-tracing at the same time
        [4ca0a225]

2022-11-03 Thomas Huth

        Remove str.h from ide.c - it is not needed here anymore
        [cdac2ae0]

2022-10-31 Nicolas Pomarède

        68000 IPL fix (from WinUAE 4.9.9 beta4 2022/10/30)
        [69cd7200]

2022-10-31 Nicolas Pomarède

        f breakpoint hit count support (not used in Hatari) (from WinUAE
        4.9.9 beta4 2022/10/30)
        [6259d1ee]

2022-10-27 Eero Tamminen

        Avoid stale GEMDOS HD read-only status

        And resulting spurious Fwrite() warnings with FDs created either
        with Fcreate(), or state restore.

        Reported-By: Uwe Seimet

        Fixes: 799020b84d02

        Also:
        * Correct virtual INF file Fopen() mode in GEMDOS trace
        * Update warning msg now that it's also about files that are
         not supposed to be written, not just ones Fopen()ed read-only
        * Show FD read-only status also with "info gemdos"
        [68a9cc99]

2022-10-26 Nicolas Pomarède

        Update physical addresses and timing w/cache burst (from WinUAE
        4.9.2 beta3+ 2022/10/25)
        [d669d9f4]

2022-10-26 Nicolas Pomarede

        Don't use adjust_cycles() for CPU emulation, we keep the number of
        cycles returned by each opcode WinUAE can adjust the number of
        cycles of each opcode by a percentage to simulate a different CPU
        clock. We don't use this for Hatari, we always keep the value
        returned by each opcode.
        [d8bafdb4]

2022-10-25 Nicolas Pomarede

        Don't output multiple disasm lines every 4 cycles when STOP is
        running Since commit ad403487 from 2022/08/27 CPU core handles
        correctly STOP as an instruction that "loops" by not prefetching
        another opcode until exit condition is reached. When using trace
        "cpu_disasm" this gave multiple lines in the disasm output every 4
        cycles instead of one single line as before. To fix this we don't
        output anything once regs.stopped is set.
        [f71c37d2]

2022-10-24 Nicolas Pomarède

        IPL wait state fix (from WinUAE 4.9.2 beta3 2022/10/23)
        [1cd9e747]

2022-10-24 Nicolas Pomarède

        Larger DMA debugger (not used in Hatari) (from WinUAE 4.9.2 beta3
        2022/10/23)
        [7e5cb341]

2022-10-24 Nicolas Pomarède

        Warning fixes (from WinUAE 4.9.2 beta3 2022/10/23)
        [3219dbcb]

2022-10-24 Nicolas Pomarède

        68000 IPL updates (from WinUAE 4.9.2 beta2+ 2022/10/21)
        [ebc82b42]

2022-10-24 Nicolas Pomarède

        Trace does not wake up STOP if STOP enables trace and trace was not
        already enabled (from WinUAE 4.9.2 beta2+ 2022/10/21)
        [8e6d88da]

2022-10-24 Nicolas Pomarède

        Fix non-interrupt exception timing (from WinUAE 4.9.2 beta2+
        2022/10/21) NOTE : this is in fact wrong, there's no need for 4
        extra cycles, so this change is commented in Hatari
        [597d1797]

2022-10-24 Nicolas Pomarède

        Fix debugger W command hang and sp swapped sprite planes (not used
        in Hatari) (from WinUAE 4.9.2 beta2+ 2022/10/19)
        [a2874665]

2022-10-24 Nicolas Pomarède

        68000 accurate IPL timing emulation (from WinUAE 4.9.2 beta2+
        2022/10/19)
        [1f71f4c4]

2022-10-23 Thomas Huth

        Use "emcmake" when configuring the build for Emscripten

        By using "emccmake" instead of "emmake", the detection for zlib now
        works right.
        [050500b6]

2022-10-23 Thomas Huth

        Fine-tuning in CMakeLists.txt for Emscripten

        We should not try to build and run the tests if cross-compiling.
        [003b0098]

2022-10-22 Thomas Huth

        Remove createBlankImage.h inclusion from file.c

        It's not necessary here. Thanks to Andreas for the hint!
        [a670b413]

2022-10-22 Thomas Huth

        Add some unit tests for file.c

        As the problem with File_MakeValidPathName() recently revealed, it 
        might be good to have some more test coverage for the functions
        here.
        [4f3646ab]

2022-10-22 Thomas Huth

        Avoid Log_Printf() in WinTmpFile()

        file.c generally does not use the Log_Printf() stuff, so avoid it in
        WinTmpFile(), too. This will make it easier to link the file to the
        upcoming unit test in the next patch.
        [9fc1800f]

2022-10-07 Eero Tamminen

        Improve init and output options for disassembly

        * Support lower case options also with CPU core disassembly
        * Add UAE disassembly option for showing EA/CC info
        * Add UAE disassembly option for hex address case
        * Add option for skipping showing of 16-bit words at address
         - To manage that better, offsets come now from positions array
         - Add const correctness to column removal function
         - Remove " :" after ext assembler address, to make output
           more consistent between dissassembler and because it
           looked odd whent 16-bit words were missing
        * Convert Disasm_SetCPUType() to Disasm_Init() function
         that handles intialization for both disassemblers
        * Show flag values as hex in help, now that there are more of them
        [b7bbcd4f]

2022-10-19 Eero Tamminen

        SdlGui_DirConfSelect -> SDLGui_DirConfSelect

        For consistency with other SDL GUI functions.
        [e5af5c53]

2022-10-19 Thomas Huth

        Fix File_MakeValidPathName() for inputs that point to a place in the
        root dir

        Thanks to Andreas Grabher for the hint!
        [08f10f4e]

2022-10-18 Eero Tamminen

        Improve SdlGui_DirSelect()

        Apply changes proposed by Andreas Grabher:
        - Rename for consistency with SdlGui_FileConfSelect()
        - Use Hatari helper function to make sure path is valid
        - Use Str_Copy() to limit copying to (assumed) confname size
        [8ae54c45]

2022-10-16 Thomas Huth

        Replace some strncpy() calls with Str_Copy()
        [d487c2da]

2022-10-16 Thomas Huth

        Do not return success for invalid files in SDLGui_FileConfSelect()

        These functions also returned true, if a non-existent file or
        directory is selected. That does not make very much sense.

        Thanks to Andreas Grabher for the hint!
        [e61e6cd0]

2022-10-15 Thomas Huth

        Add a test for DMA sound playback after RAM end
        [00e3767c]

2022-10-15 Thomas Huth

        Replace SDL types in remaining files that don't use any SDL
        functions
        [fd9d8ad0]

2022-10-12 Eero Tamminen

        Move duplicate SDL GUI dir selection to a shared function
        [899c41ac]

2022-10-12 Eero Tamminen

        Add / use File_Basename() convenience function
        [a06f9e9e]

2022-10-11 Eero Tamminen

        GEMDOS HD: allow writes to files opened as read-only

        See: https://www.atari-forum.com/viewtopic.php?p=438987
        [799020b8]

2022-10-12 Nicolas Pomarede

        Fix change ce962026 from 2022/10/07 which didn't work for 68040 with
        prefetch mode 68040 in prefetch mode uses in fact the same cputbl as
        68040 in CE mode, so we must use a new variable CpuRunFuncNoret
        instead of relying on CpuRunCycleExact
        [8dcc45f0]

2022-08-28 Eero Tamminen

        Add JagPad / Power Pad info to compatibility list

        Info provided by Ispettor Flanella.

        (Falcon compatible Reservoir Gods' "Superfly" game was not added to
        list as it's ST game.)
        [01a0f94e]

2022-09-26 Eero Tamminen

        Add Falcon MegaPlayer and more info on file selector issue
        [342b67f6]

2022-09-25 Eero Tamminen

        Add more programs to EmuTOS compatibility list
        [99e1d09b]

2022-07-25 Thorsten Otto

        Move symbol_t struct to symbols.h

        Besides allowing removal of duplicate enums, this will also help in
        later symbol exporting functionality.
        [69573971]

2022-10-08 Thomas Huth

        Remove unused definition of M_PI
        [07b03a90]

2022-10-07 Thomas Huth

        Revert "Cycle exact mode does not work with emscripten yet"

        This reverts commit 70609e308598f157690241deedd6cd9c5c8f02a7.

        Cycle exact mode should now work with emscripten, too.
        [5cdb9f56]

2022-10-07 Nicolas Pomarède

        Separated two types of CPU emulation functions (returns
        value/returns void) (from WinUAE 4.9.2 beta1 2022/10/06) This should
        fix some conflicts reported when compiling Hatari with emscripten
        [ce962026]

2022-10-06 Eero Tamminen

        Provide GEMDOS write error reason in warning

        Like in GEMDOS read.
        [454b7d49]

2022-10-04 Nicolas Pomarede

        Fix typos and compiler warning (from WinUAE 4.9.2 beta1 2022/10/04)
        [a72c58ba]

2022-10-03 Thomas Huth

        gitlab-ci: Remove the "build-normal" job

        gitlab.com recently introduced limits for the monthly CI minutes, so
        we have to be more conscious about the jobs that we are running. 
        Almost everything that is handled by the "build-normal" job is 
        already tested in other pipelines, so we can certainly drop this job
        to save some CI minutes. While we're at it, turn "build-alt" into a
        job that really tests for a minimalist configuration instead.
        [8b065695]

2022-10-02 Eero Tamminen

        Use bool as return type for dialog alert functions

        As they return only true/false.
        [724ce14a]

2022-10-02 Thomas Huth

        Add some more words about emscripten to the readme.txt
        [9d0d4ffc]

2022-10-02 Thomas Huth

        Cycle exact mode does not work with emscripten yet
        [70609e30]

2022-09-02 tIn

        Additional emscripten changes
        [dbac8617]

2022-09-01 tIn

        Add emscripten shell
        [bd9a8bd2]

2022-10-02 Nicolas Pomarède

        Accurate 68000 IPL emulation updates + STOP update (from WinUAE
        4.9.2 beta1 2022/10/01) This completes commit 2fd4f228 from
        2022/08/27 and gives the correct number of 8 cycles when STOP is
        used with an already pending interrupt
        [65099c47]

2022-10-02 Nicolas Pomarède

        Debugger 's' and 'W' command improved quoting support (not used in
        Hatari) (from WinUAE 4.9.2 beta1 2022/10/01)
        [10efbdaf]

2022-10-02 Thomas Huth

        Remove unused variable lineno
        [f38252cc]

2022-10-02 Thomas Huth

        Rename SDL_UpdateRect() into Screen_UpdateRect()

        The SDL_UpdateRect() function was a hack that we introduced when
        adding support for the SDL 2.0. Since we dropped support for SDL 1.2
        a while ago, keeping the old name is not required anymore.
        Additionally, the SDL_UpdateRect() prototype also conflicts with
        some compatibility functions from Emscripten, so let's use a better
        name for this function now instead.
        [b2d0c4e0]

2022-10-02 Thomas Huth

        Remove the 16-bpp screen conversion functions

        All recent hardware supports 32 bits-per-pixels these days, so the
        16-bpp rendering functions are pretty much dead code now and just
        cause double maintainence if there is something to change in the
        screen rendering functions. Let's avoid this double maintainence and
        drop the old rendering functions.
        [4d78e24d]

2022-08-20 Thomas Huth

        Remove the --bpp CLI option / the nForceBpp config switch
        [93a5dfa7]

2022-10-01 Thomas Huth

        dmaSnd.c still needs SDL_stdinc.h for the M_PI constant
        [db9b4b23]

2022-10-01 Thomas Huth

        Make gst2ascii and tests/debugger independent from the SDL headers
        [f53d13d3]

2022-10-01 Thomas Huth

        Fix new code in maccess.h for big endian hosts
        [11a076c8]

2022-10-01 Thomas Huth

        Drop redundant #include <SDL_types.h> statements
        [947b381a]

2022-10-01 Thomas Huth

        Replace SDL types in midi.c
        [854db1ba]

2022-10-01 Thomas Huth

        Make hmsa independent from the SDL headers
        [decd82e9]

2022-10-01 Thomas Huth

        Make main.h independent from the SDL headers

        Thanks to the previous clean-ups, we can finally get rid of this
        dependency to the SDL_types.h header.
        [cc7de619]

2022-10-01 Thomas Huth

        Use __APPLE__ instead of __MACOSX__ to test for macOS

        __MACOSX__ is a macro that is provided by the SDL library, so we
        must not use this in files that should work without the SDL headers.
        Use the more common __APPLE__ macro instead.
        [a80539f0]

2022-10-01 Thomas Huth

        Replace strlcpy() with a better implementation

        strlcpy() has issues with untrusted source strings, since it is
        always trying to find out the length of source strings. So for
        emulators like Hatari this could be dangerous when being used on
        strings that originate from the Atari program side. Let's use a
        better string copy function instead, similar to strscpy() in the
        Linux kernel (see following URL for details: 
        https://lkml.org/lkml/2022/8/21/271 ). This also decreases our
        dependency on the SDL headers since we were using SDL_strlcpy() on
        systems that do not have a strlcpy() function in their libc.
        [63153932]

2022-10-01 Thomas Huth

        Reduce our dependencies to screen.h

        screen.h requires the SDL headers, so it's bad to include it in code
        that does not really depend on the SDL library, thus drop the
        inclusion of screen.h wherever it is possible. However, video.h
        currently depends on screen.h due to the HBL_PALETTE_LINES and
        HBL_PALETTE_MASKS macros. Fix this dependency by moving the
        HBLPalettes[] and HBLPaletteMasks[] arrays from video.c to screen.c
        instead.
        [861af72c]

2022-10-01 Thomas Huth

        Use the bswap functions from sysdeps.h in maccess.h

        This way maccess.h gets independent from the SDL_endian.h header.
        [d8f1b56d]

2022-10-01 Thomas Huth

        Convert even more files from the SDL types to stdint types

        These are required for the upcoming changes with regards to 
        maccess.h and the SDL-header related cleanups
        [55b5b9e3]

2022-10-01 Thomas Huth

        Remove unused file md-fpp.h

        Unused since commit 7f19b20775f051ac214d (from WinUAE 4.4.0+
        2020/07/27)
        [34297254]

2022-09-30 Chris Jenkins

        Handle MacOS versions >= 11
        [f5b5d3b4]

2022-09-30 Thomas Huth

        Use standard types in the hmsa tool, too
        [26b5e9d8]

2022-09-29 Thomas Huth

        SDL2_INCLUDE_DIR has been renamed to SDL2_INCLUDE_DIRS
        [6ac59c63]

2022-09-28 Thomas Huth

        Remove HAVE_SDL_CONFIG_H

        The SDL_config.h header is available since SDL 2.0.4. Since we
        require at least SDL 2.0.6 now to compile Hatari, we can remove the
        checks.
        [a1d5ebbf]

2022-09-29 Eero Tamminen

        Get rid of SDL types in tools

        Other than HMSA tool were already clean.
        [597f6058]

2022-09-29 Eero Tamminen

        Complete earlier SDL_types.h independence commit

        Earlier commits missed some of the SDL types in the files.

        Remaining ones were converted with:
         for x in 8 16 32 64; do
           sed -i \
             -e "s/\bUint${x}\b/uint${x}_t/g" \
             -e "s/\bSint${x}\b/int${x}_t/g" \
             <files>;
         done

        Fixes: 887c862e446 Fixes: 842d4bb32a8 Fixes: b29bcad91c4
        [73cddffc]

2022-09-29 Nicolas Pomarède

        Convert more files to use types from stdint.h instead of SDL_types.h
        [c1224f46]

2022-09-25 Thomas Huth

        Make more files independent from SDL_types.h, use types from
        stdint.h instead
        [887c862e]

2022-09-25 Thomas Huth

        Remove the unused hd6301 sources

        They are completely unused since years, only impact is a small slow
        down to our compilation process, so let's finally remove them. If we
        ever want to have another try to fully emulate the IKBD processor,
        we can resurrect these sources from the older Hatari versions.
        [0f5ddb88]

2022-09-25 Thomas Huth

        Convert files in src/debug/ from SDL_types.h to stdint.h
        [e1bcf014]

2022-09-19 Chris Jenkins

        Don't unpause if emulation was already paused
        [0cc06105]

2022-09-25 Thomas Huth

        Remove SDL types from the debug tests and related files
        [b29bcad9]

2022-09-25 Thomas Huth

        Get rid of SDL types in gemdos.c and cycles.c
        [842d4bb3]

2022-09-25 Thomas Huth

        Make DSP code independent from SDL_types.h

        Let's switch to the stdint.h types here to decrease our dependencies 
        to the SDL headers.
        [c3ac11f8]

2022-09-24 Nicolas Pomarède

        Hard reset CPU startup was not identical to initial power up (from
        WinUAE 4.9.1+ 2022/09/23)
        [3c34ac7c]

2022-09-24 Nicolas Pomarède

        DMA debugger initial start support (not used in Hatari) (from WinUAE
        4.9.1+ 2022/09/23)
        [61dc66e9]

2022-09-24 Nicolas Pomarède

        Fixed minor bugs, memleaks and strlen optimize (from WinUAE 4.9.1+
        2022/09/23)
        [996cede0]

2022-09-24 Thomas Huth

        Always add Cocoa on macOS

        Seems like this is necessary for the bundled build, too.
        [c816fa82]

2022-09-24 Thomas Huth

        The "Floppy" target needs a target_link_library(), too

        Thanks to Andreas Grabher for the hint!
        [a6c5400d]

2022-09-24 Thomas Huth

        Link explicitly against the Cocoa framework

        The "-framework Cocoa" used to be added by our FindSDL2.cmake
        module, but now that this is gone, it seems like we have to add this
        manually again. This fixes the broken macOS job in the Cirrus CI.
        [ffb249e1]

2022-09-24 Thomas Huth

        Fix compilation on macOS with the latest version of SDL2

        We've got to use target_link_libraries() here to get the compilation 
        with the latest version of the SDL2 framework working again on
        macOS. Thanks to Andreas Grabher for the hint!
        [271734e7]

2022-09-18 Thomas Huth

        Switch to the official SDL2 CMake config and drop our FindSDL2.cmake
        file

        Recent versions of SDL2 ship with a SDL2Config.cmake file, so we do
        not need to supply our own FindSDL2.cmake anymore.
        [79ed0ebc]

2022-09-18 Eero Tamminen

        Update / improve release notes
        [bd5ba4ae]

2022-09-17 Nicolas Pomarede

        Use Uint64 instead of Uint32 in ClocksTimings_ConvertCycles
        (reported by Ian Ray)
        [82b32a17]

2022-09-17 Eero Tamminen

        Fix troff warnings for Hatari manual page

        And add note to release checklist for testing these.

        Unfortunately troff (or "man --warnings") does not return an error 
        code so that this check could be trivially automated with CTest.
        [1679a031]

2022-09-17 Eero Tamminen

        Fix groff warning in hatari_profile.1

        A period at the beginning of a line starts a command for groff.

        Reported by Teemu Hukkanen.
        [cd7e8d67]

2022-09-15 Eero Tamminen

        Fix freeing of unallocated, non-NULL symbol name pointers

        When symbol_list_alloc() used malloc, the returned name list content 
        was uninitialized, and potentially non-zero (when memory was
        reused). symbols_load_gnu() does not explicitly set
        ".name_allocated" symbol members to false.  As result,
        symbol_list_free() tried to free
        (non-NULL) symbol ".name" pointers.

        Fixes: e5b672b74f1c

        Code formatting is also made more consistent.
        [5e19519f]

2022-09-15 Eero Tamminen

        Free profiler data buffers before exit

        Listed by Valgrind with --leak-check=full --show-reachable=yes.
        [c3cbabfe]

2022-08-25 Chris Jenkins

        Allow all filetypes in Mac GUI

        Previously, when selecting files (hard disk images, midi output
        etc...), only certain filetypes were allowed. The Mac fileselector
        that we use, NSOpenPanel, has actually deprecated the
        allowedFileTypes property and certainly doesn't show the user any
        indication of the set of types that are permitted.

        Longer term, it might make sense to revamp this code.
        [36fc885c]

2022-09-12 Eero Tamminen

        Fix disassembly matching when capstone is not enabled

        Instead of adding CAPSTONE ifdef for the case when:

        * User's Hatari config specifies the external disassembler
         (= old default), but

        * Hatari does not support that because capstone devel files
         were not present at built time

        just specify regexp that will match output from both disassemblers.

        Fixes: d2d51974ef
        [2d10f7aa]

2022-09-12 Eero Tamminen

        Remove redundant defines & tabs from ext disassembler

        Fixes worst looking TAB usage with the default 8-space TAB settings.
        [bcdbe8ca]

2022-09-12 Nicolas Pomarède

        Ignore byte accesses to blitter's registers defined as word only
        [273e8b07]

2022-09-12 Eero Tamminen

        And increase the devel version too

        Sigh. Apparently I'm aiming for the "buggiest trivial commit"
        record.
        [229c4a6e]

2022-09-12 Eero Tamminen

        Fix typos in previous commit
        [dbecb9b5]

2022-09-12 Eero Tamminen

        Update release checklist + switch Hatari version back to devel
        [fcd891cd]

2022-09-03 Nicolas Pomarède

        Display the accurate value of E clock jitter when logging HBL and
        VBL exceptions Jitter was previously logged from video.c, which was
        not correct, it should be logged from the IACK part of the CPU core
        [4a4c2f17]

2022-08-27 Thomas Huth

        Add Line-A comments in disassembly
        [2063a37a]

2022-08-27 Thomas Huth

        Use capitalization option for unknown opcodes, too
        [dea1c2da]

2022-08-27 Nicolas Pomarède

        Disassembler full format extension upper/lower case fixes (from
        WinUAE 4.9.1+ 2022/08/25)
        [bf28b4ba]

2022-08-27 Nicolas Pomarède

        Warning fixes, preparing for future ARM64 build (from WinUAE 4.9.1+
        2022/08/21)
        [c5f37c14]

2022-08-27 Nicolas Pomarède

        Scanrate fix for visual debugger (not used in Hatari) (from WinUAE
        4.9.1+ 2022/08/22)
        [f6a32c24]

2022-08-27 Nicolas Pomarède

        INTENA/INTREQ timing update. IPL state included in DMA debugger
        (from WinUAE 4.9.1+ 2022/08/18)
        [08958234]

2022-08-27 Nicolas Pomarède

        Optional short absolute disassembly (-$xxxx.w/$FFFFxxx.w) (from
        WinUAE 4.9.1+ 2022/08/18) This display short address with 8 chars
        instead of 4 adding ".w" to the address eg : "1038 8260" will now
        display "move.b $ffff8260.w,d0" instead of "move.b $8260,d0" before
        [880cef08]

2022-08-27 Nicolas Pomarède

        Simplified JIT direct exception handler (not used in Hatari) (from
        WinUAE 4.9.1+ 2022/08/07)
        [d36e6e54]

2022-08-27 Nicolas Pomarède

        Interrupt handling timing update, separate Paula internal INTREQ
        changes vs INTREQ CPU/Copper writes (from WinUAE 4.9.1+ 2022/08/07) 
        NOTE : there' no more 4 extra cycles for STOP with this version,as
        it moves the INTREQ timing into the Amiga part instead of counting
        it into the CPU part. STOP with already pending interrupt not
        correct yet, takes 4 cycles instead of 8 cycles
        [2fd4f228]

2022-08-24 Nicolas Pomarede

        Make sure hardware emulated RTG boards don't have barrier at the
        start of VRAM space to fully support JIT direct (not used in Hatari)
        (from WinUAE 4.9.1+ 2022/08/07)
        [7389ebdf]

2022-08-24 Nicolas Pomarede

        Fix console DMA debugger output (not used in Hatari) (from WinUAE
        4.9.1+ 2022/08/07)
        [015a3fcc]

2022-08-24 Nicolas Pomarede

        DMA debugger variable number of line lengths and scanlines supported
        (not used in Hatari) (from WinUAE 4.9.1+ 2022/08/02)
        [f0ce1f3a]

2022-08-24 Nicolas Pomarede

        Restored DMA debugger update (not used in Hatari) (from WinUAE
        4.9.1+ 2022/07/23)
        [14abad4f]

2022-08-23 Nicolas Pomarede

        STOP timing fix from WinUAE 4.9.1+ 2022/07/20) NOTE : just merging
        code from WinUAE for now, STOP timings will be wrong under Hatari
        [b1fe1bbe]

2022-08-23 Nicolas Pomarede

        Yet another STOP emulation rewrite. Not yet fully cputester
        validated (from WinUAE 4.9.1+ 2022/07/11) NOTE : just merging code
        from WinUAE for now, STOP timings will be wrong under Hatari
        [ad403487]

2022-08-26 Eero Tamminen

        Fix use-after-free in external disassembler

        Reported by AddressSanitizer.

        Fixes: d2d51974e
        [e6d7e245]

2022-08-23 Nicolas Pomarede

        Minor debugger fixes #2 (not used in Hatari) (from WinUAE 4.9.1+
        2022/07/11)
        [397ee77f]

2022-08-23 Nicolas Pomarede

        Minor debugger fixes (not used in Hatari) (from WinUAE 4.9.1+
        2022/06/27)
        [91e19563]

2022-08-23 Nicolas Pomarède

        STOP cycle-accuracy fix (from WinUAE 4.9.1+ 2022/06/06) NOTE : this
        still doesn't cover the case where interrupt is already pending
        before STOP
        [7c244f20]

2022-08-21 Nicolas Pomarède

        STOP state/wakeup added to DMA debugger (not used in Hatari) (from
        WinUAE 4.9.1+ 2022/06/06)
        [e81c9add]

2022-08-21 Nicolas Pomarède

        STOP update (from WinUAE 4.9.1+ 2022/05/12) NOTE : this still
        doesn't cover all cases as measured on a real STF / STE
        [45cc990d]

2022-08-21 Thomas Huth

        Re-activate the option to use 'SP' instead of 'A7' in the
        disassembly
        [b688c09a]

2022-08-21 Thomas Huth

        Add option to remove space after comma in disassembly
        [27997bfa]

2022-08-19 Nicolas Pomarède

        Clear SMC detector state if CPU cache cleared (not used in Hatari)
        (from WinUAE 4.9.1+ 2022/05/28)
        [a4b6203e]

2022-08-19 Nicolas Pomarède

        CIA emulation rewrite (not used in Hatari) (from WinUAE 4.9.1+
        2022/05/24)
        [f1a35102]

2022-08-19 Nicolas Pomarède

        Typo / indent (from WinUAE 4.9.1+ 2022/05/24)
        [7d2a8fd1]

2022-08-19 Nicolas Pomarède

        Force config changes (CPU speed) into effect on hard reset (from
        WinUAE 4.9.1+ 2022/05/24)
        [6538b1b6]

2022-08-19 Nicolas Pomarède

        Include also possible remaining cycles when doing 68000/010 to
        chipsey sync (not used in Hatari) (from WinUAE 4.9.1+ 2022/05/24)
        [72804f63]

2022-08-19 Nicolas Pomarède

        memwatch bank crossing fix (from WinUAE 4.9.1+ 2022/05/06)
        [f14da93c]

2022-08-19 Nicolas Pomarède

        Warning fixes for _tcslen / strlen ((rom WinUAE 4.9.1+ 2022/04/29)
        [dade66b6]

2022-08-18 Nicolas Pomarède

        JIT warning fixes (from WinUAE 4.9.1+ 2022/04/28)
        [5c60d8e1]

2022-08-18 Nicolas Pomarède

        Warning fixes, use 'size_t' instead of 'int' (from WinUAE 4.9.1+
        2022/04/29)
        [4760fbd6]

2022-08-18 Nicolas Pomarède

        Cycle counting is now 64-bit (from WinUAE 4.9.1+ 2022/04/28)
        [a112b8d1]

2022-08-16 Nicolas Pomarède

        Warning fixes (from WinUAE 4.9.1+ 2022/04/28)
        [4ff27e80]

2022-08-16 Nicolas Pomarède

        SR modifying instruction IPL check update (from WinUAE 4.9.1+
        2022/04/17)
        [1e68b96e]

2022-08-15 Nicolas Pomarède

        68000 IPL detection timing fixes - part 2 (from WinUAE 4.9.1+
        2022/04/17) + STOP changes from WinUAE 2021/09/27 (with patch) As
        measured on real STF/STE, adding 4 cycles before do_interrupt()
        gives wrong results for STOP under emulation. So we disable these 4
        cycles for now.
        [80f26900]

2022-08-15 Nicolas Pomarède

        68000 IPL detection timing fixes - part 1 (from WinUAE 4.9.1+
        2022/04/17)
        [a2f8c7bb]

2022-08-14 Nicolas Pomarède

        Update some files to match WinUAE's sources from 25/04/2022 (no
        change for Hatari)
        [217f0ab6]

2022-08-20 Thomas Huth

        Need at least capstone 4.0 for m68k support
        [4f9359a2]

2022-08-20 Thomas Huth

        Use Capstone in the CI, too
        [84cf01d7]

2022-08-20 Thomas Huth

        Update the documentation with regards to the new Capstone support
        [3b497135]

2022-07-15 Thomas Huth

        Use Capstone for "external" disassembling

        The "external" disassembler code in 68kDisass.c was sometimes very
        cumber- some to maintain in the past years, and since there is
        already a disassembler engine in the WinUAE core, having a second
        disassembler code in Hatari just feels wrong. Additionally, most
        modern OS distributions already feature the
        "Capstone" disassembler nowadays which supports the m68k
        architecture, too, so let's use that instead of spending our time to
        maintain two disassembler engines within Hatari.
        [d2d51974]

2022-06-18 Thomas Huth

        Add Capstone to the CFLAGS and linker flags
        [75ed9cd4]

2022-06-18 Thomas Huth

        Add a FindCapstone CMake module
        [e5422016]

2022-08-20 Eero Tamminen

        Take RTC year option into account also for NVRAM RTC

        Reported by Uwe Seimet.

        Fixes: ae45605248
        [172ed18d]

2022-08-19 Eero Tamminen

        Fix RTC option define ID in error message

        Reported by Uwe Seimet.

        Fixes: ae45605248
        [baaa4ac8]

2021-09-21 Eero Tamminen

        Use history for determining suitable disassembly default address

        If disassembly starts from program counter (PC), user lacks context
        on how the code ended in current position.  With this, when history
        is enabled in debugger, disassembly is started from suitable address
        (slightly) before PC.

        Because trying to disassemble instructions from "random" address 
        before PC will often output incorrect disassembly, this scans 
        execution history for a valid instruction address that's close
        enough to PC.

        History addresses are valid until overwritten with differently
        aligned instructions, which is extremely unlike to happen, so this
        should be robust enough to be used always when history is enabled.
        [dd1c6ed5]

2022-08-01 Eero Tamminen

        Clear DTA cache on GEMDOS HD changes, and free it on exit
        [a10573d2]

2022-08-01 Eero Tamminen

        Free debugger allocations at Hatari exit

        Helps with memory debugging.
        [08bc257a]

2022-08-18 Eero Tamminen

        Add --rtc-year option / config option

        There can be old Atari programs that use dates, but do not handle 
        e.g. Y2K gracefully.  This workaround can be used with them.

        Notes:

        * Suitable year offset is calculated at start, instead of on every
         query, to handle gracefully new year transition (avoid clock going
         backwards on year change).

        * This means that RTC year cannot be overridden afterwards, from
         Hatari debugger, or through its remote API.
        [ae456052]

2022-08-18 Eero Tamminen

        Add helper for common RTC code
        [f05a68a3]

2022-08-15 Eero Tamminen

        Add TODO item about setting time on RTC machines

        Reported / requested by Uwe.
        [a73aee7c]

2022-08-03 : *** Version 2.4.1 ***

2022-08-03 Nicolas Pomarède

        New release 2.4.1, update dates in corresponding files
        [4371dcd6]

2022-08-01 Eero Tamminen

        Minor release documentation updates

        Update link, add note about logging, move VDI note to better place
        [c63abca1]

2022-08-01 Eero Tamminen

        Update EmuTOS notes in docs and tools comments

        In latest EmuTOS release 512k variant is language specific, so the
        given file names are wrong for it => use 1024k one instead to avoid
        that.
        [409391e3]

2022-08-01 Eero Tamminen

        Update EmuTOS version info in TOS boot tester

        And update version control ignore files also otherwise.
        [83987df1]

2022-08-01 Eero Tamminen

        Do debugger symbol testing with up to date data

        Replace obsolete EmuTOS symbols with ones from v1.1.1 one coming
        with Hatari binary releases, which use different, 0x prefixed
        address format.
        [73441e40]

2022-08-01 Thomas Huth

        Fix detection of Python Gtk in case Python 3 is not found
        [231a79ea]

2022-08-01 Thomas Huth

        Move the VDI mode crash to the 'Emulator' section
        [3d9e859b]

2022-07-31 Thomas Huth

        Check for the availability of Python Gtk before using the python-ui
        [7464d784]

2022-07-31 Thomas Huth

        Mention valgrind and ASAN_OPTIONS
        [a9c98fdf]

2022-08-01 Eero Tamminen

        Avoid invalid SDLGUI element accesses

        SDLGui_DoDialogExt() can return SDLGUI_UNKNOWNEVENT or
        SDLGUI_NOTFOUND value and get called again with such value in
        'current_object' by file selector, as those values do not terminate
        file selection.

        Invalid access reported by Nicolas / AddressSanitizer.
        [be58723f]

2022-07-30 Thomas Huth

        Fix possible crash in VDI mode when the ST program sets a bad video
        base

        The ST program might change the screen address between the point in
        time where we set the VideoBase variable and the point in time we're
        doing the conversion in screenConvert.c, so the code in that file
        must not use Video_GetScreenBaseAddr() to get the base address, but
        has to use the address that we recorded earlier. This fixes a
        possible crash in VDI mode with the tests/mem_end/scr_end.prg test
        program.
        [830f1049]

2022-07-29 Eero Tamminen

        Update release checklist
        [2234bb82]

2022-07-29 Eero Tamminen

        Test timeouts were too tight, increase them to pass tests

        Increase TT times a bit to avoid timeout fails with ASAN.

        MMU and IDE wait impact both startup and total test time.
        [3c4def86]

2022-07-29 Eero Tamminen

        Avoid ioctl using uninitialized data in scc.c

        According to Valgrind. Fix is same as what the RS-232 code does.
        [3934c4ae]

2022-07-29 Eero Tamminen

        Fix memory leak in PNG save code

        Gets FIFO and fullscreen tests to pass with AddressSanitizer.
        [4d164bdb]

2022-07-29 Eero Tamminen

        Fix config memory leak when HATARI_TEST is used

        To be able to use AddressSanitizer furter with HATARI_TEST.
        [489e27f4]

2022-07-29 Eero Tamminen

        Remove old (only) OSX GUI debug print

        It does not even say what it's for, so it would be a mystery to
        users.
        [81009c72]

2022-07-29 Eero Tamminen

        Output profiler prints to stderr, like rest of debugger

        Not to stdout.
        [dd3a6a55]

2022-07-29 Eero Tamminen

        Output config option handling issues with correct log functions

        As they are non-fatal, their output should be controllable, like
        rest of the log messages.
        [a47e17bc]

2022-07-29 Eero Tamminen

        Fix: use correct logging macros for IDE tracing

        Fixes: 5f8e24bb6
        [0840878b]

2022-07-29 Eero Tamminen

        Minor documentation updates
        [366143b5]

2022-07-28 Nicolas Pomarède

        Replace printf with Log_Printf when loading IPF/CTR floppy images
        [49e634f6]

2022-07-28 Eero Tamminen

        Document Hatari output options in debugger manual

        And update debugger config options defaults.
        [29fc553c]

2022-07-28 Eero Tamminen

        State explicitly what output "logfile" command controls
        [46d8a5cc]

2022-07-27 Eero Tamminen

        Fix memory leaks on GEMDOS HD program loading

        Reported by AddressSanitizer.

        Fixes: 1915c2a0e6
        [512fd72c]

2022-07-27 Eero Tamminen

        Improve bDspEnabled option handling change description

        DSP_Run() emulated DSP only on Falcon machines, as dsp_core.running 
        gets set only after specific DSP IO register write.  Avoiding 
        unnecessary calls to Dsp_Run() completely on non-Falcon machines
        with bDspEnabled still helps.
        [010b7b6d]

2022-07-27 Nicolas Pomarede

        Update release-notes.txt
        [166a6ae5]

2022-07-27 Nicolas Pomarede

        DSP_Enable() should set bDspEnabled=true only if the machine is a
        Falcon If not, DSP_Run() can be called when using >= 68030 CPU (eg
        in TT mode) if DSP was enabled using options or global configuration
        file, which would unnecessary slow down emulation as only Falcon has
        the corresponding IO memory to access the DSP
        [e0bacb31]

2022-07-25 Thorsten Otto

        Fix duplicate symbol name handling

        When checking for duplicate symbol names, the last symbol was always 
        removed with other duplicates.
        [aded099e]

2022-07-26 Eero Tamminen

        Show "Linux" in statusbar for lilo

        Reported by Thorsten Otto with example patch.
        [c8fbc913]

2022-07-26 Eero Tamminen

        Fix AddressSanitizer warning in HD emulation code

        About read extending to neighbouring variable.

        (Every warning aborts Hatari, so all of them need to be fixed to
        find potential later ones.)
        [ac9f432a]

2022-07-26 Nicolas Pomarede

        Fix bus error when enabling debug functions to validate consistency
        of 68030 data cache The functions to check the data cache will use
        get_long/_word/_byte which could cause a bus error when accessing
        RAM 0-$7FF and not in supervisor mode. Add BUS_MODE_DEBUGGER to
        access such RAM without doing a bus error.
        [ab9342e4]

2022-07-25 Eero Tamminen

        Correct EmuTOS variant info for v2.4.0 release
        [3e01f447]

2022-07-20 Eero Tamminen

        Add more info on Midi Maze connection issues

        Based on: https://www.atari-forum.com/viewtopic.php?p=433900#p433900
        [f1f32d3d]

2022-07-24 Nicolas Pomarède

        Much more precise function to convert CPU clocks to YM2149 clock,
        fix some STE sound glitches Previous method using floating point was
        not always accurate in STE mode and accumulated too much error after
        a while. This new method will cover both STF and STE/TT/Falcon 
        clocks' conversion using only integer operation and no rounding
        spreading over time
        [f91714f2]

2022-07-23 Nicolas Pomarède

        Improve TT mode video counter at $FF8205/07/09 by taking nHBL into
        account
        [8bb87e4d]

2022-07-23 Thomas Huth

        Move deprecation section to the top
        [0c3a00e9]

2022-07-23 Thomas Huth

        Make sure to update video counter in TT mode
        [1519ca08]

2022-07-15 Eero Tamminen

        Update documentation for VDI min alignment fix
        [10df923c]

2022-07-14 Thomas Huth

        Screen width must be a multiple of 16 in VDI resolution modes

        Bitplanes are interleaved in chunks of 16 pixels, so it does not
        make sense to allow alignments less than 16 here. This fixes a bug
        reported by GoKMasE here:
        https://www.atari-forum.com/viewtopic.php?p=435522#p435522 where the
        right 8 pixels of the screen are not right when running Hatari with:

         hatari --machine tt --vdi on --vdi-width 1280 --vdi-height 960
        --vdi-planes 4

        Hatari wrongly sets the screen size to 904x672 in this case - and
        904 is not divisable by 16, so the final pixels of each line get
        messed up.

        Fixes: 918580938908 ("Allow VDI mode to emulate devices with smaller
        screens")
        [508c4cd3]

2022-06-18 Thomas Huth

        Use the internal (WinUAE) disassembler in Disasm_GetNextPC()

        This way we can be sure that the next PC value really really matches 
        the CPU emulation, and we make this function independent from the
        "external" disassembler (which we want to get rid of / replace).
        [00a841d9]

2022-07-10 Thomas Huth

        Remove the hack of undefining REG_A0 by avoiding to include signal.h

        signal.h pulls in sys/ucontext.h which defines REG_A0 again on
        RISC-V. To avoid that we run into similar problems again in the
        future, we should rather avoid including signal.h and m68000.h in
        the same files. Currently, this only happens in src/cpu/debug.c, and
        we don't even need the stuff from signal.h there, thus let's simply
        drop the inclusion of signal.h there, then we can remove the REG_A0
        hack from m68000.h again.
        [b13a6f18]

2022-07-10 Eero Tamminen

        Add more info on Hatari freeze with ETOS v1.1 / XaAES
        [0e4ae9a8]

2022-07-09 : *** Version 2.4.0 ***

2022-07-09 Nicolas Pomarede

        New release 2.4.0, update dates in corresponding files
        [26c353ed]

2022-07-09 Nicolas Pomarede

        Remove wrong 'if' block for CPU's data cache (was a bad merge with
        WinUAE's sources)
        [ef494ab3]

2022-07-03 Thomas Huth

        Update broken/obsolete hyperlinks
        [787c04ac]

2022-07-03 Thomas Huth

        Fix typos
        [120c62a5]

2022-07-01 Nicolas Pomarede

        Fix a case in CE mode when reading timer b counter at the same time
        counter is changing This special overlapping case is not needed
        anymore in CE mode as we now call MFP_UpdateTimers() just before
        reading the content of $fffa21, which means
        MFP_TimerB_EventCount_Interrupt() will also be called if needed and
        TB counter should already be correct
        (really fix flickering bottom overscan in the menu of the 'Union
        Demo')
        [1eef08ac]

2022-07-01 Nicolas Pomarede

        Fix wrong timer B position in CE mode when changing video freq and
        using new cycInt code Video_AddInterrupt() needs to call
        Video_GetPosition_CE() to take into account how many cycles were
        already processed in the current opcode to start the next timer B at
        the correct position
        (fix flickering bottom border during 'Screen 1' in the 'B.I.G. Demo'
        by TEX)
        [1900f630]

2022-06-30 Nicolas Pomarede

        Reset Video_GetPosition_ForceInc at the end of
        Video_InterruptHandler_EndLine()
        [cc678e35]

2022-06-29 Nicolas Pomarede

        Add a special case for CYCLES_COUNTER_VIDEO when Timer B handler is
        called from MFP_UpdateTimers() This is similar to the change
        ed1dafc5 from 2022/05/21 for HBL interrupt This case should be
        removed later when we replace CYCLES_COUNTER_VIDEO with
        CyclesGlobalClockCounter
        (fix flickering bottom overscan in the menu of the 'Union Demo'
        [a24e1477]

2022-06-27 Nicolas Pomarède

        Fix building on RISC-V (patch Tien Hock Loh) REG_A0 is already
        defined in RISC-V's header, which conflicts with our enum type
        [952c5292]

2022-06-25 Eero Tamminen

        Log byte writes in addition to reads for "midi" trace
        [47459bca]

2022-06-19 Eero Tamminen

        Fix MIDI read error logging

        It turned out I had misunderstood badly worded Glibc fgetc() manual 
        page.  Thomas pointed out much more precise POSIX text, which 
        explicitly states fgetc() returning only EOF on errors.

        => Change error logging to use errno, and call clearerr()
          only when EOF is due to operations on that stream

        Fixes: 1c415e4c4b
        [8783363a]

2022-06-25 Eero Tamminen

        Correct build issue with ifdeffed out lilo code
        [a9a7771f]

2022-06-25 Eero Tamminen

        Add kernel patch to avoid misleading backtraces

        And update backtraces in the m68k-linux doc accordingly.
        [c8f63462]

2022-06-25 Eero Tamminen

        Update m68k-linux config + doc to v5.18

        Debian links are updated to currently existing files, but steps for
        building m68k Debian rootfs were not tested this time.

        Also change "it's" -> "it is" etc for consistency with other docs.
        [c2f92914]

2022-06-25 Eero Tamminen

        Minor improvements to Linux MIDI doc
        [870ea291]

2022-06-25 Eero Tamminen

        Update Calamus compatibility info

        Christian Zietz bisected EmuTOS and found things breaking when
        EmuTOS added similar GDOS stubs as what real TOS versions provide,
        and Calamus working with GDOS present.  Thanks!

        Checked that Calamus worked with previous Hatari release + added dl 
        links.
        [986e9c92]

2022-06-24 Eero Tamminen

        Update EmuTOS compatibility notes

        Add debuggers, MIDI programs and large resolution GEM programs.
        [374b718b]

2022-06-25 Eero Tamminen

        Update MIDI, Calamus and MiNT compatibility notes
        [3c9ba538]

2022-06-24 Eero Tamminen

        Update information on EmuTOS variants and versions

        * Add info about new 1024k version
        * Use "variant" term for different sizes, "version" for versions
        * Use variant size suffix consistently (...k, not .../...K/...KB)
        * Simply info about needed min versions
        [213d9cc1]

2022-06-24 Eero Tamminen

        Update compatibility info for programs with MMU notes

        Several of the programs tested long time ago to work only with MMU, 
        do not need that any more (even wit 2.3.1).
        [bc1a5f84]

2022-06-24 Eero Tamminen

        Also MMU emulation uses more host CPU
        [00f5a568]

2022-06-21 Eero Tamminen

        Add X-perience Falcon demo to compatibility lists

        Issue reported by Laurent.
        [74cc3105]

2022-06-17 Eero Tamminen

        Fix handling of unterminated NF strings

        Fixes: b2a81850 (introduced in 2.3.0)

        Thanks to Thorsten Otto for noticing this from the sources!
        [605f2152]

2022-05-12 Eero Tamminen

        Add "--country" option for NVRAM-less machines with EmuTOS

        Added also option helper function for country codes now that there
        are 3 options needing it, and split TOS_ShowCountryCodes() off from 
        TOS_ParseCountryCode() for better option error reporting.

        Noted in NVRAM layout option what are potential issues when either 
        that, or this new option changes TOS keyboard layout.
        [8d0a7ce7]

2022-06-15 Eero Tamminen

        Fine-tune SDL GUI CPU dialog texts and keyboard shortcuts

        Be more explicit that options increase *host* CPU usage, to avoid 
        users thinking them making emulated system slower instead of faster. 
        And remove confusing "slower" note from manual on these options.

        Changed also keyboard shortcuts to be on first letters of (first) 
        words when possible, and removed extra space from the boxes to make 
        them better balanced visually & more consistent with System dialog.
        [b9af9b58]

2022-06-18 Eero Tamminen

        EmuTOS compatibility updates
        [ce8058b9]

2022-06-18 Eero Tamminen

        Compatibility list updates

        Tron2001 demo works nowadays without IDE being enabled. FlaySID has
        regressed significantly.
        [36276d2b]

2022-06-17 Eero Tamminen

        MIDI error handling and logging improvements

        * Reads can get also other errors than EOF
        * Skip read error messsages on EOF. Successful reads are already
         traced so it's enough for EOF to be just lack of output
         (instead of constant stream of read error messages)
        * Tell whether file access is buffered or not
        [1c415e4c]

2022-05-12 Eero Tamminen

        Take NVRAM language default from the LANG environment variable
        [6a3705d1]

2022-06-17 Eero Tamminen

        Support more Hatari options in Python UI machine dialog

        Add support for setting CPU compatibility + cycle-accuracy,
        +  FPU type + accuracy, MMU and ST blitter options.

        For now this still takes into account whether underlying Hatari 
        version uses WinUAE core or not.  That will be removed for next 
        release.
        [6b22537a]

2022-06-17 Nicolas Pomarede

        Fix Falcon sound quality in crossbar's emulation when mixing the
        input sources This part used a wrog value for Falcon cpu's freq
        which gave very bad result now that we use the recent cycle accurate
        YM2149 emulation A small drift remains that could alter sound after
        approx 2 hours of playing
        [b70e6935]

2022-06-17 Eero Tamminen

        Fix freeze with empty NatFeats NF_STDERR("") string

        Fixes: b2a81850 (introduced in 2.3.0)

        Thanks to Matthias Arndt for reporting the issue, and Christian
        Zietz for debugging the cause for it!
        [272b40ab]

2022-06-16 Nicolas Pomarede

        Use 50.053 VBL/sec for Falcon instead of 50 VBL/sec (same as
        STF/STE, required for accurate YM2149 emulation) For now we assume
        all Falcon video modes are based on the same number of cycles per
        VBL as an STF/STE at 50 Hz PAL, taking nCpuFreqShift into account, 
        which gives 50.053 VBL/sec for PAL This should be changed when Videl
        emulation gets improved
        [db4df0a1]

2022-06-16 Thomas Huth

        Fix the checks for the end of the video RAM

        fvram_line does not necessarily point into the STRam[] area, e.g.
        when rendering monochrome mode on ST/STE (it points to the
        FrameBuffer.pSTScreen copy there instead), so we have to look at the
        video base address instead and count whether we've hit STRamEnd
        during the rendering.

        Thanks to Christian Zietz for spotting and analyzing the problem!
        [e471a2d1]

2022-06-16 Thomas Huth

        Add a generic function to get the video base address
        [2380cd50]

2022-06-11 Thomas Huth

        Fix issues reported by shellcheck
        [d0ef984a]

2022-06-11 Thomas Huth

        Merge github pull request #20 from chainq/master

        fix using block and character devices as hardfiles on
        macOS[e66dba96]

2022-06-07 Nicolas Pomarède

        Update docs for Falcon's clocks : CLK2 (YM2149) and FCCLK (FDC) are
        coming from DSP 32MHz clock
        [5a1b80b3]

2022-06-06 Nicolas Pomarede

        Allow compilation when using old CycInt code
        [85d8ca63]

2022-06-06 Nicolas Pomarede

        When running CPU in CE mode currcycle should be reset in main run
        loop before calling CycInt_Process() If not, currcycle was wrongly
        counted twice when using Cycles_GetClockCounterImmediate() which
        gave wrong timings when adding internal CycInt timers This partially
        restores Falcon's sound quality that was bad since using new CycInt 
        and new cycle accurate YM2149
        [f94be3e2]

2022-06-05 Eero Tamminen

        Update Falcon demo compatibility info

        * Added "Mars DSP"
        * Enraged has improved (already in 2.3.1)
        * Sonoluminenz has regressed since 2.3.1
        * Updated demos having major issues to being tested with 2.4
        * Updated descriptions for some of the demos
        * "2.4-dev" -> "2.4"
        [a72ea2d6]

2022-06-05 Eero Tamminen

        Update EmuTOS Falcon compatibility info

        * Add 4orce & django1 demos + chorensa DSP version
        * Move items for EmuTOS version under which they appear to work
        fully

        For now, I retained info on whether programs work partially under 
        older EmuTOS version, but eventually that will be removed.
        [f4d22bbb]

2022-06-04 Eero Tamminen

        Fix "--fpu" option regression

        Fixes: 0fb6eaf0d
        [9fd76dd1]

2022-06-04 Eero Tamminen

        Update Falcon Addsub game and applications compatibility

        Laurent noticed that Addsub actually works, its input is just very
        restricted.  It has probably been working for a long time, but at
        least since 2.3.

        Add more info for some of the problematic Falcon applications.
        [c046297f]

2022-06-04 Eero Tamminen

        Update compatibility info on rest of problematic ST/STE demos

        According to Nicolas, Extreme Rage should have been fixed in 2.0, 
        and rest are still buggy.
        [e9d2180d]

2022-06-04 Nicolas Pomarede

        Update TT demos list
        [a5ac6636]

2022-06-04 Eero Tamminen

        Compatibility list updates

        ST demos:
        * Pandenomium works. According to Nicolas, at least since 2.3
        * Setting 3 demos to 2.4 that Nicolas indicated to be still broken

        STE games:
        * Only Dynabusters+ seems to have issue remaining

        STE demos:
        * Setting 3 demos to 2.4 that I tested and were still broken

        TT apps/demos:
        * Checked / updated everything having issues earlier

        Other:
        * Sync Hextracker entries between different machines
        [264d8e79]

2022-06-04 Eero Tamminen

        Update EmuTOS Falcon games info

        Some of the new working games actually work already with v1.1.1,
        maybe due to fixes on Hatari side?  Tested also all broken Falcon
        games for whether they would work by allowing 16-bit mode in EmuTOS
        (without there being any VDI/Line-A 16-bit support).

        And 1 STE demo update.
        [0b320c88]

2022-06-03 Karoly Balogh

        fix using block and character devices as hardfiles on macOS
        [efa220ed]

2022-06-02 Thomas Huth

        Fix location of hatari.cfg on macOS in the cmdfifo test
        [e6c2c9a5]

2022-06-02 Eero Tamminen

        Support "off" as alias to "none" for CLI options

        Got tired of typing "--dsp off" and only then remembering that 
        opposite of "--dsp" multi-select option "emu" value is "none".
        [0fb6eaf0]

2022-06-01 Eero Tamminen

        Update compatibility status for problematic Falcon games

        Slippery Sam does not need "dummy" DSP mode any more, it works fine 
        with and without DSP now.  Other problematic Falcon games did not
        show improvements, so only tested Hatari version and some of their
        info is updated for those.
        [ae520bf5]

2022-06-01 Eero Tamminen

        Update to latest EmuTOS snapshot Falcon demo/game/app status

        4 Falcon games that did not work with EmuTOS at all, work now fine, 
        one still broken game gets further, and two extra games may work,
        but Hatari Videl emulation issues prevent verifying that.
        [fb534076]

2022-06-01 Eero Tamminen

        Show Hatari output also when cmdfifo test appears to succeed

        Normally CTest hides test output. This allows debugging whether 
        cmdfile test actually works as intended, for FIFO commands that it 
        does not explicitly check, by adding "-V" (verbose) option for
        CTest.
        [59fb7403]

2022-05-31 Nicolas Pomarede

        When using 68030+MMU cycles were not correctly counted during STOP
        state, use CpuRunCycleExact
        [487f65d4]

2022-05-31 Eero Tamminen

        Update Hatari UI release notes
        [a20d55cc]

2022-05-31 Eero Tamminen

        Hatari UI display dialog layout change: VBox -> Table

        Table layout is more readable and consistent with other dialogs. 
        Dialog value getting and setting are also split to their own
        methods.
        [dcdbedde]

2022-05-31 Eero Tamminen

        Hatari UI sound dialog layout change: VBox -> Table

        Table layout is more readable and consistent with other dialogs. 
        Dialog value getting and setting are also split to their own
        methods.
        [fc4a3d5a]

2022-05-31 Eero Tamminen

        Misc Hatari UI dialog code improvements

        * Put successive checkboxes in a table into VBox
        * Drop tables column counts to 2 (rest were unused)
        * Improve label /tooltip texts and comments
        * Drop plurals from class member names
        [6e3c0d93]

2022-05-30 Eero Tamminen

        Update Hatari UI release notes
        [528a5a87]

2022-05-30 Eero Tamminen

        Improve Hatari UI machine dialog

        Using combo boxes instead of radio buttons makes the dialog clearer.
        [a0cb9ce5]

2022-05-30 Eero Tamminen

        Add Hatari UI dialog table combo box helper and use it
        [fda57212]

2022-05-30 Eero Tamminen

        Add missing "scc" trace option to Hatari UI
        [045b9015]

2022-05-30 Eero Tamminen

        Fix: Hatari UI dialog exceptions under Wayland

        Max window size needs to be determined and cached even when Hatari 
        window is not embedded.

        Gdk does not provide primary monitor info under Wayland and whole 
        method is deprecated, so just use first monitor info:
        https://gitlab.gnome.org/GNOME/gtk/-/issues/1028
        [87265acd]

2022-05-30 Eero Tamminen

        Fix: Handle UAE disassembly + symbols output in Hatari UI debug UI
        [272ec548]

2022-05-29 Eero Tamminen

        Update SCSI + EmuTOS info in manual HW table for next release

        Next release will include EmuTOS v1.1 which provides DSP support.
        [e1a2c16c]

2022-05-29 Eero Tamminen

        Fix shellcheck warnings for debugger test script
        [83de5052]

2022-05-29 Eero Tamminen

        Fix shellcheck warnings for TOS tester screenshot-report

        "ls" is still used because that handles case of no matches
        (and "nullglob" setting is no-go as it's Bash specific).
        [1dc8f7d5]

2022-05-29 Eero Tamminen

        Fix test script name to enable cmdfifo testing

        Fixes: 1954c98fc3
        [73d9be6f]

2022-05-29 Eero Tamminen

        Apply shellcheck recommendations to top level test scripts

        And check for checkbashisms existency before trying calling it many 
        times.
        [54a936d6]

2022-05-29 Eero Tamminen

        Apply shellcheck suggestions to symbol scripts
        [bf4dc9c6]

2022-05-29 Eero Tamminen

        Apply shellcheck suggestions to symlink-busybox
        [238de945]

2022-05-29 Eero Tamminen

        Fix shellsheck warnings for atari-hd-image

        No real issues, but cleans the code a bit.
        [c3faffbd]

2022-05-29 Eero Tamminen

        Fix somewhat relevant shellcheck warnings for ring scripts

        Pids given to kill command need to be separate for things to work,
        but quoting Hatari args separately can be handled by using "$@"
        instead of
        "$args" (and "$*" in iecho to avoid another shellcheck warning).
        [44fb784d]

2022-05-29 Eero Tamminen

        Fix shellcheck warnings for zip2st
        [08eb8343]

2022-05-29 Eero Tamminen

        Fix shellcheck warnings for hatari-prg-args

        Space separated arguments are not going to do any good even when
        they are correctly forwareded, but at least this silences shellcheck 
        checks.
        [6a2643ef]

2022-05-29 Eero Tamminen

        Fix somewhat relevant shellcheck warnings for midi ring script

        Args given to Hatari and pids given to kill command need to be 
        separate for things to work though, so they cannot be quoted 
        regardless of how much ShellCheck insists on that.
        [cefbfdfd]

2022-05-29 Eero Tamminen

        Fix tester onscreen message to match its MIDI output
        [3d668159]

2022-05-29 Eero Tamminen

        Fix TOS-boot tester test program building

        Layout setting change how keys injected by hconsole scripts are 
        interpreted by TOS => enforce compatible English layout
        [dcad385f]

2022-05-29 Eero Tamminen

        List current OS specific issues in bugs.txt
        [ee3d8f44]

2022-05-27 Chris Jenkins

        Fix crash on Mac by setting size of buffer correctly

        Also switch from using strncpy to strlcpy, which should ensure that 
        the string is always null terminated.

        Fixes: b8b80c4d6b (by improving 27ec2eb04e)
        [7fa9874a]

2022-05-28 Eero Tamminen

        Fix tidy notes for Hatari UI documentation

        And improve descriptions for screenshot sections
        [5f8c22e5]

2022-05-28 Thomas Huth

        Fix some typos (discovered with codespell)
        [90706e1c]

2022-05-28 Thomas Huth

        Update docs with regards to the RS232 thread removal
        [7d5aecec]

2022-05-27 Thomas Huth

        Make sure to have python3 in some CI pipelines
        [981ead4d]

2022-05-27 Thomas Huth

        Check tidy on Fedora, too
        [e7ec0528]

2022-05-27 Thomas Huth

        Get rid of the thread in the rs232 code, use polling instead

        The thread in the rs232 could cause deadlocks since we switched to
        SDL2 that does not have the SDL_KillThread() function anymore. Thus
        let's get rid of the thread code here now and use polling instead
        (like we do it in the midi code already).
        [4802502e]

2022-05-24 Eero Tamminen

        Install Python UI documentation to DOCDIR

        Update Python UI code document links accordingly, and add menu item
        for Hatari bugs list.
        [ac00bf2a]

2022-05-24 Eero Tamminen

        Add Hatari Python UI documentation

        eerott.mbnet.fi site is going away after next release (in fall), so
        documentation needs to be updated before release.  By adding 
        relevant pieces to Hatari repo.
        [07436c1b]

2022-05-24 Eero Tamminen

        Move hconsole doc to DOCDIR

        And comment why Debian's patch for example.py stuff is incorrect.
        [b3e87541]

2022-05-24 Eero Tamminen

        Install more of the Hatari documentatation

        Stuff that were added / split to separate files long time ago...
        [569c8703]

2022-05-22 Eero Tamminen

        Add debug symbols to WinUAE CPU core disassembly

        WinUAE CPU core appends provided symbol name (associated to given 
        instruction memory address) to its disassembly output.
        [62331b8e]

2022-05-23 Nicolas Pomarède

        Update authors.txt
        [2e479f70]

2022-05-23 Nicolas Pomarède

        Allow compiling macOS version if PortMidi is not available (patch by
        Chris Jenkins)
        [33312a16]

2022-05-22 Eero Tamminen

        Fix profile data saving for WinAUE CPU code debugger output

        It's Hatari debugger's role to tell post-processing tools how to
        parse given disassembly output, what regexp to use to get profiling
        data and its memory address from the disassembly.
        [9d1a5075]

2022-05-22 Eero Tamminen

        Fix SDL GUI MIDI port name setting

        According to Atari-forum post, it can crash on Mac:
         https://www.atari-forum.com/viewtopic.php?p=427678#p427678

        Remove obsolete asserts and use strlcpy() to make sure setting
        buffers are not overflown.

        Note: I have no idea how the overflow crash could have happened as 
        FILENAME_MAX is supposed to be something like 1KiB on Mac and so 
        having PortMidi names longer than that sounds very unlikely.

        PS. I also changed port name buffer sizes to something more
        reasonable than FILENAME_MAX, as prefix match is enough for current
        code, if there's no exact full mach.
        [b8b80c4d]

2022-05-22 Eero Tamminen

        Document Federico's earlier contribution
        [e68c1cd1]

2022-05-21 Nicolas Pomarède

        Add a special case for CYCLES_COUNTER_VIDEO when HBL handler is
        called from MFP_UpdateTimers() This is a sde effect of the new
        possibility to call CycInt_Process when accessing MFP register ; if
        the internal HBL timer expires at the same time, the value for
        CYCLES_COUNTER_VIDEO will not be updated yet and this could lead to
        wrong timings for the next HBL timer This case should be removed
        later when we replace CYCLES_COUNTER_VIDEO with
        CyclesGlobalClockCounter
        (fix flickering fullscreen end part in 'Little -ME- Demo' by
        Overlanders when running in STE mode)
        [ed1dafc5]

2022-05-20 Nicolas Pomarede

        Improve YM2149_UpdateClock_250() in the case where CPU's clock and
        YM2149's clock are different (eg STE) This fixes audio sync issues
        that could happen when playing DMA sound in STE mode
        (fix "The (fucking) (complex) Art of Profanity" by SMFX / DHS)
        [1f37d386]

2022-05-19 Nicolas Pomarede

        Really fix wrong counting of remainder cycles in
        YM2149_UpdateClock_250() (previous commit 9a842cd4 had fix disabled)
        [062f1ce9]

2022-05-19 Nicolas Pomarede

        Fix YM2149_UpdateClock_250(), some remainder cycles were wrongly
        counted, altering the generated samples freq With a chosen audio
        ouput of 44100 Hz, this generated a wrong samples freq of approx
        44093 Hz. This gave hearable video/sound synchro problems when
        recording an AVI file after 5 minutes or more Thanks to Evil/DHS for
        pointing this bug
        [9a842cd4]

2022-05-19 Nicolas Pomarede

        Merge branch 'master' of https://git.tuxfamily.org/hatari/hatari
        [dfd9a232]

2022-05-19 Nicolas Pomarede

        Add some stats to measure the accuracy of the emulated sound +
        update some comments When Sound_Stats_Show() is enabled, it will
        display the emulated sound frequency on every VBL, compared to the
        chosen audio output freq (eq 44.1 kHz). The emulated freq should be
        as close as possible to the audio output freq and should not deviate
        over time
        [387a412f]

2022-05-18 Nicolas Pomarede

        When using --avi-fps we must take into account the emulated number
        of VBL per sec For example --avi-fps 50 should write a value of
        50.053 fps in the avi file for an STF running in PAL mode
        [cf797066]

2022-05-07 Thomas Huth

        Fix some typos (discovered with codespell)
        [842fbe19]

2022-05-07 Thomas Huth

        Mention the DMA sector count and GCopy in the TODO list
        [c2cd8a86]

2022-05-05 Nicolas Pomarede

        Update release notes
        [698e8400]

2021-02-11 Eero Tamminen

        Allow GEMDOS tasks to use other tasks' file handles

        When GEMDOS tasks are identified by their basepage address.

        Fixes Fseek() issues in We Were @ demo HD version under GEMDOS HD 
        emulation.
        [252d08f0]

2021-09-08 Eero Tamminen

        Add "PConSymbol" debugger variable

        To trigger breakpoint on each symbols (e.g. ones that have been
        loaded for that particular purpose).
        [51c76cc0]

2022-04-25 Nicolas Pomarède

        Simplify cc replacement in disasm (from WinUAE 2022/04/25)
        [ed7e92c3]

2022-04-25 Eero Tamminen

        Tell in which phase of parsing profile post-processing is
        [f97cee9d]

2022-04-25 Eero Tamminen

        Improve debugger manual program breakpoints description

        To better clarify: https://www.atari-forum.com/viewtopic.php?t=41804
        [dc0dccd6]

2022-04-22 Nicolas Pomarede

        Increase szTracks to silence gcc warnings We only use 3 chars as
        nTracks can't go behind 85, but this gives some warnings :
          sprintf(szTracks, "%i", nTracks); gui-sdl/dlgNewDisk.c:136:44:
        warning: '%i' directive writing between 1 and 11 bytes into a region
        of size 3 [-Wformat-overflow=] gui-sdl/dlgNewDisk.c:136:43: note:
        directive argument in the range [-2147483647, 2147483647]
        [6fe43df9]

2022-04-22 Nicolas Pomarede

        Use snprintf instead of _tcsncpy to remove a gcc warning about null
        terminated string
        [7d5d536f]

2022-04-22 Eero Tamminen

        Fix illogical variable usage

        If it's named as MBs, it should contain MB value. Changed also
        variable name to match one used in the opposite function.
        [ca614079]

2022-04-22 Eero Tamminen

        Remove explicit WinUAE core mentions from debugger manual

        Now that OldUAE core is dropped, distiction is not relevant.
        [5425a5aa]

2022-04-22 Eero Tamminen

        Update 1024 MiB TT-RAM limit to documentation

        Also change all MB mentions to MiB for consistency.
        [66f52358]

2022-04-22 Eero Tamminen

        Increase max TT-RAM amount to 1024 MiB

        As requested in in atari-forum thread, pointing out HW modification
        allowing this amount of TT-RAM: 
        https://www.atari-forum.com/viewtopic.php?t=41770
        [8302d8e3]

2022-04-18 Nicolas Pomarède

        C TRY/STOPTRY fix (from WinUAE 4.9.1+ 2022/04/15)
        [7c8ed67c]

2022-04-18 Nicolas Pomarède

        Update debug/disasm (from WinUAE 4.9.1+ 2022/04/14)
        [0aa76c1b]

2022-04-18 Thomas Huth

        The 'Strange screen size' message is not really critical, decrease
        level to INFO
        [8298cb73]

2022-04-17 Thomas Huth

        Relax the check for TOS versions a little bit

        There are apparently ROM images of MagiC available which use version 
        6.20 in the ROM header. Relax the TOS version check a little bit so 
        that these could be used, too.
        [17e2ac50]

2022-04-08 Nicolas Pomarède

        B230400 is not defined on all systems, ensure compilation works
        anyway
        [3b2ebaed]

2022-04-08 Nicolas Pomarède

        Fix MFP timings when MegaSTE runs at 8 MHz instead of 16 MHz Fix
        fullscreen end part in 'Little -ME- Demo' by Overlanders when
        running in MegaSTE mode
        [87877c9c]

2022-04-08 Nicolas Pomarede

        Add missing include for PRIx64 macro
        [27ad9aa9]

2022-04-08 Nicolas Pomarede

        Improve YM2149 250 kHz clock when CPU freq is changed on the fly 
        Previous method to compute YM2149_Clock_250 was not correct, it made
        the sound silent for several seconds when CPU freq was increased. 
        This fixes 'Little -ME- Demo' by Overlanders when running in MegaSTE
        mode and CPU goes from 8 to 16 MHz during the 3D part.
        [ad1687ff]

2022-04-03 Eero Tamminen

        Update release notes

        * Uwe's SCSI improvements
        * "info mmu" support
        * fine-tuning
        [ae713e90]

2022-02-12 Eero Tamminen

        More info on demos broken with EmuTOS

        Plus some reformatting for consistency.
        [68be1d53]

2022-04-03 Thomas Huth

        Add an 'info mmu' debugger command
        [14013d46]

2022-03-26 Thomas Huth

        Update .gitignore file

        Remove the old uae-cpu files and add entries that should be ignored 
        when building with the Eclipse IDE.
        [6a86f054]

2022-03-26 Thomas Huth

        Silence static analyzer warning about a suspicious semicolon
        [76a1c59e]

2022-03-26 Thomas Huth

        Fix endlessly growing try/catch stack when returning from run-loop

        STOPTRY has to be used before returning from within a TRY-CATCH
        block. Based on a patch by Andreas Grabher for the Previous
        emulator.
        [0dd726b0]

2022-03-25 Nicolas Pomarede

        Use M68000_AddCycles_CE instead of M68000_WaitState when counting
        cycles during FDC's DMA transfer
        [627e5447]

2022-03-21 Nicolas Pomarede

        More fix for detecting when VBLANK should be disabled in 50 and 60
        Hz This fixes the menu part in 'Hackabonds Demo' where vblank going
        off was not correctly detected, giving only a purple screen instead
        of the main menu. Thanks to Troed and Ijor for their input on these
        values
        [75c13ec7]

2022-03-20 Thomas Huth

        Fix coding style (indent with tabs, and put curly braces on new
        lines)
        [52daeeaf]

2022-03-17 Uwe Seimet

        Fix HD_REPORT_LUNS handling

        Replaces magic constants (opcodes) by existing definitions. Add
        missing check for HD_REPORT_LUNS in HDC_WriteCommandPacket().

        [Modified by Thomas : Cut the patch out of a bigger patch by Uwe,
        and adjusted the commit message]

        Fixes: dbc4ae4abf58 ("Add support for the 'REPORT LUNS' command")
        [a0917fec]

2022-03-17 Uwe Seimet

        Added header to mode pages

        The mode pages were missing the header required by the SCSI
        specification.
        [0d3939f2]

2022-03-19 Thomas Huth

        Fix more broken links in the documentation
        [0304b8a9]

2022-03-19 Thomas Huth

        Fix broken links to http://atari-ste.anvil-soft.com/
        [64db45e9]

2022-03-18 Nicolas Pomarède

        Fix bad offset in CycInt_AddRelativeInterruptWithOffset (fix commit
        d5a2aacab6 from 2022/03/09)
        [beb6df00]

2022-03-18 Nicolas Pomarede

        Update comment for video timings
        [4170f64d]

2022-03-18 Nicolas Pomarede

        Fixes new version of CycInt_ModifyInterrupt for updating the VBL
        timer This fixes the main menu in 'Hackabonds Demo' where internal
        VBL timer was not correctly updated
        [c50c87bb]

2022-03-14 Nicolas Pomarède

        Add missing parameter when compiling with old cycInt code
        [c895a8b5]

2022-03-14 Nicolas Pomarede

        Update mode page 0x3f to return all available pages in the order
        requested by the SCSI specification (patch by Uwe Seimet) Note from
        Uwe : This patch updates mode page 0x3f to return all available
        pages in the order requested by the SCSI specification (i.e. page 0
        last).

        IMO the implementation of mode page 0x04 is wrong. It is definitely
        incomplete because it ignores some CDB data. In particular it does
        not check the DBD bit:

        A disable block descriptors (DBD) bit of zero indicates that the
        target may return zero or more block descriptors in the returned
        MODE SENSE data
        (see 8.3.3), at the target's discretion.  A DBD bit of one specifies
        that the target shall not return any block descriptors in the
        returned MODE SENSE data.
        [097d4418]

2022-03-14 Nicolas Pomarede

        Add an hexa dump when logging the CDB fields (patch by Uwe Seimet)
        [5e0da3c1]

2022-03-14 Nicolas Pomarede

        Fix position for detecting when VBLANK should be disabled in 50 Hz 
        This fixes the intro part in 'Hackabonds Demo' where some frames
        displayed only a black screen
        [9c89406f]

2022-03-09 Nicolas Pomarède

        Improve 'MODE SENSE' command (patch Uwe Seimet) This improves MODE
        SENSE a bit, by at least returning one page instead of none when all
        are requested
        [53d9351a]

2022-03-09 Nicolas Pomarède

        Add support for the 'REPORT LUNS' command (patch by Uwe Seimet)
        [dbc4ae4a]

2022-03-09 Nicolas Pomarede

        For STE DMA sound, use STMemory_DMA_ReadByte() instead of accessing
        STRam[] directly
        [2a66d183]

2022-03-09 Nicolas Pomarede

        Use Cycles_GetClockCounterImmediate() when calling
        MFP_UpdateTimers()
        [1d539196]

2022-03-09 Nicolas Pomarede

        Remove internal cycles adjustment in MFP timer since it's now
        handled by Cycles_GetClockCounterImmediate() in CycInt functions
        [d5a2aaca]

2022-03-09 Nicolas Pomarede

        Rename CycInt_FindCyclesPassed() to CycInt_FindCyclesRemaining()
        [0da39a43]

2022-03-09 Nicolas Pomarede

        Remove AddCpuCurCycles param from CycInt_FindCyclesPassed() as we
        now use Cycles_GetClockCounterImmediate()
        [ed76b27e]

2022-03-09 Nicolas Pomarede

        Use Cycles_GetClockCounterImmediate() instead of
        CyclesGlobalClockCounter to handle MFP updates This will take into
        account the current cycles already processed when MFP is updated 
        during the processing of an instruction in Cycle Exact mode
        [650979aa]

2022-03-06 Thomas Huth

        Indent with TABs instead of spaces
        [7ea2b3f9]

2022-03-02 Nicolas Pomarède

        Revert WinUAE change for 68000 IPL timing from 2021-09-27 as it
        breaks cycle accuracy for the 'STOP' instruction The 'STOP'
        instruction took 4 extra cycles since 2021-09-27, which could break
        several demos relying on cycle accurate 'STOP'
        [f95b4fbc]

2022-02-25 Thomas Huth

        Silence some "unused-but-set-variable" warnings from Clang 13
        [0ef2a576]

2022-02-22 Nicolas Pomarede

        When running in TT mode with MMU, m68k_run_mmu030 can run in CE or
        not, so update CpuRunCycleExact accordingly
        [c4ade5e5]

2022-02-20 Thomas Huth

        Allocate enough memory for runaway DMA accesses

        Instead of cluttering and slowing the video rendering code with 
        sanity checks for the end of the RAM, let's rather always allocate 
        enough memory to allow accesses beyond the end of the ST RAM.
        [5316b408]

2022-02-20 Thomas Huth

        Replace spaces with tabs in memory.c

        WinUAE switched to tabs in this file a long time ago already. So do
        the same in Hatari now.
        [dcf2e88c]

2022-02-19 Thomas Huth

        Add test that sets screen base to the end of the RAM
        [c63cbed0]

2022-02-19 Thomas Huth

        Don't crop the window to desktop resolution when running without SDL
        renderer

        Otherwise the screen surface is too small for our convertion
        functions.
        [868a4de0]

2022-02-16 Christian Zietz

        Add "Frontier: Elite 2" to compatibility list
        [e2c9e277]

2022-02-13 Thomas Huth

        Still update pSTScreen pointer in case we hit the end of the RAM
        [a2bcbcee]

2022-02-15 Nicolas Pomarede

        Use CpuRunCycleExact to access currcycle when CPU is really in CE
        mode
        [463fb625]

2022-02-12 Thomas Huth

        Sanity check for mono mode
        [0b353ce1]

2022-02-12 Thomas Huth

        Add sanity check for ST screen rendering, too
        [f83087a4]

2022-02-12 Thomas Huth

        Add sanity checks to avoid accesses beyond the end of the ST-RAM

        Otherwise Hatari could crash if the screen was going beyond the end
        of the ST-RAM.
        [c3875fc8]

2022-02-12 Thomas Huth

        Remove superfluous variable fvram_line
        [0f76e8ff]

2022-02-10 Eero Tamminen

        Update ST demos EmuTOS compatibility notes

        * Yanartas ST demo works only on STE
        * Few demos do not crash towards the end any more
        * SoWatt demo had stopped working in EmuTOS v0.9.10
        * More consistent way of listing the demo issues
        [924733b7]

2022-02-09 Nicolas Pomarede

        Fix wrong cycles count in CycInt_ModifyInterrupt()
        [2ff151e8]

2022-02-08 Nicolas Pomarede

        Update WinUAE CPU to 4.9.1 final from 2022/02/03 (no change for
        Hatari)
        [28a0c11b]

2022-02-08 Nicolas Pomarede

        Fix reported break point number (from WinUAE 4.9.0 beta9 2022/02/01)
        [2b2cc8df]

2022-02-08 Nicolas Pomarede

        Reverted 490b25 MMU CE mode cycle count update (from WinUAE 4.9.0
        beta8 2022/01/29)
        [7915944d]

2022-02-08 Nicolas Pomarede

        68020/030 CE delayed interrupt fix (from WinUAE 4.9.0 beta7
        2022/01/24)
        [78cbd437]

2022-02-08 Nicolas Pomarede

        JIT indirect/safe mode MOVEM.W bug fix (from WinUAE 4.9.0 beta1
        2021/12/18)
        [0fb219e0]

2022-02-08 Nicolas Pomarede

        Small fixes (from WinUAE 4.9.0+ 2021/12/16)
        [5bb1374c]

2022-02-05 Eero Tamminen

        Add Quaderno ST and Falcon versions to compat lists
        [62915bd2]

2022-02-06 Nicolas Pomarède

        Fix timings when restarting an MFP timer that just expired
        [e4060747]

2022-02-05 Eero Tamminen

        Add more MIDI programs to EmuTOS compat list
        [2a7775e4]

2022-01-23 Eero Tamminen

        EmuTOS compat update
        [175b878a]

2022-02-04 Eero Tamminen

        Update doc + config to m68k Linux v5.16
        [54578d49]

2022-02-04 Eero Tamminen

        Fix: LILO code ROM setup with SMALL_MEM config option
        [b96bc5a6]

2022-01-29 Nicolas Pomarède

        Fix PendingInterruptCount in CycInt_CallActiveHandler As
        CycInt_Process_Clock() can now be called by MFP_UpdateTimers(), the
        clock value when the interrupt happens is not always
        CyclesGlobalClockCounter which could give a wrong value for
        PendingInterruptCount Fix Hatari doing endless cycint loops for
        crossbar ints in Falcon mode since 2022/01/27
        [527b68f6]

2022-01-29 Thomas Huth

        Drop portaudio from the CI files, too

        And while we're at it, update the Fedora image in the gitlab CI
        [08bc35c6]

2022-01-28 Nicolas Pomarède

        When computing value of GPIP7, use Crossbar_Get_SNDINT_Line()
        instead of accessing crossbar's variables
        [2bd0ec87]

2022-01-28 Nicolas Pomarède

        For Falcon DMA sound, split SNDINT into SOUNDINT and SNDINT (as seen
        in schematics) SNDINT is connected to MFP GPIP7 and SOUNDINT is
        connected to MFP Timer A input
        [32529834]

2022-01-28 Nicolas Pomarede

        Use CpuRunCycleExact instead of currprefs.cpu_cycle_exact when we
        want to check if the CPU is running in CE mode Although
        currprefs.cpu_cycle_exact can be true when Hatari starts, it might
        be ignored when emulating specific CPU combination (for example
        68040 with MMU) but it will remains true. This could confuse
        Cycles_GetInternalCycleOnReadAccess / WriteAccess who rely on this 
        value and mistakenly used 'currcycle' when it was not available. 
        Instead, CpuRunCycleExact is only set to true when the CPU core
        really runs in cycle exact mode.
        [340fd8c1]

2022-01-27 Nicolas Pomarede

        Print the value of CyclesGlobalClockCounter when using '--trace
        cpu_disasm'
        [b0b6876b]

2022-01-27 Nicolas Pomarede

        Call MFP_UpdateTimers / CycInt_Process before accessing any MFP
        registers This ensures MFP timers are updated in chronological order
        and not after executing the current opcode (fix the game Super Hang
        On, where 'bclr #0,$fffffa0f' to clear Timer B ISR sometimes happens
        at the same time that Timer C expires, which used the wrong ISR
        value and gave flickering raster colors)
        [375360e9]

2022-01-17 Nicolas Pomarede

        Fix printf in Microwire's infos
        [5bb8c1a7]

2022-01-16 Nicolas Pomarède

        Microwire's registers should be words, not bytes, in the debugger's
        output (patch by Ben/OVR)
        [50e219ed]

2022-01-15 Thomas Huth

        Make ENABLE_SMALL_MEM the default

        We're currently considering to get rid of the ENABLE_SMALL_MEM
        switch, with a preference to have it enabled by default. Thus let's
        turn it on by default now to get some more test coverage for this.
        [3122c569]

2022-01-08 Thomas Huth

        Replace PortAudio microphone code with SDL2 audio input

        SDL2 supports microphones / audio input, too. Since we've got rid of 
        SDL1.2 recently, we don't need the PortAudio code anymore and simply 
        can use SDL2 instead.
        [38accc16]

2022-01-07 Nicolas Pomarede

        Remove unused CycInt_ResumeStoppedInterrupt() and the related
        variables in the MFP
        [64a553f1]

2022-01-07 Nicolas Pomarede

        Improve accuracy when reading MFP's Timer Data reg and don't use
        CycInt_ResumeStoppedInterrupt() anymore This correctly fixes ST
        Connexion MFP saving routine used in Punish Your Machine (which does
        some very fast start/stop on each MFP timer until it detects the
        data reg has been reloaded) by taking into account the internal
        cycles count when the CPU made the read in the MFP's registers The
        call to CycInt_ResumeStoppedInterrupt() should be removed as there's
        no "resume" inside the real MFP, it's only stop/start and enough
        emulation's accuracy to compute the correct data reg value
        [53bd1a54]

2022-01-06 Eero Tamminen

        Remove Hatari v1.x config examples for constrained devices

        These devices are over decade old now and do not support SDL2 
        required by Hatari now.
        [066efd4f]

2022-01-06 Thomas Huth

        Remove support for Windows CE

        Windows CE is dead since years, and used SDL 1.2 which we now don't
        support anymore, so it does not make sense to keep this code in our
        sources.
        [304cc293]

2021-12-12 Eero Tamminen

        Fix: avoid key release event from SDL GUI closing leaking to
        emulation

        Return and Escape keys do not need to repeat on SDL GUI
        interactions, so acting only on their release is fine.

        If Space key not repeating any more turns out too annoying, we can 
        revert that part and just tell people to use mouse, joystick, or 
        Return / Escape key, instead of selecting the highlighted OK /
        Cancel button with Space key, to exit SDL GUI...
        [6468198d]

2021-12-15 Eero Tamminen

        Fix obvious typos in previous commit shown by troed's builder
        [697f0b04]

2021-12-13 Eero Tamminen

        Mac GUI code update for Midi_Host_GetPortName() change

        TODO: somebody with a Mac needs to verify that this works.
        [42e27d45]

2021-12-14 Eero Tamminen

        Improve code for PortMidi devices handling

        Get rid of several PortMidi related global variables by rewriting 
        related SDL GUI code, to query device file names from PortMidi on
        each device change.

        Unfortunately this does not help Hatari being able to use MIDI
        devices added while it is running, because getting current PortMidi
        to rescan devices would require calling Pm_Terminate() and
        Pm_Initialize().

        However, that would mess current MIDI connection state, so Hatari
        will do that only on startup.  I.e. seeing new MIDI device still
        needs Hatari restart.

        PortMidi promises not to change device indeces after PmInitialize(), 
        but if a future version could append new devices after existing
        ones, new devices would now show up in Hatari without need for
        re-start.
        [eb4722a5]

2021-12-12 Eero Tamminen

        Re-order code to reduce indentation in Midi_BuildEvent()
        [7fd4e221]

2021-12-14 Eero Tamminen

        Use prefix match for MIDI device name if there's no exact match

        Device names for e.g. software synthetizer applications, can include 
        app instance specific part in it, such as port or process ID, which 
        changes between app invocations. That makes device name saved to 
        configuration file earlier, less likely to work later on.

        This patch works on assumption that these instance IDs are appended
        to the end of the device name, and changes code to do prefix match
        if there's no exact device name match.  This works nicely e.g. with
        Linux Qsynth.
        [17751eca]

2021-12-14 Eero Tamminen

        MIDI: minor updates to documentation
        [9c61bd4e]

2021-12-14 Eero Tamminen

        MIDI: log PortMidi host error details / improve trace info

        And update bugs.txt with the findings.
        [af315d62]

2021-12-14 Eero Tamminen

        hconsole: accept non-integer values for sleep command
        [3937bfe2]

2021-12-12 Eero Tamminen

        Fix: MIDI IRQ needs to be re-enabled on re-init

        Midi_UnInit() removes the IRQ, but Midi_Init() does not set it, only
        Midi_Reset() does, which was called only on emulation resets.

        Midi_Reset() cannot be called from Midi_Init() itself because that 
        gets called also before emulation and interrupts are running, so it 
        needs to be called in addition to Midi_Init() when there's no 
        associated reset.

        From Nicolas: Variables reset in Midi_Reset() in addition to
        starting the timer is same as reseting any bytes that were currently
        in transit
        (ie we didn't receive all 8 bits yet), which should be acceptable
        when midi device is changed on the fly.

        (Add also few TODOs for PortMidi related variables that would be
        good to reset on MIDI device change.)
        [ef2540b2]

2021-12-13 Eero Tamminen

        Improve MIDI tracing

        - Move MIDI IRQ & register read/write trace output to separate
         "midi_raw" option, as that output being triggered just by moving
         mouse messes up debugging rest of MIDI funcionality
        - Log PortMidi device open failures
        [61634f20]

2021-12-11 Eero Tamminen

        Fix PortMidi erroring on invalid MIDI event data

        And add trace output for parsed MIDI events.

        Cleaned up version of a fix provided by FedeUlivi/federik0:
        https://github.com/hatari/hatari/pull/18
        https://www.atari-forum.com/viewtopic.php?p=426400#p426400

        + documentation update.
        [65551f7f]

2021-12-11 Eero Tamminen

        Remove notes of obsolete EmuTOS issues

        Checked with EmuTOS v1.1, like to have been fixed before v1.0.
        [9d2c1118]

2021-12-06 Nicolas Pomarède

        Update WinUAE CPU to 4.9.0 final from 2021/12/06 (no change for
        Hatari)
        [5e763397]

2021-12-06 Nicolas Pomarede

        Remove old 'quit' code from 2008-12-27, not needed anymore and cause
        crash with new CycInt code when doing CTRL+C in Hatari
        [de63988f]

2021-12-05 Nicolas Pomarède

        Use PRIu64 instead of %lu to printf Uint64 variables
        [489cac47]

2021-12-05 Nicolas Pomarède

        New improved code to replace CycInt functions, using double linked
        list for faster results Depending on situations, this can bring a
        gain of 10% to 60% in emulation speed.
        [12495caf]

2021-12-05 Eero Tamminen

        Document keyboard layout and language options
        [7c701c53]

2021-11-20 Eero Tamminen

        Get DebugInfo_PrintOSHeader() language name from array in tos.c

        As that has more user-friendly names.

        The new TOS_LanguageName() function could have later also other use.
        [69d74e48]

2021-11-19 Eero Tamminen

        Add language + kbd layout command line options

        Which for now relies on earlier setting NVRAM functionality.
        [284132f9]

2021-11-19 Eero Tamminen

        Set NVRAM language & layout based on config variables
        [89db4be9]

2021-11-20 Eero Tamminen

        Add TOS language / kbd layout / country code defines
        [55c3b9a0]

2021-12-05 Eero Tamminen

        Note that --keymap fallbacks to symbolic keymapping

        It's not enough to state that just in SDL GUI keyboard section.

        Note: I cannot document to what Atari keyboard layout the symbolic 
        keys are mapped.  It seems mostly UK mapping, but e.g. SDLK_HASH
        ('#') is mapped to position used on German & Czech keyboards (0x29),
        not to position used either by US (0x04) or UK (0x2B) keyboard.
        [081efbeb]

2021-11-30 Nicolas Pomarede

        Improve value of MFP GPIP bit 7 in the case of STE/TT mode (video
        mono XOR dma sound xsint) This fixes the DMA sound music used in
        'Chambers Of Shaolin' intro when running in STE mode with 1MB RAM
        (thanks to Grazey for the report)
        [8c10cfd2]

2021-11-28 Eero Tamminen

        Update m68k linux config & notes to v5.15

        Add also more info to MMU + prefetch / cache emulation issue, and
        update EmuTOS link to v1.1.1.
        [167c591e]

2021-11-23 Nicolas Pomarede

        disasm_init() should be called before any disasm is done (complete
        commit from 2021/09/27)
        [71c64c74]

2021-11-20 Eero Tamminen

        options.c comment and white space improvements

        - Use empty line between option sections both in defines & struct
        - Add missing comments for defines option sections, and remore
         now redundant WinAUE options comment
        - Remove trailing white space
        [9468d464]

2021-11-04 Eero Tamminen

        List also SDL key codes, not just scancodes
        [e3292428]

2021-11-04 Nicolas Pomarède

        Update WinUAE's version
        [4fe0078b]

2021-11-04 Nicolas Pomarède

        Disassembler BT -> BRA fix also modified other cc type instructions
        (from WinUAE 4.9.0 beta38+ 2021/11/04)
        [3f2eedb8]

2021-11-04 Nicolas Pomarède

        Various WinUAE changes (not used in Hatari) (from WinUAE 4.9.0
        beta38 2021/10/23)
        [c180644e]

2021-11-04 Nicolas Pomarède

        In IKBD_SendRelMousePacket() handle threshold x/y parameters from
        IKBD $B command (set mouse threshold) These 2 parameters were not
        taken into account so far in IKBD_SendRelMousePacket()
        [f2cde52d]

2021-11-01 Nicolas Pomarède

        Patch by Thorsten Otto to use some constants' names instead of
        direct numerical values
        [a83b572f]

2021-11-01 Nicolas Pomarède

        Fix handling of deltax/deltay parameters for IKBD $A command (set
        mouse keycode mode) These 2 parameters were not taken into account
        so far, which would make mouse reporting too frequent when using
        larger values for deltax/deltay (thanks to Thorsten Otto for
        reporting it)
        [7643f788]

2021-10-12 Eero Tamminen

        Add Chipo Django 1 to compat lists

        From Deadline 2021 party.

        For now filed to Falcon section as Falcon Videl emulation has issues 
        with it.  Falcon issue goes away once demo gets separate (256-color) 
        Falcon version (at which point demo can be listed both under STE & 
        Falcon sections).
        [4f2f5483]

2021-09-14 Eero Tamminen

        Add few SV2021 games to emutos compat list

        And move few STE enhanced games under STE heading for consistency.
        [35e85b0e]

2021-09-03 Eero Tamminen

        Improve MIDI doc

        Tell how to set up also MIDI input with PortMidi, and tell to check 
        bugs.txt.  Reformat two sections in rest of doc to fit into 80 cols.
        [47179086]

2021-09-04 Eero Tamminen

        More info on PortMidi issue
        [35cf4144]

2021-10-31 Eero Tamminen

        Add "listkeys" key mapping helper tool back

        Partially reverts commit f657871e8, and updates the helper to SDL2.
        [5b555770]

2021-10-14 Eero Tamminen

        Change define to ARRAY_SIZE()
        [218f7cad]

2021-10-24 Eero Tamminen

        Fix hatari-prg-args typo

        And remove redundant shift.
        [e8e3472d]

2021-10-23 Eero Tamminen

        Misc updates to debugger command descriptions

        - Better logfile command description
        - Use <> and [] consistently for command parameters
        - Note that step and next commands nowadays repeat on Enter
        - Make CPU & DSP register commands consistent with each other
        - Improve disassembly command descriptions
        [a64fdc46]

2021-10-20 Eero Tamminen

        Remove screen.c::Screen_WantToKeepResolution() wrapper

        It was added in fd98b9a8b to abstract SDL2 & SDL1 differences, but
        is now redundant and wasn't used consistently any more.
        [643ae150]

2021-10-20 Eero Tamminen

        Screen_SetSDLVideoSize() can be static nowadays

        Also remove redundant initialization for "prev_quality".

        (Static vars default to 0, and on first call to this function SDL 
        surface is being created, so setting of fitlering is enforced
        anyway.)
        [bfeb35a8]

2021-10-16 Thomas Huth

        Document the Num Lock cursor mode
        [98ead80d]

2021-10-14 Eero Tamminen

        Debounce keys should also be uint8_t

        (Missed in previous commit)
        [07f00cbc]

2021-10-10 Eero Tamminen

        Use uint8_t consistently for ST scancode

        ikbd.c, Keymap_KeyDown() & Keymap_KeyUp() use uint8_t, so return
        that from the the mapping functions.  Inspired by Vincent
        Barrilliot's patch.

        Also change unsigned return value from -1 to 0xff (ST_NO_SCANCODE
        define).
        [c66b68b9]

2021-10-10 Eero Tamminen

        Remove SDL v1 compatibility defines for SDL key names and types
        [2c706bd0]

2021-10-10 Eero Tamminen

        Use common helper function for modifier key checking

        Extracted from Vincent Barrilliot's patch, switched to SDL v2 
        defines and documented.
        [b1287de4]

2021-10-10 Eero Tamminen

        Add consts + doc updates to keymap.c functions

        Partly based on patch by Vincent Barrilliot
        [0bfdd893]

2021-10-10 Eero Tamminen

        Use LOG_TRACE_LEVEL instead of LogTraceFlags

        Like everything else already does.
        [1f3a3955]

2021-10-10 Thomas Huth

        Use Str_Alloc to allocate string memory
        [de6c5476]

2021-03-20 Václav Lipert

        GUI - Better UP dir button behavior on Windows
        [597da3ae]

2021-10-10 Thomas Huth

        Fix typo - it's about a drive, not a driver
        [0566de61]

2021-10-10 Eero Tamminen

        Show more key info in SDL key tester

        Show key event scancode value and name in addition to its symbolic
        key value and name, and show values both in hex and decimal for
        convenience.

        As there are more fields, add a header showing what they are, which 
        allows removing the repeated "modifiers" text.
        [95945e5f]

2021-10-09 Eero Tamminen

        Update VDI options documentation + release notes

        Note: Screen Dialog section in manual seems completely out of date,
        it refers to (non-VDI mode) limitations, and features related to
        those limitations, that have gone mostly away with SDL v1 support...
        [d9580ea5]

2021-10-09 Eero Tamminen

        Fix: show only valid VDI mode sizes in SDL GUI

        By applying all applicable VDI mode limits to size changes.

        This means that when user changes either VDI mode width or height, 
        either of them, or both, may change in response when total VDI mode 
        screen size max limit is crossed.

        For UI interaction consistency and size change speed, 16 pix is
        always used as the increment although VDI mode would support smaller 
        alignments.
        [f113bfb3]

2021-06-28 Eero Tamminen

        Allow VDI mode to emulate devices with smaller screens

        Change minimum VDI mode size to 320x160 and allow this even for
        monochrome resolutions.

        With the VDI mode fix in Hatari v2.2.1, smaller VDI screen size
        alignments seem also to work fine, so relax them:
        * width: 128/planes -> 16/planes
        * height: 16 -> 8

        And move those to defines in vdi.h so that SDL GUI can also use
        them.

        FYI: this allows testing GEM applications for m68k (compatible) 
        devices that got recently support in EmuTOS, either directly:

        * Apple Lisa with 720x364 mono screen:
         https://en.wikipedia.org/wiki/Apple_Lisa

        Or through external patches:

        * Alphasmart Dana with 560x160 mono screen:
         https://en.wikipedia.org/wiki/AlphaSmart#Dana
        [91858093]

2021-10-04 Nicolas Pomarede

        Yet another 68000 IPL timing update (from WinUAE 4.9.0 beta36
        2021/10/03)
        [f5756285]

2021-10-03 Nicolas Pomarede

        Adjusted 68000 IPL sampling timing (from WinUAE 4.9.0 beta35
        2021/09/28)
        [20f2f126]

2021-10-03 Nicolas Pomarède

        Add 32 CPU cycles when the FDC's DMA FIFO is filled from RAM or
        transferred to RAM When DMA if accessing the FIFO, the CPU won't be
        able to access the RAM during this time and should be stalled during
        32 cycles. This means accessing the FDC should alter timings
        sensitive programs (rasters or overscan for example)
        [9dc550b0]

2021-10-01 Nicolas Pomarède

        Another 68000 IPL poll timing update (from WinUAE 4.9.0 beta35+
        2021/10/01)
        [dff4eb02]

2021-10-01 Nicolas Pomarède

        uae_s32/uae_u32 type change update #2 (from WinUAE 4.9.0 beta35+
        2021/10/01)
        [2dbbdc2e]

2021-09-30 Nicolas Pomarède

        Remove some printf warnings
        [7f86cc83]

2021-09-29 Nicolas Pomarède

        uae_s32/uae_u32 type change update + remove some Hatari's specific
        #ifdef (from WinUAE 4.9.0 beta35+ 2021/09/29)
        [bd8b7e65]

2021-09-29 Nicolas Pomarède

        Update wait_cpu_cycle_read/write (from WinUAE 2021/07/25)
        [740b943b]

2021-09-29 Nicolas Pomarède

        RESET special case (not used in Hatari) (from WinUAE 4.9.0 beta34+
        2021/09/27)
        [04e905dd]

2021-09-29 Nicolas Pomarède

        uae_s32/uae_u32 type change + remove some Hatari's specific #ifdef
        (rom WinUAE 4.9.0 beta34+ 2021/09/27)
        [3405ec7f]

2021-09-27 Nicolas Pomarède

        Disassembler BT->BRA fix (from WinUAE 4.9.0 beta34+ 2021/09/27)
        [73224308]

2021-09-27 Nicolas Pomarède

        68000 IPL timing update (from WinUAE 4.9.0 beta28 2021/09/27)
        [11752cb9]

2021-09-27 Nicolas Pomarède

        Add disasm format using disasm_flags (from WinUAE 4.9.0 beta33
        2021/09/12)
        [a2ec9c19]

2021-09-06 Eero Tamminen

        Output PC location in CPU & DSP disassembly

        And if disassembly address is misaligned at that point, correct it 
        to PC as that's where the code is going to run next.  This is to 
        make it easier to shows disassembly before PC.
        [c7f24d6e]

2021-09-18 Thomas Huth

        Fix warnings reported by Tidy
        [8aafe274]

2021-09-18 Thomas Huth

        Replace stray unicode whitespace character with a proper space to
        fix the CI
        [b02e324f]

2021-09-06 Eero Tamminen

        Repeat CPU & DSP "step" and "next" commands on Enter
        [116a8b7d]

2021-09-13 Eero Tamminen

        Simplify SDLGui_DoDialogExt() code

        - With file selector providing the returned value back to
         SDLGui_DoDialogExt() on next call, "current_object" can be changed
         from global variable to a function argument, and
        "KeepCurrentObject"
         variable removed from both

        - Doing above required fixing "retbutton" value in
         SDLGui_DoDialogExt() scrollbar event handling

        - Checking the callback is simpler to do just in one place, which
         allows removing pEventOut checks from elsewhere
        [00fa393c]

2021-09-04 Eero Tamminen

        Optimize & fix SDLGui_DoDialog() usage

        - Fileselector is the only thing using "unknown" (unhandled) events
        +
         keeping current object state (for scrollbar handling) so I renamed
         the full function to SDLGui_DoDialogExt(), and added simple
         SDLGui_DoDialog() wrapper for other dialogs

        - Added callback arg to the full function, for checking whether
        caller
         is interested about given "unknown" (unhandled) event type.  This
         way dialog does not need to be removed & re-construsted when SDL
         provides an event that nobody cares about.

          Filtering out useless events fixes SDL file selector issue
        reported
         by Miro Kropáček [1].  If unhandled event comes between mouse
        button
         pressed on a dialog button, but before mouse button is released,
         that file selector dialog button remains in a pressed state until
         user clicks on it again (even if dialog is closed and re-opened).

        [1] In Miro's case this was caused by spurious (keymap)
        configuration events which user was not aware of, so the behaviour
        was especially surprising.

        After this commit, that behaviour can still be triggered by pressing
        a key during mouse click (as file selector event type callback
        accepts unhandled keys).  Because that is an user-inflicted cosmetic
        issue, it's acceptable, unlike completely unknown SDL events.
        [a15fbee5]

2021-09-04 Eero Tamminen

        Improve dialog keyboard navigation documentation
        [e869aa68]

2021-09-06 Eero Tamminen

        Add Dread to compatibility lists

        This is also on AtariMania, but that page lacks links: 
        http://www.atarimania.com/game-atari-st-dread_38958.html

        Update also Falcon status for EmuTOS git update.
        [1dd97699]

2021-09-08 Nicolas Pomarede

        Update WinUAE CPU to 4.9.0 beta32 from 2021/09/07 (no change for
        Hatari)
        [b4c2e6de]

2021-09-02 Nicolas Pomarede

        Update WinUAE CPU to 4.9.0 beta31 from 2021/08/29 (no change for
        Hatari)
        [de7a0e8d]

2021-09-02 Nicolas Pomarede

        Fix display of dest address for Bcc instructions in disassembler
        [c0bf2e5b]

2021-08-28 Eero Tamminen

        Tracing: "none" disables xconout 2 output enabled by "os_base"

        Additionally, while this still overrides which xconout device is set 
        by the "--conout" option, that overriding is in effect now only
        while
        "os_base" tracing is enabled.

        Suggested by Christian Zietz.
        [f390222d]

2021-08-28 Eero Tamminen

        Consolidate xconout vector logic to console.c

        In preparation for next commit.
        [66ab6f57]

2021-08-25 Eero Tamminen

        Add floppy demos broken with EmuTOS + Escape Paint update

        It's the demos themselves that are buggy.  They overwrite themselves 
        in RAM or do some other senseless thing.
        [65e87752]

2021-08-08 Nicolas Pomarède

        Simplify do_cycles_ce() for 68000 in CE mode (gain ~7% in emulation
        speed) In the case of Hatari in 68000 CE mode, we don't need to
        update emulation on every subcycle as in WinUAE, so we can do all
        cycles in one call with a lighter version
        [a89fe7be]

2021-08-08 Nicolas Pomarède

        Add return address to RTS/RTD/RTR/RTE disassembly (from WinUAE 4.9.0
        beta28 2021/08/05)
        [f15ecdd8]

2021-08-01 Eero Tamminen

        Update m68k Linux info & config to latest v5.13
        [a66b6c4e]

2021-08-01 Eero Tamminen

        EmuTOS Falcon compatibility updates

        Compatibility updates:
        - Men at War regressed
        - Golden Island works now
        - Minor changes in few other programs

        There are also several changes for consistency:
        - Move DSP disabling notes away from game/demo name lines
        - Capitalize all clauses
        - Consistent VGA notes
        [e1412730]

2021-07-25 Nicolas Pomarède

        MMU setup update (from WinUAE 4.9.0 beta25 2021/07/25)
        [ffdb7689]

2021-07-25 Eero Tamminen

        EmuTOS compat: update after new release & AES 3D object support
        [d03996aa]

2021-07-25 Nicolas Pomarède

        Update release file with improved YM2149 emulation
        [fa48bc95]

2021-07-24 Nicolas Pomarède

        Small optimisations when generating sound
        [46f5fbe7]

2021-07-24 Nicolas Pomarède

        Rename some variables related to sound output
        [850f201b]

2021-07-23 Nicolas Pomarède

        Update WinUAE CPU to 4.9.0 beta24 from 2021/07/18 (no change for
        Hatari)
        [b281ef33]

2021-07-23 Nicolas Pomarede

        Remove more old sound code + update memory snapshot
        [45567a49]

2021-07-23 Nicolas Pomarede

        Remove older version of YM2149_NextSample(), we only use 250 kHz
        rendering for best cycle accuracy
        [d64884ce]

2021-07-23 Nicolas Pomarede

        Remove old version of Sound_GenerateSamples() and its related code
        [fc6bfb6b]

2021-07-17 Nicolas Pomarède

        Improve YM2149 emulation with better cycle accuracy (support
        syncsquare sound in maxYMiser FM v1.53) YM2149's emulation now take
        into account the exact number of CPU cycles between each access to
        the YM2149 registers and use this to presicely compute the number of
        internal updates at 250 kHz (YM2149's clock to update period
        counters) This fixes the new 'syncsquare' sound effect introduced in
        maxYMiser FM v1.53 by gwEn of PHF)
        [91ce6aa7]

2021-07-17 Thomas Huth

        Update the macos task to Big Sur

        Homebrew stopped working with the older version, so we have to
        update
        [fde8b0e6]

2021-07-17 Thomas Huth

        Allow programs with non-terminated relocation table

        The Renegade 256-bytetro demo (
        https://demozoo.org/productions/296538/ ) does not have a terminated
        relocation table - but TOS is loading it just fine. So we should
        allow that with the GEMDOS HD emulation, too. Thus turn the error
        into a warning message instead.
        [22798bef]

2021-07-12 Eero Tamminen

        Add Sommarhack 2021 demos
        [00396c8b]

2021-07-06 Eero Tamminen

        TOS boot tester: fix/update list of valid memory amounts

        Disable 6MB & 12MB as they have not been accepted by Hatari for long 
        time (are not valid configuration on real HW).

        Allow again testing of >4MB ST-RAM amounts for
        st/ste/megast/megaste.

        Simplify valid_ttram() method + update EmuTOS info message a bit.
        [93451e7c]

2021-07-05 Eero Tamminen

        hconsole: improve error message

        Reported-By: Christian Zietz
        [e3f06994]

2021-07-05 Eero Tamminen

        Update release notes & authors
        [4e52be44]

2021-07-05 Eero Tamminen

        TOS boot tester: support EmuTOS 1024k images
        [d58552a1]

2021-07-05 Eero Tamminen

        TOS boot tester: remove support for OldUAE CPU core Hatari versions
        [1d636d4c]

2021-07-05 Eero Tamminen

        TOS boot tester: fix changes for handling tester options

        (They worked OK with older Python version.)

        Fixes: 3f5d69e191c653768b5e653675f02cd3fa3bf0fe
        [0b449106]

2021-07-05 Eero Tamminen

        TOS boot tester: fix few pylint3 warnings

        Fixes: c2ab44788d09a6d81c8a7c77f7ac71ccd28af9fa
        [483bd1ee]

2021-06-28 Eero Tamminen

        Fix Lasers and Hommes (DLDH2) status in docs

        Fixes: 82dc312c2
        [b810c45b]

2021-05-29 Thomas Huth

        Fix coding style in keymap.c
        [84786999]

2021-01-12 Vincent Barrilliot

        Removed explicit mention of SDL2 since it's the only supported
        version now.
        [c1be3100]

2021-05-15 Eero Tamminen

        List trace options in alphabetical order

        Both the trace defines, and user-visible names for the options are
        now sorted.

        (There are a lot of them by now, so having a logical order for them 
        makes specific options easier for user to find from the lists.)

        Note that because OS trap trace defines are prefixed with OS_, they 
        are in different place in their respective lists than user visible
        OS trap names which do not have any prefix.

        Separate enum TRACE_BIT_* defines are used for the shift amounts so 
        that adding new trace define into correct place doesn't required 
        changes sift amounts in later defines, one just needs to add new 
        TRACE_BIT_* & TRACE_* define for the new option.
        [8c75cde4]

2021-05-22 Eero Tamminen

        Fix SCC build warning when there's no ioctl(,TIOCMGET,)

        This warning was earlier hidden by getTBE() "inline" keyword
        (removed in previous scc.c commit).
        [d558dee5]

2021-05-18 Eero Tamminen

        Add trace option and logging for SCC

        Convert SCC code debug macros to use standard Hatari tracing and 
        logging facilities so that output can be controlled at run-time.
        [21ba1217]

2021-05-16 Nicolas Pomarède

        Native FPU FSINCOS fix (from WinUAE 4.9.0 beta20 2021/05/16)
        [7eb7aa7f]

2021-05-16 Nicolas Pomarède

        Fix FSINCOS in non-softfloat mode (from WinUAE 4.5.0 beta19+
        2021/05/08)
        [c9ba5069]

2021-05-14 Nicolas Pomarède

        Fix a warning for GCC 11 by (re)forcing bCaptureSave=false If not,
        gcc 11 assumes that when using restore_uXX() functions then
        MemorySnapShot_Store() could call MemorySnapShot_fwrite() with
        un-initialized data, which is not possible because bCaptureSave
        should be false in such case
        [b3277a8d]

2021-05-09 Thomas Huth

        Cast off_t to int64_t when printing (off_t might have different
        size)
        [7fa44eee]

2021-05-09 Thomas Huth

        Use Fedora 33 for the MinGW cross compilation test

        The latest version 34 has some problems with format strings (it does 
        not like PRId64 anymore), thus let's switch back to version 33 which 
        is working fine.
        [89ce85e7]

2021-05-09 Thomas Huth

        Merge github pull request #15 from EmmanuelKasper/master

        Add missing renames to python3[bc7f2655]

2021-05-07 Emmanuel Kasper

        Add missing renames to python3

        3ccc775f5 fixed the python script hashbangs, but inline python code
        was not yet covered
        [69675365]

2021-05-05 Eero Tamminen

        Remove last caller ifdef from symbols-common.c

        Debugger "symbols" command and "gst2acii" tool using the common code 
        can set up the sections instead.
        [8b5db782]

2021-05-04 Eero Tamminen

        Misc improvements to symbol loading info output

        - Prefix errors with "ERROR:"
        - All info messages need to go to stderr, to avoid messing symbol
         listing gst2ascii outputs to stdout (avoid breaking scripts using
        it)
        - More concise section size info output
        - Tell which symbol table type is being loaded
        - Remove 'nm' suggestion as Hatari symbol loading should already
         handle more things than that (thanks to Thorsten's contributions)
        [fb984efe]

2021-05-04 Eero Tamminen

        Fix (completely broken) symbol offset auto-detection

        - This is only about what section is used for DATA & BSS symbol
         offsets, so *some* offset needs to be always used
        - Resulting offset must be compared against end of *relevant*
        section
        - Error message needs to be for current symbol, not show info from
         variables with stale information
        - If present, PC symbol information should be processed first, so
         that symbols have proper names, which means that .name_allocated
         needs to checked when freeing names

        Also use more descriptive flag variable name, remove unused section 
        variable setting, and add info print about which section offsets are 
        used.

        Fixes: 2ae0105ec4d397159bae7d4c9c4719c4be7ee721
        [adfd46fd]

2021-05-02 Eero Tamminen

        Add common functions for symbol ignore counts handling

        - Move symbol ignore counts to their own struct
        - Remove symbol ignoring from sorting functions as "symbols" loading
         in debugger already ignores them, and if user doesn't ask them to
        be
         ignored for "gst2ascii", conflict warnings should be shown for them
        - Add separate count + helper function for ignored GCC internal
        symbols
        - Move duplicated ignore count handling in symbols_load_dri() &
         symbols_load_gnu() to new ignore_symbol() & show_ignored()
        functions
        - Put all those functions close together and add/update headings
         documenting related groups of functions
        [21dc79c5]

2021-05-02 Eero Tamminen

        Update release-notes & authors docs accordingly
        [5cd34185]

2021-05-01 Eero Tamminen

        Add Thorsten's copyright + improve code readability slightly

        - Thorsten provided earlier (2017) also a.out symbols support
        - Fit shared code description to 80 cols
        - Move declarations to scope they're used in
        - Decrease extreme indentation a bit
        [0de28f5a]

2021-03-31 Thorsten Otto

        Add support to read long symbol names from Pure-C debug information
        [e5b672b7]

2021-03-31 Thorsten Otto

        Auto-detect section start offset use for DRI symtab DATA/BSS
        addresses

        For DRI style symbol tables, try to auto-detect whether DATA/BSS 
        addresses need to be offset by the section start.
        [2ae0105e]

2021-03-31 Thorsten Otto

        Use common code to free the loaded symbols list
        [b882aca3]

2021-05-02 Eero Tamminen

        Get rid rest of unnecessary ifdefs in shared symbol handling code

        - Debugger "symbols" loading can also show the section sizes
        - Move ifdeffed variable inside new code block
        - More gst2ascii specific messages to gst2ascii.c

        Only remaining use for SYMBOLS_IN_HATARI define is to differentiate 
        section (offset) handling between debugger "symbols" command and
        "gst2ascii" tool.
        [5b7058b1]

2021-05-01 Eero Tamminen

        Use common symbol options struct to unify symbol handling code

        To get rid of ifdef added by previous commit.

        Only difference between "symbols" command and "gst2ascii" tool is
        that gst2ascii.c uses the additional 'sort_name' struct member.

        While updating the function args, constified also section offsets
        arg.
        [2358767c]

2021-03-31 Thorsten Otto

        Move common symbol loading code to a shared source file
        [723fa7bb]

2021-04-24 Nicolas Pomarède

        Update to WinUAE 4.5.0 beta18 from 2021/04/24
        [094cd3ac]

2021-04-24 Thomas Huth

        0xff8060 causes bus error on a stock Falcon

        The original bus error listing has been taken on a Falcon with a
        Magnum fast RAM card that intercepts the addresses between 0xff8060
        and 0xff8063. Stock Falcons generate a bus error here. Thanks to
        Christian Zietz for the hint!
        [95ba6079]

2021-04-11 Thomas Huth

        Test compilation with MSYS2, too
        [49e49980]

2021-04-10 Nicolas Pomarède

        Softfloat update (from Previous) (from WinUAE 4.5.0 beta17+
        2021/04/10)
        [eb870933]

2021-04-10 Nicolas Pomarède

        Update WinUAE CPU to 4.5.0 beta17+ from 2021/04/10 (no change for
        Hatari)
        [6fe1960e]

2021-04-10 Thomas Huth

        Fix SDLDIR environment variable name for SDL2
        [97b9d829]

2021-04-08 Nicolas Pomarède

        Update WinUAE CPU to 4.5.0 beta17+ from 2021/04/06 (no change for
        Hatari)
        [12d38038]

2021-04-05 Eero Tamminen

        Fullscreen and windowed mode SDL2 filtering need separate rules

        Because SDL2 letterboxes fullscreen, it should be enough to check 
        that just closer dimension is evenly divisable before allowing 
        nearest neighbor scaling.
        [0f644d70]

2021-04-05 Eero Tamminen

        Remove redundant Resolution_GetDesktopSize() call

        Resolution_GetLimits() overrides the values, so removed call is
        no-op
        [2c98b7a2]

2021-04-05 Eero Tamminen

        Remove redundant Resolution_Search() function

        There's no resolution search with SDL2.  Inline remaining contents
        to Resolution_GetLimits().
        [d70c6d17]

2021-04-05 Eero Tamminen

        Resolution debug: show statusbar height separately
        [5f39b4ce]

2021-04-05 Eero Tamminen

        Resolution debug: show scaling factor with enough digits
        [ba2a3e40]

2021-04-03 Thomas Huth

        extra CFLAGS should only be added to the Hatari executable
        [3c821d0b]

2021-04-02 Thomas Huth

        Rework the pkg-config handling to allow a cross-compile prefix here,
        too
        [8de1dc15]

2021-04-02 Thomas Huth

        Fix capitalization of the various xxx_FOUND variables
        [40dbf50d]

2021-04-02 Thomas Huth

        Add portaudio and portmidi include directories if available

        This is required if the corresponding headers are installed in a 
        non-default directory. Thanks to Chang Chong for the hint!
        [f30fb640]

2021-01-08 Eero Tamminen

        "next subreturn" runs to end of the current subroutine

        ...even if it calls further subroutines.

        Earlier, "next subreturn" ran only until next RTD/RTR/RTS
        instruction, regardless of whether it was in another function, which
        would mean user losing context of current function in the debugger.

        This is fixed by increasing & decreasing new (CPU & DSP) call depth 
        variables on subroutine calls and returns, and "next subreturn" 
        running until return instruction happens on same depth as where user 
        invoked "next" command.

        NOTE: Assembly code can manipulate its return addresses in stack so 
        that subroutine call and return levels do not match. That could make 
        this functionality work incorrectly, but it's rare enough that I'm 
        ignoring it (I've seen only OS schedulers do that).

        NOTE: "next exreturn" and "next return" will still run only until 
        next applicable instruction, regardless of where it's called, as one
        can't reliably track exceptions call depth.
        [9de105d5]

2021-03-27 Nicolas Pomarède

        FPP state save/restore fixes (from WinUAE 4.5.0 beta17 2021/03/27)
        [b650f3fe]

2021-03-24 Eero Tamminen

        Update debugger variables info in manual + release notes
        [5c3207ea]

2021-03-24 Eero Tamminen

        Make "variables" command output more user friendly

        - Align names, values & descriptions
        - Indicate with hex number width the type/size of variable value
        - Skip debugger internal variables (used for 'next' command
        variants)
        [c559e56e]

2021-03-24 Eero Tamminen

        Have descriptions for debugger user variables, not for internal ones

        Next commit will skip showing debugger internal variables using
        this.
        [9a5f5a13]

2021-01-21 Eero Tamminen

        Fix lilo reset address comment
        [c384ac37]

2021-03-21 Thomas Huth

        Allow 1MB EmuTOS images in Falcon and TT mode, too
        [21669eae]

2021-03-18 Thomas Huth

        Silence a compiler warning of VS
        [8cbdefe5]

2021-03-18 Thomas Huth

        Fix 'missing prototype' warnings in the new drive letter code
        [b6f6a41b]

2021-03-18 Thomas Huth

        Make sure to use CRT_SECURE_NO_WARNINGS on all files with
        Visual-Studio

        We're not interested in these warnings, so disable them everywhere
        [481f7b25]

2021-03-16 Václav Lipert

        Windows: Ability to change drive in file select dialog

        It is made as minimalist solution via next/prev button under Root
        button and it will allow to walk through all available drives. It
        shouldn't harm any other platform anyhow. Make filename field a
        little bit shorter so we have place on drive change.
        [e37bf9b7]

2021-03-18 Thomas Huth

        Merge pull request #14 from WallyCZ/cirrus-vs2019

        VS CI build fix[e9505069]

2021-03-17 Václav Lipert

        Cirrus VS build fix Issue with the previous image with CMAKE was
        probably that it had already installed some parts of VS. More robust
        solution would be to use a clean image and install everything by
        own. And changed VS2017 -> VS2019
        [11bca722]

2021-03-16 Thomas Huth

        Limit the amount of parallel jobs in Travis (nproc gives wrong
        values here)
        [490d05cf]

2021-03-16 Thomas Huth

        Merge github pull request #12 from WallyCZ/master

        Visual Studio compilation fix[7d1731db]

2021-03-15 Václav Lipert

        Fix macro redefinition in winsock2.h in Release build
        [ae417491]

2021-03-15 Václav Lipert

        Visual Studio compilation fix This removes #undef _DEBUG hack,
        because obviously it is not needed anymore and it is root cause of
        compilation error on newer VS with newer SDK's. At least from SDK
        WIN10 19H1 this causes compile issue, but maybe even from older -
        not tested
        [7b8b5a94]

2021-03-12 Nicolas Pomarède

        Add note about difference between MegaST and MegaSTE due to
        IMP/Ricoh chipsets (patch by Christian Zietz) Hatari emulates the
        MegaST with an IMP chipset, but some models were also shipped with a
        Ricoh chipset that behaves differently regarding bus error when
        accessing HW registers at $FF820E/FF820F
        [353379e1]

2021-02-21 Nicolas Pomarède

        68040 does not revert -(An)/(An)+ EA calculation (only 68060 does)
        if FPU instruction was unimplemented or datatype was unsupported
        (from WinUAE 4.5.0 beta17 2021/02/21)
        [281a553d]

2021-02-14 Thomas Huth

        Update the Cirrus-CI (fix FreeBSD, remove VS job)

        Both, FreeBSD and the VisualStudio job, are currently failing in the 
        gitlab-CI. FreeBSD needs an update to a newer version. But the VS
        job fails for unknown reason during the installation step, and  I
        cannot get it working anymore. Let's remove it again, this container
        really seems not stable enough for a reliable CI.
        [43bb7f88]

2021-02-11 Nicolas Pomarede

        Ignore FRESTORE 68040 FPIARCU field (from WinUAE 4.5.0 beta16+
        2021/02/11)
        [7e8783b5]

2021-02-07 Thomas Huth

        Improve comments that mentioned old UAE CPU core
        [4711e97c]

2021-01-24 Thomas Huth

        Stop including malloc.h

        It's not required anymore since we stopped using memalign() in
        commit b68b4e5a7e1e891621f7c9490dd1c6d2 ("Remove the qemu_memalign()
        wrapper")
        [a7a1bf0a]

2021-01-24 Thomas Huth

        Add missing 'falltrough' comments (for compiling with
        -Wimplicit-fallthrough)
        [7d5ad6a5]

2021-01-23 Nicolas Pomarède

        Update to WinUAE 4.5.0 beta16 from 2021/01/23
        [f3a840f1]

2021-01-23 Nicolas Pomarède

        Disassembler support for FMOVEM.L #x,<more than one control
        register> (from WinUAE 4.5.0 beta16 2021/01/23)
        [cd390892]

2021-01-23 Nicolas Pomarède

        6888x FPIAR is always set if any exception is enabled (from WinUAE
        4.5.0 beta16 2021/01/23)
        [c4159feb]

2021-01-19 Nicolas Pomarède

        FPIAR update. 68060 sets it almost always, 68040 less commonly,
        6888x only if exception (from WinUAE 4.5.0 beta15+ 2021/01/19)
        [b7f1c90f]

2021-01-19 Eero Tamminen

        More 060 demo compatibility updates

        - Move DHS 060 demos to correct section
        - Fit's 060 demos render correctly with SW FPU emu
        [bbae91a2]

2021-01-18 Nicolas Pomarède

        68060 FPU arithmetic exception fixes (from WinUAE 4.5.0 beta15+
        2021/01/18)
        [22c14d04]

2021-01-18 Eero Tamminen

        060 demos work with FPSP060, update compat docs
        [465915e1]

2021-01-18 Nicolas Pomarede

        68060 unimplemented FPU emulation fixes (from WinUAE 4.5.0 beta15+
        2021/01/18)
        [59172a86]

2021-01-06 Eero Tamminen

        Give warning also for the other case when FPU is disabled
        [3e17ad85]

2020-12-26 Eero Tamminen

        Add "The Star Wars demo"
        [64783c50]

2021-01-17 Nicolas Pomarède

        Restore (an)+/-(an) modification before generating unimplemented
        instruction exception (from WinUAE 4.5.0 beta15+ 2021/01/17)
        [2fdef019]

2021-01-17 Nicolas Pomarède

        fi debugger command assembler support (not used in Hatari) (from
        WinUAE 4.5.0 beta15+ 2021/01/16)
        [f7f5e69c]

2021-01-17 Thomas Huth

        Simplify ide_init2

        No need for another for loop here, we can use the one from
        Ide_Init() instead. This way we can get rid of some indentation here
        to make the function more readable.
        [36d53d49]

2021-01-16 Thomas Huth

        Get rid of the 'opaque' void pointers in the IDE code
        [7e113356]

2021-01-16 Thomas Huth

        Use a static array for the ide state instead of allocating it
        dynamically

        The dynamic allocation of the IDEState keeps causing trouble when 
        switching between configurations - there is currently yet another 
        crash when saving a memory snapshot in Falcon mode and then 
        restoring it from the command line without specifying the machine 
        type. Let's stop playing whack-a-mole with this problem and use a
        static array for the IDEState instead.
        [c799ff7b]

2021-01-14 Eero Tamminen

        Move 2 Fit demos under 060 Falcon section

        They rely on 060 + CT TOS 030 CPU/FPU emulation.
        [72dc4f4f]

2021-01-12 Eero Tamminen

        Python UI: remove deprecation warning + update TODO

        Setting the socket bg isn't really necessary, so just remove it. 
        Otherwise fixing the deprecation warning would require changing it
        to use Gtk Style context, Style provider, CSS etc.

        After this the only remaining PyGTK (v3.22+) deprecation warnings 
        should be for Gtk Action/ActionGroup widgets i.e. menu handling. 
        Update TODO accordingly.
        [08fd8d6d]

2021-01-12 Eero Tamminen

        Python UI: misc debugger UI improvements

        - Use more appropriate fsel var name instead of file
        - Fix rest of PyGTK deprecation warnings by:
         - changing how GtkDialog is created
         - not using monospaced font in address entry
         - using GtkTextView instead of GtkLabel to get text widget
           with monospaced font
        - Remove left/right arrow keyboard shorcuts for memory address
         changing as then that would be triggered also when editing
         the memory adddress
        - Call set_dumpmode() method at start and dump() after options
        dialog
         so that debugger window is immediately in right size
        [8bf58954]

2021-01-11 Eero Tamminen

        Python UI: update release-notes & TODO
        [b3077980]

2021-01-11 Eero Tamminen

        Python UI: update Hatari trace options list and sort it
        [859e497f]

2021-01-10 Eero Tamminen

        Python UI: fix more "positional argument" PyGTKDeprecationWarnings

        "Using positional arguments with the GObject constructor has been 
        deprecated. Please specify keyword ... or use a class specific 
        constructor."
        [4000996e]

2021-01-11 Eero Tamminen

        Python UI: fix/improve file selector titles

        Fix: specify for Gtk.FileChooserButton() that label is to be used as 
        file selector title.

        Allow title to be specified also FselEntry, not just for file 
        selectors gotten from FselAndEjectFactory.

        Use labels in front of options (in settings dialogs) also as their 
        file selector titles, and have all of them ending with ':' for 
        consistency.
        [5019116b]

2021-01-11 Eero Tamminen

        Python UI: change rest of deprecated HScale widgets to Scale ones

        Also add tooltips to debugger options settings, and set
        DisplayDialog variables in both instances in same order.
        [c47320c4]

2021-01-11 Eero Tamminen

        Python UI: update TT-RAM setting

        - Hatari allows now 512MB of TT-RAM
        - Align amount to 4MB as Hatari does
        - Change deprecated HScale widget to newer Scale widget
        [49dc6d87]

2021-01-10 Eero Tamminen

        Python UI: fix/improve sound buffer size setting

        - Support the (Hatari default) zero (=auto) value
        - Change deprecated HScale widget to newer Scale widget
        - Add annotations to the widget range
        [3f1d35b5]

2021-01-11 Eero Tamminen

        Python UI: fix debug UI config saving

        ConfigStore does now stricter section & key checks against Hatari 
        config, which broke debug UI config saving.  Because debug UI is 
        likely to go away at some point (doing debugging from another
        process has too many restrictions), do minimal fix (don't save
        follow-pc option).
        [bc3c4609]

2021-01-10 Eero Tamminen

        Python UI: fix PyGTK Gtk assert warnings

        It seems that action groups don't any more steal keys from Hatari / 
        GtkSocket, like they did with Gtk v2, so this can be finally fixed.

        Fixes following warnings from _add_submenu() method:
         Gtk-CRITICAL **: gtk_accel_label_set_accel_closure: assertion
         'gtk_accel_group_from_accel_closure (accel_closure) != NULL' failed
        [afdae542]

2021-01-10 Eero Tamminen

        Python UI: remove obsolete things from test code + update comments

        - Hatari doesn't support SDL1 anymore
        - Hatari scales low-res up now by itself
        - Fix PyGtk deprecation warnings
        [2542b18a]

2021-01-10 Nicolas Pomarède

        Remove #ifdef WINUAE_FOR_HATARI (not needed anymore without old CPU
        core)
        [ed93c1fc]

2021-01-10 Nicolas Pomarède

        Update comment, old UAE CPU core is not used anymore
        [4feea974]

2021-01-10 Nicolas Pomarede

        JIT FPU blacklist fix (from WinUAE 4.5.0 beta15 2020/01/09)
        [f8e832ae]

2021-01-10 Nicolas Pomarede

        JIT FPU FMOVE FPx to Dn.x clamping was lost in Aranym merge (from
        WinUAE 4.5.0 beta15 2020/01/09)
        [11d82a9e]

2021-01-10 Thomas Huth

        Mark 16 bpp as deprecated
        [7e3ec09c]

2021-01-10 Thomas Huth

        Remove NUM_FRAMEBUFFERS and the SDL_DOUBLEBUF related code

        There is no more SDL_DOUBLEBUF in SDL2, so we do not need these code
        fragments anymore (we already disabled them with SDL1.2 since a long
        time, too, anyway, so this was completely useless before the SDL1.2
        removal already)
        [5a42cb75]

2021-01-09 Eero Tamminen

        Remove Python UI support for obsolete (SDL1) --desktop-st option
        [c48904d5]

2021-01-09 Eero Tamminen

        Update doc option headings + descriptions after oldUAE removal

        With more accurate CPU emulation, interrupt emulation plays smaller 
        role in emulation overhead.  While it's still significant, timer-D 
        option hasn't for long time doubled performance even for ST
        emulation.
        [6c8f3d34]

2021-01-08 Eero Tamminen

        Fix: clear GEMDOS Fread / Fwrite errors

        Reported by Christian Zietz.

        Unless error is cleared with clearerr(), ferror() continues
        reporting it.

        Also, make sure that errno value doesn't get overwritten before it
        is used.
        [cc272bd8]

2021-01-09 Eero Tamminen

        Remove/replace obsolete WinUAE vs. oldUAE information from docs
        [cb5d14fe]

2021-01-09 Thomas Huth

        Replace SDL_WM_GrabInput() with SDL_SetRelativeMouseMode()
        [843e7889]

2021-01-09 Thomas Huth

        Remove the --no-parachute option - SDL2 does not have it anymore
        [db0fa676]

2021-01-09 Thomas Huth

        Remove unused variable genconv_do_update (it was only useful with
        SDL1)
        [b64b381e]

2021-01-09 Thomas Huth

        Remove obsolete (SDL1-only) --desktop-st option
        [06aa17b4]

2021-01-09 Thomas Huth

        Remove SDL1 code from keymap test

        listkeys only worked on SDL1.2, so this program is now removed
        completely
        [f657871e]

2021-01-09 Thomas Huth

        Remove SDL1.2 support

        Upstream SDL1.2 development has been stopped many years ago already, 
        and maintaining support for two major SDL versions in Hatari can be
        quite of a pain sometimes, so let's finally retire the support for
        SDL1.2 in Hatari now.
        [90382329]

2021-01-02 Eero Tamminen

        Tracing and run-time configuration for MegaSTE/TT VME/SCU regs
        access

        Run-time configuration is needed because TOS v2 / v3 fail to boot on 
        MegaSTE / TT unless SCU register access is allowed, but that causes 
        Linux boot to fail on them, due to missing VME SCU interrupt 
        emulation.
        [2fc57491]

2021-01-06 Thomas Huth

        Test compiling with Visual-Studio in the cirrus-CI, too
        [f624d8bb]

2021-01-06 Thomas Huth

        Skip scandir functions on Windows when using a custom dirent.h
        header

        In case there is a custom dirent.h header, the scandir functions
        should already be defined in there.
        [c7ba0707]

2021-01-06 Thomas Huth

        Do not double-def the DT_* constants from dirent.h if already
        defined
        [f7ff24a5]

2021-01-06 Thomas Huth

        Make sure the vs-fix.h is included in the CPU core, too
        [3da9121f]

2021-01-05 Nicolas Pomarede

        Remove old variable 'cpu_level' from uae_prefs struct (use cpu_model
        instead)
        [fa114470]

2021-01-05 Thomas Huth

        Ignore Python versions below v3.
        [0d37ee81]

2021-01-05 Nicolas Pomarede

        Some files were not updated to the latest version (from WinUAE 4.5.0
        beta14 2020/01/02)
        [ad67cddb]

2021-01-04 Thomas Huth

        Include file.h in avi_record.c for ftello/fseeko

        In case we're compiling on a system without ftello/fseeko, we need 
        to include file.h to use the wrapper macros
        [6d941a78]

2021-01-04 Thomas Huth

        Set GCC-related Windows linker flags only if really compiling with
        GCC

        ... in case someone tries to compile Hatari with a non-GNU compiler
        [7bc03497]

2021-01-04 Eero Tamminen

        Move removed features under their own heading in release notes
        [b26acd99]

2021-01-04 Thomas Huth

        Remove the old UAE CPU core code
        [d4a87349]

2021-01-04 Thomas Huth

        Get rid of ENABLE_WINUAE_CPU switches in the code

        ... and drop the related old UAE CPU core code paths.
        [3a5126af]

2021-01-04 Thomas Huth

        Disable the possibility to compile with old UAE CPU core in the
        build system

        The new WinUAE CPU core is well established nowadays and the old
        core is hardly tested/used anymore. Since it's also a burden to
        maintain two CPU cores, let's retire it now. Start the process by
        removing the corresponding logic in the build system.
        [7a8efe44]

2021-01-03 Nicolas Pomarède

        Fix debug.c get_record_dma_info() (from WinUAE 4.5.0 beta14
        2020/01/02)
        [e46fa4ee]

2021-01-03 Nicolas Pomarède

        Another JIT shift instruction update (from WinUAE 4.5.0 beta14
        2020/01/02)
        [50c0b178]

2021-01-03 Nicolas Pomarède

        Fix debug.c get_record_dma_info() (from WinUAE 4.5.0 beta13
        2020/12/21)
        [147b4620]

2021-01-03 Nicolas Pomarède

        Fix debug.c get_value() (from WinUAE 4.5.0 beta12 2020/12/06)
        [18105cea]

2021-01-03 Nicolas Pomarède

        If long write, poll IPL after first word (from WinUAE 4.5.0 beta12
        2020/12/06)
        [959cf46a]

2021-01-03 Nicolas Pomarède

        Fix debug.c get_value() (from WinUAE 4.5.0 beta10+ 2020/11/21)
        [18c9b86a]

2021-01-03 Nicolas Pomarède

        Force 16-bit memory option (from WinUAE 4.5.0 beta10+ 2020/11/21)
        [9770e774]

2021-01-03 Nicolas Pomarède

        Debugger update. Use memwatch point data to detect uaedbg DMA
        accesses (from WinUAE 4.5.0 beta9+ 2020/11/08)
        [8c566873]

2021-01-03 Nicolas Pomarède

        Fix debugmem get_value (from WinUAE 4.5.0 beta9+ 2020/11/07)
        [820ca512]

2021-01-03 Nicolas Pomarède

        Fix 64-bit JIT flags mismatch (not used in Hatari for now) (from
        WinUAE 4.5.0 beta9 2020/11/05)
        [f92f57b6]

2021-01-03 Nicolas Pomarède

        JIT shift instruction fix (not used in Hatari for now) (from WinUAE
        4.5.0 beta7 2020/10/31)
        [6c7e3432]

2021-01-03 Nicolas Pomarède

        JIT LSL/LSR temporary shift count equals 32 fix (not used in Hatari
        for now) (from WinUAE 4.5.0 beta7 2020/10/31)
        [94fbde75]

2021-01-03 Nicolas Pomarède

        JIT 80-bit FPU support option. Don't log blacklist if JIT is off
        (not used in Hatari for now) (from WinUAE 4.5.0 beta7 2020/10/31)
        [6ebd7618]

2021-01-03 Nicolas Pomarède

        Merge branch 'master' of https://git.tuxfamily.org/hatari/hatari
        [3abd3aae]

2021-01-03 Nicolas Pomarède

        JIT MOVEM/MOVE16 optimization disable option (not used in Hatari for
        now) (from WinUAE 4.5.0 beta7 2020/10/31)
        [4d5dcbc2]

2021-01-03 Eero Tamminen

        Update release notes
        [6787c7eb]

2021-01-03 Eero Tamminen

        BadMood doesn't work with 32-bit addressing / TT-RAM either
        [ad559546]

2021-01-03 Eero Tamminen

        Update m68k NetBSD doc for Hatari v3.2.1 & NetBSD v9.1
        [df5c21bb]

2021-01-03 Nicolas Pomarède

        Memory bank metadata support (not used in Hatari) (from WinUAE 4.5.0
        beta7 2020/10/31)
        [591814da]

2021-01-03 Nicolas Pomarède

        Add ABFLAG_NODMA (not used in Hatari) (from WinUAE 4.5.0 beta7
        2020/10/31)
        [3f808930]

2021-01-03 Nicolas Pomarède

        Use MMU translation debug function (from WinUAE 4.5.0 beta6
        2020/10/18)
        [85d4c119]

2021-01-03 Laurent Sallafranque

        Fix: the same interrupt was cleared twice instead of the exception 
        interrupt
        [c4fb6dff]

2021-01-03 Laurent Sallafranque

        Replace old DSP interrupts with Andreas' previous emulator code and 
        add of SSI interrupts.
        [a0b7a3ba]

2021-01-02 Eero Tamminen

        Update/correct memory amount comments

        Thanks to Christian Zietz for review / feedback.
        [e69d9798]

2021-01-02 Eero Tamminen

        Update rest of m68k-linux doc to Hatari v2.3.1 status

        Oopses happen now on every boot when either cache or prefetch is 
        enabled, not just occasionally.  Because of that, user-space issues 
        with them enabled cannot be anymore tested.  Debian installer works
        if cache/prefetch is installed.  Update doc accordingly.
        [d307b846]

2021-01-02 Eero Tamminen

        Update config & docs for linux-m68k v5.10 + latest Debian installer

        Changes:

        * Geert's m68k kernel tree dropped the Atari GEMDOS partition / FAT
         patches in v5.9 as redundant, so drop comments about it too

        * Size differs between kernel versions, so just mention expected
        size
         diff when compiling for size vs. perf

        * Update Debian links to latest ones, ones that still work

        * Note that Debian (installer) also works when cache & prefetch
         are disabled, and one uses mode with enough colors for installer

        * Add new config options coming with v5.10 (enable ZSTD support,
         disable others)
        [8fe9c69b]

2020-11-11 Eero Tamminen

        Improve memory checks

        - Enforce corrections also for too small Falcon ST-RAM
         amounts, not just for large unsupported ones
        - Document memory amount check better
        [6c827e5c]

2020-11-27 Eero Tamminen

        Remove redundant ACSI global variable initializers

        Makes ACSI code more similar to SCSI one.
        [ee23b789]

2021-01-01 Eero Tamminen

        Remove (explicit) Python v2 support

        Several of the scripts are likely to continue working with both
        Python v2.7 and v3.x still (as they haven't changed significantly in
        a long time), but from now on, it's accidental, neither tested nor
        supported.
        [f2fed66c]

2021-01-01 Thomas Huth

        Make sure to restore the zoom mode correctly when loading Falcon
        snapshots
        [e6abe2bb]

2021-01-01 Thomas Huth

        Use DMA access functions in Falcon crossbar code

        Don't touch the STRam directly, use the DMA access functions
        instead. This change is based on an earlier patch by Nicolas.
        [853fdeef]

2020-12-27 : *** Version 2.3.1 ***

2020-12-26 Nicolas Pomarède

        New release 2.3.1, update date in corresponding files
        [cc33aa89]

2020-12-26 Eero Tamminen

        Add TODO for making PortMidi run-time configurable
        [cd1b2b68]

2020-12-26 Eero Tamminen

        Add the missing SDL GUI PortMidi MIDI configuration documentation
        [05a1e239]

2020-12-26 Eero Tamminen

        Fix typo: checkmark -> checkbox

        Checking means putting checkmark to the checkbox widget.
        [0dcc11e6]

2020-12-26 Eero Tamminen

        Be more exact about PortMidi vs. raw midi options
        [6a38f32d]

2020-12-26 Nicolas Pomarède

        Don't require portmidi-devel in the rpm spec file portmidi seems to
        get worse performance at the moment under Linux than direct access 
        to the midi file device, also most linux distros don't use portmidi
        for their Hatari package. So, we can drop portmidi requirement for
        now
        [27679b15]

2020-12-26 Thomas Huth

        Use 'make install' on CMake earlier than 3.15
        [7ed065d3]

2020-12-26 Eero Tamminen

        Add more information about PortMidi issue
        [73342239]

2020-12-26 Eero Tamminen

        Be more verbose about PortMidi issue, as it stops MIDI completely

        MIDI trace produces so much data (e.g. on every mouse move) that 
        these serious errors are lost in it.
        [05b787c2]

2020-12-25 Eero Tamminen

        Fix release checklist typo
        [0bb1e5d4]

2020-12-23 Eero Tamminen

        Add OpenDUNE to EmuTOS compat

        Latest EmuTOS snapshot fixes EsetShift() to init vt52 so console
        messages aren't anymore left to screen top on TT with it (like is
        case with v1.0).
        [d5d41cb5]

2020-12-24 Eero Tamminen

        Fix assert in profiler post-processor
        [97aa4b3d]

2020-12-23 Eero Tamminen

        Improve 32-bit addressing error dialog text

        In situation where user had booted with TT emulation and TT-RAM, and 
        is enabling 24-bit addressing at run-time, Hatari telling in
        response that it's switching to 32-bit mode (on reboot) is very
        confusing.

        Better to tell that this is Hatari *automatically* switching (back)
        to 32-bit mode.
        [3814b222]

2020-12-22 Eero Tamminen

        Compatibility updates based on Laurent's feedback

        * Replace broken "Epidemic" demo info with
        fixed one of it in "Who Okayed This?" demo
        * AFM has audio issues, FlaySID doesn't
        * Version number and other minor improvements
         suggested by Laurent
        [62b36266]

2020-12-22 Eero Tamminen

        More EmuTOS compatibility updates

        Add few new items from additional compatibility testing and results
        of latest EmuTOS fixes.
        [09a3b9e4]

2020-12-21 Eero Tamminen

        Fix typo
        [9a161d3f]

2020-12-19 Eero Tamminen

        Update release notes accordingly

        Collect the improved programs to release notes and note more clearly 
        what are regressions and from what Hatari version.
        [ba315130]

2020-12-19 Eero Tamminen

        More emutos compatibility updates

        Few more EmuTOS issues fixed + tested additional Falcon programs and
        couple of ST demos.
        [236cb98d]

2020-12-20 Eero Tamminen

        Falcon compatibility: movem fix impact - part 2, other updates

        Went through rest of Falcon programs that are noted to work either 
        with or without MMU (not both), and added more info for ones that 
        still do with the movem fix.

        Weirdly there are also couple of Falcon programs that work only with 
        EmuTOS, not TOS4.

        I noticed only now that Laurent's Racer games were missing from this 
        list, so those are added also.

        Added missing ':' separators between demo and group names.
        [7cf771ce]

2020-12-20 Eero Tamminen

        Specify new Python UI requirements & changes more clearly
        [d3d75110]

2020-12-19 Eero Tamminen

        Falcon compatibility: movem fix impact - part 1, other updates

        There are many programs which started requiring MMU to work with 
        Hatari v2.3 although they don't use MMU themselves. With the movem 
        regression fixed, they work again without MMU.  This updates some of 
        the entries, with more updates coming in later commit.

        There are also updates for other things noticed by me and Laurent 
        while testing this, for example:
        * Payback demo bus error in middle unless 060 cache emulation is
        enabled
        * Incorrect Apex demo description & Killing Impact link

        New entries were also added:
        * Beats of Rage
        * Graoumf Tracker
        [bb64ecb3]

2020-12-19 Eero Tamminen

        Improve Hatari window embedding / reparenting

        By creating SDL window unmapped, so that WM doesn't have time to
        (steal or) show it to user before Hatari reparents it.

        This fixes Python UI Hatari window reparenting randomly failing with
        OpenBox window manager (reported & verified by Jens Guenther).
        [0d37be7b]

2020-12-19 Eero Tamminen

        Update EmuTOS compatibility after movem fix
        [667f7dc7]

2020-12-18 Eero Tamminen

        Use different Python UI layouts on Wayland and X11

        Because only latter supports Hatari X11 window embedding
        [daeb9474]

2020-12-18 Eero Tamminen

        Document how to install Hatari build deps on Linux
        [e8660124]

2020-12-18 Eero Tamminen

        Use Glib functions in Python UI instead of deprecated GObject ones

        "hatariui.py" changes are from Jens Guenther, thanks!

        Also update docs accordingly (while python2 may still work, it's not
        tested, so don't mention it any more in README).
        [d7598c49]

2020-12-18 Eero Tamminen

        More checks needed for Python UI before release
        [0ffdf293]

2020-12-18 Eero Tamminen

        Fix Python UI asserts on missing Hatari config file

        * wait until Hatari has finished writing its config
        * check also case where Hatari didn't manage to save config
        * show user error dialog on config saving issues
         (Hatari didn't work or config wasn't e.g. writable)

        PS. These issues may have been there since 2016 (a6b53512dcd52)
        [81973601]

2020-12-18 Eero Tamminen

        Add Python UI config file loading error debug messages

        And return error from load function instead of proceeding if config 
        loading failed and there are no defaults given, as things would 
        definitely fail without even any defaults being there.
        [ed55edf7]

2020-12-16 Eero Tamminen

        Fix Hatari window reparenting with SDL2

        By checking whether Hatari window is already under correct parent, 
        before unmapping the current parent.

        Background:

        SDL2 doesn't appear to remap its new window under SDL WM window on 
        framebuffer resolution change / re-creation like SDL1 did, but
        leaves it mapped under whatever window it already was.

        As result, with SDL2 old Hatari code could unmap the intended new 
        parent window before remapping Hatari window under it.

        Because resolution changes on TT & Falcon bootup, Hatari unmapped
        its Python UI parent window if user started Python UI with Hatari
        set to emulate either TT or Falcon, or if user changed between
        TT/Falcon and other machine types.
        [29af2fd0]

2020-12-16 Nicolas Pomarède

        Update release notes for movem prefetch bug in 68020/30 mode
        [b082b8f9]

2020-12-16 Nicolas Pomarède

        Add full path to the list of files to update for a release
        [fdd0d494]

2020-12-16 Nicolas Pomarède

        68000/10 MOVEM special case was also incorrectly enabled for
        68020/030 (from WinUAE 4.5.0 beta12+ 2020/12/16) 68000/10 do an
        extra useless access after some movem which should not be done with
        68020/030
        [0d49e668]

2020-12-16 Eero Tamminen

        Add Videl ST/STE compatible palette status to "info videl"

        As it's internal Videl state which one cannot determine from
        register values after the fact.
        [11c19144]

2020-12-16 Eero Tamminen

        Update Confusion demos and PARX games compatibility info
        [dc40dab7]

2020-12-16 Eero Tamminen

        Python UI: allow Hatari window to be freely scaled

        Without this results of resizing the Python UI window looked really 
        odd (menubar padded itself vertically and right toolbar added
        padding to the right).
        [36a969d6]

2020-12-15 Eero Tamminen

        Update Python code copyrights
        [9c3156a1]

2020-12-14 Eero Tamminen

        Fix issue with Python UI Hatari mass config changes

        If config file had invalid paths for some of files, setting full 
        dialog's worth of options (including faulty ones from config file + 
        user changed ones) in a single [1] Hatari control API command line 
        would result in Hatari rejecting all the changes due to one invalid 
        option value.

        Hatari option setting is currently one-way so Python UI doesn't know 
        about these errors and Hatari doesn't give any indication of them
        for user either (except in console).

        Therefore this commit will filter out invalid file name options from 
        the command line (given to Hatari through Python UI control socket).

        Note that this is an issue only with (floppy, HD and TOS) image
        files as Hatari socket / command line parsing validates those
        immediately. It's not an issue with device files as Hatari will
        itself notify user about invalid paths and it disabling
        corresponding device functionality as result.

        [1] Dialog options are given in one go to Hatari so that only one 
        reboot is needed for all the dialog option changes triggering one.
        [385a6756]

2020-12-14 Eero Tamminen

        Remove redundant str() calls from string conversions

        Partly in preparation for None (filename) handling in next commit, 
        and partly for consistency.
        [757f55f1]

2020-12-14 Eero Tamminen

        Fixes / improvements to Python UI quit handling

        - If user cancels, config changes aren't discarded, so change text
         to ignore
        - Ask for config save/ignore/cancel before killing Hatari,
         as quitting can't be canceled after Hatari is dead
        - Scale config viewport with dialog resizes, otherwise viewing
         larger number of changes is hard
        - Improve Hatari kill dialog text

        Resize handling requires GtkScrolledWindow functions that came in
        Gtk v3.22, which is available in Ubuntu 16.04 and Debian 9 (current 
        oldstable) => update docs accordingly.
        [4f42bc06]

2020-12-14 Nicolas Pomarède

        Update memory snapshot version (due to recent changes in crossbar.c
        dma_s struct)
        [7de24e52]

2020-12-14 Nicolas Pomarède

        Fix some spelling errors reported by 'codespell'
        [3856b1b7]

2020-12-14 Eero Tamminen

        Update rest of EmuTOS compatibility info to v1.0(+) level

        Update features info, add new class of problematic programs, add few 
        new games, and remove v0.x compatibility notes for specific
        programs, unless they concern a regression that's still present.
        [366d4cef]

2020-12-14 Eero Tamminen

        Add L'Abbaye Des Morts to compatibility list

        Issues are from Joska's comment here: 
        https://www.atari-forum.com/viewtopic.php?p=409173#p409173
        [efe73151]

2020-12-09 Eero Tamminen

        EmuTOS compatiblity updates

        Some improvements in latest snapshots / Git
        [9b87a92e]

2020-12-13 Eero Tamminen

        Add comment about NF SCSI driver name

        Information from Uwe
        [e8044629]

2020-12-13 Thomas Huth

        Require at least CMake version 3.3 for compiling Hatari

        There are issues in older versions after CMake changed the behaviour
        of the xxx_FOUND variables in find_the package_handle_standard_args
        module, see:

          https://gitlab.kitware.com/cmake/cmake/-/commit/d1a6d15bcd4df3d3e3

        Thus we need at least CMake version 3.3 to avoid those problems.
        [6ce3605e]

2020-12-13 Thomas Huth

        Use the corect case for the Curses_FOUND variable
        [c298ecc3]

2020-12-11 Nicolas Pomarede

        Remove no more used variable bAppliedTimerDPatch
        [54484dbf]

2020-12-10 Nicolas Pomarede

        Typo
        [bcd553a9]

2020-11-22 Eero Tamminen

        Disable failing HD images

        Fixes following issue:
        * User starts hatari with IDE: hatari --ide-master disk.img
        * User selects same image also for another interface in GUI,
         e.g. for ACSI, and proceeds
         -> Hatari ACSI file locking fails, and it's not mounted
        * User ejects IDE image from GUI, leaves ACSI image as-is and
        proceeds

        => Hatari won't (re-)initialize ACSI as its config did not change,
        and
          as result ACSI drive won't be mounted to emulation, although it's
          still visible in the GUI as being mounted.

        After the change, ACSI image name isn't anymore shown in the GUI
        after failure, as it's now disabled.  When user browses it again, he
        can just OK the old name, one doesn't need to search for it.
        [502b4123]

2020-11-22 Eero Tamminen

        Fail IDE on IDE disk open errors and tell user about it

        Makes IDE image opening related errors work similarly to how they're 
        handled with ACSI/SCSI.
        [28ab31d3]

2020-11-22 Eero Tamminen

        Tell user which HD type (interface) is in question on HD errors

        E.g. if user selects same HD file for multiple interfaces, it's 
        impossible for user to know on which interface the file got rejected
        (due to file lock failing) unless Hatari tells it.
        [d2f49fac]

2020-12-08 Eero Tamminen

        Improve FPU information and CPU dialog section

        - Add FPU to HW matrix
        - Move softfloat precision info to CPU dialog section with rest of
        FPU info
        - Fix plural form typos and improve few wordings in CPU dialog
        section
        - Add few subheadings for readability
        [6b7943b9]

2020-12-06 Eero Tamminen

        Minor corrections to compatibility list and release notes
        [26c0ed21]

2020-12-06 Eero Tamminen

        Add fixes from Thomas, Jerome & Laurent to release notes

        - IDE & TOS 2.07: Thomas
        - macOS: Jerome
        - DSP: Laurent
        [1c1e42e9]

2020-12-01 Eero Tamminen

        Compatibility updates (mostly Laurent's DSP handling fixes)

        And few extra things noticed while verifying that the fixes don't 
        regress anything.
        [903905c4]

2020-12-06 Eero Tamminen

        Slightly more details on FPU emulation accuracy to manual

        It's summary of Toni Wilen's description:
        ---------------------------------------------------------------------- 
        Softfloat returns same results as 68040/060 FPSP which does not
        return exactly same result as 6888x. FPSP is more accurate.

        6888x internal logaritmic/trigonometic algorithms are not known
        except that they are CORDIC based but that does not help much.

        Differences are very minimal, no program cares.

        I added partial FPU support to my tester tool few months ago which
        can report expected value and returned value and in my tests last
        few bits of (trig/log) results are usually different when comparing
        between FPSP and 6888x.

        Other (non-trig/log) instructions are accurate.
        ----------------------------------------------------------------------
        [1673bc0f]

2020-12-01 Eero Tamminen

        EmuTOS compat updates
        [88d5c0ed]

2020-12-06 Thomas Huth

        TOS 2.07 still uses GPIP7 for monitor detection
        [f7a9c060]

2020-12-06 Thomas Huth

        Fix the check for TOS versions < 3.0 ... v2.07 works on the Sparrow
        (i.e. Falcon in Hatari)
        [7d4de7af]

2020-12-05 Thomas Huth

        Fix another possible crash in the IDE code

        When Hatari has been started in non-Falcon mode, or in Falcon mode 
        with fast-boot enabled, and no IDE drive has been configured, the 
        emulator crashes when switching to Falcon mode in the GUI (or when 
        disabling the fast-boot option in case it was already in Falcon
        mode). Add another check to correctly re-initialize the IDE
        subsystem in this case. Thanks to the Emphii and czietz for the bug
        report at atari-forum.com!
        [dcf0cff3]

2020-12-05 Nicolas Pomarède

        Add missing FPU selector to macOS french version (patch by Jerome
        Vernet)
        [040c01d2]

2020-12-05 Laurent Sallafranque

        Fix: hostport PORTB interrupts. Hostport PORTB interrupts must be
        tested after each DSP instruction and not only when there's a host
        to DSP transfer. This fix lockup demo (tridi part, not the lake of
        music)
        [8df18cab]

2020-12-02 Laurent Sallafranque

        Merge branch 'master' of
        ssh://git.tuxfamily.org/gitroot/hatari/hatari
        [12b37149]

2020-12-02 Laurent Sallafranque

        Fix crossbar/DSP Handshake mode In handshake mode, one has to detect
        if the master clock is owned by the DSP or the crossbar.

        This allow H2O music and Stocasto demo music to work and doesn't
        break the MP2 player (Wait demo for example).
        [9431e54f]

2020-11-30 Teemu Hukkanen

        Fix typos in release notes for 2.3.0
        [cecfe23a]

2020-11-30 Eero Tamminen

        Compatibility updates from Nicolas & Laurent
        [ad10b236]

2020-11-29 Eero Tamminen

        EmuTOS compat updates for color icon support + Hatari intros
        [4304e944]

2020-11-29 Eero Tamminen

        Delmpaint needs MMU with Hatari v2.3
        [c834808c]

2020-11-28 Eero Tamminen

        Update list of files needing Hatari version number updates
        [93bfc3f5]

2020-11-28 Nicolas Pomarède

        Update release date for Hatari 2.3
        [a0837021]

2020-11-28 : *** Version 2.3.0 ***

2020-11-28 Nicolas Pomarede

	New release 2.3.0, update date in corresponding files
	[fd9439ca]

2020-11-28 Eero Tamminen

	Fix typo in readme

	Fixes: 5941d5ab4
	[6b3027b1]

2020-11-28 Eero Tamminen

	Update Hatari version in HTML documentation
	[7aaf28a1]

2020-11-28 Eero Tamminen

	Add few missing files to release check list
	[87d69404]

2020-11-28 Eero Tamminen

	Fine-tune Hatari manual intro text

	Mention more of EmuTOS advantages, and remove irrelevant option 
	detail.
	[f7f62701]

2020-11-27 Eero Tamminen

	Fix: enable ACSI & SCSI even when drives don't have partitions yet

	This is needed to be able to format zeroed disk images under Hatari.

	Reported-By: Christian Zietz

	Fixes: 2d8ada4bcfc5ec9fa7f9b419e235697ce90aa5ad
	[1d0ab403]

2020-11-25 Eero Tamminen

	Add note about M_PLAYER sound
	[23692874]

2020-11-24 Thomas Huth

	Remove the macOS and normal x86 Linux build from the Travis-CI

	Travis changed their business plan and does not offer free,
	unlimited test runs for open source projects anymore. The macOS
	containers were often running for a very long time, just busy with
	updating the homebrew installs, so they are wasting precious CI
	cycles now. And since we can test macOS and normal x86 Linux builds
	easily on other CI systems
	(cirrus-CI offers macOS and normal x86 Linux, too), let's remove
	these build jobs from the .travis.yml file now.
	[ab18d1fa]

2020-11-22 Eero Tamminen

	Add few extra items to release checklist

	That were found to be problematic in this release
	[2dee209d]

2020-11-23 Eero Tamminen

	Python UI: more TODOs
	[052173e7]

2020-11-22 Eero Tamminen

	Python UI: avoid crash under Wayland

	There's a crash if either [1] or both Python UI and Hatari are
	running under Wayland, because GtkSocket supports embedding only on
	X11.

	[1] when Weston is run under X11, Python UI (Gtk3) will default to
	   running under Wayland, but Hatari (SDL2) defaults to running
	under
	   X11.  I assume similar thing would happen if Xwayland is running
	   Wayland, as would happen e.g. under Gnome desktop.
	[18d4582b]

2020-11-22 Eero Tamminen

	OpenTTD, ScummVm and few other compatibility updates
	[21615ab5]

2020-11-22 Nicolas Pomarede

	Update error message when restoring a memory snapshot from a
	different Hatari version
	[dd24ddab]

2020-11-17 Eero Tamminen

	Python UI: update release-notes & TODOs
	[fac475e3]

2020-11-21 Eero Tamminen

	Python UI: Support Hatari Key and Float configuration values

	Otherwise Python UI crashes to assert after user has changed a 
	configuration value, and either tries to exit, or re-run Hatari, and 
	OKs Python UI's suggestion of saving the changed config settings 
	before that.
	[77d9ae2b]

2020-11-21 Eero Tamminen

	Update video recording documentation

	Add notes on other ways to speed up recording besides AVI
	compression method, and a note about the new zoom option behavior
	with SDL2.
	[cdf2a61d]

2020-11-12 Eero Tamminen

	TOS boot tester: add "--opts" to provide pass-through Hatari options

	This allows:

	* Testing Hatari config changes (with all given TOS versions) that
	 aren't currently supported by TOS boot tester

	* Fast testing of either "on" or "off" value for a boolean Hatari
	 option (asking TOS tester to test boolean option would do testing
	 for both "on" and "off" conditions)

	Note that check for MMU usage assumes that when "--opts"
	pass-through options contain "--mmu", it's to *enable* MMU (as that
	is disabled by default in Hatari configuration).

	This commmit also:

	* Fixes MMU wait additions to be applied only for machines
	 with MMUs (assumes user doesn't change CPU type with "--opts")

	* Changes only last "--bool" option values to be in effect,
	additional
	 "--bool" options values aren't anymore concatenated to earlier ones
	 (which was undocumented behaviour)

	* Documents "--bool" & "--opts" options behaviour
	[3f5d69e1]

2020-11-09 Eero Tamminen

	TOS boot tester: override all relevant Hatari config options

	This includes setting many options to values that are already Hatari 
	built-in defaults.

	Alternative to this would be to point $HOME to the test directory, 
	create ".config/hatari/" directory structure under it, and write the 
	override config file there (as "hatari.cfg") without options that
	are Hatari built-in defaults.

	(This sets also HATARI_TEST, to disable global Hatari config use.)
	[8880c16e]

2020-10-15 Eero Tamminen

	TOS boot tester: increase timeouts for all TOS versions

	Bootup has become a lot slower in recent Hatari versions when
	"--fast-boot on" etc options are not used.

	On Falcon, IDE interface is now enabled without IDE drive by
	default, which adds large IDE scanning fail delay.
	[da506280]

2020-11-18 Thomas Huth

	Add a note about supervisor not being required for IDE
	[b75ac675]

2020-11-18 Thomas Huth

	Add some sanity checks to the ide_data_read/write function

	Hatari could crash if a program tried to read or write IDE data when
	the drive was not set up correctly yet. Add some sanity checks to
	avoid this situation. Thanks to Christian Zietz for reporting the
	bug and providing a program to reproduce this issue.
	[5ef352ab]

2020-11-17 Eero Tamminen

	Add note about working around Windows SDL issues
	[5941d5ab]

2020-11-17 Eero Tamminen

	Add note about improving DMA handling
	[a94a6333]

2020-11-17 Eero Tamminen

	Add sleep so that EmuCON startup doesn't lose input in example
	script
	[93e91f3c]

2020-11-17 Eero Tamminen

	Update list of hconsole accepted Hatari command line options
	[e92640b7]

2020-11-16 Eero Tamminen

	EmuTOS sound & performance issues in Escape demos fixed

	Root-caused the issue and Roger commited fix for Crossbar config DSP 
	Xmit & REC masks used by EmuTOS.
	[1797e220]

2020-11-15 Nicolas Pomarede

	Fix typo (reported by Charles Curley)
	[54784fa3]

2020-11-11 Eero Tamminen

	TOS boot tester: add --drive-b to accepted bool options

	Also format the option lists a bit more nicely for 80 cols.
	[70517cc5]

2020-11-10 Eero Tamminen

	TOS boot tester: fix GEMDOS test source comments

	Also, do serial output test first which doesn't need extra wait on 
	autostart.

	Any changes to test sources causes also update of the resulting 
	binaries.
	[55fc8b8b]

2020-11-13 Eero Tamminen

	TOS boot tester: fix EmuTOS info, and detection with Python v3
	[f733163e]

2020-11-11 Eero Tamminen

	TOS boot tester: slightly improve messages

	Tell how long startup/memcheck and final waits there are.
	[c2ab4478]

2020-11-10 Eero Tamminen

	TOS boot tester: Fix signal handling

	Earlier version could get stuck sometimes without ALARM breaking 
	FIFO wait, at least with Python 3.7.3.
	[8a9a1b54]

2020-11-11 Eero Tamminen

	List few tests/ subdir contents which may be of use for Hatari users

	...and not just for automated Hatari functionality validation.
	[43598d80]

2020-11-11 Eero Tamminen

	Remove obsolete comment with reference to keymap-sample.txt
	[f1eeb911]

2020-11-10 Eero Tamminen

	Add note about H2O sound regression
	[effab249]

2020-11-09 Eero Tamminen

	VDI mode: use mode specific minimum limits, document issues better

	Minimum VDI window size can now be 200 as documented, not the
	earlier 16-divisable common minimum (208) needed for monochrome
	mode.

	Forcing 400 as minimum for 1-plane mode prevents TOS scaling its 
	desktop windows badly vertically, if user had specified <400 pixel 
	high 1-plane mode. [1]

	With plane count specific min widths, these limits cause screen to
	be always at least 32kB, like it's in real machine.  I don't know
	any program which expects this, but it can only help.

	[1] Original TOS will scale desktop windows badly also in 2-plane 
	mode, with >= pixel high screens. That I can't do anything about, 
	only document it with EmuTOS recommendation.
	[852d85dc]

2020-11-09 Eero Tamminen

	Fix HTML link
	[7945bf25]

2020-11-07 Eero Tamminen

	Add TODO items for things discussed before release
	[a8e7b1a9]

2020-11-07 Eero Tamminen

	EmuTOS compatibility list updates

	- Consistent use of '*' marks and ':'
	- Add information for rest of Falcon games (ones that work without
	DSP
	 with TOS4, but of which some still need Dsp_Lock to succeed)
	[eaef26bd]

2020-11-07 Eero Tamminen

	More compatibility list updates

	- Move PM doom/heretic under TT as they work also with that,
	 add PM Hexen, and comment on newer versions being slower
	- Check last of the Falcon games that had had earlier problems
	 with Hatari, and update their status
	- Slippery Sam (Sentry code?) needs now MMU
	[adbf371b]

2020-11-06 Eero Tamminen

	Move GEM games working also under TT, from Falcon list to there

	Even with them moved, Falcon lists have much more games, ones that 
	actually are Falcon specific.

	TT support was there first, and its monitor is VGA i.e. it also
	offers larger / more comfortable resolution without changing monitor
	type
	(e.g. Milanopoly widnows barely fit into 640x480).

	Also add NoMess TOS4 GEM game.
	[6221b7ea]

2020-11-06 Eero Tamminen

	TT game list already had one app, move another there + rename list

	Before release:
	sed -i 's/2.3-dev/2.3/' compatibility.html
	[5a614dee]

2020-11-06 Eero Tamminen

	Move MP2AUDIO to working EmuTOS apps list

	Missing 3D outlines in icons is a minor thing.
	[6dd50c18]

2020-11-06 Nicolas Pomarede

	Add french translations to *.desktop + remove unneeded 'Version'
	[2aa3890e]

2020-11-06 Thomas Huth

	Limit jobs on ppc64 to 4 - compilers gets killed due to
	out-of-memory otherwise
	[fc14039e]

2020-10-04 Thomas Huth

	Test compiling with Cygwin on Windows in the Cirrus-CI
	[82d84ee5]

2020-10-09 Thomas Huth

	Include sys/types.h for off_t (required for VisualStudio)
	[45efc3dd]

2020-11-05 Eero Tamminen

	More info on Bound demo

	And more consistency to EmuTOS notes
	[bb6d486f]

2020-10-31 Eero Tamminen

	DSP using Falcon games compatibility with EmuTOS - continued
	[824a2d9d]

2020-11-01 Nicolas Pomarede

	Add functions to read/write byte using DMA
	[0e7ba4ad]

2020-11-01 Nicolas Pomarede

	Add some common functions to read/write word when using DMA The main
	difference with the CPU accessing memory is that DMA will not 
	generate bus error signal when accessing bug error regions
	[6ff57aca]

2020-11-01 Thomas Huth

	Clarify coding style for new files
	[938c8e9e]

2020-11-01 Thomas Huth

	Make sure to init IDE subsystem when switching to Falcon mode
	[64e4e6d5]

2020-11-01 Thomas Huth

	Use SDL_RenderClear for accelerated graphic cards

	Jens Guenther reported that there are problems with KMS/DRM with
	SDL2 on the Raspberry Pi 4 and Wayland when this call is missing.
	Add it at least for hardware accelerated cards to avoid these
	problems. With software rendering, we still skip the call to not
	waste precious CPU cycles.
	[191a35fe]

2020-10-31 Thomas Huth

	Make sure to not read samples from beyond the end of STRam in the
	crossbar

	The dem EKO-Systems temporarily sets the DMA start address higher
	than the DMA end address. This caused the crossbar code to read
	beyond the STRam array, causing very bad sound in the "racing scene"
	of the demo, or even crashes of the emulator. Thus make sure to
	limit the accesses to the STRam array only.
	[54de5c31]

2020-10-31 Eero Tamminen

	Couple of further TOS4 games compatibility updates
	[db28b3f7]

2020-10-31 Eero Tamminen

	EmuTOS Falcon games compatibility update

	- Check all games listed as not working earlier
	- Check few games requiring DSP with EmuTOS git version
	- Use similar headings for Falcon demos, games and apps
	- Merge all pre-v1.0 notes to one list for demos and
	 one for games
	[8e44c07b]

2020-10-30 Nicolas Pomarede

	For Falcon, keep on updating DSP while the CPU is in STOP state
	(reported by Roger Burrows)
	[d4fd96b6]

2020-10-30 Eero Tamminen

	Compatibility updates for Falcon demos & apps with EmuTOS

	Tested more demos. Sound issues were Hatari issue.

	Extreme slowness with EmuTOS still an issue with Escape's "Hmmm..." 
	and "_" demos.
	[06e0e0fc]

2020-10-29 Eero Tamminen

	Update status for rest of problematic Falcon demos

	Regressions with the cycle exact mode have all been fixed, and there 
	have been also few other improvements.

	Remove WinUAE mentions from emutos.txt as it's noadays Hatari
	default, but leave them still to compatibility.html in case
	cycle-exact mode issues return.
	[4d1b4924]

2020-10-27 Eero Tamminen

	Parse all specified debugger commands files, not just last one

	Otherwise "hatari-prg-args" script doesn't work when user gives
	"--parse" option for Hatari.

	This is because "hatari-prg-args" also uses debugger command file,
	to set breakpoint that writes user specified arguments to launched
	Atari program basepage.
	[3f45f202]

2020-10-27 Eero Tamminen

	Update Falcon demos Hatari compatibility

	This covers most of updates from Laurent and some other demos I 
	checked, more updates to follow later on...

	Many demos have improved, but "Bound" and "Sidetracked" demos have 
	regressed.
	[a52eb300]

2020-10-27 Eero Tamminen

	Update ST, STE, TT and Falcon programs EmuTOS compatibility

	More Falcon demo/game updates to follow...
	[8d6946d4]

2020-10-25 Eero Tamminen

	Tell what default is used for --sound-buffer-size
	[983fd7e8]

2020-10-25 Thomas Huth

	Do not try to build man pages when gzip is not available
	[e9b4a5a3]

2020-10-09 Thomas Huth

	Replace u_short with 'unsigned short'
	[740daad7]

2020-10-09 Thomas Huth

	Use NOWARN_UNUSED() macro for compilers without __attribute__()
	[05dad347]

2020-10-09 Thomas Huth

	Fix declaration of the _xlate functions in case REGPARAM3 is set

	Otherwise there are compilation errors with VisualStudio:

	 src\cpu\memory.c(60): error C2165: 'left-side modifier': cannot
	modify
	pointers to data
	[5535e272]

2020-10-25 Eero Tamminen

	Use 0x hex format for all OS call functions in trace

	AES & VDI trace output is now consistent with rest of the traced OS 
	calls, and with function table output of their info commands.
	[d82ee32c]

2020-10-25 Eero Tamminen

	Add missing newline at end of VDI function list
	[108998d4]

2020-10-25 Eero Tamminen

	Show "info aes/vdi" on AES/VDI breakpoints also with !ENABLE_TRACING

	Before this commit, nothing was shown with breakpoint ":info
	aes/vdi" options unless ENABLE_TRACING was set.

	Improves also warning messages about there being no info available.
	[9d99fe6c]

2020-10-25 Eero Tamminen

	Fix compile warning for AES info in case of !ENABLE_TRACING
	[412f5ad3]

2020-10-14 Eero Tamminen

	Use structs for AES/VDI_Info data + fix for !ENABLE_TRACING build

	Change AES & VDI vector address used for "info aes/vdi", from
	globals to struct members, in preparation for making later further
	changes to how they're handled [1].

	[1] Vector contents are often just in the stack of the calling
	   program. While this is fine when "info aes/vdi" are called on the
	   actual trap instruction, their contents should be stored in case
	   user requests that "info" after AES/VDI traps have completed.

	Both AES & VDI vector address variables are nowadays needed even
	with
	!ENABLE_TRACING, so remove ENABLE_TRACING ifdef around AES struct.

	Fixes: 4edd0cd3a636bac / ef4c01c10ce968c
	[ec856180]

2020-10-25 Eero Tamminen

	Improve PopulateDTA()

	- Replace magic return values with defines
	- Fix non-existing file (e.g. broken symlink) breaking
	 showing of emulated directory contents

	Reported by Vincent Riviere.
	[cde30d81]

2020-10-25 Eero Tamminen

	Add temporary variable for code readability

	For strings used with Str_DecomposedToPrecomposedUtf8().
	[d20479d7]

2020-10-23 Eero Tamminen

	EmuTOS DSP support impact on its Falcon application compatibility

	And couple of minor updates.
	[235ab886]

2020-10-24 Eero Tamminen

	Update TT & Falcon application compatibility info
	[b81124a5]

2020-10-23 Nicolas Pomarede

	Update doc for fixed microwire shifting
	[b33dcc6d]

2020-10-23 Nicolas Pomarede

	As checked on real megaSTE, cpu freq should be 8 MHz at boot, not 16
	MHz
	[cef09b5c]

2020-10-23 Nicolas Pomarede

	Fix possible bad shifting of microwire mask when CPU is not running
	at 8 Mhz Fix Trans D-Bug Express by PHF when running in megaSTE mode
	at 16 MHz
	[919b9d4e]

2020-10-21 Eero Tamminen

	Update descriptions in *.desktop files

	As suggested by Nicolas
	[4ab2b55b]

2020-10-21 Eero Tamminen

	Minor updates to authors & thanks texts

	- Fit to 80 cols
	- Add contents list
	- refer the other file for list of additional contributors
	[28f6bc49]

2020-10-21 Nicolas Pomarede

	Update authors' list
	[f0395f21]

2020-10-21 Eero Tamminen

	Update release notes and authors

	Add release notes for:
	- HATARI_TEST variable
	- merged pull requests:
	 https://github.com/hatari/hatari/pulls?q=is%3Aclosed
	- new Blitter test

	Add one pull request author name to authors.txt
	(names for others weren't mentioned in pushed commits).
	[25be9430]

2020-10-21 Eero Tamminen

	Improve release notes formatting

	- Move all Emulator changes under suitable sub-headings
	- Fit Emulation & Fixed demos sections to 80 cols
	[71330dbc]

2020-10-21 Eero Tamminen

	Python scripts hashbang: python -> python3

	Scripts still support both Python versions, but most current distros 
	don't anymore install Python v2, or "python" symlink to it, by
	default.
	[3ccc775f]

2020-10-21 Eero Tamminen

	Improve atari-convert-dir error messages
	[6fd2a39d]

2020-10-20 Laurent Sallafranque

	Little fix to microphone adc buffer pointers for better sound
	quality. Thanks to Nicolas for the tips. Separating read and write
	pointers to half_buffer size avoid overlapping of sound datas.
	[612c6f47]

2020-10-19 Eero Tamminen

	Update m68k-linux doc

	- Use mainstream v5.9 kernel instead Geert's v5.8
	- Use latest EmuTOS (shorter URLs/paths)

	The few m68k-linux changes on top of mainstream kernel aren't
	relevant for testing with Hatari.
	[0c845ff4]

2020-10-19 Eero Tamminen

	Fix m68k-netbsd doc typos + add note about support
	[6b18556a]

2020-10-19 Thomas Huth

	Avoid talking about gmake since it might be optional
	[5607042e]

2020-10-19 Thomas Huth

	Fix realloc() handling in GemDOS_SFirst()

	cppcheck complains about wrong error handling here, and indeed, if 
	assert() is disabled, this simply ignored the possible NULL
	pointers.
	[65afc3f7]

2020-10-17 Thomas Huth

	Update readme.txt to reflect the current status

	- IPF 4.2 is not supported anymore, so no need to refer to its
	license
	- zlib library is optional nowadays, not required anymore
	- There are no non-CMake Makefiles anymore which could be
	overwritten
	 when compiling in-tree. Recommend out-of-tree builds only anyway.
	- Python-UI does not use PyGTK anymore, so remove that reference
	- Shorten lines that were longer than 80 characters
	[c0b8be25]

2020-10-12 Eero Tamminen

	Falcon games compatibility updates

	Based on testing by Laurent and me.
	[82dc312c]

2020-10-17 Eero Tamminen

	Fix VDI/AES info with ENABLE_TRACING disabled

	With an earlier commit, AES/VDI_Info() functions could be used from
	a AES/VDI opcode breakpoint, without AES/VDI being traced &
	attribute vectors saved as part of that, because info functions call
	now (new) AES/VDI_StoreVars() function to store the vectors when
	called directly on the trap instruction.

	However, that change broke compilation when ENABLE_TRACING was 
	undefined.  This fixes the compilation issue, by making most of the 
	functionality related to AES/VDI_Info() functions (and therefore
	also
	":info <aes|vdi>" breakpoints) available also when ENABLE_TRACING is 
	undefined.

	Fixes: 4edd0cd3a636bac
	[ef4c01c1]

2020-10-16 Eero Tamminen

	Remove __DATE__ / __TIME__ macros from *_fileid variables

	To make Hatari builds more reproducible.
	[f9002e98]

2020-10-16 Eero Tamminen

	Note in hatariui.desktop that it's just an UI for Hatari

	Suggested by Nicolas
	[0319cf1b]

2020-10-16 Eero Tamminen

	Fix checklist typos and add link to Mageia Hatari specs

	Suggested by Nicolas.
	[ec782dfd]

2020-10-16 Thomas Huth

	Do not load global config file in test mode

	There could be settings in /etc/hatari.cfg that could cause the
	tests to fail, so we should not load this global config file in test
	mode.

	Buglink: https://bugs.gentoo.org/739146
	[78dfcb24]

2020-10-16 Thomas Huth

	Add URLs for Travis and Cirrus
	[c07931b2]

2020-10-15 Eero Tamminen

	Improve release checklist

	- Organize the items better
	- Add pointers to Hatari distro packages
	[14071ff8]

2020-10-15 Eero Tamminen

	Update Hatari .desktop files

	- Remove deprecated Encoding line:
	
	https://specifications.freedesktop.org/desktop-entry-spec/desktop-entry-spec-1.0.html#deprecated-items
	- Add Comment/Categories/Keywords lines from:
	
	https://sources.debian.org/patches/hatari/2.2.1+dfsg-1/05-fix-desktop-entries.diff/
	- Remove GenericName as misleading, and redundant with Comment line
	- Enable startup notifications for Hatari UI (Gtk supports that)
	- End MimeType list with ';', from:
	
	https://src.fedoraproject.org/rpms/hatari/blob/master/f/hatari.spec#_74
	[4605cb46]

2020-10-16 Eero Tamminen

	Remove shebang from non-executable scripts

	From:
	https://src.fedoraproject.org/rpms/hatari/blob/master/f/hatari.spec#_62
	[c3c179c1]

2020-10-16 Eero Tamminen

	Make test scripts executable
	[8508603f]

2020-10-15 Eero Tamminen

	TOS-tester: show help items in format that's easier to copy paste

	Don't show value lists as Python tuples, but as strings one can copy 
	paste directly as tos_tester.py arguments.
	[3b971c03]

2020-10-14 Eero Tamminen

	hconsole: print Hatari args in more easily copy-pastable format

	Print it as a command line to run, instead of as Python array. 
	Especially useful with Hatari failures shown by tos_tester.py.
	[15c0f553]

2020-10-15 Eero Tamminen

	Fix TT-RAM option description

	Limit was increased to 512 a long time ago.
	[3a30434d]

2020-10-13 Eero Tamminen

	Document ":info" option + minor improvements to rest of debugging
	docs
	[e9edcc15]

2020-10-12 Eero Tamminen

	Add ":info" option for breakpoints (and to tests)

	Advantages compared to ":lock" option:
	- doesn't require changing debugger entry output with lock command
	- what info is shown, is breakpoint specific

	Main use-case for this is probably trace breakpoints for VDI and AES 
	function calls, that show VDI/AES attributes given for the call.

	Note: ":lock" option is still useful if one wants to provide options 
	for for the called info function, as those can be done withthe
	"lock" command (e.g. to show disassembly from address in specific
	register).
	[c6965db3]

2020-10-13 Eero Tamminen

	Fix breakcond.c code indent and remove trailing white space
	[2741d3cf]

2020-10-12 Eero Tamminen

	"info" command can show AES & VDI params on AES & VDI traps

	Not just after the trap instruction & only when VDI mode or tracing 
	is enabled.

	This way one doesn't need extra options & debugger files to do that
	on AES & VDI opcode breakpoints.
	[4edd0cd3]

2020-10-13 Thomas Huth

	Enable IDE bus errors in fast boot mode on the Falcon again
	[5ee4e3f1]

2020-10-12 Nicolas Pomarede

	Avoid using isspace() with signed characters (patch by Thomas Huth
	for WinUAE 2020/10/11)
	[b8465757]

2020-10-11 Eero Tamminen

	Update release notes & group tracing changes together
	[5d5dc158]

2020-10-11 Thorsten Otto

	Add Nvdi/Speedo/GDOS functions to the VDI trace output
	[2a3a4cda]

2020-10-09 Thomas Huth

	Don't include <sys/time.h> in test-dummies, it is not needed here
	[f10b285b]

2020-10-06 Thomas Huth

	Generate man page only if gzip is available
	[1327bf1c]

2020-10-09 Eero Tamminen

	Add more information about libreadline to Debugger manual
	[dc88929d]

2020-10-05 Eero Tamminen

	Fix: TOS booting from A: although SCSI HD drive was enabled

	Relies on previous commit.

	PS. separate bAcsiEmuOn & bScsiEmuOn bools are redundant, 
	nAcsiPartitions & nScsiPartitions variables could be used everywhere
	instead of them.
	[2000784d]

2020-08-31 Eero Tamminen

	Split SCSI init/uninit handling from ACSI init/uninit

	This fixes internal partition count being wrong after either ACSI or 
	SCSI HD settings have been changed, due to SCSI drives not being 
	deducted on SCSI UnInit() (drive count would be corrected on next 
	emulation reset though, as that resets also drive count).

	ACSI/SCSI/IDE comments are also fixed to use plural form as nowadays 
	all of them can have multiple drives/images.
	[2d8ada4b]

2020-10-04 Thomas Huth

	VGA is not a valid monitor setting in ST/STE mode
	[70ac4085]

2020-10-04 Thomas Huth

	Don't call functions from ctype.h with signed char pointers

	Calling functions from ctype.h with signed char pointers causes 
	compiler warnings with some libc implementations (like the one from
	Cygwin). Thanks to Vincent for the notification!
	[45b1cb0c]

2020-09-30 Thomas Huth

	Revert "Use "gnu_printf" format to silence compiler warnings on
	MSYS2"

	This reverts commit c060dc30976f0a2dec1c826167df857ab5468b83.

	It's not working as expected - it's causing trouble with Clang and 
	MinGW cross-compilers.
	[23d024c2]

2020-09-29 Thomas Huth

	Use "gnu_printf" format to silence compiler warnings on MSYS2

	Plain "printf" format means "ms_printf", which can not deal with the 
	usual 64-bit types like PRId64 properly.
	[c060dc30]

2020-09-27 Thomas Huth

	Update the travis CI jobs

	Switch to Ubuntu Focal, and use the latest xcode12 for building. 
	Also move the macOS jobs first since they often have the longest run
	times.
	[8d172fa5]

2020-09-28 Nicolas Pomarede

	Typo
	[e2b856dd]

2020-09-28 Nicolas Pomarede

	For cross-compilation, recent mingw versions set _FORTIFY_SOURCE,
	which requires to link with lib ssp We use "--as-needed" when
	linking to keep compatibilty with older mingw that don't require lib
	ssp
	[086a1300]

2020-09-26 Nicolas Pomarede

	Debug cleanups (from WinUAE 4.4.0+ 2020/09/26)
	[50c7632c]

2020-09-26 Nicolas Pomarede

	Fix compilation with old CPU core
	[edb42dd2]

2020-09-26 Thomas Huth

	Update information about IDE and Cecile in the docs
	[8799a8c9]

2020-09-26 Thomas Huth

	Use Log_Printf instead of fprintf
	[3428b057]

2020-09-26 Thomas Huth

	Use Ide_IsAvailable() to check whether we need to re-init the IDE
	subsystem

	This fixes a crash on the Falcon that occurred after a user ejected
	an IDE drive and rebooted the machine.
	[bad857a4]

2020-09-26 Thomas Huth

	Rename Ide_MmioIsAvailable() to Ide_IsAvailable() and add secondary
	disk there

	We are using the function in more spots than to only check for the 
	availability of the MMIO region, so use a more general name here.

	Also add ConfigureParams.Ide[1].bUseDevice to the check. While it is
	not possible to boot from a secondary drive, it seems like some
	drivers can still access it without a primary drive.
	[61c80690]

2020-09-26 Thomas Huth

	Fix crash that occurs when running with a secondary IDE device only

	When running Hatari with --ide-slave but without a corresponding 
	master IDE device, the emulator currently crashes since the
	cur_drive variable does not get initialized. Fix it by always
	setting cur_drive in ide_init2().
	[cb396d6e]

2020-09-24 Nicolas Pomarede

	Improve IdeInit() in Falcon mode with no IDE disk inserted (fix
	crash from previous IDE commit)
	[b92ac89e]

2020-08-30 Eero Tamminen

	Remove define obfuscating bAcsiEmuOn variable name
	[e7269072]

2020-09-22 Eero Tamminen

	GEMDOS HD changes fix MS Write crash

	Reported/tested by Roger.
	[6193513e]

2020-09-23 Nicolas Pomarede

	Update authors
	[a3ebf81d]

2020-09-23 Nicolas Pomarede

	Hatari 2.3 will ship with EmuTOS v1.0
	[2768045c]

2020-09-23 Nicolas Pomarede

	Typo
	[896aebc0]

2020-09-23 Nicolas Pomarede

	Update some changes for blitter
	[1dcd6ddf]

2020-09-23 Nicolas Pomarede

	Missing file from previous IDE commit
	[e18f0702]

2020-09-23 Nicolas Pomarede

	Initialize IDE memory region for other machines too if IDE is
	enabled
	[86ee31bc]

2020-09-23 Nicolas Pomarede

	Misc fixes (disable 68040 data cache if needed) (from WinUAE 4.4.0+
	2020/09/23)
	[5fe5459f]

2020-09-21 Nicolas Pomarede

	For blitter, improve STMemory_CheckAddrBusError to handle bus error
	in IO region (fix Oompa by No Extra) Unlike CPU, blitter should not
	create a bus error when accessing an address that would cause one
	(because blitter has no signal to handle bus error). In such case,
	write made by the blitter will be ignored and read will return a
	dummy value
	[26c05e27]

2020-09-21 Nicolas Pomarede

	IDE memory region should only be initialized for Falcon, else it
	should be a bus error region
	[872220ab]

2020-09-19 Nicolas Pomarede

	Disassemble FBF with zero offset as FNOP (from WinUAE 4.4.0+
	2020/09/19)
	[44885304]

2020-09-19 Nicolas Pomarede

	Add a test for the blitter (small program by Christian Zietz)
	[25be696b]

2020-09-19 Nicolas Pomarede

	Update release notes and thanks files
	[d1b501f0]

2020-09-11 Nicolas Pomarede

	Fix more spelling errors reported by 'codespell'
	[ca7191ad]

2020-09-10 Nicolas Pomarede

	Fix some spelling errors reported by 'codespell'
	[656fbf52]

2020-09-10 Nicolas Pomarede

	In DebugUI_GetScreenSize(), env variable should be COLUMNS not
	COLUMS
	[1438dfd2]

2020-09-10 Nicolas Pomarede

	Fix the blitter for the complex case where Xcount=1 and NFSR=1
	(thanks to Ijor for his Verilog code)
	[da453d63]

2020-09-09 Nicolas Pomarede

	Rename variable
	[51d91ad9]

2020-09-09 Nicolas Pomarede

	On STE, ensure delayed modifications of some video regs are applied
	at the end of the current line When delayed changes happened at HBL
	307 or more (when VBlank is ON), they could be delayed until the
	next visible line in the next VBL, which was wrong and too late
	[8975df94]

2020-09-09 Nicolas Pomarede

	Move FDC_DMA_Address in the FDC_DMA struct for correct memory
	snapshot (thanks to Squall/Hataroid for the report) Previously
	FDC_DMA_Address was not saved in the memory snapshot ; so if a
	snapshot was saved during disk activity, loading would fail when
	restoring the snapshot later.
	[a7e365cb]

2020-09-06 Nicolas Pomarede

	Skip MMU cache flush if MMU is not enabled (from WinUAE 4.4.0+
	2020/09/06)
	[1070ba6c]

2020-08-30 Nicolas Pomarede

	Remove use of unnecessary C++-only feature (sync indent with WinUAE
	4.4.0+ 2020/08/29)
	[3b2f5f7f]

2020-08-27 Thomas Huth

	Fix compilation on FreeBSD and some non-x86 architectures

	byteswap.h does not seem to exist on FreeBSD, and the current code
	also does not work on ARM and s390x. Let's simply use the portable
	SDL_Swap* functions instead of trying to find a swapping function
	for each and every operating system out there.
	[dc97b318]

2020-08-24 Thomas Huth

	Mark the nfgenerated variable with NOWARN_UNUSED

	The variable is only used if NOFLAGS_SUPPORT_GENCPU is not set, so
	GCC emits a compiler warning about a set-but-unused variable here.
	Let's use the NOWARN_UNUSED() macro to suppress the unnecessary
	warning in this case.

	Based on WinUAE commit 88a781dd24dc059764361fe2c7ff2a1133fc9701
	[8ab1e069]

2020-08-24 Thomas Huth

	getjitcputbl() and uaegetjitcputbl() are only useful if JIT is
	enabled

	This is WinUAE commit baa9697d0d00fac1272700b9d5c375be505274ad
	[6d1936b5]

2020-08-24 Thomas Huth

	Add missing prototype for do_merges()

	Without this prototype there is a GCC compiler warning when
	compiling the corresponding code in Hatari.

	This is WinUAE commit 8e1fc31c5173a399babaf09301933d1ccf87bd96
	[45e1237a]

2020-08-21 Nicolas Pomarede

	Remove warning for redefining macro 'bug'
	[244570b9]

2020-08-16 Nicolas Pomarede

	Update fullscreen test png for STE mode
	[0ab7c06c]

2020-08-16 Nicolas Pomarede

	Fix copy/paste error for VBlank's start position in STE mode, this
	should be the same as the STF
	[379612dd]

2020-08-16 Thomas Huth

	Fix fullscreen test to work with the latest changes to the video
	code

	The fullscreen routine from Flix does not delay the VBLANK for some
	more lines, so there are only 274 visible lines on the screen - and
	the last lines should be black now. The new behavior is different
	between ST and STE mode, so we need to reference pictures now. Also
	add --drive-led off to the run script to make sure that the drive 
	LED can never spoil the screenshot here.
	[ea68aeff]

2020-08-15 Thomas Huth

	Improve string / memory allocation in debugui.c, e.g. don't use
	assert()
	[2125d6ee]

2020-08-14 Eero Tamminen

	Update files for linux-m68k v5.8
	[ecbf64d0]

2020-08-05 Nicolas Pomarede

	Define SAHF_SETO_PROFITABLE for 64 bit CPU too (to remove some
	printf warnings in newcpu.c)
	[17160e9e]

2020-08-04 Nicolas Pomarede

	Add some OSX specific code for do_byteswap_64/_32/_16
	[24124626]

2020-08-04 Nicolas Pomarede

	Reformatting (from WinUAE 4.4.0+ 2020/07/29)
	[fb68184d]

2020-08-04 Nicolas Pomarede

	Fix Hard flush JIT option (from WinUAE 4.4.0+ 2020/07/28)
	[fcfc82f0]

2020-08-04 Nicolas Pomarede

	Separated NOFLAGS_SUPPORT to NOFLAGS_SUPPORT_GENCOMP and
	NOFLAGS_SUPPORT_GENCPU (from WinUAE 4.4.0+ 2020/07/28)
	[718db905]

2020-08-04 Nicolas Pomarede

	Aranym JIT merge (JIT is not used in Hatari) (from WinUAE 4.4.0+
	2020/07/27)
	[7f19b207]

2020-08-01 Nicolas Pomarede

	Better start/end position for the VBlank signal at 50Hz and 60Hz 
	This partly fixes the demo 'Fullast Vinner' by Troed/Sync which uses
	an early switch to 60Hz on line 14 to turn VBlank OFF and display up
	to 294 rasters changing color 0 Note that for now Hatari will not
	show all these upper lines due to a too short window
	[1f36a072]

2020-07-22 Thomas Huth

	EmuTOS changed the magic value for the extended header
	[453e88bb]

2020-07-20 Nicolas Pomarede

	Fix CHK2 disassembly. PC8r shows displacement address (from WinUAE
	4.4.0+ 2020/07/19)
	[0a364169]

2020-07-20 Nicolas Pomarede

	Debugger fi command multiword support + m68k_dumpstate (from WinUAE
	4.4.0+ 2020/07/19)
	[bb2bca24]

2020-07-20 Nicolas Pomarede

	CAS2 writes Rn2 first (from WinUAE 4.4.0+ 2020/07/13)
	[5468306e]

2020-07-19 Thomas Huth

	Fix problem with bogus command bytes / HuSHI version 2.16

	Martin van der Koelen reported that there is an issue with
	HuSHI-junior v.2.16 - it sends apparently superfluous command bytes
	after the command packet is already finished. Let's do not reset the
	byteCount until a new command is started when the A1 pin is pushed
	to 0. Thanks to Martin for the bug report and the original version
	of this patch.
	[60d20984]

2020-07-13 Eero Tamminen

	Add SV2020 demos to EmuTOS compat list

	256B intros:
	- "Der Spkr Imperative" needs TOS v1.62
	- "MindBender" overscan isn't in sync

	Otherwise everything else seems to work fine with EmuTOS.

	(Few last place intros/demos not checked.)
	[5f8086e3]

2020-07-11 Nicolas Pomarede

	Update doc about compiling with capslibrary 5.1
	[3d513579]

2020-07-11 Nicolas Pomarede

	DIVL causing exception should only reset (an)+/-(an) if 68060
	unimplemented (from WinUAE 4.4.0 2020/07/06)
	[30e85e56]

2020-07-02 Eero Tamminen

	Update release notes
	[5e35f196]

2020-07-01 Nicolas Pomarede

	Drop support for old Caps library v4.2, we only support v5.1 now As
	such, caps library's files should be located in
	/usr/local/include/caps and /usr/local/lib/caps, there's no more
	need for a 'caps5' directory
	[367a87bc]

2020-05-28 Eero Tamminen

	NF test: allow user to override GCC/VBCC settings
	[1c7e17e0]

2020-06-30 Eero Tamminen

	Add new demos to compatibility lists
	[ee66e734]

2020-06-30 Eero Tamminen

	Add example of using named ALSA end points with aconnect
	[8e9ea273]

2020-06-28 Thomas Huth

	Test fullscreen in both, ST and STE mode

	... since timings could be slightly different, let's better check 
	the fullscreen with both machine types.
	[b5815bba]

2020-06-26 Nicolas Pomarede

	Fix CHK2 and STOP/LPSTOP internally generated exception stacked PC
	(from WinUAE 4.4.0 beta8 2020/06/26)
	[24809069]

2020-06-25 Nicolas Pomarede

	Fix TRAPcc stacked PC (from WinUAE 4.4.0 beta8 2020/06/25)
	[d650af7d]

2020-06-18 Nicolas Pomarede

	Add dummy variable 'cpu_bus_rmw' to compile blitter.c with old CPU
	core
	[453f3f4b]

2020-06-15 Nicolas Pomarede

	Don't restart blitter in non HOG mode if the CPU is doing a RMW bus
	access (thanks to Christian Zietz for analyzing this bug) When
	running in non hog mode, the blitter could get the bus after 64 CPU
	bus accesses, even if the CPU was executing a RMW operation as in
	the TAS instruction. In some cases, the blitter would get access
	between the read and the write of the TAS instruction, which is not
	possible on real hardware and would cause bad value in control
	register when restarting the blitter using the TAS instruction
	[b3ea4fe5]

2020-06-15 Nicolas Pomarede

	Add basic CPU support for RMW bus cycles during the TAS instruction
	[e394aba8]

2020-06-15 Nicolas Pomarede

	Chipset/CPU multiplier in prefetch mode (not used in Hatari) (from
	WinUAE 4.4.0 beta7 2020/06/14)
	[bd159db8]

2020-06-08 Nicolas Pomarede

	68020/030 prefetch and MMU tweaks (from WinUAE 4.4.0 beta6
	2020/06/08)
	[f3cd1673]

2020-06-07 Eero Tamminen

	Fix: run-time IDE byte swap change requires IDE re-init

	Not just emulation reset.  Reported by Uwe Seimet.
	[04ca71c6]

2020-05-31 Nicolas Pomarede

	CPU model specific edge case updates (from WinUAE 4.4.0 beta5
	2020/05/31)
	[1a0e5c72]

2020-05-31 Nicolas Pomarede

	Optional BKPT CPU halt (from WinUAE 4.4.0 beta4+ 2020/05/31)
	[8ef5fb3c]

2020-05-31 Nicolas Pomarede

	Fix assembler not supporting instructions that modify address
	register but mnemonic not ending to 'A' (from WinUAE 4.4.0 beta4+
	2020/05/31)
	[d0832dea]

2020-05-31 Nicolas Pomarede

	Fix debug memory scanning start (not used in Hatari) (from WinUAE
	4.4.0 beta4+ 2020/05/31)
	[768f6f6f]

2020-05-29 Thomas Huth

	Add a test for the command FIFO
	[1954c98f]

2020-05-29 Thomas Huth

	Trigger screenshot from the test program to avoid race via the fifo
	[64c9df7b]

2020-05-29 Thomas Huth

	Set up ACIA and MFP vector base in the fakeTOS code
	[09f18963]

2020-05-29 Thomas Huth

	Indent with tabs, not with spaces
	[fa1d8d08]

2020-05-26 Thomas Huth

	Decrease sleep time to speed up the test time a little bit
	[fd6be33d]

2020-05-25 Eero Tamminen

	Update tests/ dir readme.txt
	[a6a4f648]

2020-05-25 Eero Tamminen

	Add "screenshot" command to debugger
	[cb4d9a61]

2020-05-24 Nicolas Pomarede

	Typo
	[725381dd]

2020-05-24 Nicolas Pomarede

	Debug logging improved format string support (not used in Hatari)
	(from WinUAE 4.4.0 beta4+ 2020/05/24)
	[adfa98f6]

2020-05-24 Nicolas Pomarede

	Some 68010 cycle count fixes (from WinUAE 4.4.0 beta4+ 2020/05/23)
	[bf9730d9]

2020-05-24 Thomas Huth

	Test with xcode11.4 instead of xcode9.3

	The old xcode9.3 container seems to be in a rather bad shape, there
	are lots of warnings from brew in the output, and the test takes
	very long there. Let's rather use the latest and greatest xcode11.4
	instead.
	[a2388708]

2020-05-24 Thomas Huth

	Fix some typos and the length of some lines
	[455a29fb]

2020-05-24 Thomas Huth

	Add a regression test for fullscreen FX
	[77342a6a]

2020-05-24 Thomas Huth

	Introduce --screenshot-dir option to select the folder for
	screenshots
	[a5c0867b]

2020-05-21 Nicolas Pomarede

	More 68010 bus error fixes (from WinUAE 4.4.0 beta3+ 2020/05/21)
	[d0298b79]

2020-05-21 Nicolas Pomarede

	68010 address errors fixed (from WinUAE 4.4.0 beta3+ 2020/05/21)
	[7438d4c5]

2020-05-21 Nicolas Pomarede

	Some 68010 address error stack frame fixes (from WinUAE 4.4.0 beta3+
	2020/05/21)
	[9f1a54bf]

2020-05-21 Nicolas Pomarede

	68030 MMU fixes. Software fixed pipeline stage fixes and more
	compatible (prefetch) locked rmw and mmufixup fix (from WinUAE 4.4.0
	beta3+ 2020/05/21)
	[759d60f9]

2020-05-20 Eero Tamminen

	Fix typo
	[51e9489d]

2020-05-18 Nicolas Pomarede

	Update release note for video/cpu
	[e5ebb95f]

2020-05-18 Nicolas Pomarede

	Handle screen with no vertical DE signal (introduced in 2016 in
	Hatari 2.0 but never complete...) This fixes fullscreen part in the
	demo 'Hard As Ice' by I.C.E. whose start code is very buggy and only
	work by chance because its messy fullscreen code disables vertical
	DE at one time, which allows timer B to restart at the correct
	position later (the bug under Hatari was reported in
	www.atari-forum.com)
	[df41e750]

2020-05-17 Eero Tamminen

	Document scripts in tools/debugger/
	[41d8c4b8]

2020-05-17 Nicolas Pomarede

	Fix 68000 MOVE write address error stacked PC (from WinUAE 4.4.0
	beta2+ 2020/05/17)
	[fc62c0d4]

2020-05-17 Nicolas Pomarede

	68000 write bus error stack frame PC field fix (from WinUAE 4.4.0
	beta2+ 2020/05/16)
	[49521004]

2020-05-17 Nicolas Pomarede

	68000 prefetch bus error stacked PC fix (from WinUAE 4.4.0 beta2+
	2020/05/16)
	[f548b904]

2020-05-17 Nicolas Pomarede

	Memory shift instruction prefetch bus error flag fixes (from WinUAE
	4.4.0 beta2+ 2020/05/16)
	[b2c47935]

2020-05-13 Eero Tamminen

	Fix URL
	[6f839242]

2020-05-13 Thomas Huth

	Unify the information about Large File Support

	The "Size of off_t=..." messages show up without context in case the
	check_type_size() test results were already available in the CMake
	cache - and that looks a little bit weird. Let's rather always print
	the information in the library summary text instead.
	[166a68ae]

2020-05-13 Thomas Huth

	Use proper coding style in file.c
	[261fc0dc]

2020-05-12 Thomas Huth

	Run CI jobs with --enable-debug to enable the assert()s
	[aee67ebd]

2020-05-12 Thomas Huth

	Always use -Wno-sign-compare and -Wno-missing-braces for the WinUAE
	CPU core files

	There are some of these warnings in the WinUAE CPU files, which we
	only suppressed in "Release" builds so far. They were showing up in
	the
	"Debug" builds, but they seem harmless. Nobody cared to get them
	fixed, and they make it hard to compile Hatari in "Debug" mode with
	-Werror. Thus let's simply always ignore them.
	[0ad7c9f5]

2020-05-11 Thomas Huth

	Silence another (false positive) -Wstringop-truncation warning from
	GCC v10
	[46466a88]

2020-05-12 Eero Tamminen

	Update m68k-linux.txt file name

	Fixes: 590f9a61
	[3de5804e]

2020-05-10 Nicolas Pomarede

	Fix code if malloc returns NULL (reported by GCC 10 -fanalyzer)
	[05384992]

2020-05-10 Nicolas Pomarede

	68000 read bus error PC field fixed. Prefetch bus errors only
	partially fixed (from WinUAE 4.4.0 beta2+ 2020/05/10)
	[04afec5e]

2020-05-09 Thomas Huth

	Use Str_Alloc() to allocate memory for strings

	GCC v10 features a static code analyzer that complains that we are
	ignoring NULL return values from malloc() in certain spots. Let's
	use Str_Alloc here instead which never returns NULL to fix these
	warnings here.
	[b7ed3363]

2020-05-09 Nicolas Pomarede

	Fix 68000 address error stacked PC field. (TODO: bus error) (from
	WinUAE 4.4.0 beta2+ 2020/05/09)
	[28d9a8ab]

2020-05-08 Nicolas Pomarede

	Improve timing when setting VSync signal (fix Multi scrolls part in
	Closure by Sync) VSync signal was set too early at the start of HBL
	310, instead of ~cycle 56 on HBL 310
	(at the same place where video counter is reloaded) and forced a
	wrong VBlank signal
	[3679a1ea]

2020-05-05 Thomas Huth

	Add a '+' to the EmuTOS version string if it is an inofficial build
	[1be3008c]

2020-05-04 Nicolas Pomarede

	Warning fix (from WinUAE 4.4.0 beta2+ 2020/05/04)
	[32f4fea0]

2020-05-04 Thomas Huth

	Check MinGW builds in the Gitlab CI
	[016fbe11]

2020-05-04 Thomas Huth

	Hack for silencing compiler warnings with MinGW
	[682e791f]

2020-05-03 Nicolas Pomarede

	CPU tester fixes: FREM and FMOD use current rounding mode. FSCALE
	didn't round if early exit. FSINH/FCOSH didn't set INEX if too large
	result (from WinUAE 4.4.0 beta2+ 2020/05/03)
	[ae4207b5]

2020-05-03 Thomas Huth

	Move the inclusion of math.h back to main.h

	We're using functions from this header in more files than expected
	(but the warnings only trigger on non-Linux systems like MinGW). 
	Let's play safe and move it back to main.h instead of modifying each 
	and every file that needs it.
	[215c6fc2]

2020-05-03 Thomas Huth

	Silence compiler warning from GCC 10

	GCC 10 complains that the strncpy could end up in an unterminated
	string here, and right it is! Let's better check that the string
	size really fits the destination buffer.
	[1d04085d]

2020-05-03 Nicolas Pomarede

	Merge with newcpu.c
	[8e8bdb06]

2020-05-03 Nicolas Pomarede

	68020 cpu speed adjustments, non-prefetch speed adjustment support
	(from WinUAE 4.4.0 beta2 2020/05/02)
	[252a233b]

2020-05-03 Thomas Huth

	Get rid of some Hatari-specific ifdefs

	DEBUG_CD32CDTVIO is not enabled in the Hatari code, so we do not 
	need the additional "#ifndef WINUAE_FOR_HATARI" here.
	[91ce481d]

2020-05-02 Nicolas Pomarede

	Fit max exponent (from WinUAE 4.4.0 beta1 2020/05/02)
	[f762acc5]

2020-05-02 Nicolas Pomarede

	FGETMAN does not round result (from WinUAE 4.4.0 beta1 2020/05/02)
	[b8806391]

2020-05-02 Nicolas Pomarede

	Debugger updates (not used in Hatari) (from WinUAE 4.4.0 beta1
	2020/05/02)
	[ac545498]

2020-05-02 Thomas Huth

	Show the EmuTOS version if available
	[3f271be1]

2020-05-02 Thomas Huth

	Fix coding style in statusbar.c

	statusbar.c is not derived from another project, so we should use
	the main Hatari coding style here and put curly braces on new lines.
	[976e2238]

2020-05-02 Thomas Huth

	dmaSnd.c and sound.c need math.h
	[c9c6a3e2]

2020-05-02 Thomas Huth

	No need to always include math.h and time.h in main.h
	[07612e93]

2020-05-01 Nicolas Pomarede

	Add missing include for 'PRId64' in printf
	[88bd4e37]

2020-04-29 Thomas Huth

	Add a proper check for tcsetattr() to get rid of the AmigaOS dummies
	[00c0790b]

2020-04-29 Thomas Huth

	Create file names with a dedicated function instead of using sprintf
	+ PATHSEP

	Using PATHSEP with sprintf and friends only works on systems that
	have a similar path handling to unix-like operating systems. It does
	not work on Amiga OS, for example, and due to this we already have
	some ugly #ifdefs in our code base. We already have File_MakePath()
	to create file names with a base directory, but it is not usable in
	these spots yet since that function return a freshly allocated
	buffer. Thus introduce a new function called File_MakePathBuf() now
	that can be used in these spots instead, so that we can finally get
	rid of the ugly #ifdefs in the code.
	[1184603e]

2020-04-28 Nicolas Pomarede

	FGETMAN always return full extended result (from WinUAE 4.4.0 beta1
	2020/04/28)
	[128801b2]

2020-04-27 Thomas Huth

	Add some more file and some supervisor gemdos tests
	[57ae973a]

2020-04-27 Thomas Huth

	Fix bad return values in the gemdos tester
	[9e69de44]

2020-04-25 Thomas Huth

	Check for valid NUL-terminated strings in ST memory before using
	them

	Blindly using strings from the emulated ST is a bad idea - the
	address could be wrong or the string could not be terminated. Thus
	let's check the strings first.
	[96eabce9]

2020-04-24 Eero Tamminen

	Update tests information in documentation
	[537aeb2d]

2020-04-24 Thomas Huth

	Add some GEMDOS regression tests
	[57ad5b48]

2020-04-24 Thomas Huth

	Fix bugs in Dsetpath() and Dgetpath()

	Dgetpath() has to return an empty string if the current directory is
	the root directory of a drive. And Dsetpath("") should simply do
	nothing but returning 0 for success
	(and while we're at it, check for valid ST memory in that function,
	too).

	Thanks to Roger Burrows for reporting the bugs!
	[775a9604]

2020-04-23 Eero Tamminen

	"info nvram" simplification

	bin2BCD() already checks for REG_BIT_DM bit, so it can be always
	used.
	[85afcb9f]

2020-04-22 Thomas Huth

	Do not run the tests in Travis if the build failed
	[9d419612]

2020-04-22 Thomas Huth

	Fix the FreeBSD task in the Cirrus CI (v12.0 did not work anymore)
	[db466357]

2020-04-21 Thomas Huth

	Fix <p> tags in the manual so that 'make test' succeeds again
	[50af1537]

2020-04-20 Nicolas Pomarede

	Update WinUAE CPU core version to 4.4.0 beta1
	[b0aedd3c]

2020-04-20 Nicolas Pomarede

	Check debugger at startup (from WinUAE 4.3.0+ 2020/04/19)
	[ae6ee4a1]

2020-04-20 Nicolas Pomarede

	FMOVEM weird behavior. FMOVE.P does internal calculations even if EA
	is invalid (from WinUAE 4.3.0+ 2020/04/19)
	[f5ae342a]

2020-03-06 Eero Tamminen

	Document graphics handling changes

	- Document new zoom/scale functionality and move it to general
	 display options as it isn't ST/STe specific
	- Remove zoom TODO item
	- Describe maximum screen size interaction with zoom option and
	 Atari monitor emulation
	- Note what SDL is as it's referred in many places in hatari.1
	- Update release notes for the graphics changes

	TODO: update manual "The Hatari Screen Dialog" section after
	     this patch series is in.
	[ac5bb36d]

2020-03-06 Eero Tamminen

	Replace "Linear scaling" GUI option with "GPU scaling" one

	Remove 'nRenderScaleQuality' config option now that scaling will 
	automatically request nearest pixel or linear scaling filtering 
	depending on which one is more suitable (and because all SDL2
	backends don't support linear scaling hint).

	To minimize GUI changes, corresponding "Linear scaling" option was 
	replaced with the "GPU scaling" GUI option for toggling the
	'bUseSdlRenderer' config option that enables use of the SDL2 GL(ES)
	/ DirectX renderer (needed for ScaleQuality, window resizing etc).
	[ca09d9d0]

2020-03-02 Eero Tamminen

	Support floating point zoom factors with SDL2

	Adds new "nZoomFactor" configuration option.

	With SDL2, --zoom option will always imply doubled ST-low resolution 
	framebuffer so that all resolution are approximate same size (as
	they would appear on real Atari monitor).  Zooming option controls
	how SDL2 SDL2 framebuffer is scaled to the host window.

	Move --zoom option to general display options as it's not ST/STE 
	specific.

	"renderQuality" configuration option is now ignored and a suitable 
	value is set automatically based on the difference between the
	Hatari framebuffer and size of the window on which it will be
	rendered.

	=> (smoothing) linear scaling is used for non-integer scaling
	values,
	  (sharp) nearest pixel sampling otherwise.

	If window resize requires scaling quality change, window's backing 
	texture is re-created (required to apply quality hint).

	If user disables SDL2 sdlRenderer support, all of above is no-op.

	User can still disable ST-Low resolution doubling to get 320x200 
	Hatari window also with SDL2, by leaving zoom factor to 1.0, and 
	setting Hatari framebuffer max width & height values to low enough 
	values.

	With SDL1, --zoom option works exactly as it did earlier, it's just 
	a shortcut to override max screen size values, which Hatari uses to 
	decide whether to double ST-low framebuffer (= accepts only values 1
	& 2).

	TODO: remove renderQuality and sdlRenderer configuration options?
	[df2101ee]

2020-04-19 Eero Tamminen

	Replace magic VDI resolution values with defines

	* Remove redundant MAX_VDI_PLANES define from vdi.h
	* Use correct ST/TT resolution defines instead of magic values in
	vdi.c
	* Make VDIRes -> INF file resolution value mapping more explicit
	with
	 the resolution defines, and move EmuTOS resolution value mapping
	 array to same place where the non-EmuTOS values are defined in
	 inffile.c
	[e9315a22]

2020-04-09 Eero Tamminen

	Fix: remove limit on number of GEMDOS HD host-side DTA cache entries

	Allocate host-side DTA cache entries on demand, instead of using
	fixed array of 256 entries.  Cache is increased in 256 entry
	increments
	(taking ~72KiB on 64-bit, when they don't yet link any host
	directory entry information).

	To reduce DTA cache growth, check whether Fsfirst() uses an earlier 
	reserved DTA cache entry, and if yes, re-use that.

	These, especially the latter change, fix deep directory hierarchy
	copy error reported on Atari Forum:
	http://www.atari-forum.com/viewtopic.php?f=51&t=38406

	If cache grows too large (>4k entries), use it as a ring buffer,
	same as earlier.  Output a warning if/when that happens, so it can
	be detected (this might still happen with long Hatari run, as
	there's no GEMDOS call for freeing DTAs [1], except at emulation
	reset).

	TODO:

	[1] I think cache leakage / growth could be fixed by keeping track
	of to which process each DTA belongs to (maybe by basepage
	address?).

	When process Pterm() is caught, DTAs cache would be scanned, entries 
	with terminated process basepage address would be set as unused, and
	DTAIndex would be set to first free(d) entry.

	DTAIndex increment would then either pick next free entry, or
	allocate more if there are no free ones. I.e. code would need to
	start skipping used DTA entries.

	To avoid redundant scanning when there are no free entries, there 
	probably should also be some counter indicating number of free DTA 
	cache entries (updated at cache increase, process exits and GEMDOS 
	resets).

	Note: In EmuTOS, number of DTA entries is limited only by available 
	memory.  Atari TOS versions may have fixed limits.
	[02560091]

2020-04-18 Nicolas Pomarede

	Disassembler FPU fixes (from WinUAE 4.3.0+ 2020/04/18)
	[b423db11]

2020-04-18 Nicolas Pomarede

	FMOVEM updates. Correct FPSR and FPCR masking (from WinUAE 4.3.0+
	2020/04/18)
	[e36a6433]

2020-04-18 Nicolas Pomarede

	Easy to use debug logger (from WinUAE 4.3.0+ 2020/04/18)
	[2c9dd563]

2020-04-18 Nicolas Pomarede

	FPU updates. FPcc instructions condition code checks are now 100%
	correct, FScc -(an)/(an)+ fix (from WinUAE 4.3.0+ 2020/04/18)
	[1f941db8]

2020-04-17 Eero Tamminen

	Correct GEMDOS HD Fsnext() invalid DTA ID error handling

	Fixes: bcbdec8b63b22da68842d6f1630e3c1adc9cc816

	That commit forgot return, so the error check was no-op.

	Thanks to Thomas for noticing this!
	[e031e53c]

2020-04-17 Eero Tamminen

	Docs: update EmuTOS, ST-RAM and emulation reset information
	[527f53f1]

2020-04-01 Eero Tamminen

	Accept 10MB (MegaSTE/TT max) as valid ST-RAM amount

	Add command line and SDL GUI support for it, and correct Falcon 
	memory amount to supported one, as there doesn't seem to be a config
	for 10MB.

	MegaSTE/TT info is from Christian Zietz:

	The TT has 2 MB of on-board ST-RAM and there were upgrade cards with 
	2 MB and 8 MB. But you could only add one upgrade, not both. Thus,
	at maximum 10 MB ST-RAM.  And TT MCU simply never decodes addresses
	above 0x9FFFFF. [1]

	On MegaSTE the memory above 10 MB is used for VME.

	[1] This has been found also in Simbo's HW experiments:
	
	http://www.atari-forum.com/viewtopic.php?f=27&t=19784&start=25#p218548

	=> Even if more memory (12 or 16MB) is installed to TT, only 10MB is
	visible.
	[f8a38911]

2020-04-13 Thomas Huth

	Add bus error tests with non-standard CPU modes

	We recently had a regression that bus errors were not working
	anymore with MMU enabled. We did not notice it immediately since we
	do not run any bus error tests in these CPU modes yet. Thus add some
	more tests with non-default CPU modes to avoid that this breaks so
	easily again.
	[e61f1cf6]

2020-04-12 Nicolas Pomarede

	Add Blitter_Reset() function and call it in case of warm/cold reset
	[d0a2d3f2]

2020-04-12 Thomas Huth

	Fix wrong format string on 32-bit hosts
	[3897d758]

2020-04-12 Nicolas Pomarede

	Remove unneeded and wrong comparisons (from WinUAE 4.3.0+
	2020/04/12)
	[92908fc7]

2020-04-12 Nicolas Pomarede

	CPU tester FPU updates/fixes. Don't set flags if exception,
	unimplemented instruction exception fixes, support 6888x
	undocumented opmodes, keep state of EA calculation, etc (from WinUAE
	4.3.0+ 2020/04/11)
	[132792cc]

2020-04-10 Nicolas Pomarede

	Missing IPL checks, 68020 timing changes. Normal MUL and DIV appears
	to have static cycle usage (from WinUAE 4.3.0+ 2020/04/09)
	[23c8044b]

2020-04-09 Nicolas Pomarede

	Don't check for CPU>=68020 in M68000_BusError, it's done in
	hardware_exception2() now
	[67adbabc]

2020-04-09 Nicolas Pomarede

	Merge support for both hardware bus error modes (from WinUAE 4.3.0+
	2020/04/09)
	[ce7a14ed]

2020-04-09 Nicolas Pomarede

	Ancient enum type update (from WinUAE 4.3.0+ 2020/04/08)
	[93afd90f]

2020-04-07 Nicolas Pomarede

	Add 'is_super_access()' function for old UAE CPU core
	[3e886618]

2020-04-07 Nicolas Pomarede

	Revert part of NFSR change from 2020/04/03 This change caused the
	demo 'Oompa' to crash after the greetings part. A better solution is
	needed
	[c228d63c]

2020-04-07 Nicolas Pomarede

	Don't use regs.s directly when checking memory access, use
	is_super_access() to handle 'moves' case
	[6d920bd0]

2020-04-07 Nicolas Pomarede

	User/supervisor mode memory access handler helper function (from
	WinUAE 4.3.0+ 2020/04/06)
	[657f8917]

2020-04-05 Eero Tamminen

	Improve EmuTOS debugging notes

	Had to debug EmuTOS when testing potential 8-plane VDI mode for 
	Hatari, so it was better to document that while it's still fresh in
	my memory...

	Updated also links to Hatari documentation.
	[a0dc31cc]

2020-04-06 Eero Tamminen

	Note: SCU/VME register access disabling breaks things with TOS

	That's why it's a separate patch, and will be discarded when Hatari
	gets real MegaSTE/TT SCU/VME emulation support.
	[2bbde5a8]

2020-04-05 Eero Tamminen

	VDI trace: log when line-A / VDI variables are changed for VDI mode

	To check whether that happens / does it get called early enough.
	[48ce93b5]

2020-04-06 Nicolas Pomarede

	68040+ FPU command disassembler support. Fix some FPU commands
	output (from WinUAE 4.3.0+ 2020/04/05)
	[d22640b4]

2020-04-06 Nicolas Pomarede

	Enable better bus error handling for CPU >=68020 and MMU
	[7d1fa881]

2020-04-06 Nicolas Pomarede

	Hardware bus error support update (from WinUAE 4.3.0+ 2020/04/05)
	[a1271ca0]

2020-03-29 Eero Tamminen

	Update m68k-linux doc and patches

	- Latest Linux v5.6 & EmuTOS v0.9.12
	- WinUAE CPU core handling for autoinc/decrement instructions
	 exception adresses is fixed
	- DSP / IDE reset messages are due to Linux kernel missing PSG
	port-A
	 initialization and Hatari initializing it to 0xff, add patch for
	that
	- More information on MegaSTE/TT and 040/060 emulation Linux
	compatibility
	 - Add Hatari patch for working around the Hatari SCU/VME issue
	- Have all kernel patches in "git format-patch" format for easy
	applying
	[0f755bc2]

2020-04-03 Nicolas Pomarede

	Fix some unneeded word access related to NFSR in blitter (thanks to
	Uko/David for the patch)
	[85e1859b]

2020-04-01 Eero Tamminen

	Fix memory amount validation

	Earlier validation would on first call (from options.c) pass e.g. 
	value 10, and on second call (from configuration.c apply) silently 
	fail the converted 10240 value, so that it defaults to 1024 instead.

	Fix validation to return error on first call, and configuration
	apply to warn about unsupported memory values.
	[6922af3c]

2020-03-02 Eero Tamminen

	Optimize CNF SCREEN struct by grouping ints & bools

	CNF_SCREEN struct size decrease:
	* SDL2: 64 -> 56
	* SDL1: 56 -> 48
	[68845868]

2020-03-31 Eero Tamminen

	Typo fix: divisable -> divisible

	Reported by Roger Burrows
	[03e69326]

2020-03-30 Nicolas Pomarede

	Fix typo in cmake : ReadLine_FOUND -> Readline_FOUND
	[8fd0df1a]

2020-03-30 Nicolas Pomarede

	When using cmake >= 3.17, fix package name upper/lower cases used
	with find_package_handle_standard_args Since version 3.17, cmake
	will display a warning if the package name Xxx given to
	find_package_handle_standard_args does not match the name used in
	the cmake/FindXxx.cmake with the same upper/lower cases.
	[13dc6356]

2020-03-29 Nicolas Pomarede

	Show multiplier in parenthesis if 68000/010 and brief extension
	format with non-zero scale fields. (68020+) was not shown if brief
	extension with non-zero scale (from WinUAE 4.3.0+ 2020/03/20)
	[ef320877]

2020-03-26 Eero Tamminen

	Inform user about NF_SHUTDOWN / NF_EXIT to terminal

	Unless user triggered Hatari reset/shutdown himself from the OS, 
	he/she may think that Hatari crashed.  User may not remember
	enabling NatFeats, nor know about SW calling NF_SHUTDOWN on certain
	events
	(e.g. Magic does that when it itself crashes).  It's better to 
	uncoditionally print user a note about these events.
	[56240f77]

2020-03-23 Eero Tamminen

	Fix: GEMDOS HD Pexec for files named as *.gz or *.zip

	Split normal file reading to a separate File_ReadAsIs() function and 
	call it from original File_Read().

	Gzip / Zip extension checking and automatic uncompressed is unwanted 
	for files accessed through GEMDOS HD emulation, such as Pexec
	programs and auto-start *.INF files.  Use the new File_ReadAsIs()
	function for them instead of File_Read().

	Fixes a regression with an Atari game which loader Pexec'ing a file 
	called "out.zip".

	Lilo code does GZ uncompression explicitly, so that was changed too.

	Which leaves following users of File_Read() i.e. automatic extension 
	handling and uncompression:
	* cartridge & TOS image loading
	* different floppy disk format image handlers
	* hmsa tool

	Fixes: 1915c2a0e
	[ba46987a]

2020-03-23 Eero Tamminen

	List new info subcommands in release notes
	[46b8612e]

2020-03-14 Eero Tamminen

	Add "info acia" debugger command
	[71d83f65]

2020-03-14 Eero Tamminen

	Add "info dmasnd" debugger command

	Moved Falcon Crossbar code for showing sound DMA registers to the
	new function, and called the new function from crossbar info.  Added
	LMC reg values.
	[6e2d24c2]

2020-03-15 Eero Tamminen

	Add "info ikbd" debugger command
	[c8369049]

2020-03-15 Eero Tamminen

	Add "info mfp" debugger command
	[e06e35e6]

2020-03-13 Eero Tamminen

	Add "info nvram" debugger command
	[5adb6019]

2020-03-14 Eero Tamminen

	Add "info rtc" debugger command
	[aa16eb26]

2020-03-13 Eero Tamminen

	Add "info scc" debugger command
	[1223f0c1]

2020-03-05 Eero Tamminen

	Add preliminary doc about m68k NetBSD usage & issues with Hatari
	[641b74bc]

2020-03-05 Eero Tamminen

	Shorten m68k-linux doc file name
	[590f9a61]

2020-03-11 Eero Tamminen

	Add floppy-only STOS games to emutos.txt

	Plus few other updates.

	Only input issues are listed for ST games anymore. Issues specific
	to individual ST games are better listed in EmuTOS incompatible.txt,
	and rest of floppy-only ST games have also many other issues
	(overwrite TOS memory etc).
	[2c300c66]

2020-03-05 Eero Tamminen

	Fix release-notes typos
	[40a5cdc9]

2020-03-09 Eero Tamminen

	Add few STOS games to EmuTOS compat list
	[eb093f96]

2020-03-05 Thomas Huth

	The 'python' binary is in the python-unversioned-command package now
	[39717472]

2020-03-05 Thomas Huth

	Check out-of-tree builds in the CI, too

	And we also have to install python2 with the latest version of
	Fedora explicitly to get the "python" command (as long as we haven't
	switched our scripts to use "python3" yet).
	[c28a9674]

2020-03-05 Thomas Huth

	Silence compiler warnings about unused functions
	[211f8cd0]

2020-03-04 Nicolas Pomarede

	Added branch instructions missing IPL checks (from WinUAE 4.3.0+
	2020/03/04)
	[e6cc4630]

2020-03-04 Nicolas Pomarede

	Fix 68040 MMU MOVEM restart handling (from WinUAE 4.3.0+ 2020/03/04)
	[3e7c3ffb]

2020-03-04 Nicolas Pomarede

	Generate separate BSR for all CPU models. Fixes address error
	handling in non-prefetch mode (from WinUAE 4.3.0+ 2020/03/01)
	[2e825a69]

2020-03-04 Nicolas Pomarede

	Prefetch mode interrupt delays need SPCFLAG_INT or interrupt start
	wold get delayed, especially after MOVE to SR (from WinUAE 4.3.0+
	2020/02/29)
	[f27aa276]

2020-02-29 Nicolas Pomarede

	68010 loop mode start first round DBcc execution does normal
	prefetches (from WinUAE 4.3.0+ 2020/02/29)
	[2f13887d]

2020-02-23 Nicolas Pomarede

	68010 prefetch bus error updates (AND.L, EOR.L, OR.L, LEA) (from
	WinUAE 4.3.0+ 2020/02/22)
	[39c3647d]

2020-02-23 Uwe Seimet

	Update SCSI driver URL
	[558a6eee]

2020-02-23 Nicolas Pomarede

	Search for include files into CMAKE_CURRENT_BINARY_DIR too (fix
	out-of-source build with cmake)
	[c02785f0]

2020-02-22 Nicolas Pomarede

	Merge changes from main repo
	[ca8d8a0c]

2020-02-22 Nicolas Pomarede

	68010 bus error updates. Read data bus errors fully supported. Write
	and prefetch to do (from WinUAE 4.3.0+ 2020/02/22)
	[bfc3ec4c]

2020-02-20 Nicolas Pomarede

	Remaining 68010 address error tester errors fixed (from WinUAE
	4.3.0+ 2020/02/19)
	[9673852c]

2020-02-17 Nicolas Pomarede

	Enable the new bus error handler in WinUAE's cpu core and set
	'hardware_bus_error=1' on bus error
	[6476cca9]

2020-02-17 Nicolas Pomarede

	DBcc non-ce timing fix, part 2 (from WinUAE 4.3.0+ 2020/02/17)
	[3ba94093]

2020-02-17 Nicolas Pomarede

	Update gencpu.c to output Hatari's specific "CurrentInstrCycles" for
	recent WinUAE changes
	[2ef505ec]

2020-02-16 Nicolas Pomarede

	Fix DBcc in non-ce mode. MOVES non-MMU wrong output function fix
	(from WinUAE 4.3.0+ 2020/02/16)
	[5969a5dc]

2020-02-16 Nicolas Pomarede

	68000 prefetch bus error BTST Dn,#x, NBCD.B and LSLW fix.
	Reformatting (from WinUAE 4.3.0+ 2020/02/16)
	[a00efd8a]

2020-02-16 Nicolas Pomarede

	Bus error startup takes 4 more cycles than address error (at least
	with bus error external hardware for Amiga) (from WinUAE 4.3.0+
	2020/02/15)
	[e6ca662f]

2020-02-16 Nicolas Pomarede

	Support CPU frequency multpliers in prefetch mode (not used in
	Hatari for now) (from WinUAE 4.3.0+ 2020/02/15)
	[cd602682]

2020-02-16 Nicolas Pomarede

	Removed unused variable (from WinUAE 4.3.0+ 2020/02/15)
	[907fd960]

2020-02-16 Nicolas Pomarede

	Address error caused by odd exception vector fix (from WinUAE 4.3.0+
	2020/02/15)
	[71b6b4b5]

2020-02-16 Nicolas Pomarede

	Fix bus/address error timing. MOVE write address error fix (from
	WinUAE 4.3.0+ 2020/02/15)
	[93792be5]

2020-02-16 Nicolas Pomarede

	Fix prefetch counting (from WinUAE 4.3.0+ 2020/02/14)
	[dfafa7fe]

2020-02-16 Nicolas Pomarede

	IPL detection delay update. Use IPL detection delay also in prefetch
	mode (from WinUAE 4.3.0+ 2020/02/14)
	[963bd8d0]

2020-02-15 Nicolas Pomarede

	68000 non-prefetch mode is also cycle-accurate (does not include
	wait state memory accesses or exception special cases) (from WinUAE
	4.3.0+ 2020/02/13) Non-prefetch core also returns count of memory
	accesses which is used by 68020+ modes to calculate very approximate
	cycle counts.
	[0294f47d]

2020-02-15 Eero Tamminen

	Update release notes and bugs list
	[38d116fc]

2020-02-15 Eero Tamminen

	Add profile info support WinUAE disassembly output

	Similarly to how external dissassembler shows it.

	Note that WinUAE disassembly is still lacking options for
	controlling:

	* which elements / columns are enabled in the output (mostly needed
	 for disabling hex values for instructions mnemonics & branch value
	 output as they make disassembly output width to fluctuate too much)

	* how the output looks like, whether instructions are capitalized
	etc.
	[392d14f6]

2020-02-15 Eero Tamminen

	Trivial buf_out() optimization

	To make it easier to compare result against code in next commit.
	[7ef1e8b1]

2020-02-14 Nicolas Pomarede

	Set correct I/N bit when address error starts because of odd
	exception vector (from WinUAE 4.3.0+ 2020/02/09)
	[f73b0c3b]

2020-02-14 Thomas Huth

	Add remark that you need a HD driver for hard disks
	[138d37e6]

2020-02-14 Thomas Huth

	Rework/extend the hardware differences table
	[59ac449a]

2020-02-14 Thomas Huth

	No need to include blitter.h for the TT
	[5c3d2a2c]

2020-02-12 Thomas Huth

	natfeats test needs to be adapted to the UAE disassembler
	[7eed6815]

2020-02-12 Thomas Huth

	Use UAE disassembler by default since the external one is deprecated
	[23b64e55]

2020-02-12 Thomas Huth

	Add remark that we require gnu99 now
	[04d69b29]

2020-02-12 Thomas Huth

	zlib is optional nowadays, and add CMake minimum version
	[8a30f0c0]

2020-02-12 Thomas Huth

	Silence compiler warning
	[d00c27a4]

2020-02-10 Nicolas Pomarede

	MOVEM bus error prefetch mode timing fix (from WinUAE 4.3.0+
	2020/02/09)
	[5fe4202d]

2020-02-10 Nicolas Pomarede

	TAS unexplained delay when read causes bus error (from WinUAE 4.3.0+
	2020/02/09)
	[fc75094e]

2020-02-09 Nicolas Pomarede

	68000 prefetch bus error updates and fixes (from WinUAE 4.3.0+
	2020/02/08)
	[7cb4dbfa]

2020-02-04 Nicolas Pomarede

	Some instructions generated common function using 68010 timing,
	instead of generating separate 68000 and 68010 functions(from WinUAE
	4.3.0+ 2020/02/04)
	[72247b69]

2020-01-01 Eero Tamminen

	Split features to separate sections by machine type in manual

	Add also note about chipset type and that 030+, TT & Falcon support 
	requires 512k version of EmuTOS.
	[49c3a05e]

2020-02-04 Nicolas Pomarede

	Store the state of the DMA sound IRQ signal for STE/TT/Falcon
	[686a0f7d]

2020-02-04 Nicolas Pomarede

	Clear STE/TT DMA sound interrupt line on reset
	[8ac59e22]

2020-02-04 Nicolas Pomarede

	Add some missing updates for Falcon DMA sound int signal and take
	MFP's AER into account for Timer A event count mode
	(fix 'Electric Night' demo by Dune)
	[baf98658]

2020-02-04 Nicolas Pomarede

	Fix MFP GPIP7 : on Falcon it only reports DMA sound state, not
	mono/color monitor
	[8119683a]

2020-02-03 Nicolas Pomarede

	Misc fixes for RTE/RTR (from WinUAE 4.3.0+ 2020/02/03)
	[bf15aadc]

2020-02-02 Nicolas Pomarede

	Odd interrupt vector emulation and misc fixes (from WinUAE 4.3.0+
	2020/02/02)
	[079ade33]

2020-02-02 Nicolas Pomarede

	MNEMOFLAG_LOOPMODE (from WinUAE 4.3.0+ 2020/02/01)
	[3068c6d9]

2020-02-02 Nicolas Pomarede

	Update for TAS (Amiga only, from WinUAE 4.3.0+ 2020/02/01)
	[e5b01e52]

2020-02-02 Nicolas Pomarede

	Automatically format cpuemu files. Part 4/4. Remove unused old
	formatting and reformat (from WinUAE 4.3.0+ 2020/02/01)
	[35862cd3]

2020-02-02 Nicolas Pomarede

	Automatically format cpuemu files. Part 3. Remove remaining old
	formatting support (from WinUAE 4.3.0+ 2020/02/01)
	[dce68aa5]

2020-02-02 Nicolas Pomarede

	Automatically format cpuemu files. Part 2. Remove manual formatting
	(from WinUAE 4.3.0+ 2020/02/01)
	[3547846b]

2020-02-02 Nicolas Pomarede

	Automatically format cpuemu files. Part 1 (from WinUAE 4.3.0+
	2020/02/01)
	[f60dc0a5]

2020-02-01 Nicolas Pomarede

	68010 RTE cycle order fix, TAS separated to 68000, 010 and 020+
	versions (from WinUAE 4.3.0+ 2020/02/01)
	[7074f47e]

2020-02-01 Nicolas Pomarede

	Fix prefetch mode address error timing if address error check is
	before any memory accesses. Fix prefetch mode JMP and JSR address
	error timing (from WinUAE 4.3.0+ 2020/01/31)
	[00b22c49]

2020-02-01 Nicolas Pomarede

	Prefetch mode bus error timing fixes (from WinUAE 4.3.0+ 2020/01/31)
	[70d086d3]

2020-02-01 Nicolas Pomarede

	Fix MOVEM prefetch mode bus error timing (from WinUAE 4.3.0+
	2020/01/31)
	[d7e2d3f3]

2020-01-30 Eero Tamminen

	Better PortMidi write error handling

	- PortMidi notifying about incoming data on writes is not an error
	- Give verbose version of the error to trace output
	[f75558df]

2020-01-29 Nicolas Pomarede

	Revert TAS change. Fix ADDX/SUBX.L -(An),-(An) cycle order (from
	WinUAE 4.3.0+ 2020/01/29)
	[3108fe67]

2020-01-27 Nicolas Pomarede

	Fix 68000 TAS cycle order, prefetch is before read-modify-write
	cycles, not after (from WinUAE 4.3.0+ 2020/01/27)
	[5e903fe8]

2020-01-27 Nicolas Pomarede

	68000 prefetch mode exception timing adjustments (from WinUAE 4.3.0+
	2020/01/26)
	[86bcba74]

2020-01-27 Nicolas Pomarede

	68010 full support and bug fixes (from WinUAE 4.3.0+ 2020/01/26)
	[ec2be805]

2020-01-21 Nicolas Pomarede

	Fix approximate 68000 mode cycle counts (from WinUAE 4.3.0+
	2020/01/18) Instructions that did a return before any memory access
	(eg in case of address error) had +4 cycles to total, which was
	wrong
	[ff716068]

2020-01-21 Nicolas Pomarede

	Fix cycles count for JSR/JMP in case of address error (from WinUAE
	4.3.0+ 2020/01/18)
	[e5c37f96]

2020-01-18 Eero Tamminen

	Add sections on debugger config options and TSR debugging

	Latter is partly based on suggestion by Markus Fröschle.
	[31d35865]

2020-01-18 Eero Tamminen

	Fix: only 512k version of EmuTOS supports TT/Falcon

	Reported by Thorsten Otto.
	[33d4601d]

2020-01-04 Eero Tamminen

	EmuTOS compatiblity updates

	- New ST/STE games
	- Audio Sculpture versions
	[19a7cbb1]

2020-01-12 Nicolas Pomarede

	68000 (CHK and div by zero) and 68010 cycle timing fixes (from
	WinUAE 4.3.0+ 2020/01/12)
	[8fdfb60c]

2020-01-12 Nicolas Pomarede

	Illegal MOVEC disassembler PC fix (from WinUAE 4.3.0+ 2020/01/12)
	[50b857d0]

2020-01-11 Nicolas Pomarede

	68010 cycle count updates (from WinUAE 4.3.0+ 2020/01/11)
	[38a88ca6]

2020-01-11 Nicolas Pomarede

	68010 read bus error support (from WinUAE 4.3.0+ 2020/01/11)
	[e4597326]

2020-01-11 Nicolas Pomarede

	Renamed cpu bus error -> hardware bus error (from WinUAE 4.3.0+
	2020/01/11)
	[e4abda36]

2020-01-11 Nicolas Pomarede

	Add some missing updates for STE DMA sound int signal and take MFP's
	AER into account for Timer A event count mode
	[bdf58e60]

2020-01-11 Nicolas Pomarede

	Set GPIP7 bit to 1 when dma sound is enabled Previously GPIP7 was
	only set to 0 when DMA stopped, but not set to 1 when playing, which
	prevented MFP from detecting 1->0 transition and triggering GPIP7
	interrupt at $13C
	(fix Blitter Mania / 10 Years Atari ST by Sedma not starting after
	loading)
	[f9f1a01c]

2020-01-10 Nicolas Pomarede

	68010 ADDX.L/SUBX.L bus error fix ((from WinUAE 4.3.0+ 2020/01/10)
	[60c8579b]

2020-01-08 Thomas Huth

	Add missing </li> end tags
	[de60be41]

2020-01-06 Nicolas Pomarede

	68010 address error emulation update. Halt CPU if 68010 and VBR is
	odd (from WinUAE 4.3.0+ 2020/01/06)
	[e760703b]

2020-01-06 Nicolas Pomarede

	68000/010 odd exception vector address error emulation (from WinUAE
	4.3.0+ 2020/01/06)
	[6a41c08c]

2020-01-06 Nicolas Pomarede

	68030 MMU hardware bus error support (from WinUAE 4.3.0+ 2020/01/06)
	[cf892c79]

2020-01-06 Thomas Huth

	Add missing files to doc/CMakeLists.txt
	[899d6d74]

2020-01-06 Thomas Huth

	Fix remaining HTML issues in the HW table, use proper CSS instead

	This fixes the remaining issues reported by tidy, so that "make
	test" is working fine now again. And while we're at it, also replace
	<br> by <br/> to be consistent with these tags, too.
	[6d7478c1]

2020-01-05 Nicolas Pomarede

	Fixed return modified register value in 68030 mmu bus error
	exception handler if mode was -(an) or (an)+ (from WinUAE 4.3.0+
	2020/01/05)
	[86c612f5]

2020-01-05 Nicolas Pomarede

	Another 68030 MMU regression fix for commit d6a089c4 from 2020/01/04
	(from WinUAE 4.3.0+ 2020/01/05)
	[f09de83d]

2020-01-05 Nicolas Pomarede

	Fix 68030 MMU regression in commit d6a089c4 from 2020/01/04 (from
	WinUAE 4.3.0+ 2020/01/05)
	[6111df0e]

2020-01-05 Nicolas Pomarede

	Apparently 68030 does post-increment/pre-decrement before MMU bus
	error is generated (from WinUAE 4.3.0+ 2020/01/04)
	[679c8646]

2020-01-05 Nicolas Pomarede

	68000/68010 odd exception vector caused address error fix (from
	WinUAE 4.3.0+ 2020/01/04)
	[3b80bea9]

2020-01-04 Nicolas Pomarede

	MOVEC disassembly shows if used control register is supported by
	current CPU model (from WinUAE 4.3.0+ 2020/01/04)
	[8cee8df0]

2020-01-04 Nicolas Pomarede

	Basic bus error support added to non-prefetch CPU modes (from WinUAE
	4.3.0+ 2020/01/04)
	[600c509f]

2020-01-04 Nicolas Pomarede

	68010 loop mode timing update and some fixes (from WinUAE 4.3.0+
	2020/01/04)
	[9abe83c8]

2020-01-04 Nicolas Pomarede

	68030 MMU state handling simplified (from WinUAE 4.3.0+ 2020/01/04)
	[d6a089c4]

2020-01-04 Eero Tamminen

	Fix w3 HTML validator issues except for HTML v5 align->CSS warnings
	[1cf1958f]

2020-01-04 Eero Tamminen

	Fix some HTML tidy warnings up to HTML v4

	(Tidy seems to default to HTML v5 though.)
	[8963eef9]

2020-01-04 Eero Tamminen

	Fix RTC row

	(Missed when switching STE & MegaST columns.)
	[8840963b]

2020-01-03 Nicolas Pomarede

	Update version for current WinUAE's sources
	[3e1e11ff]

2020-01-03 Nicolas Pomarede

	Assembler ADDQ/SUBQ.B/.W support, ADDAQ/SUBAQ .W support (from
	WinUAE 4.3.0+ 2020/01/02)
	[fc304a38]

2020-01-03 Nicolas Pomarede

	MOVEQ, ADDQ, ADDAQ, SUBQ and SUBAQ disassembler support (was
	previously without "Q"), EXT.B -> EXTB.L (from WinUAE 4.3.0+
	2020/01/02)
	[b851c37a]

2020-01-03 Nicolas Pomarede

	68010 address error updates (from WinUAE 4.3.0+ 2020/01/01)
	[1093a5e2]

2020-01-03 Nicolas Pomarede

	68010 RTE format error exception does not clear pending trace (from
	WinUAE 4.3.0+ 2020/01/01)
	[de534a2f]

2020-01-03 Nicolas Pomarede

	Fix EXT (from WinUAE 4.3.0+ 2019/12/31)
	[fd48998d]

2020-01-03 Nicolas Pomarede

	68010 address error updates (from WinUAE 4.3.0+ 2019/12/31)
	[6b49df7e]

2020-01-03 Nicolas Pomarede

	68010 loop mode update (from WinUAE 4.3.0+ 2019/12/31)
	[214b9065]

2020-01-03 Nicolas Pomarede

	68010 loop mode emulation (from WinUAE 4.3.0+ 2019/12/31)
	[d23b7399]

2020-01-03 Nicolas Pomarede

	Don't do unnecessary bus error check if data comes from register
	without prefetches (from WinUAE 4.3.0+ 2019/12/31)
	[805ed3f4]

2020-01-03 Nicolas Pomarede

	Approximate cycle count bus error fix (from WinUAE 4.3.0+
	2019/12/31)
	[700ce144]

2020-01-03 Nicolas Pomarede

	RTE bus error fix and missing address error check (from WinUAE
	4.3.0+ 2019/12/29)
	[d200199b]

2020-01-03 Nicolas Pomarede

	In cpuemu, replace endlabel gotos with returns + MMU emulation works
	again (from WinUAE 4.3.0+ 2019/12/28)
	[beade26b]

2020-01-03 Nicolas Pomarede

	Stack read/write bus error support (from WinUAE 4.3.0+ 2019/12/27)
	[158a37d8]

2020-01-02 Thomas Huth

	Fix microwire row and mark table with "border-collapse:collapse"
	[c551d87a]

2019-12-26 Eero Tamminen

	Manual: add Atari HW differences table
	[a9fd6a96]

2019-12-27 Nicolas Pomarede

	All 68000 bus errors now implemented and retested (from WinUAE
	4.3.0+ 2019/12/27)
	[b1182f31]

2019-12-27 Nicolas Pomarede

	More prefetch bus error support (from WinUAE 4.3.0+ 2019/12/26)
	[24de6479]

2019-12-27 Nicolas Pomarede

	More spaces removed from gencpu output (from WinUAE 4.3.0+
	2019/12/24)
	[4434b125]

2019-12-25 Thomas Huth

	Merge github pull request #10 from frno7/invalid-png-signature

	Fix "[ffmpeg/video] Invalid PNG signature
	0x89504E470D0A1A"[2cdcc171]

2019-12-25 Nicolas Pomarede

	Spaces removed from gencpu output (from WinUAE 4.3.0+ 2019/12/24)
	[16934532]

2019-12-25 Nicolas Pomarede

	More prefetch bus error support: or, and, eor (from WinUAE 4.3.0+
	2019/12/24)
	[3f4ef8d9]

2019-12-23 Nicolas Pomarede

	More prefetch bus error support: addx, subx, abcd, nbcd, sbcd, ...
	(from WinUAE 4.3.0+ 2019/12/23) support for: addx, subx, abcd, nbcd,
	sbcd, neg, negx, not, clr, cmp, cmpa, cmpm, movep, move.w (move.l
	partially), sr read/write instructions partially
	[1d59a61c]

2019-12-23 Nicolas Pomarede

	Prefetch bus error emulation: MOVEP and Scc (from WinUAE 4.3.0+
	2019/12/22)
	[105aca6b]

2019-12-23 Nicolas Pomarede

	More accurate 68000 prefetch bus error support: swap, ext, exg, bcc,
	bclg, bchg, bset, btst, tst, move to/from usp, link, unlk (from
	WinUAE 4.3.0+ 2019/12/22)
	[6a49b7b2]

2019-12-23 Nicolas Pomarede

	Experimental 68000 prefetch bus error emulation support:
	shift/rotate instructions, some RMW instructions (from WinUAE 4.3.0+
	2019/12/22)
	[876646b4]

2019-12-23 Fredrik Noring

	Fix "[ffmpeg/video] Invalid PNG signature 0x89504E470D0A1A"

	The attempt to align PNG chunk sizes with 16-bit word boundaries
	causes problems when replaying the resulting AVI file using mpv:

		Error while decoding frame!
	[ffmpeg/video] png: Invalid PNG signature 0x89504E470D0A1A.

	Removing the offending alignment code solves this problem.

	Additionally, but unrelated to this change, there is an issue with 
	audio and video synchronisation, that is also problematic with the 
	BMP coder.
	[423d9906]

2019-12-21 Eero Tamminen

	Update release notes
	[d751af0c]

2019-12-21 Eero Tamminen

	Debugger: replace "symbols resident" option with "autoload" one

	Configuration file: "bSymbolsResident" -> "bSymbolsAutoLoad"

	Debugger symbols residency option only disabled symbol unloading at 
	program exit. It didn't prevent new symbols replacing the resident 
	ones when another program was run through GEMDOS HD, and debugger 
	invoked.  This made it pretty useless for debugging resident code 
	that was also [1] loaded through GEMDOS HD.

	New "symbols autoload" command can be used to control both symbol 
	loading and unloading from GEMDOS HD programs.  Autoloading is 
	enabled by default.   This command toggles it, or with optional 
	on/off argument, sets it expliclitly.

	[1] If symbols were loaded through some other means, or further 
	programs were run from something else than GEMDOS HD, symbols
	weren't automatically replaced.
	[f05fad0a]

2019-12-21 Eero Tamminen

	Minor compatibility info updates
	[ec7abf53]

2019-12-19 Eero Tamminen

	Update manual

	- List Mega ST/STE features separately like with other machines
	- Bring TV-mode description up to date
	- Add comments on SDL2, Linux
	[578a60e6]

2019-12-14 Nicolas Pomarede

	68020 T0 set and RTE causing format error exception: trace exception
	is not generated (from WinUAE 4.3.0 beta9 2019/12/14)
	[2c56d57f]

2019-12-14 Thomas Huth

	Use manual.css in compatibility.html, too
	[9d3f9526]

2019-12-13 Eero Tamminen

	EmuTOS compatibility update

	Many programs were checked at EmuTOS side, and its latest snapshot 
	fixes several compatibility issues.  Also, some STE demos which
	didn't work with ancient v0.8.x, work now.
	[6cdd05e9]

2019-12-13 Eero Tamminen

	LinuxLoader: update example lilo.cfg

	* With v5.4 kernel platform parallal ATA driver support,
	 also IDE devices are referred as /dev/sd* instead of /dev/hd*
	* Fit comments to 80 cols and align them better
	[79d066f8]

2019-12-13 Thomas Huth

	White space cleanup
	[d2e6a781]

2019-12-10 Eero Tamminen

	Split Debugger documentation to a separate manual
	[24b7e9fa]

2019-12-10 Eero Tamminen

	Separate User Manual CSS content to a separate file

	In preparation for splitting Debugger section to another manual.
	[e59fe6f5]

2019-12-09 Nicolas Pomarede

	Missing bus error checks added (from WinUAE 4.3.0 beta7+ 2019/12/09)
	[6f2dd4d6]

2019-12-09 Nicolas Pomarede

	Don't unnecessarily generate T0 checks for 68000 cores (from WinUAE
	4.3.0 beta7+ 2019/12/09)
	[996e5f39]

2019-12-09 Nicolas Pomarede

	Fix for RTE and trace bit (from WinUAE 4.3.0 beta7+ 2019/12/08)
	[f09fa4a7]

2019-12-09 Nicolas Pomarede

	Improve prefetch order for bus error (from WinUAE 4.3.0 beta7+
	2019/12/08)
	[c97af513]

2019-12-09 Nicolas Pomarede

	68000 write bus errors implemented (from WinUAE 4.3.0 beta7+
	2019/12/07)
	[8e63521c]

2019-12-09 Nicolas Pomarede

	Fix LINK with address error when using A7 (from WinUAE 4.3.0 beta6+
	2019/12/07)
	[2e94767f]

2019-12-08 Thomas Huth

	Don't try to detect shortcut key if the keysym value is invalid
	[39cfe120]

2019-12-07 Thomas Huth

	Don't try to do Printer_Init if printing is disabled
	[4fbeb6fe]

2019-12-07 Thomas Huth

	Fix the handling of old CMakeCache.txt
	[9efeb805]

2019-12-07 Thomas Huth

	Add Debug/* to the gitignore file
	[56a2271c]

2019-12-06 Nicolas Pomarede

	68020 : DBcc subtracts Dn before checking for address error, JSR
	subtracts A7 before checking for address error (from WinUAE 4.3.0
	beta6+ 2019/12/06)
	[1e805a6e]

2019-12-06 Nicolas Pomarede

	Fix SR for RTE + address error when fetching from new PC (from
	WinUAE 4.3.0 beta6+ 2019/12/05)
	[f00426fa]

2019-12-04 Thorsten Otto

	Add some missing include directives
	[340a7736]

2019-12-02 Nicolas Pomarede

	Improve bus/address error detection during prefetch for
	bsr/bcc/dbcc/rtd/rts/rtr (from WinUAE 4.3.0 beta5+ 2019/12/02)
	[eb70ddab]

2019-12-02 Nicolas Pomarede

	"Stand-alone" trace exception supported (from WinUAE 4.3.0 beta5+
	2019/12/02)
	[f72c68b5]

2019-12-02 Eero Tamminen

	Fix: CPU disassembly doesn't go to specified trace file

	Report: http://www.atari-forum.com/viewtopic.php?f=51&t=37922
	[206b0261]

2019-12-01 Eero Tamminen

	Allow mouse warp only when mouse is in Hatari window & it has focus

	User's mouse shouldn't be moved if mouse has left Hatari window, or 
	Hatari window has lost keyboard focus.

	Both of these events need to be checked because SDL doesn't report 
	mouse leave event on all activities where Hatari window disappears 
	from user's view (e.g. switching to another workspace, one without 
	Hatari).
	[9c450b71]

2019-12-01 Nicolas Pomarede

	Trace stacked on top of group 1 exception supported + Bus and
	address error special cases (from WinUAE 4.3.0 beta5+ 2019/12/01)
	[79314bc0]

2019-12-01 Eero Tamminen

	Latest EmuTOS snapshot fixes input for 2 ST games & 2 STE games

	+ some other EmuTOS compatibility updates.
	[6e324056]

2019-11-30 Eero Tamminen

	LinuxLoader: update kernel config and instructions to Linux v4.5

	Config changes:
	- Disabled CD-ROM file systems, SquashFS and crypto
	 as unnecessary with Hatari
	- Disabled deprecated old ATA support now that platform
	 drivers are supported:
	
	https://git.kernel.org/pub/scm/linux/kernel/git/geert/linux-m68k.git/commit/?id=600b04fa4bf3cb45dea9629b7e94e7c796165c46

	Last one requires changing rootfs devides from 'hda' to
	'sda' in Linux command line.

	(Kernel update didn't improve Hatari Linux compatibility)
	[e9520a24]

2019-11-13 Eero Tamminen

	LinuxLoader: Linux can boot in 8MB
	[377f67b5]

2019-11-30 Eero Tamminen

	LinuxLoader: Cleanup for 86ee4da539

	- remove now redundant define
	- caller will already tell if loading failed, so replace that
	 debug print with info about uncompression size (size is relevant
	 as it gives some indication on how much memory kernel takes from
	RAM)
	[fb829763]

2019-11-27 Thomas Huth

	Update manual with regards to the TT MFP emulation
	[e425db4e]

2019-11-27 Thomas Huth

	Simplify the load_file function by re-using the code from file.c
	[86ee4da5]

2019-11-27 Thomas Huth

	Move the zlib code for reading a file to a separate function
	[b65594ce]

2019-11-27 Thomas Huth

	Fix crash that happened when specifying a wrong file as Linux kernel
	[96e7774d]

2019-11-22 Thomas Huth

	More white space cleanup and replace UTF-8 characters with ASCII
	characters
	[73c72a08]

2019-11-22 Thomas Huth

	White space cleanup
	[f7ec200c]

2019-11-16 Vincent Rivière

	Update EmuTOS homepage URL
	[ab5592c5]

2019-11-16 Thomas Huth

	Fix Timer-B problem that occurred in the 'Desktop info' dialog with
	VDI mode enabled
	[526d7437]

2019-11-16 Thomas Huth

	Switch Cirrus-CI testing to use Fedora instead of Ubuntu

	We are already testing Ubuntu on Travis and Gitlab-CI now, so let's 
	use another distribution here to extend the test coverage a little 
	bit.
	[f576bfd0]

2019-11-06 Thomas Huth

	Enable Travis CI testing

	Travis recently has got an interesting feature: Testing on non-x86 
	host systems. Let's add a simple travis.yml file to enable testing 
	on arm64, ppc64le and s390x, too. While we're at it, also enable 
	testing on their various flavors of macOS (older and newest one), 
	including the "--enable-osx-bundle" this time.
	[064a99dd]

2019-11-16 Thomas Huth

	Silence compiler warning on s390x
	[54312771]

2019-11-16 Thomas Huth

	Silence compiler warning when compiling with old UAE core
	[5a0d5faa]

2019-11-16 Thomas Huth

	Add a configure switch to enable -Werror easily
	[4bf849c7]

2019-11-16 Thomas Huth

	Use "command -v" instead of "which"

	There are indeed environments where "which" is not available. Use
	"command -v" instead which should be more portable.
	[fd574468]

2019-11-10 Nicolas Pomarede

	Update WinUAE CPU version to 4.3.0 beta4 2019/11/09 (no change for
	Hatari since 4.3.0 beta2)
	[958a163b]

2019-11-07 Eero Tamminen

	Update release notes
	[4b16aa80]

2019-11-02 Eero Tamminen

	Improve doubled TV monitor mode look

	Having every other line black as earlier, makes the screen too dark. 
	Copy the line with half the intensity instead.

	This was request from Atari-forum:
	http://www.atari-forum.com/viewtopic.php?f=51&t=27730

	Thanks to Thomas for giving optimized way of doing this with all the
	SDL supported formats of given bitdepth.
	[dec2f579]

2019-10-31 Eero Tamminen

	Simplify low/med-rez screen doubling code

	- Remove pixel Y-direction doubling done (with cryptic macros)
	 in the screen conversion functions inner loop
	- Add function to do same with memcpy() in the outer loop

	Result is simpler & faster than the previous C-code (which was 
	originally converted from the WinSTon emulator x86 assembly).
	[db18fdb7]

2019-11-01 Eero Tamminen

	Add TODO about Videl resolution change handling
	[e3373d43]

2019-10-27 Eero Tamminen

	LinuxLoader: add LILO example directly to instructions
	[863de465]

2019-11-05 Eero Tamminen

	Python UI: use long options & fix option names in help output
	[d7b31bc4]

2019-11-05 Eero Tamminen

	Python UI: handle config values with '=' in them

	Used only in LILO config item, so it doesn't matter that rest of the 
	config value is clipped.
	[28eab722]

2019-11-04 Emmanuel Kasper

	Filter losetup by disk image name when trying to get the loopdevice
	name

	This fixes the following problem: Ex: on my system I have losetup -a
	/dev/loop1: [2050]:4587550 (/var/lib/snapd/snaps/spotify_36.snap)
	/dev/loop4: [2050]:4714240 (/var/lib/snapd/snaps/core_7917.snap)
	/dev/loop2: [2050]:4609173 (/var/lib/snapd/snaps/spotify_35.snap)
	/dev/loop0: [2052]:16909653
	(/home/manu/Projects/emul/atari/hard_disk_images/ahdi-64M.img),
	offset 1024
	/dev/loop3: [2050]:4714239 (/var/lib/snapd/snaps/core_7713.snap)

	The script would then pick loop3 instead of loop0.

	I don't know how losetup sorts the loop device list. Filtering by
	disk image name is in anycase the safer bet !
	[1e894a1b]

2019-11-02 Thomas Huth

	Merge github pull request #8 from ahornby/fix-sidebars

	Add SDL_RenderPresent to full screen force to black[d76a0165]

2019-10-27 Nicolas Pomarede

	Change F-line to privilege violation if missing co-pro (Update to
	WinUAE 4.3.0 beta2 2019/10/27)
	[a663943d]

2019-10-25 Nicolas Pomarede

	CALLM disassembly, cpRESTORE/cpSAVE checks for supervisor mode even
	if co-pro is missing (from  WinUAE 4.3.0 beta1+ 2019/10/25)
	[8a45144d]

2019-10-25 Nicolas Pomarede

	68060 FPU was not marked as disabled if EC model (from WinUAE 4.3.0
	beta1+ 2019/10/24)
	[1909acc7]

2019-10-25 Nicolas Pomarede

	More bus error fixes (not used yet in Hatari) (Update to the latest
	WinUAE 4.3.0 beta1 2019/10/19)
	[2b68b6e5]

2019-10-20 Thomas Huth

	Fix IDE disk size calculation with sector size > 512 bytes
	[861ab752]

2019-09-01 Alex Hornby

	Add SDL_RenderPresent to remove fullscreen sidebar corruption on
	16:9 monitor observed on Fedora 30 and Ubuntu 19.04 with AMD RX580
	amdgpu.
	[99206f93]

2019-10-19 Thomas Huth

	Fix bad calulation of total sectors of IDE DVD/CD-ROM drives

	The code in QEMU always calculates with 512-byte sectors, but in
	Hatari we calculate with 2048-byte sectors in bdrv_get_geometry(),
	so we do not have to divide by 4 here.
	[44aa8622]

2019-10-17 Eero Tamminen

	Also Portaudio can have pulseaudio plugin issue, not just ALSA

	Reported by Uwe, for Gentoo installation update where no package
	were added or removed.  Resolved by cleaning & recompiling.

	(Earlier ALSA issue had been for Ubuntu where user had directly 
	disabled pulseaudio server i.e. that issue was self-inflicted.)
	[535f13d9]

2019-10-16 Eero Tamminen

	Remove (now) redundant code for updating program path to debugger

	GEMDOS HD emulation loads now Pexec()ed program directly and tells
	its file name right away to debugger.  With cartridge code not
	anymore calling Fopen() on a program, first Fopen() after Pexec()
	points to some other kind of file.
	[1f4025f2]

2019-10-15 Thomas Huth

	Fix TOS crash if running with VDI or GEMDOS trace without GEMDOS HD
	[e0289221]

2019-10-14 Uwe Seimet

	Update HDDRIVER information in documentation
	[d9c8818f]

2019-10-12 Thomas Huth

	Use cartridge and trap vector chaining for GEMDOS HD again

	The direct trap interception did not work as good as expected since 
	programs like "Eko System" bend the trap 1 vector to their own 
	routines. Let's use the old approach again with hooking into the 
	GEMDOS vector during boot.
	[e06650b6]

2019-10-12 Thomas Huth

	Revert "Remove superfluous calls to GemDOS_Boot - we're doing it on
	the first trap now"

	This reverts commit a234864c4aa4ba865b998700737e4cbee29de06d.
	[05ec4c4f]

2019-10-09 Eero Tamminen

	Except for TOS v1 printing issue, autostart issues are gone

	They seem to have been fixed with the autostart / INF file handling 
	improvements in Hatari between v2.0 and v2.2 releases.
	[018a1c7a]

2019-10-09 Nicolas Pomarede

	On warm/cold reset, ensure internal video cycle counter remains in
	sync with global cpu counter If not, accesses to video registers
	will be delayedi by 2 cycles and this will break overscan or spec512
	images
	[ad218744]

2019-09-28 Eero Tamminen

	Split bugs from todo.txt to a separate bugs.txt file

	Also add explanation for the printing issue, and TOC for both 
	documents.
	[db559cdd]

2019-10-07 Eero Tamminen

	TOS boot tester: misc improvements

	- Add separate cases for older 2.0x and 3.0x TOS versions
	 as they differ somewhat from final versions
	- MMU causes things to be slower, increase timeouts for
	 TT & Falcon which can have MMU
	- Skip non-working floppy + TT-RAM combination on TOS v4
	 (TOS V4 doesn't create DMA buffers in ST-RAM, thanks to
	 Thorsten Otto for finding this out)
	- Fix issue of no tests being run for given machine when
	 bool options are given, but they're not for that machine
	- Clean away extra method parameters
	[a705b4f0]

2019-10-07 Eero Tamminen

	TOS v3.00 uses DESKTOP.INF, not NEWDESK.INF (like v3.06 does)
	[186da623]

2019-10-06 Eero Tamminen

	TOS boot tester: workaround for printing failures

	When GEMDOS HD and/or fast boot options are used, test program
	starts so quickly that some TOS versions haven't had time to start
	_hz200 timer/counter needed for printing to work.

	This commit fixes that issue by doing a small wait in the test 
	programs before opening PRN: device.  TOS version is checked so that 
	it will be done only on versions where it's needed.

	(Relevant PRG binaries and floppy images in repository are rebuilt.)

	TOS tester is modified accordingly to expect printing to always 
	succeed.  This reverts part of commit 35bc4b49 changes.

	Thanks to Roger Burrows who identified the issue from EmuTOS 
	regression, as I've now verified that original TOS versions had the 
	same issue!
	[c0f1a838]

2019-10-06 Eero Tamminen

	Add program for testing whether autostart fail is due to being too
	fast

	I.e. program for AUTO/-folder which just sleeps long enough during 
	boot up to make sure TOS counters have started.
	[4f9dbf1b]

2019-10-06 Eero Tamminen

	Trivial compatibility info updates

	After re-testing all failing Falcon games with latest Git version
	[96163cea]

2019-10-09 Eero Tamminen

	Fix automatic debug symbol loading + add debugger info on program
	path

	Now that GEMDOS Fopen() call isn't anymore called on Pexec(),
	Pexec() function itself needs to notify from which program the
	symbols should be loaded from.

	Added also information about the program load path to debugger "info 
	gemdos" command output.
	[551253a1]

2019-10-05 Thomas Huth

	Properly release the memory if loading of a PRG failed
	[a90f8c92]

2019-09-30 Thomas Huth

	Use proper error codes when loading a PRG
	[20d965e6]

2019-09-29 Thomas Huth

	Exit if test program can not be loaded
	[a8459876]

2019-09-29 Thomas Huth

	Clear heap if FASTLOAD flag is not set
	[759b520d]

2019-09-29 Thomas Huth

	Use Pexec(7, ...) to create the basepage if the call is available

	Respect the program flags from the program header by using the 
	Pexec(7, ...) call. This way the program should be loaded into the
	correct RAM (ST-RAM or Fast-RAM).
	[bead026d]

2019-09-01 Thomas Huth

	Move function for opcode patching into m68000.c and modify for
	GEMDOS HD

	The function is not specific to the cartridge anymore, so it should
	not reside in cart.c, but in m68000.c instead. Also the GEMDOS HD
	opcodes should now be set independent of the cartridge code.
	[4893029e]

2019-09-01 Thomas Huth

	Remove old GEMDOS HD assembler code - it's now not required anymore
	[80885bca]

2019-09-01 Thomas Huth

	Remove superfluous calls to GemDOS_Boot - we're doing it on the
	first trap now
	[a234864c]

2019-08-25 Thomas Huth

	Handle GEMDOS HD emulation without code in the cartridge

	The assembler code in the cartridge for the GEMDOS HD emulation is a 
	constant source of trouble. Currently there is a problem that it 
	crashes in TT emulation mode when an interrupt from the 2nd MFP 
	happens at the wrong point in time and the stack supplied by TOS is
	too small for handling both, the GEMDOS HD code in the cartridge and
	the interrupt routine.

	Instead of continuing the kludgy and hard-to-maintain assembler code 
	in the cartridge, let's rather act directly when we see the
	exception in the Hatari C code. The only trouble is the Pexec()
	GEMDOS call which needs some extra handling: We need to allocate
	memory on the ST side before loading the program code, so we have to
	run some ST code in between. Let's use the old GEMDOS_OPCODE illegal
	opcode now to jump back to the emulator code for this.
	[b65a1bf1]

2019-10-05 Thomas Huth

	Support TT-RAM in STMemory_SafeCopy and -Clear
	[68501a7c]

2019-10-05 Nicolas Pomarede

	Force expression to 64 bits using 'LL' (fix crosscompilation with
	mingw/cygwin)
	[c5d630bb]

2019-10-04 Nicolas Pomarede

	Fix regression in blitter when fxsr=1 and last word is processed
	(fix commit f7855cae from 2019/09/12) This fixes some garbages when
	displaying icons under GEM desktop using TOS 4 in Falcon mode
	[a8692b90]

2019-09-30 Nicolas Pomarede

	Disassembler source/destination ea status information (from WinUAE
	4.2.x 2019/09/29)
	[009cd3f7]

2019-09-28 Nicolas Pomarede

	68010 unsupported RTE stack frame exception will modify N, Z and V
	flags (from WinUAE 4.2.x 2019/09/28)
	[8a021fed]

2019-09-28 Nicolas Pomarede

	68060 BUSCR full emulation (from WinUAE 4.2.x 2019/09/21)
	[670b583c]

2019-09-28 Nicolas Pomarede

	Improve MOVEC for 68060 (from WinUAE 4.2.x 2019/09/21)
	[7eab4961]

2019-09-27 Eero Tamminen

	TOS boot tester: no native SCSI on MegaSTE

	While Wikipedia lists Atari MegaSTE supporting SCSI, according to 
	Thomas Reiss, MegaSTE does not have a "native" SCSI support, there's 
	no specific SCSI controler as in the TT or the Falcon. Atari
	delivered an internal ASCI->SCSI bridge board.
	[a93334cb]

2019-09-27 Eero Tamminen

	Improve TOS boot tester documentation slightly
	[c1d3afe8]

2019-09-27 Eero Tamminen

	Improve TOS boot tester output error checking

	Simplify code by moving all error checks to the their respective 
	helper functions.

	Also fix an issue when output file is missing:
	- do the check only with GEMDOS HD tests
	- handle file missing as separate error
	- add an empty output file back to repo, with an UPPER-case name
	 as expected by tos_tester.py (depending on Hatari options,
	 missing file could have been created as lower-case)
	 -> fixes commit bb9f0d20c
	[35bc4b49]

2019-09-27 Eero Tamminen

	Validate that all necessary test input files are present
	[dbc2042d]

2019-09-27 Eero Tamminen

	Fix: test programs being needlessly regenerated
	[39a832d2]

2019-09-25 Eero Tamminen

	Improve tosboot test program file->device copy error reporting

	- Tell if device write failed completely
	- Update all derived tests binaries accordingly
	 - binaries built with newer AHCC version (v5.5)
	[ed82c367]

2019-09-25 Eero Tamminen

	Fix: (tosboot) Hatari creates printer file only if something is
	printed
	[cef4a3e5]

2019-09-25 Eero Tamminen

	Fix: tosboot test programs building

	EmuTOS and/or Hatari boot has gotten slower, so increase sleep.

	With the new --tos-res option, TT mono (-m) option isn't anymore 
	necessary (Hatari takes less screen space with ST-high while doing
	native build than with TT-high).

	Remove 'TEST' testing artifact.
	[bb9f0d20]

2019-09-25 Eero Tamminen

	Fix: simulated (socket API) key input with SDL2
	[273671a0]

2019-09-21 Eero Tamminen

	LinuxLoader: documentation updates

	- Build latest v5.3
	- Document number of issues visible when running Busybox utilities
	 (they happen both with v5.2 & v5.3 kernels, and unfortunately
	recent
	 030/040 WinUAE/Hatari fixes haven't fixed any of them)
	- Add user & terminal files needed by more complex console programs
	to
	 miminal rootfs, and update following steps numbering accordingly
	- Split Debian instructions to few subsections
	[f4718f60]

2019-09-21 Eero Tamminen

	LinuxLoader: use more common SLAB allocator

	Just in case, although it didn't fix any of the issues Linux has
	under Hatari
	[1c8bdef3]

2019-09-21 Thomas Huth

	Merge github pull request #7 from smithjd15/turboFire

	Map a turbofire button independent of the fire button if the game
	controller is capable[e9830dda]

2019-09-10 James D. Smith

	Map a turbofire button independent of the fire button if the game
	controller is capable.
	[2056f50c]

2019-09-12 Nicolas Pomarede

	For the blitter, use x_count to decide to add src_x_incr or
	src_y_incr after reading each src word We use the same conditions as
	described in the blitter documentation, instead of handling an
	additional variable to count the number of reads
	[f7855cae]

2019-09-10 Nicolas Pomarede

	68060 special cases: MOVEC, HALT, PULSE, LPSTOP fixes, RTE 68010+
	support (from WinUAE 4.2.x 2019/09/08)
	[b0cd90a3]

2019-09-10 Nicolas Pomarede

	Use x_count/y_count instead of words/lines to match the blitter's
	documentation
	[9a06a9e7]

2019-09-09 Nicolas Pomarede

	More accurate function to downsample internal sound signal from 250
	kHz to the chosen output frequency This function will handle high
	frequencies more accurately and should give less hearable artifacts
	[827d3feb]

2019-09-07 Thomas Huth

	Merge github pull request #6 from frno7/fix-clear-screen

	Fix garbage graphics by clearing the whole render area[94c0e591]

2019-09-06 Nicolas Pomarede

	More undefined flags emulated for DIVL/MULL (from WinUAE 4.2.x
	2019/09/04)
	[4103ce0c]

2019-09-02 Nicolas Pomarede

	CHK2/CMP2 undefined N and V flags emulated (from WinUAE 4.2.x
	2019/09/02)
	[0c2d0b7e]

2019-08-31 Eero Tamminen

	Fix typos in manual's Performance section

	And improve --zoom option explanation
	[5fa4d966]

2019-08-28 Fredrik Noring

	Fix garbage graphics by clearing the whole render area

	Garbage graphics can be observed to the left and right of for
	example a 1920x1200 screen resolution, when switching to fullscreen.
	[4ead6e58]

2019-08-27 Nicolas Pomarede

	Cleaner 68040 T0 support, 68040 T0 FPU instruction special cases,
	68040 MMU LINK fix (from WinUAE 4.2.x 2019/08/27)
	[f3bf767d]

2019-08-25 Nicolas Pomarede

	68040-only T0 extra instructions (from WinUAE 4.2.x 2019/08/25)
	[fa69e95f]

2019-08-25 Nicolas Pomarede

	Update savestate_restore_finish to return 'bool'
	[986eb67c]

2019-08-25 Nicolas Pomarede

	68040 specific CPU tester fixes (from WinUAE 4.2.x 2019/08/24)
	[97d39711]

2019-08-24 Nicolas Pomarede

	More 68040/060 fixes (Undefined fields in some instructions,
	MUL.L/DIV.L -(an)/(an)+ an restore if unimplemented) (from WinUAE
	4.2.x 2019/08/23)
	[1e1ecd85]

2019-08-24 Nicolas Pomarede

	Fix 'last_op_for_exception_3' size in printf
	[a01dd52c]

2019-08-22 Nicolas Pomarede

	68020/030 T0 trace fixes (from WinUAE 4.2.x 2019/08/22)
	[c8449dec]

2019-08-21 Nicolas Pomarede

	68040/060 address error fixes for rtd/rtr/jsr/bsr/bcc/dbcc (from
	WinUAE 4.2.x 2019/08/21)
	[2f93e1c9]

2019-08-18 Nicolas Pomarede

	68020/030 address error fixes, MOVE16 disassembler fix. CAS2.W fix
	(from WinUAE 4.2.x 2019/08/18)
	[63dc0edb]

2019-08-18 Nicolas Pomarede

	Fix missing SDL types on some ARM compilers
	[03017487]

2019-08-16 Nicolas Pomarede

	MOVE from SR address error special case (from WinUAE 4.2.x
	2019/08/16)
	[de381e84]

2019-08-16 Nicolas Pomarede

	Added FC field to exception3_read/write (from WinUAE 4.2.x
	2019/08/14)
	[8a945898]

2019-08-14 Nicolas Pomarede

	68000 address error FC field modification hack if PC relative
	addressing (from WinUAE 4.2.x 2019/08/14)
	[10b359de]

2019-08-14 Nicolas Pomarede

	MOVEM 68000 address error special cases ((from WinUAE 4.2.x
	2019/08/14)
	[cee5fc9f]

2019-08-14 Nicolas Pomarede

	MOVE.W and MOVE.L destination address error : -(an) and condition
	code special case accurate emulation (from WinUAE 4.2.x 2019/08/14)
	[b60c2e91]

2019-08-11 Nicolas Pomarede

	More undocumented flag fixes (68020 xBCD, CHK, CHK2 and more) (from
	WinUAE 4.2.x 2019/08/11)
	[78c24dea]

2019-08-09 Nicolas Pomarede

	68020/030 DIVU.W divide by zero flag fix, same behavior as 68000
	(from WinUAE 4.2.x 2019/08/09)
	[b423cf86]

2019-08-09 Nicolas Pomarede

	PACK and UNPK disassembler support (from WinUAE 4.2.x 2019/08/09)
	[a3e15355]

2019-08-09 Nicolas Pomarede

	Fix MUL.L <EA>,Dh-Dl: Dh should be updated last, Dh overwrites Dl if
	both are same register (from WinUAE 4.2.x 2019/08/09)
	[0426c0fd]

2019-08-09 Nicolas Pomarede

	Move stack frame creation to common code (from WinUAE 4.2.x
	2019/08/09)
	[26417686]

2019-08-09 Nicolas Pomarede

	Add cputester chnages and move disasm functions into separate file
	(from WinUAE 4.2.x 2019/08/07)
	[92277ca9]

2019-08-07 Nicolas Pomarede

	Update WinUAE version
	[b14b742f]

2019-08-07 Nicolas Pomarede

	68000 UNLK operation address error order fixed, first check address,
	then adjust SP (from WinUAE 4.2.x 2019/08/07)
	[320b8bab]

2019-08-07 Nicolas Pomarede

	68000 address error predecrement addressing mode special case fixes
	(from WinUAE 4.2.x 2019/08/07)
	[df1ee815]

2019-08-06 Eero Tamminen

	Support for adding and removing trace flags individually

	With separate trace settings commands / options.
	[284714e4]

2019-08-06 Eero Tamminen

	Add missing tests information to tests/readme.txt
	[47e4dd8b]

2019-08-06 Eero Tamminen

	Correct/update paths for debugger scripting test
	[57ff017d]

2019-08-05 Eero Tamminen

	Add information about floppy formatting support
	[79538ad6]

2019-08-05 Eero Tamminen

	Consistency: chapter -> section
	[899fe664]

2019-08-05 Eero Tamminen

	Compatibility doc updates

	- 2.2-dev -> 2.2 as it's been already released
	- Checked whether broken TT and 060 demos are still broken
	[1357a471]

2019-08-05 Eero Tamminen

	Update release notes & todo
	[c48c3481]

2019-08-04 Nicolas Pomarede

	Fix link a7,#x stack order + undefined flags for 68000 DIVU.W,
	DIVS.W and CHK.W (from WinUAE 4.2.x 2019/08/04)
	[243f6d8a]

2019-07-29 Nicolas Pomarede

	Typo : use licensed (US) instead of licenced (UK) for consistency
	with rest of the sources
	[123d5a23]

2019-07-29 Nicolas Pomarede

	Typo
	[19237ac3]

2019-07-26 Nicolas Pomarede

	Add descriptions for the MFP 68901, including signal for each pin 
	These informations are based on the schematics of the board used in
	ST/STE/MegaST/MegaSTE/TT/Falcon
	[d3b492c1]

2019-07-24 Nicolas Pomarede

	Add an empty function for debugmem_flushcache() instead of some
	ifdef
	[c4d8909b]

2019-07-23 Nicolas Pomarede

	Video DE signal is also connected to Timer B on the TT MFP This
	means timer B on the TT MFP can also be used in event count mode to
	change colors on every line for example
	[5668bcc1]

2019-07-18 Nicolas Pomarede

	68000/010 modes didn't check BSR/JSR/RTS odd stack pointer + improve
	68010 exception stack frame (from WinUAE 4.2.x 2019/07/16)
	[c1c37567]

2019-07-14 Eero Tamminen

	Linux Loader: Update kernel / config to Linux v5.2

	Added swap & unix scm support, changed timekeeping debug to slub
	one. Rest of config changes came just from 5.0 -> 5.2 update.

	v5.2 seems to have similar stability issues as v5.0 had, but at
	least clocksource support for m68k should make some things a bit
	more efficient (earlier clock handling was vising in Hatari profiles
	for m68k Linux).
	[0f53ef22]

2019-07-14 Eero Tamminen

	Linux Loader: add m68k Linux 030 issue workaround patch

	This was there already in 4.x kernels, and is still there with v5.2.

	Maybe some of the other issues are also due to kernel missing
	support for ignoring certain exceptions on 030 (and for some reason
	those exceptions being generated more often with Hatari)?

	Adding patch more to inform about the issue, than the issue that
	patch fixes being important.
	[6cc84048]

2019-07-14 Eero Tamminen

	Linux Loader: ifdef out non-working reset code copied from Aranym

	Aranym emulates AB40, not Falcon/TT like Hatari.
	[635031fc]

2019-07-14 Eero Tamminen

	Fix typos in demo options
	[384caf72]

2019-07-13 Eero Tamminen

	Add Sommarhack 2019 Falcon demos

	(and switch to shorter New Beat site URL)
	[c5f02b8c]

2019-07-12 Eero Tamminen

	Add Sommarhack 2019 ST/STE demo entries

	I liked Motus ST demo and Ambermoon music STE demo a lot
	[4204418e]

2019-07-12 Thomas Huth

	Merge pull request #4 from pawelo12345678/joystick

	joystick: support 80's game controllers[c6979eb1]

2019-07-10 Paul Osmialowski

	joystick: support 80's game controllers

	Recently I've bought USB adapter for 80s Atari-compatible joysticks
	(with DB9 connectors). It is recognized as 'hat' by SDL library 
	joystick routines. Other emulators (fuse, fs-uae) can read this
	(and overwrite axes readings with hat readings making excellent 
	gaming experience) while hatari read axes only. This patch fixes the
	issue, giving amazing 80s-like gaming experiences for this amazing
	emulator.

	Signed-off-by: Paul Osmialowski <pawelo@king.net.pl>
	[84b2566b]

2019-07-08 Eero Tamminen

	Show mouse grab toggle shortcut key in startup statusbar message

	in addition to the options shortcut key.
	[28975ea8]

2019-07-08 Eero Tamminen

	Replace obsolete MudFlap support with ASAN support

	MudFlap became no-op in GCC 4.9, and is superseded by
	AddressSanitizer
	[73b76d45]

2019-06-27 Eero Tamminen

	Be a bit more positive / specific about EmuTOS

	After all, we ship it with the Hatari binaries...
	[9e7204c4]

2019-06-21 Eero Tamminen

	Minor m68k linux doc improvements

	Point links to new EmuTOS release too
	[fdb49198]

2019-06-20 Thomas Huth

	Update remaining ~/.hatari places to ~/.config/hatari

	... and mark the old location as deprecated now. While we're at it,
	also remove hatari.wav and hatari.ym from the man-page, they are not
	saved by default in this location.
	[cbd8391a]

2019-06-19 Nicolas Pomarede

	Add more descriptions for the ACIA 6850, YM2149 and RP5C15 RTC
	chips, including signal for each pin These informations are based on
	the schematics of the board used in ST/STE/MegaST/MegaSTE/TT/Falcon
	[c0bd8d92]

2019-06-16 Eero Tamminen

	Fix typo
	[80ee7372]

2019-06-16 Thomas Huth

	Add missing check whether we need to clear byte-wise or not

	... and while we're at it, also unroll the "clearmulti" loop a
	little bit to further speed up the clearing process.
	[c42a730a]

2019-06-13 Eero Tamminen

	Update release notes
	[121ae3d2]

2019-06-12 Nicolas Pomarede

	Use MFP_GPIP_Set_Line_Input to connect the internal floppy drive's
	DC signal to the TT MFP
	[149ebd09]

2019-06-12 Thomas Huth

	Speed up clearing of the heap

	Now that we clear the whole heap if the FASTLOAD flag is not set, 
	loading of a program can be quite slow if there is a lot of RAM. 
	Let's use movem instead of clr.b to speed up the clearing part.
	[e83f0289]

2019-06-10 Thomas Huth

	Update the comment about Pacemaker
	[3c7b309d]

2019-06-10 Thomas Huth

	Support the FASTLOAD flag in the program loading function of the
	cartridge

	We should clear the whole heap if the FASTLOAD flag is not set. Some
	old programs expect this - this fixes the graphical glitches in the
	endpart scroller of the "Pacemaker" STE demo, for example.

	While we're at it, also remove the cart_mus.x32 data. The assembler 
	instruction for including it is not portable (e.g. "incbin" vs.
	"ibytes") and the easter-egg simply has had its days.
	[10d8f37e]

2019-06-09 Nicolas Pomarede

	When changing GPIP bits in the MFP, we must use
	MFP_GPIP_Set_Line_Input instead of MFP_InputOnChannel
	[25833053]

2019-06-08 Nicolas Pomarede

	Add support for the 'Disk Change' (DC) signal on TT machines,
	connected to the TT MFP using GPIP4
	[10acd362]

2019-06-06 Thomas Huth

	rs232: Fix initial value of the semaphore

	We have to initialize the semaphore with MAX_RS232INPUT_BUFFER - 1 
	or the _Tail value might wrap around to the _Head value in case
	there are lots of bytes in the input and nobody has read the output
	yet.
	[2a2fe1e3]

2019-06-06 Thomas Huth

	Initialize MFP before RS232

	The RS232 thread wants to access pMFP_Main so we have to initialize 
	that first to avoid a crash.
	[00addf0e]

2019-06-01 Thomas Huth

	Fix 24-bit address bus handling during memory_init()

	During reset, the TOS image is loaded first, and m68k CPU reset is
	done afterwards. This causes a problem with memory_init(), which is
	called from the TOS loading function and uses
	currprefs.address_space_24, a variable which we only update during
	the CPU reset, i.e. the currprefs.address_space_24 variable still
	contains the old value in case the user changed the setting in the
	GUI. Fix it by using the up-to-date
	ConfigureParams.System.bAddressSpace24 instead.
	[76972179]

2019-05-28 Nicolas Pomarede

	Use common function ncr5380_set_irq() instead of direct call to
	FDC_SetIRQ()
	[1769a880]

2019-05-28 Nicolas Pomarede

	Add more descriptions for the GPIP bits in Main MFP and TT MFP
	[d4a7b7d9]

2019-05-28 Nicolas Pomarede

	Fix some spelling errors reported by 'codespell'
	[39a56980]

2019-05-26 Eero Tamminen

	Allow read-only HD access and show alerts on HD open/lock errors
	[4a94889b]

2019-05-26 Nicolas Pomarede

	When emulating SCSI in TT mode, use MFP_GPIP_Set_Line_Input() to set
	IRQ signal
	[596610b1]

2019-05-18 Nicolas Pomarede

	Update to the latest WinUAE's sources (from WinUAE 4.2.1 2019/05/17)
	- Fix Z and N flags for 68020+ MUL(S/U).L EA,Dn
	[7f47e042]

2019-05-13 Eero Tamminen

	Profiler: improve backtrace output

	Add functionality to match given address to a closest preceeding 
	symbol address, in addition to doing exact match binary searches. 
	And use this to replace (redundant) return address reporting with 
	reporting of where the call-site resided.

	Run-time profiling tracks through which functions calls are being 
	done, but not where the actual call sites reside.

	In most cases next call-site is within called function, but not 
	always, because sometimes code gets called through some other means 
	that subroutine calls.

	This can happen e.g. when OS task switcher stack manipulation causes 
	function call with rts (subroutine return).
	[2f1f81bb]

2019-05-13 Eero Tamminen

	LinuxLoader: minor changes

	Scripts:
	- Simplify Busybox links generation

	Doc updates:
	- BB links need extra dirs
	- Change log level from "debug" to 2info" until
	 Falcon PSG reg handling has been improved
	- Clarify texts in few places
	[287d0e1f]

2019-05-06 Nicolas Pomarede

	Merge new TT MFP code
	[50bf142e]

2019-05-06 Eero Tamminen

	Fix: Hatari freeze when RS-232 device file is a FIFO
	[65dda3cf]

2019-05-04 Nicolas Pomarede

	When running in TT mode and "patch timer D" is enabled then TT MFP
	should be patched too At boot, TOS sets timer D to a very high
	frequency on the main MFP, but it also does it on the TT MFP. So
	timer D should be patched on the TT MFP too to lower emulation's
	cost.
	[9725b9b1]

2019-05-04 Nicolas Pomarede

	Add support for the 2nd MFP at $FFFA81-$FFFAAF when running in TT
	mode
	- enable all IO accesses at $FFFA81-$FFFAAF to point to the commong
	MFP code
	- Add 4 internal timers to handle TT MFP timers A/B/C/D
	- Update ncr5380 code to use new GPIP code to handle scsi's IRQ
	[43dad5f8]

2019-05-03 Eero Tamminen

	Profiler: add missing callgraph data warning
	[b06f104d]

2019-05-02 Eero Tamminen

	Profiler: include exceptions to callgraph

	This can be done now that profiler catches all relevant returns as 
	triggers to call stack unwinding.  Extra exception calling info
	could be useful when debugging more complicated programs.

	In Linux kernel case this will cause at times lot of successive 
	system_call() functions to be added to call stack as they apparently 
	don't always return through RTE.  Which made the previous commit a
	necessity.

	With e.g. EmuTOS there aren't any perf or other issues either way,
	but it's easy to disable again if desired...
	[5b516fd8]

2019-05-02 Eero Tamminen

	Profiler: optimize return address checking

	Earlier added generic code for handling stack return address 
	manipulations (= brute force checking of returns addresses for every 
	frame in call stack on every instruction) slows profiling 
	significantly with very deep call stacks.  To deal wth that, call 
	stack tracking is changed to first check for return instruction, and 
	only then return addresses.

	(Fortunately deep call stacks are rare, I've seen them only when 
	profiled process seems to mess up its stack frame / return address 
	manipulations, and as result, Hatari not seeing anything that would 
	tell it to unwind the call stack.)
	[b2db2393]

2019-05-02 Eero Tamminen

	Profiler: optimize add_caller() caller info expansion

	This didn't really slow down anything [1], but it was doing
	obviously redundant work that could be avoided easily.

	[1] as it's done rarely.  Profiler bottleneck is activities that
	need to be done on every instruction (instruction statistics
	collection, subroutine entry checks, call stack return checks),
	which are affected by:
	- how many symbols there are (binary search)
	- how deep the call stack is (linear search)
	- how often calls to symbol addresses are done
	 - call stack manipulation is relatively heavy, so don't
	   add symbols for loops, only for sub routines
	[6eb4c025]

2019-05-02 Eero Tamminen

	LinuxLoader: minor improvements to doc debugging section
	[39db04dd]

2019-05-02 Eero Tamminen

	Profiler: minor improvements to post-processor help
	[d1f853e0]

2019-05-02 Eero Tamminen

	Profiler: backtrace improvements

	- Rewrite ShowStack also to show symbol offset info
	- Add option for controlling max backtrace depth
	- Improve comments and remove obsolete notes
	[9f8284de]

2019-05-01 Eero Tamminen

	Profiler: misc changes

	- Remove now redundant lilo.h inclusion
	- Warning message: add "etc" as RTS isn't only return instruction
	- Like with CPU, check also for DSP exceptions in case DSP exception
	 identification support will be added to dsp_opcode_type()
	[48a5fcd2]

2019-05-01 Eero Tamminen

	Update release notes
	[85215869]

2019-05-01 Eero Tamminen

	NatFeats: update test binary & readme
	[26749789]

2019-05-01 Eero Tamminen

	NatFeats: update / expand test code

	- Add end-user wrapper functions for missing NF functions
	- Add (disabled) test code for NF_VERSION
	- Fix GCC 4.6 Cconws() warnings with (void) cast
	- Fit error msg to 40 col screen
	[7a01ee26]

2019-05-01 Eero Tamminen

	NatFeats: improvements to existing features

	- Do proper validation for NF_STDERR & NF_COMMAND strings
	- Do something sensible in case command sub id isn't recognized
	- Add missing sub id reset commands for NF_SHUTDOWN
	- Document functions *retval return values
	[b2a81850]

2019-05-01 Eero Tamminen

	LinuxLoader: call stack profiling example
	[5f606d51]

2019-05-01 Eero Tamminen

	Profiler: fix typo
	[151c55a7]

2019-04-27 Thomas Huth

	Properly quote variables (according to www.shellcheck.net)
	[4a7e3a17]

2019-04-27 Miro Kropáček

	Fix removing of $convertdir in case of a  failure
	[2a20eff1]

2019-04-25 Thomas Huth

	Fix typo: exit1 ==> exit 1
	[9ea40f03]

2019-04-25 Thomas Huth

	Fix keypad emulation with SDL2

	SDLK_KP_0 has a higher value than SDLK_KP_9 on SDL2, so the 
	Keymap_GetKeyPadScanCode() was never called. Change the check to use
	SDLK_KP_1 instead to fix the issue.
	[f07bc3ad]

2019-04-24 Nicolas Pomarede

	Use Sint16/Uint32 instead of 'int' for some MFP variables
	[ebe2cdc3]

2019-04-24 Nicolas Pomarede

	Rewrite MFP code to handle several MFPs (first step to add TT MFP
	later)
	- group all MFP's related variables into MFP_STRUCT
	- add 2 MFPs objects MFP_Main and MFP_TT
	- add a pointer to the related MFP object as a parameter to most MFP
	functions
	- make code to read/write to MFP's registers common for Main MFP and
	TT MFP
	- make logs more consistent for all read/write to MFP's registers 
	For now, only MFP_Main is used, MFP_TT will be enabled later
	[aee9b62d]

2019-04-22 Eero Tamminen

	Profiler: generic solution for stack manipulating task switchers

	Instead of checking specific functions being called, check whole 
	callstack for subroutine returns that return higher up in the call 
	hierarchy.  It's slightly slower but resulting callgraphs look much 
	more readable, and Profiler doesn't need a hack for each function
	that happens to manipulate its return address in stack.

	I made this CPU specific, as I haven't seen any DSP code doing 
	something like that.
	[093724ae]

2019-04-21 Eero Tamminen

	Add --bios-intercept XBios(255) to deprecation list
	[429a3c3b]

2019-04-20 Thomas Huth

	Updated note about deprecated features
	[c7925494]

2019-04-20 Thomas Huth

	Add note about required C99 standard
	[95f5b3f1]

2019-04-19 Nicolas Pomarede

	Change non standard instruction names in disassembler (Update to the
	latest WinUAE 4.2.1 beta1 2019/04/18) This fixes MOVEP, MOVE USP,
	MOVE/AND/OR/EOR SR/CCR, memory rotate instructions.
	[e89261c0]

2019-04-19 Eero Tamminen

	Update release notes
	[1fa1f300]

2019-04-19 Eero Tamminen

	Profiler: backtrace output improvements

	- Show frame indexes
	- Show call address within function, not just function address
	 - Show offset of that from the function name
	- If backtrace is really long, skip frames in middle
	- Update copyrights
	[0d262deb]

2019-04-17 Eero Tamminen

	Profiler: add rate-limiting to profiler warning messages

	It's enough to show few to notify user of the issues.  Too many
	loses other important information.

	Warnings are stopped after certain count, counts are zeroed whenever 
	profiling is re-started and warning counts are summarized with 
	profiling stats.
	[18f8a056]

2019-04-17 Eero Tamminen

	Profiler: generalize handling of OS task switchers

	This doesn't seem to really help with Linux task switcher, and there
	are several functions arch/m68k/kernel/entry.S which do stack
	manipulation, resume() is just one of them.

	However, I think it's better that comments and variable names are
	generic instead of EmuTOS specific, for other possible task
	switchers.
	[551cc06d]

2019-04-18 Eero Tamminen

	Linux loader: update documentation

	- Hatari issues list
	- Debian testing notes
	[f546bb9b]

2019-04-14 Christian Quante

	Linux loader: fix SDL errors in lilo.c on ARM and PPC
	[95ad404c]

2019-04-12 Eero Tamminen

	Linux loader: add full kernel config

	Converting list of enabled options to full kernel config is too much
	work.  Just include full config so people get asked only for new
	config items.
	[67e714df]

2019-04-12 Eero Tamminen

	Linux loader: update documentation

	- Minor Hatari issues list updates
	- Hatari NVRAM issue was already fixed, no need to log
	- Improved kernel bootup debugging instructions
	- Change Debian instructions to newer / slight better
	 working Debian installer version
	- Newer initrd's need more space and RAM
	- Debugged sysrq issue to be Linux kernel bug with 030
	[a5a34035]

2019-04-08 Eero Tamminen

	Update Hatari and linux issues
	[e3c9e1d3]

2019-04-07 Thomas Huth

	Silence compiler warning with GCC 8.2
	[7c9c4216]

2019-04-07 Thomas Huth

	errno.h should always be available with recent compilers
	[637a4ed2]

2019-04-03 Eero Tamminen

	Fixes to profile data parsing

	- Add new symbol types
	- Fix exception with symbol address alias check
	[0039929e]

2019-04-05 Eero Tamminen

	Linux loader: More info on few of the kernel options

	"initcall_debug" is particularly useful.
	[c8c3dffb]

2019-04-06 Eero Tamminen

	Linux loader: Expand m68k linux usage documentation

	- Add notation and debugging/profiling sections
	- Move linux issues section to bottom and add more details
	- Other minor improvements
	[9146d783]

2019-04-03 Eero Tamminen

	Linux loader: Workaround busybox and klibc tools deficiencies
	[3952a9e3]

2019-04-04 Thomas Huth

	Replace hg with git in check-bashism.sh
	[6a7eafb8]

2019-04-02 Nicolas Pomarede

	Keep MFP variables local to mfp.c and remove external references to
	MFP_TACR/MFP_TBCR
	[d7e2aee4]

2019-04-02 Eero Tamminen

	Add preliminary RTC/NVRAM interrupt bits + minor improvements

	- Defines for the interrupt enable & status bits
	- Their reset handling
	- UIP bit is zero during SET and read-only
	- IRQF setting if interrupts enabled
	- Improved warning messages

	Note: all interrupt related things are untested as I don't know of 
	anything using them, but it should be more correct according to spec 
	and doesn't impact e.g. Linux kernel RTC use or XCONTROL.ACC clock 
	setting.
	[d696f10f]

2019-03-31 Eero Tamminen

	Linux loader: update Hatari issues list
	[da852337]

2019-03-31 Eero Tamminen

	Port Aranym NVRAM handling improvements to Hatari

	Port Aranym improvements:
	* Handle NVRAM register 11 control bits:
	 - freeze reported time while Bit 7 is SET
	 - 12/24 hour clock
	 - BIN/BCD values
	* Add support for register 6 (day of week)
	* Simplify register 10 / UIP handling by just toggling
	 register value's UIP bit instead of using static variable

	Other improvements:
	* Use defines for different register bits
	* Add warnings for writes to read-only registers and
	 to unsupported register 11 interrupt selection bits
	 which aren't enabled by default in Hatari
	 (instead of warnings for interrupt status register reads)
	* More register documentation to comments and link to HW doc

	This fixes NVRAM warnings shown by "--log debug" when booting Linux.
	[09696f11]

2019-03-30 Eero Tamminen

	Symbols: another weak type identifier
	[ea2f68b8]

2019-03-30 Eero Tamminen

	Linux loader: fix case when --lilo option is given empty string
	[7f50b4b6]

2019-03-30 Nicolas Pomarede

	Fix disassembing of 68020+ extension (an,dn,xxxx.w/.l) (Update to
	the latest WinUAE 4.2.0 beta7 2019/03/29)
	[d4fc3a86]

2019-03-29 Eero Tamminen

	Enable 060 support with external disassembler
	[104c31af]

2019-03-30 Eero Tamminen

	Profiler: few trivial changes

	- update copyright
	- use more correct starting value for lowest addr check in area
	- set TosSize to zero, to have it initialized and to save
	 slightly memory with profiler arrays
	[3579ae23]

2019-03-29 Eero Tamminen

	Profiler: Nicer symbol call count profile output

	Use explicit field widths instead of tabs as symbol name lenghts can 
	differ a lot.
	[797f820b]

2019-03-29 Eero Tamminen

	Symbols: handle few extra types and give more processing stats

	- Binaries built with ELF toolchains produce few extra symbol type
	 identifiers that were not handled in Hatari switch-case. This is
	 useful e.g. with Linux kernel symbol handling
	- Give more statistics for processing/ignoring of different symbol
	types
	[4cfe0973]

2019-03-29 Eero Tamminen

	Linux loader: Add m68k Debian installer freeze debug instructions
	[30a74928]

2019-03-29 Eero Tamminen

	Linux loader: Add kernel symbols option to [LILO] config

	If path to kernel symbols file given, after kernel is loaded, 
	symbols will be be auto-loaded with same TEXT offset.

	Helps debugging and profiling significantly.
	[a9e155a6]

2019-03-22 Eero Tamminen

	Linux loader: documentation updates

	- Split build and Hatari running instructions from lilo.cfg
	 to a separate document and expand it significantly
	- List which kernel config options are related to
	 each kernel command line option in lilo.cfg
	[d82fbcc8]

2019-03-26 Eero Tamminen

	Linux loader: add files for building m68k kernel and root fs
	[639aefe1]

2019-03-21 Eero Tamminen

	Linux loader: use separate FastRAM options for kernel & ramdisk

	Also simplify lilo.c code a bit with extra 'hostkbase' variable.
	[9dc11933]

2019-03-20 Eero Tamminen

	Linux loader: minor code improvements

	- Change ADD_CHUNK() macro to static add_chunk() function
	- Change few static vars to local ones + get rid of lilo_cleanup()
	- Move bootinfo members initialization closer to its use
	[e8500e06]

2019-03-19 Eero Tamminen

	Linux loader: add initial documentation
	[833645b7]

2019-03-19 Eero Tamminen

	Linux loader: integrate lilo.c to Hatari and add --lilo option

	Everything doesn't work yet:

	* Disassembly and memdump show just zero memory content for the
	 executed instructions after Linux has been started with this
	[7845d88c]

2019-03-19 Eero Tamminen

	Linux loader: adapt lilo.c Aranym code to Hatari

	- C++ -> C
	- map Aranym types, variables & debugs to Hatari ones
	- add missing HW config defines from Linux (GPLv2) headers and
	 set_machine_type() function to use those depending on Hatari config
	- update headers to ones needed with Hatari
	- make indenting and white space usage consistent
	- add few extra debug outputs & alerts
	[4171c4cc]

2019-03-19 Eero Tamminen

	Linux loader: add Aranym bootos_linux.cpp as lilo.c

	bootos_linux.cpp as-is from Aranym commit 4825851105.
	[3d7ff865]

2019-03-26 Eero Tamminen

	Minor clarifications for inffile autostart handling
	[c56e3719]

2019-03-28 Eero Tamminen

	Fix typo in comment
	[b2d8bbc9]

2019-03-28 Nicolas Pomarede

	Increase memory snapshot version (due to changes in FDC density mode
	emulation)
	[8c33afae]

2019-03-28 Nicolas Pomarede

	Improve DD/HD/ED detection for ST/MSA/STX floppies and add support
	for DD/HD mode on MegaSTE at $FF860E
	- Use track's size in bytes to detect DD/HD/ED (instead of counting
	sectors)
	- When FDC is set to HD mode (MegaSTE, TT and Falcon), reading DD
	floppies will fail, only HD/ED floppies will succeed
	- On ST/STE, FDC can only handle DD floppies but we allow to read
	ST/MSA/STX floppies in HD/ED anyway as a convenience
	(fix akaisex program to read AKAI S1000 HD floppies converted to STX
	format (using 10 sectors of 1024 bytes))
	[23ef339f]

2019-03-28 Nicolas Pomarede

	Machine specific IoMem_Fix functions should be called after generic
	handlers are set, not before
	[129d7a29]

2019-03-27 Nicolas Pomarede

	Add support for MegaSTE DIP switches register at $FF9200 and set
	floppy drive to HD by default Also refactor code between
	STE/MegaSTE/Falcon to handle address $FF9200 and Joypads/DIP
	switches
	[43e65a51]

2019-03-23 Nicolas Pomarede

	Update to the latest WinUAE's sources (from WinUAE 4.2.0 beta6
	2019/03/23)
	- Made 68030 MMU last write special case optional, can be useful
	when debugging.
	- Removed last write flag from few 68040+ only special cases.
	[211c16ba]

2019-03-16 Eero Tamminen

	Fix parsing of config string values with '=' chars in them

	Before something like this in config file:
	filename = /home/user/foo=bar/file

	Would have resulted in "filename" being "/home/user/foo".

	While there aren't likely to be much file names like that, this is
	important in future for being able to specify things like:
	liloargs = root=/dev/hda
	[f29709a0]

2019-03-14 Eero Tamminen

	More setup info to IDE trace

	When IDE tracing, show disk geometry and byte-swap status always
	[46b77c35]

2019-03-13 Eero Tamminen

	Set empty partition start & end to same point

	Also with CHS, not just LBA.  This shouldn't matter as everything's 
	using LBA, but tool output can confuse user when empty partition end
	given in CHS is listed before start.
	[586b2195]

2019-03-16 Thomas Huth

	Silence CMake warning about mismatching endif statement
	[153e44f0]

2019-03-13 Nicolas Pomarede

	Fix disassembler for CMP2/CHK2 and 68030 MMU opcodes + line-f
	exception for FC 11xxx field (update to WinUAE 4.2.0 beta5
	2019/03/10)
	[0beaee15]

2019-03-13 Nicolas Pomarede

	Add note about ABFLAG_DIRECTACCESS used in some memory banks (RAM or
	ROM)
	[7f41265c]

2019-03-12 Nicolas Pomarede

	Fix memory_valid_address
	[74c6bae7]

2019-03-11 Nicolas Pomarede

	Bypass indirect memory access if memory bank is plain RAM or ROM
	(complete WinUAE commit from 2019/03/01) This is slightly faster as
	we access memory bank directly instead of calling the generic memory
	handler
	[ec7ba818]

2019-03-10 Eero Tamminen

	Remove obsolete TODO
	[811aa299]

2019-03-10 Eero Tamminen

	Expand NatFeats documentation slightly and update links

	Aranym has moved to github, aranym.org is now owned by domain
	squatter
	[270df52a]

2019-03-10 Eero Tamminen

	Update --bios-intercept and --natfeats descriptions

	XBios(255) is deprecated and --natfeats preferred instead.
	[e1bd2530]

2019-03-10 Eero Tamminen

	Improve doc link warning messages

	Hatari UI docs are not in website, so those docs still point to Git.
	[fc43dbb7]

2019-03-10 Thomas Huth

	The docs are now mirrored to the website, no need to talk about git
	URLs
	[52d9129d]

2019-03-10 Thomas Huth

	Don't talk about the hg repository anymore
	[5854a2d1]

2019-03-08 Eero Tamminen

	Add compatibility notes about EmuTOS included with Hatari binaries
	[fbf8ccee]

2019-03-05 Eero Tamminen

	Update scsi-driver links

	Update from Uwe.
	[bb4f47d4]

2019-03-03 Eero Tamminen

	Link Hatari's exported docs instead of Git repo

	That way links to documentation sections work correctly, as
	TuxFamily Git server doesn't serve HTML files with correct content
	type.
	[73a2a159]

2019-03-03 Thomas Huth

	Add a cirrus.yml file for CI testing on cirrus-ci.com

	This CI system provides CI testing for FreeBSD and macOS, too. With
	this yaml file, CI builds are now triggered automatically for
	repositories on github.com where the Cirrus CI App is installed.
	[45c20334]

2019-03-03 Thomas Huth

	Fix configfile test for macOS
	[ed37ac17]

2019-03-03 Thomas Huth

	Fix HTML problems reported by older version of 'tidy'
	[3ffb15c4]

2019-03-03 Thomas Huth

	Fix compilation on macOS when the OSX bundling has been disabled

	The Paths_GetMacScreenShotDir() function is required for successful 
	linking, so gui-osx/paths.m has to be included here, too.
	[35ab71a1]

2019-03-03 Nicolas Pomarede

	Fix Spec512_StoreCyclePalette when using 16 or 32 MHz (patch by
	Christophe de Dinechin) Some colors could be be wrongly displayed
	with instructions doing several accesses at once
	(move.l or movem) and the number of cpu cycle per line was 1024 or
	2048 instead of 512.
	[49848fb9]

2019-03-03 Thomas Huth

	Replace links that pointed to the old HG repository
	[d0fa0416]

2019-03-01 Nicolas Pomarede

	Update to the latest WinUAE's sources (from WinUAE 4.2.0 beta3+
	2019/02/26)
	- Bypass indirect memory access if memory bank is plain RAM or ROM
	board (not used in Hatari for now)
	- Fix 68020+ addressing mode disassembler output
	- Fix MOVES prefetch mode instruction length
	- 68030 MMU: generate also short bus error stack frames 0x0A when
	possible
	[aef7260a]

2019-02-24 Eero Tamminen

	Support for showing installed Hatari UI docs from Hatari UI

	Earlier Hatari UI Help menu had items only for Hatari documentation, 
	now it has item also for Hatari UI release notes.

	As this expects (Unix/Linux) file system standard locations, I
	changed paths to simple strings instead of using os.sep, for
	readability.
	[137ed28c]

2019-02-24 Eero Tamminen

	Update Python UI documentation / links
	[66ef70d5]

2019-02-24 Eero Tamminen

	Separate web items from local info in Help menu
	[0ad895e4]

2019-02-24 Eero Tamminen

	HG -> Git link
	[49ca660e]

2019-02-24 Eero Tamminen

	Update EmuTOS related information
	[15069088]

2019-02-24 Eero Tamminen

	Update release notes
	[4b572124]

2019-02-24 Eero Tamminen

	Improve --fast-forward / --benchmark options descriptions

	Explain them better and refer to other options impacting them.
	[9c7531ae]

2019-02-24 Eero Tamminen

	Enable debug logging for frame skip changes

	Now that Hatari logging is better controlled.
	[37f4053c]

2019-02-24 Eero Tamminen

	Update spec file description + more accurate license

	GPL version matters, and Hatari emulates nowadays also other things 
	that ST.
	[a7617976]

2019-02-24 Eero Tamminen

	Enable blitter in EmuTOS autostart INF file

	Same as EmuTOS defaults (and no impact for machines without blitter)

	Improve also INF file differences documentation.
	[8169d4b4]

2019-02-24 Thomas Huth

	Run windres with <FLAGS>

	Needed for compiling Hatari with a multilib capable cross compiler. 
	Thanks to Christer Solskogen for the patch!
	[fa621054]

2019-02-19 Thomas Huth

	Rename .hgignore into .gitignore
	[7aca27d0]

2019-02-14 Thomas Huth

	Fix some typos
	[00412eac]

2019-02-13 Eero Tamminen

	readme.txt: update few sections and document source subdirectories
	[287d4a99]

2019-02-13 Eero Tamminen

	Note that these are config files for old Hatari versions

	Also remove executable bit from config files.
	[4470054c]

2019-02-10 Thomas Huth

	Work-around problems with capslib 5.1
	[f63bab91]

2019-02-09 Nicolas Pomarède

	Undo changeset #7330, 'information' has no plural (thanks to Thomas
	for pointing this)
	[e2777243]

2019-02-08 Nicolas Pomarède

	Fix some comments (use plural)
	[bf366489]

2019-02-08 Thomas Huth

	Fix typos in comments (discovered with 'codespell')
	[7e92db01]

2019-02-08 : *** Version 2.2.1 ***

2019-02-08  Nicolas Pomarede

	* doc/compatibility.html, doc/doxygen/Doxyfile, doc/manual.html, doc
	/release-notes.txt, hatari.spec, readme.txt, src/gui-osx/Info-Hatari
	Winuae.plist, src/gui-osx/Info-Hatari.plist, src/gui-
	osx/en.lproj/InfoPlist.strings, src/gui-
	osx/fr.lproj/InfoPlist.strings, src/includes/version.h:
	New release 2.2.1, update date in corresponding files
	[dcf1ab71057d] [tip]

2019-02-01  Nicolas Pomarede

	* src/cpu/gencpu.c:
	Fix UNPK instruction when using Dx/Dy registers (fix changeset
	#7212) Due to a bad copy/paste with PACK, UNPK wrongly wrote to (Ax)
	instead of Dx
	[ddb0dc920798]

2019-01-30 : *** Version 2.2.0 ***

2019-01-30  Nicolas Pomarede

	* .hgtags:
	Added tag v2.2.0 for changeset 031ceebcf975
	[0185d0f01c18]

	* doc/compatibility.html, doc/doxygen/Doxyfile, doc/manual.html, doc
	/release-notes.txt, hatari.spec, readme.txt, src/gui-osx/Info-Hatari
	Winuae.plist, src/gui-osx/Info-Hatari.plist, src/gui-
	osx/en.lproj/InfoPlist.strings, src/gui-
	osx/fr.lproj/InfoPlist.strings, src/includes/version.h:
	New release 2.2.0, update date in corresponding files
	[031ceebcf975] [v2.2.0]

2019-01-28  Nicolas Pomarede

	* src/cpu/newcpu.c:
	Fix disassembler scale factor in brief extension mode (from WinUAE
	4.2.0 beta1 2019/01/27)
	[7d4c884403ad]

2019-01-27  Eero Tamminen

	* tests/tosboot/tos_tester.py:
	Increase timeouts for floppy testing

	TOS v3/v4 tests timed out with floppy + MMU + lot of TT-RAM.
	[ae36b824442f]

	* src/scc.c:
	Avoid redundant file open complaints from SCC_Init()

	* User can't specify SCC-B input file, so there should be no
	complaints about it not being specified
	* Only way to disable device interface from command line, when they're
	enabled by Hatari config, is to specify empty file name for them.
	That shouldn't give complaints for SCC-B output either
	[5c5b8bb741b1]

	* tests/tosboot/tos_tester.py:
	Skip VDI mode tests with TOS v1.00

	While autostarted tests with this TOS version need to be run from
	AUTO folder and therefore work also with VDI mode, its redudant to
	do them.
	[c3fb043b0898]

	* doc/release-checklist.txt:
	Better to check docs too

	Our www-site deps & TOS info was clearly out of date...
	[c708094ae74c]

2019-01-25  Thomas Huth

	* src/uae-cpu/CMakeLists.txt, src/uae-cpu/newcpu.c:
	Silence compiler warnings from Clang 3.4
	[24da3f47bd8f]

2019-01-25  Eero Tamminen

	* doc/authors.txt, doc/thanks.txt:
	Add few missing items to authors & thanks docs

	I went through mails with attachments within ~1 year and added
	everything I noticed to be missing.
	[6551ae748998]

2019-01-24  Eero Tamminen

	* doc/release-notes.txt:
	Add few lesser changes to release notes
	[bc68d35faa8b]

	* doc/release-notes.txt:
	Release notes fine-tuning
	[7d32db96add9]

2019-01-21  Eero Tamminen

	* doc/release-notes.txt, tools/zip2st.sh:
	zip2st: handle also directories with spaces in their names
	[ff098fa48488]

2019-01-23  Thomas Huth

	* doc/release-notes.txt:
	Add information about more ACSI disks and disassembler to relase
	notes
	[5e75ac892ba3]

2019-01-22  Nicolas Pomarede

	* doc/emutos.txt, doc/release-notes.txt:
	More updates to release notes
	[a001a6ae5985]

	* doc/release-notes.txt:
	Small updates to release notes
	[0e376df930a4]

2019-01-19  Nicolas Pomarede

	* src/cpu/cpummu030.c, src/cpu/cpummu030.h, src/cpu/gencpu.c,
	src/cpu/newcpu.c:
	Fix stacked PC in case of bus error for 68030 MMU (from WinUAE
	2019/01/19) 68030 MMU bus error stacked PC points to following
	instruction if faulting memory access is write and it is
	instruction's last operation.
	[54bdd3fb5108]

2019-01-18  Eero Tamminen

	* src/paths.c:
	Fix buffer overflow in data path handling

	Reported by Christian Zietz.

	If relative path to Hatari is used on Windows, psExecDir() is also
	relative and File_MakeAbsoluteName() for datadir would overwrite its
	allocation.

	(This wasn't caught on Linux because at that point execDir path is
	absolute there.)

	Correct thing is to use FILENAME_MAX, as documented by
	File_MakeAbsoluteName().
	[35d3c19fe515]

2019-01-15  Eero Tamminen

	* tools/debugger/hatari_profile.py:
	Fix: Valgrind/Callgrind output symbol handling

	Because some of the output for Valgrind/Callgrind currently needs to
	be done before all symbol files have been processed, that output can
	use symbols (e.g. object file names) that for the normal callgraphs
	have been replaced with more relevant ones (e.g. name of first
	symbol in that object file).

	As a result, the call info output for Callgrind (at the end of
	parsing) could use symbols that script didn't retain. Fixed by
	storing aliases to symbol addresses, and using those for Callgrind
	output when needed.

	If/when all Callgrind info output is re-written to be done only
	after all input files have been processed, this patch should be
	reverted.
	[eab3159faa2c]

	* tools/debugger/hatari_profile.py:
	Valgrind/Callgrind: fix 0x0 addr handling and typo

	If profile included address zero, memory area name was unset. Fix:
	set current function address to -1 on init.
	[6a364d96d08f]

	* doc/compatibility.html, doc/emutos.txt:
	Add new demos to Hatari and EmuTOS compatibility lists

	Fixes also few incorrect demo group names, so that they match what's
	listed in pouet.net / demozoo.
	[953a1d69cc98]

2019-01-13  Thomas Huth

	* src/configuration.c, src/debug/68kDisass.c, src/debug/68kDisass.h:
	Enable PMMU in the disassembler if enabled in the CPU
	[4a818cec5dcd]

2019-01-12  Thomas Huth

	* src/debug/68kDisass.c:
	Enable FPU opcodes in disassembler for 68040 and 68060, too

	The external disassembler code was explicitely checking for 68881
	and 68882, which prevents disassembly of FPU opcodes in 68040/060
	mode. Thanks to Thorsten Otto for the patch!
	[30df2045ae33]

2019-01-12  Eero Tamminen

	* doc/keymap-sample.txt:
	More info on key mapping
	[0c2220dfb193]

2019-01-10  Eero Tamminen

	* doc/compatibility.html, doc/emutos.txt:
	Add few demos to compatibility lists
	[f0c12edb6421]

2019-01-09  Eero Tamminen

	* doc/release-notes.txt, python-ui/release-notes.txt, python-
	ui/uihelpers.py:
	Python-UI: version/release-notes update

	Main changes are Python v3 support and especially the pygtk2 -> gtk3
	change.
	[9ed2750ce471]

	* python-ui/hatariui.1:
	Python-UI: manual page fixes & improvements
	[f0023bfa0413]

	* python-ui/tests/gtk-hatari-embed-test.py:
	Python-UI: v2 & v3 support to embed tester
	[380874315a51]

	* python-ui/debugui.py, python-ui/dialogs.py, python-ui/hatari.py,
	python-ui/hatariui.py, python-ui/uihelpers.py:
	Python-UI: support both Python v2 & v3
	[30ae16596230]

	* python-ui/uihelpers.py:
	Python-UI: fix radiobuttons in machine dialog
	[eccb745538e3]

	* python-ui/hatari.py:
	Python-UI: fix to new memory size

	Handle Hatari memory sizes being now in KiBs instead of MiBs.
	[f75434f11453]

	* python-ui/dialogs.py, python-ui/hatari.py:
	Python-UI: Add SCC-B support
	[34201f9f9a0a]

	* src/configuration.c, src/control.c, tests/tosboot/tos_tester.py,
	tools/hconsole/hconsole.py:
	Add config option(s) for SCC-B

	Thomas added the actual implementation and command line option. This
	adds config options for enabled SCC-B and specifying the output
	file. SCC-B input doesn't work yet, so it's commented out.
	[1372381677ea]

2019-01-01  Thomas Huth

	* doc/hatari.1, doc/manual.html, doc/release-notes.txt, src/change.c,
	src/includes/configuration.h, src/options.c, src/scc.c,
	tests/serial/run_test.sh:
	Split up SCC input and output. Only allow output for now since input
	is not working yet.
	[4c4bd8970304]

2018-12-30  Eero Tamminen

	* src/gemdos.c:
	Make FD info output more consistent for GEMDOS HD traces

	"--trace os_base" reports already Fopen() and Flcose(), so report
	also Fcreate(), otherwise Fclose() calls don't match in trace
	output.

	Similarly to Fopen(), tell also when Fcreate() is redirected to TOS.
	[7c916336b14e]

2018-12-29  Thomas Huth

	* src/scc.c:
	Prefer O_NONBLOCK if available
	[a697f7f5b49e]

	* src/scc.c:
	Track SCC channel states in a proper struct
	[8ddcbc8aa3e4]

	* src/scc.c:
	Set transmit-buffer-empty if not connected to a file
	[d3fc570b28a9]

	* src/change.c, src/includes/scc.h, src/ioMemTabFalcon.c, src/scc.c:
	Initialize SCC only for machines that support it
	[8e960f9b8f19]

2018-12-28  Eero Tamminen

	* doc/release-notes.txt:
	Update release notes
	[c82e105b6098]

	* tests/tosboot/tos_tester.py:
	Fix TOS tester output verification, clarify error info

	- output verification was completely broken, check now just for
	output size, that should catch 99% of the issues
	- make the test-case error output clearer
	- rename fifo -> FIFO in output
	[f99c0a824c0b]

	* tests/tosboot/readme.txt, tests/tosboot/tos_tester.py:
	Add TOS boot tester support for recent Hatari changes

	- SCSI support
	- TT-RAM up to 512MB
	- MegaST / MegaSTE machine types

	TOS v2 and 256k EmuTOS don't officially support TT, so don't try to
	test them with it anymore.
	[799da178874e]

	* tests/tosboot/tos_tester.py:
	Validate Hatari bool options given for TOS boot tester

	- Exit with error if they aren't relevant, or for current CPU core
	- Skip testing options that aren't relevant for current machine type
	[814303b8f01f]

2018-12-28  Thomas Huth

	* src/scc.c:
	Fix compilation problems in scc.c with MinGW
	[1a0d83e05f61]

	* src/scc.c:
	Refactor code, and re-indent with 'astyle --style=ansi'
	[3931da35016f]

	* src/hdc.c:
	Indent with TABs, not with spaces
	[f3d935eefec1]

	* src/change.c, src/includes/scc.h, src/memorySnapShot.c, src/scc.c:
	Save SCC state in memory snapshots
	[fe3046397253]

2018-12-26  Thomas Huth

	* src/floppy.c, src/gemdos.c:
	Use strlcpy() instead of strcpy()

	Coverity warns that we might overflow the destination buffer here.
	It's unlikely, but better be safe than sorry and use strlcpy() here
	instead of strcpy().
	[2b6464ad54fc]

	* .gitlab-ci.yml:
	Check HTML files in the gitlab CI, too
	[94ddfebba796]

2018-12-25  Thomas Huth

	* src/ioMem.c, tests/buserror/CMakeLists.txt:
	The addresses around 0xff8e21 do not produce a bus error on the
	Mega-STE

	Now our bus error behavior is finally the same as on a real Mega-
	STE, so we can now enable the bus error test for the megaste
	machine, too.
	[5edd16cc25c8]

	* doc/hatari.1, doc/manual.html, doc/release-notes.txt, src/ioMem.c,
	src/ioMemTabFalcon.c, tests/serial/CMakeLists.txt:
	The Mega-STE has an SCC serial port, too
	[6e6298de7992]

2018-12-24  Thomas Huth

	* tests/serial/CMakeLists.txt, tests/serial/midi_ser.c,
	tests/serial/midi_ser.prj, tests/serial/midi_ser.tos,
	tests/serial/run_test.sh, tests/serial/scc_ser.c,
	tests/serial/scc_ser.prj, tests/serial/scc_ser.tos:
	Add test for SCC and MIDI serial output
	[6b1458a956f6]

2018-12-23  Thomas Huth

	* tests/CMakeLists.txt, tests/serial/CMakeLists.txt,
	tests/serial/expected.txt, tests/serial/mfp_ser.c,
	tests/serial/mfp_ser.prj, tests/serial/mfp_ser.tos,
	tests/serial/run_test.sh:
	Add a test for MFP serial output
	[60fd61424293]

	* src/debug/evaluate.c:
	Fix whitespace in evaluate.c

	Code should be indented with TABs, not with spaces.
	[9fec480de0a4]

	* src/debug/evaluate.c:
	Add sanity check to avoid accessing val.buf[] with negative index

	Coverity complains here that val.idx might still be -1 in certain
	cases. Not sure whether this really can happen during runtime, but
	let's better play safe and add a check for this.
	[221200ef3d53]

	* src/cpu/sysdeps.h, src/scc.c:
	Fix broken build with old UAE core
	[ae9b20d28c2c]

	* CMakeLists.txt, cmake/config-cmake.h, doc/hatari.1, doc/manual.html,
	doc/release-notes.txt, src/includes/configuration.h, src/options.c,
	src/scc.c:
	Add the possibility to use a device file with the SCC channel B
	emulation

	Code has mostly been adapted from the code in Aranym's
	serial_port.cpp file. I haven't checked it with real serial devices
	(/dev/ttyS0 etc.) yes, but it's good enough to get some output in a
	normal file when running a terminal application like "Rufus".
	[9c00812ebf8b]

2018-12-16  Eero Tamminen

	* doc/release-notes.txt, src/gemdos.c, src/memorySnapShot.c:
	Save/restore GEMDOS file handles with memory snapshots

	This requires storing file open mode used with Fopen/Fcreate. That
	and rest of internal handle data, along with file modification &
	position are added to the snapshot.

	Snapshot version is increased to 2.2.0 because of added content.

	Restoring gives warning(s) if files have been modified before
	restore. File handles won't be restored if file isn't anymore
	present or seeking to original location fails. These don't prevent
	rest of memory snapshot restore though.

	DTA name cache data is not stored, it's just cleared on restore.
	This means means Fsnext() calls returning "no more files" until
	application calls Fsfirst() again. This isn't a problem unless
	snapshot is saved while application is scanning directory content
	(once that scanning has finished, application anyway would need to
	call Fsfirst() to get more hits).

	I.e. if snapshot is saved while file selector or disk directory
	window is *in process* of being re-refreshed, it will be missing
	files. User will see them after refreshing the window though, so
	this shouldn't be much of a problem in practice.
	[7e5cd2b03ab7]

	* doc/release-notes.txt:
	Improve release notes

	Join duplicate sections and do nicer line wrapping
	[99be748bd40f]

	* doc/compatibility.html, doc/emutos.txt:
	Note about R0X Zero Credits screen overscan
	[f39b48e74cd1]

2018-12-14  Eero Tamminen

	* src/gemdos.c:
	Improve Fsnext() handling / compatibility

	Return error for unrecognized DTA indeces. Will help later GEMDOS HD
	memory snapshot handling improvements.

	Zero DTA file name when there's no match with older TOS version.
	[202cf7c4f230]

2018-12-12  Nicolas Pomarede

	* src/cpu/cpummu030.c, src/cpu/fpp.c:
	Remove some compilation warnings (from WinUAE 2018/12/12)
	[682ec401aa73]

2018-12-09  Eero Tamminen

	* doc/compatibility.html, doc/emutos.txt:
	Add (rest of) downloadable SV2018 Falcon demos

	And move 060 Falcon demos to their own section.

	(Falcon demo list is very long, 060 is extra HW so it's most logical
	split although it doesn't shorten 030 list much.)
	[0e6438f69e48]

2018-12-08  Nicolas Pomarede

	* src/cpu/winuae_readme.txt:
	Update WinUAE CPU version to 4.1.0 (no change for Hatari since 4.1.0
	beta12)
	[e01e0715009e]

2018-12-07  Eero Tamminen

	* doc/compatibility.html, doc/emutos.txt:
	Add rest of downloadable Silly Venture 2018 ST/E games

	https://demozoo.org/parties/3538/#competition_14748
	[615b7ad7b0e7]

	* src/tos.c:
	Improve VDI warnings

	- TOS v4 supports VDI, just not Hatari's extended VDI resolutions
	- Don't show warnings about incorrect VDI resolution sizes unless VDI
	mode is enabled
	[6d77029c2b29]

2018-12-06  Thorsten Otto

	* src/debug/debugInfo.c:
	Show OS header info also when sysbase does not point to the ROM

	This can happen for example with MiNT, and when using tools that
	relocate the TOS to RAM like GEMRAM.
	[e0db4caa7d3e]

2018-12-05  Eero Tamminen

	* src/inffile.c:
	Add TODOs for Falcon INF file video modes
	[05a94bf70388]

2018-12-06  Eero Tamminen

	* src/hdc.c:
	Document partition types and update links in comment
	[1452668a5527]

2018-12-05  Thorsten Otto

	* src/hdc.c:
	Add some more partition IDs for auto-detection of byteswapped images

	Adds some more types to the detection ('F32', 'MIX' and 'UNX').
	There are also 2 more types which are mentioned in the XHDI
	specification ('QWA' and 'MAC'), but I have never seen them, and I
	think filesystem drivers for them don't exist, but the above ones
	are actually in use.
	[8c3b764a0552]

2018-12-05  Nicolas Pomarede

	* src/blitter.c:
	Correct wrong number of DSP cycles during blitting (fix change #7243
	from 2018/11/26)
	[4f84c3f70d86]

2018-12-05  Eero Tamminen

	* src/floppy.c:
	Tell user why floppy isn't available

	At least with --log/alert-level info.
	[bbd4a7818e74]

	* doc/manual.html:
	Update performance section

	Add notes about SDL2 and WinUAE CPU cycle exact options impact, and
	otherwise update the performance information for the Hatari changes
	done within past few years.
	[f5e9fdef356a]

2018-12-03  Nicolas Pomarede

	* src/cpu/cpummu030.c, src/cpu/newcpu.c, src/cpu/winuae_readme.txt:
	More MMU fixes, update to the latest WinUAE's sources (from WinUAE
	4.1.0 beta12 2018/12/02)
	[f4a9180b6858]

	* src/cpu/cpummu.c, src/cpu/cpummu030.c:
	Always use supervisor mode when MMU accesses descriptors (Hatari
	patch backported to WinUAE 4.1.0 beta+ from 2018/12/01)
	[c178975db6cd]

2018-12-02  Eero Tamminen

	* doc/compatibility.html:
	Add new items to compatibility list
	[abd424b94b2a]

	* doc/emutos.txt:
	Update EmuTOS compatibility notes
	[6082fc356aaf]

	* readme.txt:
	Document Portaudio issue
	[b621cf04f2d9]

2018-11-30  Nicolas Pomarede

	* src/falcon/dsp.c:
	Some waitstate cycles were not correctly counted when accessing DSP
	IO regs in CE mode (eg FFFA204) This means the DSP emulation did not
	run for enough cycles in such cases, which could break some programs
	where cpu and dsp send/receive data without handshakes
	[883007123bdc]

2018-11-29  Nicolas Pomarede

	* src/cpu/cpummu030.c:
	Reorder #includes
	[d012fa981608]

	* src/cpu/cpummu030.c, src/cpu/cpummu030.h, src/cpu/newcpu.c:
	More 68030 MMU fix and cleanup (from WinUAE 4.1.0 beta11+
	2018/11/29)
	[ab947f330b90]

	* src/cpu/cpummu030.c, src/cpu/newcpu.c, src/cpu/winuae_readme.txt:
	68030 MMU fix: do not assume DOB is not modified by exception
	handler when DF is not cleared (from WinUAE 4.1.0 beta11+
	2018/11/29)
	[19d0ba881325]

	* src/cpu/cpummu030.c, src/cpu/memory.h:
	68030 MMU fix for some unaligned accesses + remove unused code (from
	WinUAE 4.1.0 beta11+ 2018/11/28)
	[5fd66f4a2f5f]

2018-11-26  Nicolas Pomarede

	* src/blitter.c:
	Run DSP emulation during blitting only when using WinUAE CPU core
	(old CPU core is not accurate enough anyway)
	[51caf4bbe440]

2018-11-25  Nicolas Pomarede

	* src/cpu/newcpu.c:
	Update 68030 cache debugging code for latest WinUAE changes
	[92c85d71a52f]

2018-11-24  Nicolas Pomarede

	* src/cpu/cpummu030.h, src/cpu/winuae_readme.txt:
	Update to the latest WinUAE's sources (from WinUAE 4.1.0 beta11
	2018/11/24)
	[3014b55a582f]

	* src/cpu/debug.c, src/cpu/newcpu.c, src/cpu/readcpu.c:
	Proper disassembler for 68020+ addressing mode using displacement
	(from WinUAE 4.1.0 beta10+ 2018/11/24)
	[2e21407ab13e]

	* src/cpu/cpummu030.c, src/cpu/newcpu.c, src/cpu/newcpu.h:
	Minor typos in cpu (from WinUAE 4.1.0 beta10+ 2018/11/24)
	[9ab3d1c1ad9b]

	* src/cpu/cpummu030.c, src/cpu/newcpu.c, src/cpu/newcpu.h,
	src/cpu/winuae_readme.txt:
	68030 MMU prefetch+data cache mode bus error retry fix (from WinUAE
	4.1.0 beta10+ 2018/11/24)
	[3327cbadce07]

	* src/cpu/cpummu030.c:
	Fix 68030 MMU prefetch mode retries (from WinUAE 4.1.0 beta10+
	2018/11/24)
	[00ba3a6b1cb8]

	* src/cpu/cpummu030.c:
	68030 MMU + prefetch fix when prefetch crosses invalid MMU pages
	(from WinUAE 4.1.0 beta10+ 2018/11/24)
	[365f8a4e8e7e]

	* src/cpu/cpummu.c, src/cpu/cpummu.h, src/cpu/cpummu030.c,
	src/cpu/cpummu030.h, src/cpu/fpp.c, src/cpu/gencpu.c,
	src/cpu/mmu_common.h, src/cpu/newcpu.c:
	68030 MMU update : unaligned accesses are now new exception handler
	emulation compatible and retry correctly (from WinUAE 4.1.0 beta10+
	2018/11/23)
	[ecf133a11880]

2018-11-19  Nicolas Pomarede

	* src/blitter.c:
	In Falcon mode, run DSP emulation while blitter owns the bus, not
	just during CPU emulation main loop
	[ea26890ab3ee]

2018-11-17  Nicolas Pomarede

	* src/cpu/newcpu.c:
	Remove debug printf's
	[86c242a7f5c3]

	* src/cpu/cpummu030.h, src/cpu/debug.c, src/cpu/fpp.c,
	src/cpu/gencpu.c, src/cpu/mmu_common.h, src/cpu/winuae_readme.txt:
	68030 MMU MOVEM <ea>,<regs> access fault retry was unreliable in
	some situations + update to WinUAE 4.1.0 beta10 2018/11/17
	[b9a8ef2e026c]

	* src/cpu/newcpu.c:
	68020 more compatible state restore ignored mid instruction state
	variables (from WinUAE 4.1.0 beta10 2018/11/17)
	[ab432a75a1b0]

2018-11-17  Thomas Huth

	* src/ide.c:
	Fix compilation on 32-bit hosts
	[c6833bbc545b]

	* tests/configfile.sh:
	Do not use --fpu and --mmu options since they do not work with the
	old UAE core
	[24a2679b6026]

	* tests/CMakeLists.txt, tests/configfile.sh:
	Add a test for config file loading and saving
	[cb192debdf6c]

2018-11-16  Nicolas Pomarede

	* src/cpu/hatari-glue.c, src/m68000.c:
	In addition to commit #7219 from 2018/11/06, quit_program must be
	reset after restoring a snapshot If not, quit_program will remain
	"4"i (=hard_reset) and the VBL interrupts won't trigger anymore
	[e158777bffb2]

2018-11-14  Nicolas Pomarede

	* src/cpu/memory.h:
	Ensure HW registers region is really not cachable for 68030 without
	MMU With 68030, long aligned long writes are always cached if Write-
	allocate mode is enabled (and of course cache is also enabled). This
	means that when writing a long to an HW register, we would get the
	same value when reading it just after (directly coming from the data
	cache), even if the register's value is supposed to be dynamic (fix
	4musiK by Dune & Sector One that was sending/receiving data to/from
	the DSP by writing/reading long to $FFA204)
	[1eb4f25b4f55]

2018-11-11  Thomas Huth

	* src/ide.c:
	Improve naming for IDE/ATAPI disks
	[651e98bd44d6]

2018-11-03  Eero Tamminen

	* src/debug/symbols.c:
	Remove extra '|' from help text
	[1e3cbd5d3bcf]

2018-11-08  Thomas Huth

	* src/ncr5380.c:
	The 16 bytes should only by added when DATA IN got interrupted
	[fc9f23ace495]

	* src/ncr5380.c:
	Final DMA address must be 16 bytes to high on the Falcon
	[2ac59b6d048e]

	* src/fdc.c:
	Make FDC_DMA.SectorCount 16-bit wide on the Falcon

	According to Uwe, the SectorCount register is 16 bits on the Falcon,
	and HDDriver requires this behavior to work properly when doing big
	transfers via SCSI (i.e. it writes values > 0xff to 0xff8604).
	[76d354368702]

2018-11-06  Nicolas Pomarede

	* src/cpu/cpummu030.c, src/cpu/debug.c, src/cpu/winuae_readme.txt:
	Update to the latest WinUAE's sources, no real change for Hatari
	(from WinUAE 4.1.0 beta8 2018/11/04)
	[50529141b394]

	* src/video.c:
	In Video_InterruptHandler_VBL, don't trigger an exception for VBL
	interrupt if the user selected 'reset' from the UI/shortcut keys The
	cold reset would clear the ram, but the cpu would try to execute one
	last instruction to fetch the VBL's vector at $70. This vector would
	be 0, which could trigger a bus error by jumping to an empty memory
	location ; but as the bus error handler would be 0 too, this could
	create a double bus error / halt instead of a clean reset.
	[c660b00941a5]

	* src/cpu/debug.c, src/cpu/mmu_common.h, src/cpu/newcpu.c:
	Fix a possible crash of Hatari with 68030+MMU when exiting a
	TRY/CATCH/ENDTRYi block with return In the case of 68030+MMU, a data
	page fault when reading the MMU tables caused a bus error, but the
	TRY block was not correctly unstacked from fill_icache030() which
	created a longjmp to a no-more consistent address on the next THROW
	/ bus error. This now correctly creates a double bus error / halt
	instead of crashing
	[3a3fb92338a5]

2018-11-06  Thomas Huth

	* doc/CMakeLists.txt:
	Test manual.html and compatibility.html with 'tidy'
	[e14aeb8040d0]

2018-11-06  Uwe Seimet

	* src/configuration.c, src/ide.c, src/includes/configuration.h:
	IDE support for sector sizes > 512 bytes

	Add support for IDE/SATA hard disks with physical sector sizes of up
	to 4096 bytes. Just like with ACSI/SCSI there is a new configuration
	property nBlockSize.

	The patch was successfully tested with emulated drives with 512 and
	4096 physical bytes per sector. No backwards compatibility issues
	were found.

	Notes:

	- With 4096 bytes per physical sector a real Atari blocks the IDE
	port when trying to boot from such a drive. This is because the TOS
	boot code does not support sectors > 512 bytes.
	- A hard disk driver with support for IDE/SATA drives with 4096 bytes
	per sector (4KN) is required to make use of this feature with
	Hatari.

	Also enable the existing CD-ROM support with a new configuration
	property nDeviceType (default is 0, meaning IDE hard disk drive. 1
	means CD-ROM).
	[26a458a6f666]

2018-10-31  Nicolas Pomarede

	* src/memorySnapShot.c, src/stMemory.c:
	Save/restore TT RAM content into memstate
	[3f9202b907b9]

2018-10-26  Nicolas Pomarede

	* src/cpu/cpummu030.c:
	68030 MMU Locked-Read-Modify-Write restarts whole instruction (from
	WinUAE 4.1.0 beta8+ 2018/10/26)
	[8a24d4e9ec56]

2018-10-22  Nicolas Pomarede

	* src/cpu/cpummu030.c, src/cpu/newcpu.c, src/cpu/newcpu.h:
	68030 MMU datacache mode LRMW support (from WinUAE 4.1.0 beta8+
	2018/10/22)
	[9a3065c7a909]

	* src/cpu/gencpu.c:
	PACK/UNPACK could have undefined fetch order depending on compiler's
	optimisations (from WinUAE 4.1.0 beta8+ 2018/10/22)
	[242ccf01b92d]

	* src/cpu/cpummu030.c, src/cpu/cpummu030.h:
	68030 MMU retry update, unaligned accesses were not retried as
	unaligned (from WinUAE 4.1.0 beta8+ 2018/10/22)
	[df8f5a5216a2]

2018-10-21  Nicolas Pomarede

	* src/cpu/fpp.c:
	Another 68030 MMU FPU FSAVE/FRESTORE fix (from WinUAE 4.1.0 beta8+
	2018/10/21)
	[6d26c8eb7a34]

	* src/options.c:
	Improve description for CPU option '--compatible'
	[b7cc58ecdac0]

	* src/statusbar.c:
	In statusbar, display 'CE' or 'PF' if 'cycle exact' or 'prefetch'
	modes are enabled for CPU
	[df07b8aee1cd]

	* src/cpu/fpp.c:
	Use x_cp functions which automatically support 68030 MMU (from
	WinUAE 4.1.0 beta 2018/10/21)
	[208f066aa6fd]

	* src/cpu/cpummu030.c:
	Fix 68030 MMU MOVEM to memory in case of bus error and retry (from
	WinUAE 4.1.0 beta 2018/10/21)
	[7bc76c478636]

	* src/cpu/gencpu.c:
	Add missing file from changeset #7204
	[0539fe1ad5f1]

	* src/cpu/cpummu030.c, src/cpu/cpummu030.h, src/cpu/debug.c,
	src/cpu/fpp.c, src/cpu/winuae_readme.txt:
	For 68030+MMU, handle modification of SSW's FC bits during exception
	handler (from WinUAE 4.1.0 beta8 2018/10/20)
	- If FC is modified, retried access cycle uses modified FC
	- Add missing FRESTORE 68030 MMU access fault support
	- In some situations 68030 MMU access fault size stored to stack frame
	was byte even when actual fault size was word or long size (fix
	programs trying to correct bus or address error during the exception
	handler before retrying the faulty instruction, for example
	'memwatch' by Uwe Seimet)
	[ab65f0d4bc2f]

	* src/cpu/newcpu.c:
	When emulating 68030+MMU, disassembly traces were not correctly
	located in case of 'retry' (after a bus error+RTE)
	[674dc45272d3]

	* src/cpu/gencpu.c, src/cpu/newcpu.c, src/cpu/newcpu.h:
	Merge forgotten changes from WinUAE 13/08/2018 (no real change for
	Hatari)
	[05b15a938d77]

2018-10-20  Thomas Huth

	* doc/compatibility.html, doc/manual.html:
	Fix warnings reported by 'tidy'
	[7d34147404f0]

	* doc/compatibility.html, doc/hatari.1, doc/manual.html, doc/video-
	recording.txt:
	Replace some contractions, since that is better suited for manuals
	[0382547256cd]

2018-10-19  Eero Tamminen

	* doc/release-checklist.txt:
	Add release checklist document
	[54bf3b170827]

2018-10-18  Eero Tamminen

	* doc/compatibility.html:
	Fix W3 HTML validator errors and warnings in compatibility.html
	[6d89a8a16b4f]

	* doc/manual.html:
	Fix W3 HTML validator errors and warnings
	[69f10cd4421c]

2018-10-16  Thomas Huth

	* doc/images/harddisks.png, doc/manual.html:
	Update the hard disk dialog in the manual
	[4f4871bb49f0]

	* src/gui-sdl/dlgHardDisk.c:
	Improve the texts in the HD dialog
	[069c228352a3]

2018-10-14  Thomas Huth

	* src/nf_scsidrv.c:
	Indent with TABs, not with spaces
	[54d71be084f2]

2018-10-14  Uwe Seimet

	* src/configuration.c, src/hdc.c, src/ide.c,
	src/includes/configuration.h, src/includes/hdc.h, src/ncr5380.c:
	Support ACSI/SCSI drives with block sizes > 512 bytes
	[913e0c891b1f]

2018-10-14  Thomas Huth

	* src/cpu/maccess.h:
	Remove broken do_get_mem_quad function

	Recent version of GCC complain:

	src/cpu/maccess.h:75:15: warning: left shift count >= width of type
	[-Wshift-count-overflow] return (b[0] << 56) | (b[1] << 48) | (b[2]
	<< 40) | (b[3] << 32) | (b[4] << 24) | (b[5] << 16) | (b[6] << 8) |
	b[7]; ^~

	And right they are, the value would need a cast to uae_u64 here
	first. Since we apparently do not use the *quad functions at all,
	fix these warnings by simply removing the unused broken functions.
	[8b81b306f207]

2018-10-14  Eero Tamminen

	* doc/hatari.1, doc/manual.html, src/options.c:
	Add command line option for IDE byte swapping
	[50e14128e8d4]

	* src/nf_scsidrv.c:
	Add memory access checks to NF SCSI driver

	Patch by Uwe
	[f1564b93cb96]

2018-10-13  Eero Tamminen

	* doc/release-notes.txt, python-ui/README, python-ui/hatariui.py,
	python-ui/release-notes.txt:
	Update docs for Hatari UI
	[5558e67f847d]

	* python-ui/debugui.py, python-ui/dialogs.py, python-ui/hatariui.py,
	python-ui/uihelpers.py:
	Fix rest of issues from PyGtk v2 -> Python/Gtk v3 transition

	There are some additional changes on top of Gtk v2 -> v3 changes
	coming from switching from static PyGtk bindings to GObject
	introspected ones.

	- Extra data can't anymore be stored to objects. This caused a lot
	of changes in Table widget handling -> column needed to go into
	helper function parameters
	- Alignments are now given as properties to widget constructor instead
	of needing to use a wrapper object
	- Focus flags are now also given as properties
	- Some other changes widget constructor parameters and whether they're
	optional or not
	[2bdd9edb321d]

	* python-ui/tests/gtk-hatari-embed-test.py, python-ui/tests/gtk-hello-
	world.py:
	Fix tests window embedding for Gtk v3+
	[de20cc5d7f3e]

	* python-ui/tests/README, python-ui/tests/gtk-hatari-embed-test.py,
	python-ui/tests/gtk-hello-world.py, python-ui/tests/pygtk-hatari-
	embed-test.py, python-ui/tests/pygtk-hello-world.py:
	Rename test scripts more appropriately
	[68f2541b91a7]

	* python-ui/debugui.py, python-ui/dialogs.py, python-ui/hatari.py,
	python-ui/hatariui.py, python-ui/tests/pygtk-hatari-embed-test.py,
	python-ui/uihelpers.py:
	Add missing imports + update copyrights
	[f5b421d73571]

	* python-ui/debugui.py, python-ui/dialogs.py, python-ui/hatariui.py,
	python-ui/tests/pygtk-hatari-embed-test.py, python-ui/tests/pygtk-
	hello-world.py, python-ui/uihelpers.py:
	Start of PyGtk 2.x -> Gtk 3.x / GObject transition

	Raw results from running:
	https://gitlab.gnome.org/GNOME/pygobject/raw/master/tools/pygi-
	convert.sh

	(Just string replace)
	[069d365166a9]

	* python-ui/hatari.py:
	Handle Hatari config file format changes

	ACSI/SCSI/IDE have now their own sections
	[f26957b1bc84]

	* python-ui/dialogs.py, python-ui/hatari.py:
	Minor Python-UI option name / description improvements
	[ee40766a6280]

	* doc/emutos.txt, doc/fr/clavier-exemple.txt, doc/midi-linux.txt, doc
	/release-notes.txt, readme.txt, tests/buserror/readme.txt,
	tools/hconsole/release-notes.txt:
	Remove trailing whitespace from rest of docs
	[956ad0c30a6e]

	* doc/compatibility.html, doc/fr/hatari.1, doc/hatari.1,
	doc/manual.html, tools/atari-hd-image.1:
	Remove trailing whitespace from manuals
	[d9c2097fa2b0]

	* src/gui-sdl/CMakeLists.txt, src/uae-cpu/CMakeLists.txt,
	tests/natfeats/CMakeLists.txt:
	Remove trailing whitespace from build files
	[885abec24774]

	* tools/atari-hd-image.sh, tools/debugger/devpac3-symbols-convert.sh,
	tools/hatari-prg-args.sh, tools/zip2st.sh:
	Remove trailing whitespace from shell scripts

	hg files | grep '.sh$' | xargs sed -i 's/[[:space:]]*$//'
	[2bd8b10cb91c]

	* python-ui/config.py, python-ui/debugui.py, python-ui/dialogs.py,
	python-ui/hatari.py, python-ui/hatariui.py, python-ui/tests/pygtk-
	hatari-embed-test.py, python-ui/tests/pygtk-hello-world.py, python-
	ui/uihelpers.py, tests/tosboot/tos_tester.py, tools/atari-convert-
	dir.py, tools/hconsole/hconsole.py:
	Remove trailing whitespace from Python scripts

	hg files | grep '\.py$' | xargs sed -i 's/[[:space:]]*$//'
	[2bb3d9fd613c]

	* doc/release-notes.txt:
	Add latest changes to release notes
	[07fb0f2a18e0]

2018-10-12  Eero Tamminen

	* src/nf_scsidrv.c:
	Fix: add missing cache flushes to NF SCSI driver

	When emulator writes host memory, cache needs to be flushed for that
	memory area.

	Patch from Uwe.
	[d6355bb2dc25]

2018-10-11  Nicolas Pomarede

	* src/video.c:
	Fix reading out of array ShifterLines reported by -fsanitize=address
	In some cases, we can have nHBL=501 during the last hbl of a mono
	screen and Video_ConvertPosition could try to access
	ShifterFrame.ShifterLines[ nHBL ] which is outside the array
	[e87617b4fe45]

2018-10-10  Uwe Seimet

	* src/hdc.c:
	Modify the MODE_SENSE implementation to add the rigid geometry page

	The rigid geometry pages is required by ASV for booting.
	[bdfce9ffb31b]

2018-10-10  Thomas Huth

	* src/configuration.c:
	Add missing terminator for the [IDE] section
	[a461faa72b75]

2018-10-07  Thomas Huth

	* src/hdc.c:
	Limit count before doing the memcpy
	[07b3e6ce8b9b]

2018-10-08  Nicolas Pomarede

	* src/cpu/custom.h, src/cpu/debug.c, src/cpu/fpp.c,
	src/cpu/jit/exception_handler.c, src/cpu/newcpu.c, src/cpu/newcpu.h,
	src/cpu/options_cpu.h, src/cpu/savestate.h,
	src/cpu/winuae_readme.txt:
	Update to the latest WinUAE's sources, no real change for Hatari
	(from WinUAE 4.1.0 beta7 2018/10/06)
	[3659d537914f]

2018-10-07  Thomas Huth

	* src/gui-sdl/dlgHardDisk.c:
	Add IDE byteswap option to the GUI
	[4e2f2e08fcec]

	* src/change.c, src/configuration.c, src/hdc.c, src/ide.c,
	src/includes/configuration.h, src/includes/hdc.h, src/ncr5380.c:
	Implement byte-swapping option for IDE disks
	[87181beed44b]

2018-10-06  Thomas Huth

	* src/change.c, src/configuration.c, src/floppy.c, src/gui-
	osx/PrefsController.m, src/gui-sdl/dlgHardDisk.c, src/ide.c,
	src/includes/configuration.h, src/inffile.c, src/options.c,
	src/tos.c:
	Make IDE setting more similar to ACSI/SCSI

	It's easier to store the IDE setting in an array, so we can iterate
	over the devices in various parts of the code. This will make it
	easier to add new settings like the byte-swap option later.
	[b50adb081997]

	* src/gui-sdl/dlgHardDisk.c:
	Rework the hard disk dialog

	Allow to configure SCSI disks and more than one ACSI HD now.
	[a95e4904915d]

	* src/configuration.c:
	Enable [ACSI] and [SCSI] sections in config file
	[89e5bb231c06]

2018-10-05  Nicolas Pomarede

	* src/cpu/cpummu030.c, src/cpu/cpummu030.h, src/cpu/newcpu.c:
	Fix 68030 MMU PTEST : eamode 6 is valid, PTEST level 1 to 7 does not
	check TTR (from WinUAE 4.1.0 beta6+ 2018/10/04)
	[c9d014446e15]

	* src/m68000.c:
	Data cache emulation should be enabled for >=68020 only if "more
	compatible" or "cycle exact" mode are used
	[e593b32d73e0]

2018-10-01  Eero Tamminen

	* doc/compatibility.html:
	Add note about asm56000.ttp brokenness
	[c1b52e08b2b7]

	* tests/debugger/test-dummies.c:
	Fix test build breakage from fix rev #7158
	[ae22bf118775]

	* tools/hatari-prg-args.1, tools/hatari-prg-args.sh:
	Support providing args for programs on disk images

	Requires accepting non-host program & input file paths.

	Script also needs to put its own args before rest of args user
	provided for Hatari, in case disk was given as (last) Hatari
	argument, instead of as an option parameter.
	[277acd9a18f3]

	* tools/hatari-prg-args.sh:
	Fix shell error message with no args
	[d9089ea6baf8]

2018-10-01  Nicolas Pomarede

	* src/cpu/newcpu.c, src/debug/debugcpu.c, src/includes/m68000.h,
	src/m68000.c:
	Restore debugger state (breakpoints) after a reset (fix rev #7096
	from 2018/08/10)
	[7bee1cbc61eb]

2018-09-27  Thorsten Otto

	* src/tos.c:
	More TOS 4.x patches for 68040 and 68060

	These patches are a port of the corresponding patches that ARAnyM
	applies when booting TOS 4.04. In a nutshell: the early MMU
	initialization (setting up the transparent translation) at reset &
	coldboot is replaced by the corresponding 040 specific code. Several
	places where the cache for 030 is flushed are replaced by
	cinva/cpusha. Some places where only the data cache is invalidated
	are nopped out (not entirely sure about those, but works in ARAnyM
	and seems to also work in Hatari, at least the current attempt of
	setting bit 11 in the cacr won't have any effect on 040; most of
	these places seem to be in the VDI). The _CPU cookie is set up
	correctly. In the larger part that is put at the end of the ROM,
	there are some places that are apparently not used (anymore), but
	they have been kept for simpli- city because otherwise some absolute
	addresses would change.
	[a8322444c794]

2018-09-26  Eero Tamminen

	* doc/manual.html:
	Update manual symbol handling info to v2.1 level

	v2.1 added support for GCC a.out symbols and absolute addresses.
	Absolute addresses (-a) are values, so they're useless for
	profiling.
	[b92d8a1b2d45]

2018-09-20  Eero Tamminen

	* src/inffile.c:
	Fix: "--tos-res high" handling

	And improve the error messages
	[74289ac5e3d6]

	* doc/emutos.txt:
	Add few progs to EmuTOS compat
	[2fb26ecc9f46]

2018-09-18  Eero Tamminen

	* src/hdc.c, src/includes/ncr5380.h, src/ncr5380.c:
	Add partition counting for SCSI

	...so that GEMDOS HD skip option skips those partitions too.

	As SCSI is initialized from ACSI init, just add SCSI partition count
	to ACSI partition count.
	[6741cf1eab16]

	* doc/hatari.1, doc/manual.html:
	Document GEMDOS HD options in SDL GUI
	[33e5a0700186]

	* doc/manual.html, doc/release-notes.txt, doc/scsi-driver.txt,
	src/debug/vars.c:
	Fix typos in user visible texts

	16 bit / 32 bit -> 16-bit / 32-bit 16-bits / 32-bits -> 16 bits / 32
	bits
	[6349e74f3055]

2018-09-16  Thomas Huth

	* src/ncr5380.c:
	Take ScsiBus.offset into account when calculating remaining length
	[fac8ff2a2942]

	* src/keymap.c:
	Allow alternate mapping of Help/Undo keys

	Make it possible to use F11/F12 as help/undo keys, if their default
	mapping (being used as shortcuts for Options/Fullscreen) has been
	changed.

	Thanks to Thorsten Otto for the patch.
	[e80065f8c1a8]

2018-09-16  Nicolas Pomarede

	* doc/hatari.1, doc/images/cpu.png, doc/images/harddisks.png,
	doc/images/memory.png, doc/manual.html:
	Update manual + screenshots for recent TT RAM and FPU changes
	[cfb31eb5ba4b]

2018-09-15  Nicolas Pomarede

	* src/gui-sdl/dlgMemory.c, src/options.c, src/stMemory.c:
	Allow up to 512 MB of TT RAM (instead of 256 MB) This was confirmed
	to work on real hardware
	[47d126ffba81]

	* src/statusbar.c:
	Display joysticks's state in the 2nd line of the status bar This
	leaves more space in the 1st line to display the emulated machine's
	parameters
	[521b844a035b]

	* src/statusbar.c:
	Use a temporary buffer in Statusbar_UpdateInfo to ensure text
	doesn't overwrite memory With some machine settings, text could be
	larger than MAX_MESSAGE_LEN=63 and overwrite the memory. For
	example, this status message would overwrite memory after "msg" :
	16MHz/030/68882(SF) 14/100MB Falcon, TOS 4.04, MONO 71 Hz, ------
	Text will now be truncated if it exceeds MAX_MESSAGE_LEN
	[237082879fc4]

2018-09-14  Eero Tamminen

	* src/m68000.c, src/uae-cpu/newcpu.c, src/uae-cpu/newcpu.h:
	Fix old-uae build error from earlier debugger change

	...by making old-uae regs struct more like WinUAE.
	[b7a13328775b]

2018-09-12  Nicolas Pomarede

	* src/xbios.c:
	Add more traces for Xbios / DSP calls (patch by Thorsten Otto)
	[c31963e66f0f]

2018-09-09  Laurent Sallafranque

	* src/falcon/dsp_core.c:
	fix rom tables (sin, mulaw et a-law): remove the approximative code
	to fill these tables and replace them by tables of values mesured
	directly from the DSP. Thanks to OTTO for the patch.
	[e5b97785addb]

2018-09-09  Thomas Huth

	* src/ncr5380.c:
	More SCSI DMA fixes and emulate TT SCSI remainder registers
	[634d8a869419]

	* src/hdc.c, src/ncr5380.c:
	Improve NC5380 SCSI DMA transfer and write behavior
	[86ab6ac2947c]

2018-09-08  Eero Tamminen

	* doc/release-notes.txt, src/debug/debugcpu.c:
	Add support for ISP & USP and 020+ special registers like VBR
	[c5178f9c3e00]

2018-09-06  Eero Tamminen

	* src/debug/debugcpu.c:
	Allow "m 0" without specifying width
	[9e5a2fcf9f6f]

2018-09-06  Nicolas Pomarede

	* src/cpu/cpummu.c, src/cpu/cpummu030.c, src/cpu/fpp.c,
	src/cpu/gencpu.c, src/cpu/newcpu.c:
	Remove Hatari specific code and use similar code as WinUAE now that
	"for int" loop are supported with gnu99
	[c7fcfce129c1]

2018-09-05  Thomas Huth

	* CMakeLists.txt:
	Switch C standard to gnu99 to support 'for'-loop initial
	declarations
	[aa7690c7515c]

2018-09-03  Nicolas Pomarede

	* src/ncr5380.c:
	Fix 'for' loop initial declarations requiring C99 or C11 mode
	[e82901b8f2b7]

2018-09-02  Nicolas Pomarede

	* src/cpu/newcpu.c, src/cpu/winuae_readme.txt:
	Update to the latest WinUAE's sources, no real change for Hatari
	(from WinUAE 4.1.0 beta3 2018/08/29)
	[ed86e8715749]

	* src/mfp.c:
	Update patch for Lethal Xcess in STF mode (MFP requires some jitter)
	[db3efca11097]

2018-09-02  Thomas Huth

	* doc/authors.txt, src/CMakeLists.txt, src/includes/scc.h,
	src/ioMemTabFalcon.c, src/ioMemTabTT.c, src/main.c, src/reset.c,
	src/scc.c, tests/buserror/CMakeLists.txt:
	First steps towards SCC 8530 emulation

	Adapt the SCC emulation code from Aranym to Hatari. It's not wired
	to any host device yet, and IRQs and DMA are not implemented yet.
	But it is enough to implement the IoMem handlers, so we can finally
	enable the buserror test for the TT, too.
	[1200cfe233b6]

	* src/hdc.c, src/includes/hdc.h, src/ncr5380.c:
	Improve the ACSI/SCSI CmdInfoStr information
	[e4fac23d42d3]

	* src/includes/ncr5380.h, src/ioMemTabTT.c, src/ncr5380.c:
	First steps towards SCSI emulation for the TT

	For full emulation, we need to emulate the 2nd MFP of the TT, too,
	but for drivers that only poll the GPIP register of the 2nd MFP, we
	can simply use a temporary hack to emulate the bits in that
	register.
	[b1d9c2a9be68]

2018-09-01  Thomas Huth

	* src/ncr5380.c:
	Set and clear interrupt line for SCSI controller.

	Cecile polls the IRQ line, so after fixing this issue, this HD
	driver now works, too.
	[135ac5a93763]

	* src/ncr5380.c:
	Reset byteCount before sending a command to the HDC layer

	In case of unsupported commands, byteCount was not properly reset to
	0, so we should make sure that this variable is cleared before
	sending a new command.
	[87cc7ff52ba9]

	* src/hdc.c:
	Add missing newline to trace output
	[545334335a9f]

	* src/audio.c, src/falcon/nvram.c, src/gemdos.c, src/hdc.c, src/ide.c,
	src/ioMem.c, src/ncr5380.c, src/screenConvert.c, src/zip.c:
	Remove duplicated 'ERROR:' and 'WARNING:' prefixes

	Log_Printf() already adds the prefixes now, so no need to use them
	in the strings here anymore.
	[b77fce13d42b]

2018-08-30  Thomas Huth

	* tests/natfeats/run_test.sh:
	Unset TERM variable to avoid that libreadline/curses uses escape
	codes in the output
	[3c0210fb0db5]

2018-08-27  Eero Tamminen

	* doc/release-notes.txt, src/cart.c, src/gui-sdl/dlgRom.c:
	Inform use better about Cartridge constraints

	- Add note about them to SDL GUI cartridge part
	- Show dialog if Cartridge is enabled but will be disabled (needs
	ERROR log level as dialog are by default shown only for ERRORs or
	higher)
	[4bded9673869]

2018-08-26  Thomas Huth

	* src/includes/ioMem.h, src/ioMem.c, src/ioMemTabFalcon.c,
	src/reset.c, tests/buserror/CMakeLists.txt:
	Fix reset and memory snapshot handling of the Falcon bus mode
	setting

	Make sure that we start in Falcon-compatible bus mode after a cold
	reset and that we re-initialize the IoMem correctly after loading a
	memory snap shot. Now we can also enable the bus error regression
	test for the Falcon, too.
	[5449962840e0]

	* doc/authors.txt:
	Mention the NCR 5380 code in authors.txt
	[37ab9ff5e532]

	* src/ncr5380.c:
	Fix NCR5380 emulation for SCSI IDs > 0
	[61bcba324914]

2018-08-25  Nicolas Pomarede

	* src/cpu/fpp.c, src/gui-sdl/dlgCpu.c, src/m68000.c:
	Add FPU softfloat setting to the UI and allow changing on the fly
	[f80f57542efc]

2018-08-25  Thomas Huth

	* src/hdc.c, src/includes/ncr5380.h, src/ncr5380.c:
	Implement Falcon NCR5380 DMA write support
	[6009030b595b]

	* src/fdc.c, src/hdc.c, src/includes/fdc.h, src/includes/hdc.h:
	Only do ACSI DMA transfer if the corresponding bit has been set in
	FF8606

	Also add a check that the DMA direction matches the direction of the
	SCSI command.
	[d5e353c653e5]

2018-08-24  Nicolas Pomarede

	* src/cpu/newcpu.c:
	More unused code since rev #7096
	[51691ce55856]

	* src/cpu/hatari-glue.c, src/m68000.c:
	Remove more unused code since changing cpu integration code with
	WinUAE in rev #7096
	[dfb66fbdb121]

	* src/cpu/fpp.c:
	Remove printf
	[2a6139e11c6a]

	* src/cpu/debug.c, src/cpu/fpp.c, src/cpu/maccess.h, src/cpu/newcpu.c,
	src/cpu/newcpu.h, src/cpu/options_cpu.h, src/cpu/sysconfig.h,
	src/cpu/winuae_readme.txt:
	Update to the latest WinUAE's sources, no real change for Hatari
	(from WinUAE 4.1.0 beta2 2018/08/22)
	 - Don't output "," if MOVEM register mask is zero
	 - Make sure possible new FPU type is selected at reset
	 - Fix hang if CPU got in loop that was fully in cache without memory
	accesses
	 - Check and set debugger state when tracing STOP
	[4c0be59eeff1]

2018-08-23  Nicolas Pomarede

	* CMakeLists.txt:
	Remove -g flag added by mistake
	[c6a069239251]

	* src/cycInt.c:
	Remove unused code
	[c15f7f7eddaa]

	* src/cycInt.c:
	Add ActiveInterrupt to memory snapshot and remove now useless call
	to CycInt_SetNewInterrupt when restoring
	[eff999b3985e]

	* src/video.c:
	No more need to call ShortCut_ActKey() at the start of the VBL
	handler Now that reset/quit/save/restore are done at the end of the
	current cpu instruction, there's no more need for this hack that was
	used to get a more stable state before saving
	[f0054f7dc3db]

	* src/video.c:
	Save more video variables that could cause some temporary glitches
	when restoring In case top/bottom borders are removed by changing
	$FF820A, the first frames after a restore could sometimes have wrong
	top/bottom values which altered the visual result (eg : fix the
	first 2 VBLs after restoring B.I.G. Demo Screen 1)
	[b511e94b0332]

	* CMakeLists.txt, src/cpu/custom.c, src/cpu/hatari-glue.c, src/cpu
	/hatari-glue.h, src/cpu/newcpu.c, src/debug/debugui.c,
	src/includes/memorySnapShot.h, src/m68000.c, src/memorySnapShot.c,
	src/stMemory.c, src/tos.c:
	Improve reliability of saving/restoring memory snapshot
	Saving/restoring was previously called directly from the UI, which
	could lead to some inconsistencies when restoring some games/demos.
	Saving/restoring is now postponed to the end of the current
	instruction emulation loop, which ensures stable behaviour.
	[406eb77e2b9d]

2018-08-19  Nicolas Pomarede

	* src/m68000.c:
	Include pendingInterrupts into memory snapshots to restore intlev()
	value Some games/demos could stop working after a memory restore in
	case some HBL or MFP interrupts were pending at the time the memory
	snapshot was saved (eg Intro screen in the Nostalgic-O-Demo by
	Oxygene)
	[b9f155469fe7]

2018-08-19  Eero Tamminen

	* doc/manual.html:
	Fix manual typo
	[29d72f642f8e]

2018-08-18  Thomas Huth

	* src/control.c:
	Silence Coverity warning: Check return value of remove()
	[3fd4d7659b2a]

	* src/ncr5380.c:
	Remove superfluous casts in scsi code, and disable 0xaa command

	data_len is 32-bit only, so it does not make sense to use 64-bit
	multiplication here. Also disable the WRITE(12) SCSI command since
	we do not support it yet.
	[e513f40de3ae]

	* src/ncr5380.c:
	Fix dead code in getmsglen()
	[843f274e06fa]

2018-08-14  Nicolas Pomarede

	* src/cart.c, src/configuration.c, src/cpu/fpp.c, src/cpu/hatari-
	glue.c, src/cpu/newcpu.c, src/m68000.c, src/stMemory.c, src/tos.c:
	Remove some debug printf
	[92a55a210a1d]

	* src/stMemory.c:
	Don't save $FF8001, the region $E00000 - $FFFFFF already includes
	all HW registers
	[c637702267ce]

2018-08-14  Thomas Huth

	* src/tos.c:
	Make sure to switch to Falcon mode with TOS 2.07
	[0fd210b0bf0f]

2018-08-11  Nicolas Pomarede

	* doc/authors.txt, src/gui-sdl/dlgHalt.c:
	Fix a possible crash in the Halt dialog if SDLGui_SetScreen was not
	called yet (patch by Steven Noonan)
	[f96be4325fe5]

2018-08-10  Nicolas Pomarede

	* src/statusbar.c:
	Display "SF" in status bar if FPU emulation is using softfloat
	library
	[018c77bf2d7f]

	* src/cart.c, src/configuration.c, src/cpu/custom.c, src/cpu/custom.h,
	src/cpu/fpp.c, src/cpu/hatari-glue.c, src/cpu/hatari-glue.h,
	src/cpu/memory.c, src/cpu/newcpu.c, src/cpu/newcpu.h,
	src/includes/cart.h, src/m68000.c, src/memorySnapShot.c,
	src/reset.c, src/stMemory.c, src/tos.c, src/uae-cpu/hatari-glue.c:
	Improve integration with WinUAE cpu core, remove some Hatari
	specific code This affects the following actions :
	 - reset hard or soft
	 - changing cpu/fpu options
	 - restoring state of cpu core when loading a memory snapshot
	 - patching cpu opcodes table to support HD emulation (also ensure old
	UAE cpu core is still working with these changes)
	[ed8214691485]

2018-08-09  Nicolas Pomarede

	* src/cpu/fpp.c, src/cpu/fpp.h, src/cpu/fpp_softfloat.c,
	src/cpu/options_cpu.h, src/cpu/softfloat/softfloat.c,
	src/cpu/softfloat/softfloat.h, src/cpu/softfloat/softfloat_fpsp.c,
	src/cpu/winuae_readme.txt:
	Softfloat FPU updates, new undocumented features emulated (from
	WinUAE 4.0.1 2018/07/16)
	[fda8134fea84]

2018-08-06  Nicolas Pomarede

	* src/stMemory.c:
	Include the MMU config at $FF8001 when saving/restoring memory
	snapshot
	[001190bcd2fb]

	* src/stMemory.c:
	After saving a memory snapshot MMU_BankX_Size were wrongly reset to
	128 KB In STF mode, this could cause a wrong snapshot when saving a
	second time and the emulated program would crash when reloading this
	wrong snapshot
	[021c59569aa3]

2018-08-05  Eero Tamminen

	* src/vdi.c:
	Fix: INF file overriding is enabled even when VDI mode isn't used

	This cased booting from hard disk image not to read the INF file
	regardless of whether VDI mode was overridden (even on Falcon mode
	where the VDI mode doesn't work).

	This is quick-fix. More changes are needed to fix things properly
	for all possible cases.
	[47fefc9ff2cf]

2018-08-01  Laurent Sallafranque

	* src/falcon/dsp_cpu.c:
	DSP fix rol/ror instructions. Thanks to Mariusz Buras for the patch.
	[e39878c6469e]

2018-07-21  Eero Tamminen

	* src/floppy_ipf.c:
	Shorten / clarify IPF error dialog texts

	- Add "floppy" to description in case IPF tells nothing
	- Mention that result is just skipping incompatible data
	- Shorten messages to make them easier to read
	[4252fe1f230a]

2018-07-20  Nicolas Pomarede

	* src/cpu/debug.c, src/cpu/newcpu.c, src/cpu/sysdeps.h,
	src/cpu/winuae_readme.txt:
	Update to the latest WinUAE's sources, no real change for Hatari
	(from WinUAE 4.0.1 2018/07/16)
	[5dba92d4c984]

2018-07-18  Eero Tamminen

	* doc/compatibility.html:
	Add also to compatiblity HTML
	[348d9256f7d1]

	* doc/emutos.txt:
	Add 2 demos working fine in Hatari & EmuTOS
	[dfd2fd42c92a]

2018-07-18  Nicolas Pomarede

	* src/cpu/CMakeLists.txt, src/cpu/cpummu030.c, src/cpu/debug.c,
	src/cpu/debug.h, src/cpu/debugmem.h, src/cpu/fpp.c, src/cpu/fpp.h,
	src/cpu/fpp_native.c, src/cpu/fpp_softfloat.c, src/cpu/hatari-
	glue.c, src/cpu/jit/codegen_x86.c, src/cpu/jit/compemu.h,
	src/cpu/jit/compemu_fpp.c, src/cpu/jit/compemu_midfunc_x86.c,
	src/cpu/jit/compemu_midfunc_x86.h, src/cpu/jit/compemu_raw_x86.c,
	src/cpu/jit/compemu_support.c,
	src/cpu/jit/compemu_support_codegen.c,
	src/cpu/jit/exception_handler.c, src/cpu/jit/gencomp.c,
	src/cpu/machdep/m68k.c, src/cpu/machdep/m68k.h, src/cpu/newcpu.c,
	src/cpu/newcpu.h, src/cpu/options_cpu.h, src/cpu/softfloat
	/softfloat-specialize.h, src/cpu/softfloat/softfloat.c,
	src/cpu/softfloat/softfloat.h, src/cpu/softfloat/softfloat_fpsp.c,
	src/cpu/sysconfig.h, src/cpu/sysdeps.h, src/cpu/winuae_readme.txt,
	src/m68000.c:
	Update to the latest WinUAE's sources (from WinUAE 4.0.1 beta5
	2018/07/12)
	 - Improved FPU emulation for softfloat mode (rounding, accuracy)
	 - Always check interrupts immediately after MOVE to SR instruction
	[09c7b3872284]

2018-07-15  Thomas Huth

	* src/cpu/newcpu.c:
	Improve bus error information for CPUs > 68000
	[2a25e4a37e3c]

	* src/hdc.c, src/includes/hdc.h:
	Separate DMA logic from the SCSI WRITE command
	[b4292afd9ec5]

2018-07-14  Thomas Huth

	* src/gui-sdl/dlgHalt.c:
	Add a missing break statement (discovered with Coverity)
	[18a0379ad47b]

2018-07-11  Nicolas Pomarede

	* src/video.c:
	Rename some variables to specify vertical/horizontal meaning
	[26d18c1292b8]

2018-07-11  Thomas Huth

	* src/ncr5380.c:
	Fix for-loop index variables for older compilers
	[a8284a817151]

	* src/includes/ncr5380.h:
	Fix wrong header guard (detected by clang)
	[40619f622f68]

	* doc/manual.html:
	Mention TOS 3.05 and 2.07 in the manual
	[7923f3502d5d]

	* doc/hatari.1, doc/manual.html, src/options.c:
	Add --scsi CLI option
	[0bdd1b83f34e]

2018-07-10  Thomas Huth

	* doc/release-notes.txt, src/includes/hdc.h, src/ncr5380.c, src/uae-
	cpu/newcpu.h:
	Add experimental NCR5380 SCSI support for Falcon mode

	Code is based on the NCR5380 SCSI emulation code from WinUAE (from
	the file scsi.cpp there), but it has been changed quite a bit to
	work with the SCSI command emulation in hdc.c from Hatari. It's
	enough to get sector read support with the demo version of HDDRIVER
	already. DMA write support is not implemented yet, so the code is
	still disabled by default (set the WITH_NCR5380 macro to 1 to enable
	it).
	[0ea699fbcee8]

2018-07-06  Thomas Huth

	* src/hdc.c, src/includes/hdc.h, src/ncr5380.c:
	Rename some members of the SCSI_CTRLR structure

	so that the names match the fields from the WinUAE SCSI code. This
	will make it easier to adapt SCSI code from WinUAE later.
	[4051711cccce]

	* src/CMakeLists.txt, src/hdc.c, src/includes/hdc.h,
	src/includes/ncr5380.h, src/ncr5380.c, src/reset.c:
	Preparations for adding NCR5380 emulation in a new file called
	ncr5380.c

	Delete the old and non-working attempt to emulate the NCR5380 SCSI
	chip in hdc.c and prepare the code for adding new emulation code in
	a new file called ncr5380.c.
	[1ee10a9000d8]

2018-07-10  Nicolas Pomarede

	* doc/release-notes.txt, src/includes/video.h, src/video.c:
	Mask the 2 last pixel lines with VBlank when bottom border is
	removed (fix regression in Hatari 2.1 for 'B.I.G. Demo screen 2')
	[8a13f1b9dd6b]

2018-07-06  Thomas Huth

	* src/gemdos.c:
	Allow Fwrite to access ROM memory, too (for ROM dump programs)
	[2575f1a1be6b]

2018-07-01  Thomas Huth

	* .gitlab-ci.yml:
	Check 32-bit builds, clang and portmidi in the Gitlab CI builds
	[f5485c857879]

	* CMakeLists.txt, doc/release-notes.txt:
	Add a deprecation note for SDL 1.2
	[6f0ccf4b7fdc]

	* src/midi.c:
	Do not init PortMidi if MIDI emulation is disabled
	[d5fcc8feba08]

2018-06-29  Nicolas Pomarede

	* src/mfp.c:
	INT_CONVERT_TO_INTERNAL should use 64 bit to prevent potential
	overflow when CPU freq is 16 or 32 MHz When MFP divider is 200 and
	data is 256, we get 51200 MFP cyles, which can overflow a signed 32
	bit int when converted to our internal cycles in cycInt.c This
	happens only briefly during TOS boot in Falcon mode
	[3abe0a292c29]

2018-06-17  Thomas Huth

	* .gitlab-ci.yml:
	Clean up YAML file, and also try compilation without portaudio
	[3ea44889181c]

2018-06-16  Thomas Huth

	* .gitlab-ci.yml:
	Add config file for running Continuous Integration build tests on
	gitlab
	[47d533390732]

2018-06-12  Thomas Huth

	* tests/debugger/test-dummies.c:
	Fix compilation with DSP disabled
	[09f1d9e6ca57]

2018-06-11  Thomas Huth

	* src/gemdos.c:
	Fix compiling with --disable-tracing
	[5b3c7c5e1f8d]

2018-06-10  Thomas Huth

	* src/cpu/fpp.c:
	Add missing invalid addressing mode checks

	... for FMOVEM, FMOVE(M) Control Register, FMOVE FPP,EA. Add more
	comments. This is WinUAE commit
	9b75979c8912e85624459fef97be98c7eba863ab.
	[af0eb91b5d7f]

	* src/cpu/fpp.c:
	Match FPCR and FPSR masking with real FPU.

	This is WinUAE commit 5ec564f0149cc56663714705d8802a9859382888
	[20b1a7e51dbd]

2018-06-03  Thomas Huth

	* doc/manual.html, src/ioMem.c, tests/buserror/results/mst4_b.txt,
	tests/buserror/results/mst4_w.txt, tests/buserror/results/st_b.txt,
	tests/buserror/results/st_w.txt:
	Add comments about chipset emulation - normal ST is Ricoh, Mega-ST
	is IMP
	[362aa7351292]

	* src/faketos.s, src/faketosData.c, src/gemdos.c:
	Catch unhandled exceptions in non-TOS mode and exit with an error in
	that case
	[9cb21417d1a4]

2018-06-02  Thomas Huth

	* src/faketos.s, src/faketosData.c, src/tos.c:
	Move fake-TOS assembly code into a separate file
	[1a80e8b1827e]

2018-06-02  Eero Tamminen

	* doc/compatibility.html:
	Updates to Falcon app compatibility
	[7647a0a96871]

2018-05-28  Eero Tamminen

	* doc/todo.txt:
	Remove/update already implemented TODOs & bogus mail-archive links

	Fixed in v2.1:
	- MMU memory bank configuration at $FF8001 (changeset 9b133f4e1832)
	- Advancing versions of Videl counters (not yet accurate though,
	changeset 0a26a03128bc)

	Fixed in v2.0:
	- TOS v3 & ACSI (AHDI & $ffff8e09, changeset 84c1c373a2eb)

	Fixed in v1.8:
	- Debugger invocation suppport for all exceptions
	[1c827b1b4023]

2018-05-27  Thomas Huth

	* src/tos.c:
	Add some more Sparrow-TOS patches (contributed by Thorsten Otto)
	[a915d411d626]

	* doc/release-notes.txt:
	Mention 2.07 in the release notes
	[30c9b191506c]

	* src/falcon/videl.c, src/tos.c:
	Add some hacks to get Sparrow TOS working
	[ba5da396494b]

	* src/m68000.c:
	Add bus error tracing information to M68000_BusError again

	In commit b4538dfc317e I removed the bus error printing, since I
	thought that enough information is printed by the newcpu.c code
	already. However, some CPU levels (e.g. 68030 + MMU) are not very
	verbose and do not print the address of the access for example. So
	let's add a cpu_exception trace to M68000_BusError again to be able
	to easily get this information.
	[f7e1fc2057c1]

2018-05-25  Eero Tamminen

	* tools/hatari-prg-args.sh:
	Fix -q quit option being always enabled
	[6b899cd7e1bd]

2018-05-22  Nicolas Pomarede

	* src/floppy_ipf.c, src/floppy_stx.c:
	Replace printf with Log_Printf for STX/IPF floppy images
	[a6fb3ad8870c]

	* src/cpu/cpummu.c, src/cpu/custom.h, src/cpu/debug.c,
	src/cpu/debug.h, src/cpu/debugmem.h, src/cpu/events.h,
	src/cpu/gencpu.c, src/cpu/memory.h, src/cpu/newcpu.c,
	src/cpu/newcpu.h, src/cpu/options_cpu.h, src/cpu/winuae_readme.txt,
	src/debug/68kDisass.c, src/debug/debugcpu.c, tests/debugger/test-
	dummies.c:
	Update to more recent WinUAE's sources, no real change for Hatari
	(from WinUAE 4.0.0 beta5 2018/04/22)
	 - change arguments for m68k_disasm / m68k_dumpstate
	 - fix MOVE16 disassembly
	[06d7e22a4c6c]

	* src/debug/debugui.c:
	Fix possible error "array subscript above array bounds" when using
	64 or more arguments
	[1b371dbb7fc4]

2018-05-21  Thomas Huth

	* src/fdc.c:
	Fix array access with negative index error in
	FDC_GetCyclesPerRev_FdcCycles

	Got this error from GCC ubsan today:

	 fdc.c:1499:22: runtime error: index -1 out of bounds for type
	'EMULATION_DRIVE [2]'

	And indeed, since FDC.DriveSelSignal may be -1, we're accessing data
	outside of the array here. Looking at the context in this function,
	it's obvious that "Drive" should be used here instead of
	"FDC.DriveSelSignal".
	[988b6a9a6cb4]

	* src/cpu/newcpu.c:
	Silence potential compiler warnings in newcpu.c
	[73fa0602abc8]

	* src/cpu/maccess.h, src/uae-cpu/maccess.h:
	x86_64 and ppc64 CPUs can do unaligned memory access, too
	[fa360a3353b5]

	* src/debug/debugui.c:
	Silence -fsanitize=undefined warning in debugui.c

	With sanitizer enabled, there is the following warning when running
	the tests:

	 src/debug/debugui.c:155:19: runtime error: left shift of 1 by 31
	places cannot be represented in type 'int'

	Mark the 1 as unsigned to fix the warning.
	[ccf4d457c638]

	* src/includes/ikbd.h:
	Silence -fsanitize=undefined warning in ikbd.c

	With sanitizer enabled, there is this warning in ikbd.c:

	 ikbd.c:1299:52: runtime error: left shift of 1893728256 by 1 places
	cannot be represented in type 'int'

	We're only looking at the low bits of the variables, so let's simply
	declare them as "unsigned" to shut up this warning.
	[10f622f3deab]

	* src/cpu/newcpu.c:
	Silence GCC 8 compiler warning in ShowEA()

	The current version of GCC has gained the possibility to do some
	additional checks for string operation buffer overflows. It is using
	the size of source arrays for the check, so in ShowEA it is
	currently reporting:

	newcpu.c: In function 'ShowEA.constprop': newcpu.c:2440:26: warning:
	'%s' directive writing up to 79 bytes into a region of size between
	73 and 75 [-Wformat-overflow=] _stprintf (buffer, _T("(A%d, %s) ==
	$%08x"), reg, offtxt, addr);

	The offtxt array is only storing a string for a short displacement,
	so 80 characters is way too big here. Decreasing the size of the
	array to 8 characters silences the compiler warning for me.
	[0305e56fd35d]

2018-05-20  Thomas Huth

	* tests/CMakeLists.txt, tests/cycles/CMakeLists.txt,
	tests/cycles/cyccheck.prg, tests/cycles/cyccheck.s,
	tests/cycles/run_test.sh, tests/cycles/test_out.txt:
	Add a tester for CPU cycles
	[356bc19a7ac3]

2018-05-17  Eero Tamminen

	* doc/emutos.txt:
	EmuTOS info update

	- split debug symbol & debug output info and update latter
	- align game notes for better readability
	- add LovelYM
	[b28a1f90ccc2]

2018-05-14  Eero Tamminen

	* doc/manual.html, doc/release-notes.txt, src/debug/debugcpu.c:
	Improve debugger memdump command

	- Output range can optionally be given as count instead
	- Output can optionally be words or longs instead of bytes
	- Removed obviously redundant comments from code

	Updated documentation accordingly.
	[b7b701d98b92]

2018-05-14  Thomas Huth

	* src/cpu/softfloat/softfloat_fpsp.c:
	Add missing 'return' in floatx80_lognp1.

	Patch taken from QEMU commit
	981348af5c3c72335d95f6877abf702d80176eb3 (which is the same as
	WinUAE commit 01ec689b62289cf16cca06782bfb6bcbaa2ff88c).
	[affbfd656b4c]

	* tests/CMakeLists.txt, tests/cpu/CMakeLists.txt,
	tests/cpu/int_abcd.s, tests/cpu/int_add.s, tests/cpu/int_addi.s,
	tests/cpu/int_addq.s, tests/cpu/int_addx.s, tests/cpu/int_shft.s,
	tests/cpu/int_test.c, tests/cpu/int_test.prj,
	tests/cpu/int_test.tos, tests/cpu/run_test.sh, tests/startup.s:
	Add a simple test for CPU integer arithmetics.

	Based on the CPU test suite from Thorsten Otto, but code has been
	rewritten to not use GCC inline assembly anymore, so that it also
	compiles with AHCC.
	[878ea23d12f7]

2018-05-13  Thomas Huth

	* src/gemdos.c:
	Implement Cconws for '--tos none' mode
	[f9e28692ec28]

	* src/inffile.c:
	Silence 'Only TOS versions >= 1.04' autostarting warning in non-TOS
	mode
	[1bf471502acd]

2018-05-14  Eero Tamminen

	* src/debug/debugcpu.c:
	Improve memwrite

	- Error out if given mode was unrecognized
	- If more than one value given, tell how many were handled
	- Error out if too many args given
	  - Wasn't a crash problem because debugger UI silently discarded extra
	ones (and now errors), but those numbers could at some point go out
	of sync
	  - Alternatively args could have been written directly to memory, and
	just skipping/truncating invalid values, or args could have been
	dynamically dupped
	[a1504d23f5bf]

	* src/debug/debugui.c:
	Error out if too many args given to debugger

	Alternatively could have changed this to alloc everything
	dynamically instead of continuing to use static alloc...
	[18a7144b2fff]

2018-05-13  Eero Tamminen

	* doc/release-notes.txt:
	Fix typo
	[81c8376841a7]

2018-05-11  Thomas Huth

	* src/keymap.c:
	Fix mapping of two keys with SDL2

	... reported by Christian Zietz on the mailing list.
	[e016c4e6ce84]

	* tests/keymap/makefile:
	Fix dependency in tests/keymap/makefile
	[2c283b67f512]

2018-05-11  Eero Tamminen

	* doc/manual.html, doc/release-notes.txt, src/debug/debugcpu.c:
	Add support for virtual V0..V7 registers to debugger
	[60f2c003a3bb]

	* doc/manual.html:
	Fix manual info: parenthesis are only for indirect addressing

	(Originally they were used to change order of predecence with
	evaluate command, but indirect addressing was in the end thought
	more useful & consistent.)
	[8880f079546c]

	* doc/release-notes.txt, src/debug/debugcpu.c:
	Add word & long support to memwrite debugger command
	[9120f72fec1f]

	* doc/hatari.1, doc/manual.html, doc/release-notes.txt,
	src/stMemory.c, src/vdi.c:
	Fix VDI mode crash with older TOS versions

	Fixes regression from Hatari v1.0 commit 829:363c98718f37.

	Crash happened with TOS <= v2.x when moving mouse horizontally in
	and out of 16x16 area in screen bottom right corner.
	[1f4a2ab50c5a]

	* doc/release-notes.txt:
	Add few missing release notes for ancient Hatari releases

	Previous commits added tags for the older v0.x Hatari releases which
	changes are included into repository.

	There tags are either:
	- for the commit updating the release notes in the repository (on the
	day given in release notes), or
	- one of the documentation typo & build fix commits following it
	(these may have few days later date than the date listed in release
	notes)
	[78ff49a22423]

	* .hgtags:
	Added tag v0.95 for changeset 6eefee3baac5
	[7b88f8352979]

	* .hgtags:
	Added tag v0.90 for changeset 1f81fd874ea9
	[092e2ff9dcdf]

	* .hgtags:
	Added tag v0.80 for changeset 5bf1e02a10ed
	[e75fe7437b49]

	* .hgtags:
	Added tag v0.70 for changeset 9d05c5eb8bae
	[1ca9dd1abdea]

	* .hgtags:
	Added tag v0.60 for changeset 9397df9826e6
	[a523266ee967]

	* .hgtags:
	Added tag v0.50 for changeset bc6b58e152fa
	[4a53caa379fa]

	* .hgtags:
	Added tag v0.45 for changeset ebec2fe8629a
	[650926406142]

	* .hgtags:
	Added tag v0.40 for changeset b01c803e9abc
	[010d059eb418]

	* .hgtags:
	Added tag v0.30 for changeset c9f46e2401ee
	[efba681bcbda]

	* .hgtags:
	Added tag v0.25 for changeset 221dec2000ad
	[c050363fdb0f]

	* .hgtags:
	Added tag v0.20 for changeset 065465adcef9
	[2a5c11cc01ff]

	* .hgtags:
	Added tag v0.11 for changeset 45530e2c0306
	[aaa9fbd5814b]

	* .hgtags:
	Added tag v0.10 for changeset 2b92755d134f
	[5aa46a446362]

	* .hgtags:
	Added tag v0.05 for changeset eae7bf826cb3
	[14d4774d7048]

	* src/cpu/cpummu.c, src/cpu/cpummu030.c, src/cpu/fpp.c,
	src/cpu/gencpu.c, src/cpu/newcpu_common.c, src/cpu/sysdeps.h,
	src/cpu/writelog.c, src/debug/log.c, src/uae-cpu/hatari-glue.c, src
	/uae-cpu/hatari-glue.h, tests/debugger/test-dummies.c:
	Replace warn_log() with Log_Printf(LOG_DEBUG, ...)

	This way also CPU core output goes to same place as other Hatari log
	output and it's controlled the same way.

	Requires C99 / VA_ARGS support.
	[e7268d81450f]

2018-05-10  Thomas Huth

	* src/cpu/newcpu.c, src/includes/m68000.h, src/m68000.c, src/uae-
	cpu/newcpu.c:
	Improve bus error logging.

	When Hatari is started with EmuTOS or TOS 2.06 on a normal ST
	machine for example, a lot of scary bus error warning messages are
	reported to the user. But since this is just (Emu-)TOS probing for
	the available hardware, these bus errors are completely harmless and
	thus only confu- sing for the users. Let's silence these messages by
	default. Also remove the duplicated bus error logging from
	M68000_BusError(), it's enough to do this in newcpu.c already.
	[b4538dfc317e]

	* tests/CMakeLists.txt, tests/check-bashisms.sh:
	Do not run the checkbashisms test automatically

	First, there is the problem that "hg files" does not work with older
	versions of Mercurial. Easy to fix by using "hg locate" instead. But
	then I also had to discover that there are older versions of
	"checkbashisms" available which claim that "export foo=bar should be
	foo=bar; export foo" - though this is valid POSIX shell scripting.
	Thus the automatic test fails with these versions of checkbashisms.
	Since this test is apparently very fragile, and Eero also complained
	that it is way too slow on older computers, it seems best to disable
	it by default and only run it manually from time to time on systems
	where we know that we've got a proper installation with hg and a new
	version of checkbashisms.
	[6524979b1b92]

2018-05-07  Eero Tamminen

	* src/debug/log.h:
	By popular request, make log prefixes same length
	[e71feea3aabb]

2018-05-06  Eero Tamminen

	* src/cpu/newcpu.c:
	ERROR -> WARN for bus / address errors

	Some of these are expected at boot when TOS does HW detection, so
	claiming them to be errors could unnecessarily scare users.
	[f10339f7cddb]

2018-05-07  Thomas Huth

	* src/gemdos.c:
	Silence compiler warning of GCC 6.3
	[64ca02c87c73]

2018-05-06  Eero Tamminen

	* src/tos.c:
	Fix: VDI restrictions move needs also logo patch move

	Fixes fix commit 2efe58341175.

	Thanks to Thorsten Otto for noticing this and the initial patch!
	[42a0e3198030]

	* doc/release-notes.txt:
	Update & improve release notes

	- Capitalize CPU
	- Add missing new features
	- Consistency: list fix items first, and with same spelling ("Fix:")
	[c284fc97d206]

	* src/keymap.c, src/main.c, src/resolution.c, src/screen.c:
	Improve conditional #if/#else/#endif code readability

	If there's more than page of conditional code, it's good to have a
	comment about under which condition that code is built with.

	Comment for #else & #endif should tell under what condition
	following & preceeding part of code works, not what the initial
	ifdef condition was for.
	[ee7ec8e1e11c]

	* doc/manual.html:
	Improve breakpoint variable documentation
	[93661503b9af]

	* doc/manual.html, doc/release-notes.txt, src/debug/vars.c, tools
	/hatari-prg-args.sh:
	GemdosParam -> OsCallParam

	Works as well with other OS call traps, so rename it as such
	[276631e5ef93]

	* src/control.c:
	Fix fifo path handing

	FIFO file name can come also from elsewhere than Hatari command line
	(e.g. through remote control or debugger) and then it isn't static,
	but allocated & freed elsewhere. So dup & free it when necessary.
	[fff732ce1779]

	* src/includes/shortcut.h, src/keymap.c, src/shortcut.c:
	Use bool for boolean values instead of int/0/1
	[7a6e240d826e]

2018-05-06  Thomas Huth

	* src/cfgopts.c:
	Silence warnings from valgrind about using uninitialized memory
	[61d365a726d4]

	* src/includes/paths.h, src/includes/str.h, src/main.c, src/paths.c,
	src/str.c:
	Use dynamic string allocation for paths.

	GCC 8 warns that some of the snprintf operations in paths.c might
	truncate the strings. We use buffers with the length FILENAME_MAX,
	so this should hardly happen in reality, but theoretically GCC is
	right here. So let's better switch to dynamic string allocation here
	instead.
	[9ef80f144f5d]

	* src/gemdos.c:
	Add some more sanity checks when parsing the relocation table
	[c7ed73062f7d]

	* src/cpu/memory.c:
	RAM TOS images do not work with full MMU emulation
	[311cd69631af]

	* src/gemdos.c, src/includes/stMemory.h, src/stMemory.c:
	Introduce a safe ST RAM clear function
	[62d910d857c6]

2018-05-05  Thomas Huth

	* src/gui-osx/PrefsController.m:
	Fix gui-osx compilation with SDL1
	[eb03893d1f25]

2018-05-03  Eero Tamminen

	* src/zip.c:
	Fix potential invalid free, refactor for readability

	- Fix: if first malloc() fails, code frees garbage pointer
	- Refactor:
	  - use intermediate variable for readability
	  - replace malloc + strcpy with strdup
	[a62e814f4f96]

2018-05-03  Thomas Huth

	* src/zip.c:
	Replace dubious strncpy(..., temp, strlen(temp)) with strcpy.

	This fixes a compiler warning with GCC 8.0.
	[4a147d9cec2d]

2018-05-02  Eero Tamminen

	* doc/hatari.1, doc/manual.html, doc/release-notes.txt, src/control.c,
	src/includes/control.h, src/main.c, src/options.c:
	Add --cmd-fifo for easy control of Hatari

	Use of control socket requires the controlling process to act like a
	server. If only thing needed is just sending few commands to Hatari
	without any need for feedback, implementing that is overkill.

	Command FIFO allows commanding Hatari just with "echo": $ hatari
	--confirm-quit off --cmd-fifo cmd-fifo & $ echo "help" > cmd-fifo $
	echo "hatari-shortcut quit" > cmd-fifo

	Command syntax is the same as with the control-socket (i.e. one used
	by Python GUI and HConsole).
	[b4be405e4f5e]

2018-05-01  Eero Tamminen

	* tools/hatari-prg-args.1, tools/hatari-prg-args.sh:
	Misc hatari-prg-args improvements

	- Add option for quitting Hatari after program (-q)
	- Update documentation and improve it a bit
	- Comment out basepage info output, it's only needed for debugging
	[651e64e25742]

	* src/vdi.c:
	DEBUG output on VDI size, if it's not changed

	Shows that VDI is actually in use in users' logs
	[9cebbc5458d4]

	* doc/manual.html:
	Update manual breakpoint chaining example

	Catching program code execution startup is important use-case and
	new method is more reliable, as it works also with EmuTOS.
	[b001f58e1524]

	* tools/hatari-prg-args.sh:
	Fix: catch Pexec(0,...) instead of Fopen()

	Current method worked only with Atari TOS versions.

	EmuTOS does additional Pexec()s between opening INF file and
	autostarting the program specified in INF file. It Pexec()s Desktop
	from ROM to load ACCs, which uses Pexec(6), and incorrectly matched
	the "pc = TEXT" breakpoint.

	After adding Hatari debugger support for GEMDOS call parameter
	variable, script can setup the TEXT breakpoint for correct process
	by catching first Pexec(0,...).
	[a1c66666a8e6]

	* doc/release-notes.txt, src/debug/vars.c, tests/debugger/test-
	dummies.c:
	Add GemdosParam debugger variable

	Needed for improved hatari-prg-args
	[1ad799a1479e]

	* tools/hatari-prg-args.sh:
	Use mktemp instead of fixed path for temporary files

	More secure.
	[20ad5f464dc2]

	* src/inffile.c:
	Add "INF" to virtual INF file messages

	That makes the messages a bit more clear and easier to find from the
	log output.
	[4cf138fb3f3f]

	* tools/CMakeLists.txt:
	Install manual page too
	[ad4c1de03175]

	* tools/debugger/CMakeLists.txt:
	Remove hatari_profile.py extension on install

	As expected e.g. by Debian packaging policy
	[dfa750c8d62b]

	* tools/CMakeLists.txt:
	Install hatari-prg-args to system
	[13b8e4e42073]

	* tools/hatari-prg-args.1, tools/hatari-prg-args.sh:
	Add hatari-prg-args manual page
	[aea1048b61ed]

2018-05-01  Thomas Huth

	* src/tos.c:
	Add 'VDI' keyword to the mouse patch description
	[192d0544bd76]

	* src/gemdos.c:
	Mark optional GEMDOS calls in "--tos none" mode as unavailable.

	This is useful for test programs with library functions that probe
	for MiNT- and other optional system calls.
	[1ed1f2eb69f2]

2018-04-30  Eero Tamminen

	* src/configuration.c, src/tos.c, src/vdi.c:
	Fix commit 722d80e15ed1 TOS version detection
	[2efe58341175]

2018-04-29  Eero Tamminen

	* src/gemdos.c, src/resolution.c, src/stMemory.c:
	Remove (now) redundant Log_Printf() WARNING prefixes

	Why floppy_stx.c has stuff like this: Log_AlertDlg ( LOG_INFO ,
	"WARNING..." )

	(Dialog showing warning alert, but at INFO level?)
	[fd6846147e73]

	* src/debug/log.c, src/debug/log.h:
	Add prefix to all log messages

	That makes it easier:
	* find out real issues from more verbose output
	* notice when log output uses a wrong log level
	* notice when something that should use logging, doesn't
	* collect full logs, but check in tests only whether there are
	unexpected warnings or errors
	[5b1465377822]

	* doc/manual.html, src/configuration.c, src/includes/main.h,
	src/main.c, src/options.c, src/printer.c, src/stMemory.c,
	src/statusbar.c:
	More printf -> logging updates

	CPU core and floppy / hd code still to do.
	[12423c5003db]

	* src/audio.c, src/control.c, src/falcon/microphone.c, src/gemdos.c,
	src/gui-sdl/dlgFileSelect.c, src/gui-sdl/sdlgui.c, src/ioMem.c,
	src/keymap.c, src/screen.c, src/shortcut.c:
	Change prints to use logging with suitable log level

	Additionally:
	- Remove warn etc prefixes from log level strings (so that latter
	commit can add a common one)
	- Add suitable prefix to prints that aren't suitable for log level
	control i.e:
	  - error messages just before Hatari calls exit()
	  - Hatari debugger and console output
	- Add "DEBUG" prefix to few ifdef debug prints as those won't use
	logging
	[c0e27c511961]

2018-04-25  Eero Tamminen

	* tests/CMakeLists.txt:
	Revert broken CMake test code
	[a0f5c3c66bde]

2018-04-29  Thomas Huth

	* src/gemdos.c:
	Allow writing to GEMDOS handles -1, 1 and 2 in "--tos none" mode.

	Redirect them to stdout or stderr accordingly. Now it should be
	possible to use programs in TOS-less mode that print out messages to
	stdout or stderr. Thanks to Thorsten Otto for the original patch /
	the idea!
	[de2d9887fd49]

2018-04-28  Thomas Huth

	* src/statusbar.c:
	Fix message size overflow problem in statusbar

	Thanks to Thorsten Otto for the hint!
	[bb60aa53ff53]

	* src/screen.c, src/screenConvert.c:
	Make sure to disable video in SDL_VIDEODRIVER=dummy mode
	[2c22651718dc]

2018-04-27  Thomas Huth

	* tests/CMakeLists.txt, tests/check-bashisms.sh:
	Move the check-bashism test into a separate script.

	Using "find" to get the list with the shell scripts was a rather bad
	idea since a user might have more scripts in the directory. Also
	using the file name of scripts for creating the different test names
	was rather cumbersome. So move the bashism test into a separate
	script file and use "hg files" to get a list of shell scripts in the
	repositry instead of using "find". Thanks to Eero for the idea and
	the inital version of the script.
	[2f6a125a70e4]

2018-04-24  Eero Tamminen

	* doc/release-notes.txt:
	Update release notes
	[2008051815e6]

	* src/inffile.c:
	Reduce default log level output from virtual INF handling
	[c88066b4f9a6]

	* src/change.c, src/debug/debugui.c, src/includes/options.h,
	src/main.c, src/options.c:
	Remove Opt_Log() now that log levels work at startup

	I.e. use Log_Printf() like everything else does, which allows
	removing bForceLog/verbose flag for option parsing (as parsing
	logging can now be controlled with log levels).

	Everything that just confirms what user specified is set to DEBUG
	level, i.e. isn't visible with the default INFO log level. Debugger
	options which are less straighforward, use INFO level.
	[67b58a89b072]

	* src/vdi.c:
	Use log functions for VDI screen size warnings
	[4ab6a0f8834a]

	* src/configuration.c, src/debug/log.c, src/debug/log.h,
	src/options.c:
	Apply log level changes immediately, not only at Log_Init()

	log.c had internal variables it uses for log level checking, which
	are initialized in Log_Init(). That is called after config file has
	been read and command line parsed.

	This means that:
	- before this log level may not be what user specified
	- log level changes from debugger won't have effect

	Changed config file reading and command line parsing to immediately
	update log.c levels, which fixes above problems.
	[864fbe1f2eaf]

	* src/gemdos.c:
	Fix: --tos none cannot use quit dialog
	[a455f205b508]

2018-04-23  Eero Tamminen

	* src/gemdos.c:
	Better default name + comment

	All MiNT GEMDOS calls are now listed, so unknown ones are something
	else than MiNT.
	[3bc6d4ac6fb7]

2018-04-23  Thomas Huth

	* src/gui-sdl/dlgHalt.c:
	Quit with non-zero return value in case of double bus errors in test
	mode
	[ee9a8d165ff4]

2018-04-22  Thorsten Otto

	* src/gemdos.c, src/tos.c:
	Fix setting of p_hitpa for test programs, and make sure a0 is zero
	on enter
	[179abe32ba51]

2018-04-23  Thomas Huth

	* src/gemdos.c:
	Use real PC of caller rather than current PC when tracing GEMDOS
	calls.

	The current PC will always be the address from the cartridge and
	thus is rather useless in the messages. This commit is based on a
	patch from Thorsten Otto (thanks!).
	[9295e9018319]

2018-04-22  Thorsten Otto

	* src/gemdos.c:
	Abort test programs on unsupported GEMDOS calls
	[3d7bf96308e8]

2018-04-22  Thomas Huth

	* tests/CMakeLists.txt:
	Check shell scripts with checkbashisms automatically
	[ffd57cdb2a7b]

	* tools/hatari-prg-args.sh:
	Fix shell portability issue in hatari-prg-args.sh

	Bash would need the "-e" parameter to interpret backslash escapes,
	while dash and other shells don't need it. Use printf instead which
	should be more portable.
	[36adfe65c89a]

	* src/debug/68kDisass.c:
	Silence GCC 8.0 compiler warnings in 68kDisass.c
	[389d0001c67c]

	* src/falcon/dsp_disasm.c:
	Fix format overflow warnings from GCC 8.0 in dsp_disasm.c

	GCC 8.0 got smarter and checks whether sprintf and friends could
	overflow the destination buffer. Increase the affected buffers to
	silence the warnings here.
	[0c49d924fa14]

	* tests/natfeats/run_test.sh, tests/natfeats/test_out.txt:
	Filter out the debugger prompt and command in the test output.

	Depending on whether we link against libreadline or not, the
	debugger prompt and commands show up in the output or not, so to
	make the test work everywhere, we've got to ignore these in the
	expected output.
	[95f82c59d378]

	* src/cpu/sysdeps.h:
	Fix NORETURN with gcc 8.0 (i.e. when minor version is 0)
	[d54c7cafd0e9]

2018-04-21  Thomas Huth

	* tests/natfeats/nf_ahcc.prj, tests/natfeats/nf_ahcc.tos,
	tests/natfeats/nf_vbcc.tos, tests/natfeats/run_test.sh,
	tests/natfeats/test_out.txt, tests/startup.s:
	Switch natfeats test to binary compiled with AHCC.

	Now the binary finally matches the C source code again and thus we
	now also test the debugger invocation via natfeats. To avoid that we
	have to implement arbitrary GEMDOS calls in the --tos none mode for
	the startup code of the C programs, also provide our own little
	startup code that just does an Mshrink before jumping into the
	main() function.
	[8b561454cd59]

	* src/options.c, tests/buserror/run_test.sh,
	tests/natfeats/run_test.sh, tests/xbios/run_test.sh:
	Enable GEMDOS HD in --tos none mode automatically if a PRG has been
	specified
	[4876d4e290cb]

2018-04-19  Eero Tamminen

	* src/gui-sdl/dlgHalt.c, src/includes/main.h, src/main.c:
	Skip Halt dialog and quit directly if --run-vbls used

	Useful for automated tests, in case they double bus error, e.g.
	because expected feature isn't present.
	[8a1eff5a73d6]

2018-04-18  Eero Tamminen

	* tests/xbios/run_test.sh:
	Fix test script

	Function name requires parenthesis to work. Prefixing it with
	"function" is redundant bashisms.
	[9c8a779a8fca]

	* doc/hatari.1, doc/manual.html:
	Typo fixes

	Thanks to David
	[57892df405b9]

2018-04-16  Eero Tamminen

	* doc/hatari.1, doc/manual.html:
	Fix typos in previous commit
	[251a2fd0cb91]

	* doc/release-notes.txt:
	Update release notes
	[b427523eaf82]

	* doc/hatari.1, doc/manual.html, src/options.c:
	Update VDI mode size restrictions documentation
	[11e96a2834a8]

	* src/vdi.c:
	Fix: add extra VDI width restrictions

	Old Atari TOS versions (<= 2.x) require additional VDI width
	restrictions with >= 4MB of RAM.

	Output VDI size only if it needed to be changed from the user
	defined one.
	[722d80e15ed1]

2018-04-15  Thomas Huth

	* src/cpu/newcpu.c:
	Use 24 bits only when silencing the bus error message for the
	blitter.

	Some TOS versions apparently also check for the blitter at
	0xFFFF8A00 so we have to ignore the uppermost byte here.
	[701d0c816ad6]

2018-04-14  Thomas Huth

	* tests/buserror/buserr_b.prg, tests/buserror/buserr_b.s,
	tests/buserror/buserr_w.prg, tests/buserror/buserr_w.s:
	Fix bug in startup code of the buserror testers
	[130ba977f72a]

	* src/change.c, src/debug/debugui.c, src/includes/options.h,
	src/main.c, src/options.c:
	Always enable option parsing messages in debugger mode
	[e14ac75bf88e]

	* src/cpu/newcpu.c:
	Fix 68060 cache mask.

	This is WinUAE commit 370f9aaca4c208a42b2e504e398ffd369a8c6397.
	[85281786002e]

	* doc/hatari.1, doc/release-notes.txt:
	Add --bios-intercept to man page and release notes
	[1c75d968f4f0]

2018-04-12  Eero Tamminen

	* doc/release-notes.txt:
	Release notes improvements

	Consistency, 80 col line wrapping, typos & wording.
	[ee7d6f6e8bd6]

	* src/debug/68kDisass.c:
	Support hex values for --disasm and warn about invalid numbers
	[f6c85174f8a7]

2018-04-12  Nicolas Pomarede

	* doc/release-notes.txt:
	Update release notes
	[fad20938b02f]

	* src/main.c, src/options.c:
	Allow a max value of 30 for --slowdown
	[39fcc57f2e15]

	* src/blitter.c:
	Fix stopping/resuming the blitter in cycle exact mode when writing 0
	to bit 7 of control reg In such cases, the internal context could be
	incorrect when resuming the blitter, causing an extra word read and
	giving a wrong result at the end of the transfer Fix "Lethal Xcess"
	in STE mode (thanks to V. Riviere for the report)
	[a50e98762465]

	* src/blitter.c:
	Fix a rare case for blitter where last written word of a line could
	be wrong This could happen when HOG mode is disabled and the blitter
	gives the bus to the cpu just after doing a "read dest" and before
	doing a read-modify-write on dest. In such case the read-modify-
	write didn't read memory but used the value from a previous read
	[1ff6d9c3e11b]

2018-04-12  Eero Tamminen

	* src/nf_scsidrv.c:
	K&R -> ANSI

	GCC doesn't check function arguments for K&R prototypes.

	In C++, fun() maps to fun(void), but in C compilers it maps to
	fun(int). There's no compile warning about that because GCC
	interprets () as K&R:
	https://gcc.gnu.org/bugzilla/show_bug.cgi?id=48091
	[f9b8f2d42950]

	* src/nf_scsidrv.c:
	Add nf_scsidrv logging missing from two functions

	Patch from Uwe.
	[81716ce6e23f]

2018-04-11  Thomas Huth

	* doc/manual.html, src/options.c, tests/xbios/run_test.sh:
	Turn --bios-intercept into a proper boolean option
	[f60b1272c159]

2018-04-09  Thomas Huth

	* tests/xbios/run_test.sh, tests/xbios/test_out.txt:
	Make the xbios test more reliable

	Comparing the output did not work reliable with other shells /
	systems, so switch to some "grep" statements instead that look for
	the expected strings.
	[5214e7d3a975]

2018-04-08  Thomas Huth

	* tests/CMakeLists.txt, tests/dbmsg/dbmsg.c, tests/dbmsg/dbmsg.prj,
	tests/xbios/CMakeLists.txt, tests/xbios/run_test.sh,
	tests/xbios/test_out.txt, tests/xbios/xbiostst.prg,
	tests/xbios/xbiostst.s:
	Add XBIOS test to the regression test suite
	[a4cb5da17b27]

	* src/includes/xbios.h, src/options.c, src/xbios.c:
	Silence the --bios-intercept debug message in non-debug log levels
	[ae9476206ec5]

2018-04-07  Eero Tamminen

	* src/stMemory.c:
	Fix: 0 -> 512KB memory setting
	[4ee5a1f80e7d]

	* doc/todo.txt:
	Add Beam Racing TODO
	[9203d7d02545]

	* doc/midi-linux.txt:
	Minor MIDI doc improvements
	[9e9eb63a23a8]

2018-03-30  Eero Tamminen

	* doc/midi-linux.txt:
	With PortMidi Hatari MIDI usage is much easier

	Add quick start instructions for that to the Linux MIDI document.
	[6c7b490c5f24]

2018-04-07  Thomas Huth

	* tests/natfeats/makefile:
	Remove the natfeats stub makefile to avoid a conflict with the one
	created by CMake
	[4bb12c792c7b]

	* tests/buserror/CMakeLists.txt, tests/buserror/run_test.sh:
	Slightly improve the bus error test handling
	[24e3a9cf6614]

	* tests/CMakeLists.txt, tests/natfeats/CMakeLists.txt,
	tests/natfeats/run_test.sh, tests/natfeats/test_out.txt:
	Include the natfeats test in the ctest regression tests
	[d94edaa43e50]

	* src/resolution.c:
	Use logger functions instead of fprintf in resolution.c
	[ba2053e64e88]

	* src/gemdos.c:
	Create a basepage when loading program in non-TOS mode
	[e0bd3ca75227]

	* src/main.c, src/options.c:
	Silence --run-vbls and --slowdown debug messages by default
	[45799896f830]

2018-04-05  Thomas Huth

	* tests/buserror/run_test.sh:
	Speed up bus error regression test by enabling fast-forward mode

	... and set the HOME directory to the temporary folder to avoid that
	we have bad side-effects with the users config files.
	[c5a193cb8a8e]

	* src/includes/joy.h, src/ioMemTabSTE.c, src/joy.c,
	tests/buserror/CMakeLists.txt:
	Correctly emulate bus error handling for STE lightpen registers

	This way we can run the buserror regression test in byte mode for
	the STE machine type, too.
	[f2dde7065b46]

2018-04-01  Thomas Huth

	* tests/debugger/test-breakcond.c, tests/debugger/test-dummies.c,
	tests/debugger/test-evaluate.c:
	Fix compilation with ENABLE_SMALL_MEM

	The STRam is handled differently here, so we've got to adapt the
	debugger tests accordingly.
	[07250ebee2ca]

	* tests/CMakeLists.txt, tests/buserror/CMakeLists.txt,
	tests/buserror/run_test.sh:
	Run bus-error regression tests during "make test".

	Now that we can run some simple PRG files without TOS, we can run
	our bus-error testing programs during "make test" to check that we
	did not regress with regards to bus errors in the memory IO regions.
	[0f4836d4da96]

	* tests/buserror/results/mst4_b.txt,
	tests/buserror/results/mst4_w.txt,
	tests/buserror/results/mste4_b.txt,
	tests/buserror/results/mste4_w.txt:
	Clean up bus error test results files

	Make sure that we use CR-LF line endings everywhere and put the
	machine comment into parentheses so we can easily filter them out
	later.
	[1e12cb4837f7]

	* src/screen.c:
	SDL renderer can not be used in SDL_VIDEODRIVER=dummy mode
	[68f3b927aaee]

	* src/gemdos.c, src/includes/main.h, src/main.c:
	Emulate some more GEMDOS calls in TOS-less testing mode

	We need Pterm, Pterm0, Super and Mshrink to run the bus error
	tester, so add code to emulate these calles without TOS when running
	in the new "--tos none" mode.
	[f25bb01d90ea]

	* src/cart.c, src/cpu/hatari-glue.c, src/includes/tos.h,
	src/options.c, src/tos.c, src/uae-cpu/hatari-glue.c:
	Add the possibility to run Hatari with "--tos none"

	We really need a way to run regression tests automatically. The main
	problem is our dependency to external TOS ROM images for this. But
	since we've got code to handle many GEMDOS calls already, it should
	be possible to fake enough of TOS to run our simple regression tests
	already without an external TOS ROM image. So let's add a mode to
	run Hatari with "--tos none", in which it loads, relocates and runs
	a simple PRG file using our GEMDOS emulation instead of a real TOS.
	We also fake a simple "ROM" image for this so that we do not have to
	change other code in Hatari all over the place and the basic way of
	operation stays the same (i.e. the instruction execution starts with
	the ROM image).
	[0db1fad64cf3]

	* src/gemdos.c, src/includes/gemdos.h:
	Add a function to load and relocate PRG files
	[259833b4ee00]

2018-03-30  Thomas Huth

	* src/options.c:
	Fix coding style in options.c
	[943b3c270f47]

	* src/includes/tos.h, src/reset.c, src/tos.c:
	Separate code that loads the TOS file from the other setup code
	[43ccf16e6a8a]

2018-03-29  Thomas Huth

	* tests/debugger/test-dummies.c:
	Remove test dummy functions that are apparently not required anymore

	This hopefully fixes the broken compilation with MinGW (which has
	currently a conflict with the MakeSR() prototype).
	[4664f8bbb644]

2018-03-26  Thomas Huth

	* src/uae-cpu/hatari-glue.c, src/uae-cpu/hatari-glue.h:
	Add bCpuWriteLog to the uae-cpu core, too
	[2d03f06c31b3]

	* src/file.c:
	fseek and ftell can fail, so check their return values
	[5266b983dbb5]

2018-03-25  Thomas Huth

	* src/cpu/newcpu.c, src/cpu/writelog.c, src/debug/log.c:
	Do not print the CPU debug messages unless we're using the right log
	level
	[07828b6bcdc6]

	* src/options.c:
	Use a dedicated function for logging debug infos while parsing
	options.

	The messages that we print during option parsing are rather debug
	information for the developers than useful information for the
	users, so we should not clutter the terminal with these texts by
	default. Unfortunately we can't use Log_Printf() here yet since the
	log file handle has not been opened yet, so use our own new debug
	logging function here now instead.
	[cfbe9a50244c]

2018-03-25  Eero Tamminen

	* tools/atari-hd-image.1:
	Update atari-hd-image manual page
	[fb7e64fd2e2c]

	* tools/atari-hd-image.sh:
	Fix: support python v3 in atari-hd-image

	Integer division is now '//' and print needs parenthesis. These
	makes partition table creation work both with python v2 & v3.
	[bfd87d4585e7]

2018-03-25  Thomas Huth

	* src/hdc.c:
	hdc.c needs SDL_endian.h for the SDL_Swap functions
	[e140e5cfb485]

2018-03-25  Eero Tamminen

	* tests/debugger/test-symbols.c:
	Update symbols subcommands for debugger test

	Debugger command parsing functions don't return error codes, just
	whether they finished, so tests can't provide errors from command
	parsing, just from calling further functions. That's why it was
	missed, it can be seen only from test output: ctest -V
	[4f1cdb1aef52]

	* doc/compatibility.html, doc/emutos.txt:
	Add few new demos to compat lists
	[65d66213e0a4]

2018-03-24  Thomas Huth

	* src/configuration.c, src/debug/console.c, src/debug/debugui.c,
	src/falcon/dsp_core.h, src/falcon/dsp_cpu.c,
	src/includes/screenSnapShot.h, src/includes/statusbar.h:
	Avoid to include SDL.h from our header files

	SDL.h includes SDL_main.h which redefines the main function. That's
	OK as long as we link against the SDL library, but other binaries
	like the files from tests/debugger will fail to link this way. Since
	we don't want to pull in all SDL dependencies for the tests, fix
	this problem by not including SDL.h (and thus SDL_main.h) from our
	headers anymore.
	[f39b7f684f60]

	* src/gui-sdl/dlgCpu.c:
	Fix broken CPU dialog with old UAE CPU core

	The dialog uses a different amount of entries in the FPU box for the
	old UAE CPU core since the FPU_JIT flag is only used with the new
	WinUAE core. So the entries in cpudlg[] do not match the index
	macros like DLGCPU_PREFETCH, which is causing some wrong effects
	when the dialog is shown. Fix it by removing the FPU_JIT stuff
	completely. We can add it again later in case we ever support JIT
	with Hatari.
	[0cd22ce1fc38]

	* cmake/DistClean.cmake:
	Simplify the distclean target a little bit
	[c15e64400211]

	* .hgignore:
	Update .hgignore file to current status
	[06d27fb65b8c]

	* cmake/DistClean.cmake:
	Update distclean target to remove the files from CTest framework
	[893d08312e8d]

	* CMakeLists.txt, tests/debugger/CMakeLists.txt:
	Enable the CTest framework, so you can use now 'make test' to run
	the tests
	[be9af8234367]

	* CMakeLists.txt, tests/CMakeLists.txt, tests/debugger/CMakeLists.txt,
	tests/debugger/makefile, tests/debugger/test-dummies.c:
	Build debugger tests via CMake so that they do not bit-rot so easily
	again
	[4aeb071c8b0b]

	* tests/debugger/test-dummies.c, tests/debugger/test-symbols.c:
	Fix debugger tests (add missing dummy functions etc.)
	[71716adabd89]

2018-03-18  Thomas Huth

	* src/screenConvert.c:
	Fix Coverity warning about suspicious implicit sign extension

	sdlscrn->format->BytesPerPixel is Uint16. This is promoted to "int"
	when multiplied with scrwidth (which is "int", too). This could then
	be sign-extended when used as third argument of memcpy(). So make
	sure that the result of the multiplication is unsigned by using a
	temporary "unsigned int" variable for the BytesPerPixel value.
	[dee3dd5a55b8]

	* src/statusbar.c:
	Rename bOverlayState to nOverlayState and add /* fall through */
	comment

	The bOverlayState variable is not a boolean, so this variable should
	not use the conventions for boolean variables and thus not start
	with a "b".

	Also add a missing "/* fall through */" comment here to be able to
	compile with "-Wimplicit-fallthrough=1" without warnings here. (The
	comment right before the switch statement says that all states
	except none need to be updated on the screen, so we indeed need the
	fall-through instead of a break here)
	[a8d99b4ac729]

2018-03-16  Nicolas Pomarede

	* src/cpu/newcpu.c, src/cpu/winuae_readme.txt:
	Fix some code analyzer warnings (from WinUAE >3.6.1 beta 2018/03/10)
	[9a9f39c1f20f]

2018-03-08  Nicolas Pomarede

	* CMakeLists.txt:
	Better detection of Large File Support (check if off_t is at least
	64 bits) Large File Support is required to record AVI file > 2GB,
	all recent OSes should support it
	[227dc2b47bc9]

2018-03-02  Nicolas Pomarede

	* src/configuration.c:
	Option "patch TOS timer D" should be off by default Some badly
	written programs expect timer D to be set at start (as seen with
	some music drivers playing samples using timer D, reported by
	Grazey)
	[54b4daddfaa7]

2018-02-25  Nicolas Pomarede

	* src/CMakeLists.txt, src/gui-osx/paths.m, src/includes/paths.h,
	src/paths.c, src/screenSnapShot.c:
	On macOS, save screenshots in user defined location or ~/Desktop
	(patch by Troed Sangberg)
	[81ae4da2d9fa]

2018-02-25  Thomas Huth

	* src/cpu/memory.c:
	Remove unused special_mem code in the dummy handler functions.

	This code has been removed in WinUAE, too, see commit "JIT
	special_mem handling cleanup"
	(3320507fdbbb757e505701bed7ff10883a99c0a9).
	[6e344d8215df]

	* src/cpu/memory.c:
	Increment the illegal_count variable instead of decrementing it.

	In dummylog(), i.e. in the WinUAE code, the illegal_count variable
	is incremented to count the log messages, while the Hatari-specific
	function print_illegal_counted() rather tries to decrement the
	variable. So let's adapt the Hatari-specific function to also
	increment the variable instead.
	[455d3317e306]

2018-02-20  Nicolas Pomarede

	* src/screenSnapShot.c:
	Use ftello instead of ftell for large file support (when png is used
	as avi codec)
	[a80577520b0e]

2018-02-19  Nicolas Pomarede

	* src/cpu/debug.c, src/cpu/debug.h, src/cpu/memory.h,
	src/cpu/newcpu.c, src/cpu/newcpu.h, src/cpu/options_cpu.h,
	src/cpu/sysdeps.h, src/cpu/uae/string.h, src/cpu/winuae_readme.txt:
	Update to the latest WinUAE's sources, no real change for Hatari
	(from WinUAE 3.6.1 beta4 2018/02/14)
	[98b234054b24]

	* src/cpu/newcpu.c:
	In 68040/60, add extra cycles to prevent hang if all code and data
	in a loop are cached (from WinUAE 3.6.0 beta17)
	[7780040fdf87]

	* src/cpu/cpummu.c:
	Support MMU table dump for 8k page (from WinUAE 3.6.0 beta15)
	[5c0cdd21f30a]

	* src/cpu/newcpu.c:
	68030 speed adjustement when using prefetch+memory cycle exact (not
	used in Hatari, from WinUAE 3.6.0 beta12)
	[cb313e66a6d0]

2018-02-18  Eero Tamminen

	* doc/compatibility.html:
	Hatari v2.1 compatiblity status update

	Marked all 2.1-dev entries as 2.1:
	* ST entries are assumed to work still
	* All 3 STE & TT entries still work fine with 2.1
	* While numerous Falcon etries were fixed during 2.0->2.1 development,
	many of those have regressed, they now/again require disabling
	cycle-exact (= cache emulation) and prefetch, and there are even
	couple which work only with old AUE CPU core

	(Commercial Ishar games were not tested, but are assumed OK.)
	[a3724309e348]

	* doc/emutos.txt:
	More demos/games compatible with EmuTOS
	[44296b4dbe25]

2018-02-14  Nicolas Pomarede

	* src/gui-osx/en.lproj/SDLMain.xib, src/gui-osx/fr.lproj/SDLMain.xib:
	Update MIDI pannel for french version in macOS UI (patch by Jérome
	Vernet) This should also prevent crashes of the UI that were
	reported when using the french language
	[2ab2e35d5923]

2018-02-13  Eero Tamminen

	* doc/emutos.txt:
	Add new STE demos compatible with EmuTOS
	[85cd4454e7c4]

2018-02-12  Nicolas Pomarede

	* src/gui-osx/SDLMain.m:
	Fix inverted buttons "reset" and "don't reset" on macOS
	[34632011c523]

2018-02-11  Nicolas Pomarede

	* src/debug/68kDisass.c, src/debug/debugdsp.c, src/fdc.c:
	Add more comments to remove warnings when compiling with -Wimplicit-
	fallthrough=1
	[037c938470f8]

	* src/gui-osx/PrefsController.h:
	Add constant NSAlertStyleInformational for older macOS 10.11 (patch
	by Benoit Tuduri)
	[21bc2b0ebae4]

	* cmake/FindReadline.cmake:
	FindReadline.cmake requires stdio.h when using readline.h for mingw
	dd
	[02cd941037cb]

	* CMakeLists.txt, cmake/FindPortAudio.cmake, cmake/FindPortMidi.cmake,
	cmake/FindReadline.cmake:
	Use CheckSymbolExists instead of check_function_exists in Cmake
	(patch by Troed Sangberg)
	[b58db2eee426]

2018-02-11  Thomas Huth

	* src/ide.c, src/xbios.c:
	Add "/* fall through */" comments for compiling with -Wimplicit-
	fallthrough
	[c5bfa8773600]

	* src/gemdos.c:
	Add missing break in GemDOS_OpCode tracing code

	Found by compiling Hatari with "-Wimplicit-fallthrough=1".
	[d539755afcba]

	* src/debug/debugui.c:
	Silence compiler warning with libedit's rl_readline_name
	[ac09db060154]

	* src/main.c:
	Re-initialize sdlscrn variable before calling SDL_UpdateRect()
	[4f3103c460bf]

2018-02-11  Eero Tamminen

	* doc/release-notes.txt, src/debug/profilecpu.c,
	src/debug/profiledsp.c:
	Fix CPU/DSP profile "addresses" commands paging

	Need to check separately for when number of lines is:
	- at paging page limit
	- past end of upper limit for addresses
	- out of active addresses (NEW)

	Also tell when addresses wrap back to beginning and reset address
	directly instead of user needing to repeat one empty addresses
	output.
	[36c57e5dbb13]

2018-02-08  Eero Tamminen

	* doc/emutos.txt:
	Minor updates to emutos.txt

	Few notes for latest EmuTOS version + formatting changes.
	[ca11115329df]

2018-02-07  Nicolas Pomarede

	* .hgtags:
	Added tag v2.1.0 for changeset 533b11ea2f1e
	[d3d1437659f6]

2018-02-07  Eero Tamminen

	* doc/manual.html:
	Update manual info

	- Remove redundant references to ST as Hatari emulates now many
	other machines too
	- And notes about SDL2 scaling and NVRAM emulation
	- Update optional build dependencies list
	- Update EmuTOS info (compat issues + advantages)
	[055b5950e5e8]

	* readme.txt:
	Improve old CPU core info in readme
	[28900a2dd544]

	* doc/manual.html:
	Update GEMDOS HD emulation limitations list
	[ee1d26f5cda4]

	* doc/manual.html:
	Add more debugger usage examples
	[14f01420a5c8]


2018-02-07 : *** Version 2.1.0 ***

2018-02-07  Nicolas Pomarede

	* doc/compatibility.html, doc/doxygen/Doxyfile, doc/manual.html, doc
	/release-notes.txt, hatari.spec, readme.txt, src/gui-osx/Info-Hatari
	Winuae.plist, src/gui-osx/Info-Hatari.plist, src/gui-
	osx/en.lproj/InfoPlist.strings, src/gui-
	osx/fr.lproj/InfoPlist.strings, src/includes/version.h,
	src/memorySnapShot.c:
	New release 2.1.0, update date in corresponding files
	[533b11ea2f1e] [tip]

2018-02-06  Eero Tamminen

	* doc/manual.html:
	Update profiler information in manual
	[0e050b543407]

	* src/debug/profilecpu.c:
	Profile cache stats for already prefetched instructions
	[119df3d70e18]

	* src/debug/profile.c, src/debug/profile_priv.h,
	src/debug/profilecpu.c, src/debug/profiledsp.c:
	Fix profile save disassembly being truncated

	Explicitly disable disassembly paging when saving profile to file.
	[df859476065e]

	* src/debug/profilecpu.c:
	Better info for profile output

	- overview percentage is over all areas (memory ranges)
	- cache events cannot happen for all counted instructions
	[62c7fa605838]

	* src/debug/68kDisass.c, src/debug/profile.h, src/debug/profilecpu.c:
	Better cache profiling debugging support

	If DEBUG_CACHE is set, show both hits & misses for both instruction
	& data cache in the disassembly.

	Disabled by default.
	[df8b8a3895ff]

2018-02-04  Nicolas Pomarede

	* src/cpu/cpummu.c, src/cpu/newcpu.c, src/cpu/newcpu_common.c:
	68040 SRP and URP registers are full 32-bit, 68060 masks out low 9
	bits (from WinUAE 3.6.1 beta1)
	[5f502396c3c5]

	* src/cpu/cpummu.c, src/cpu/cpummu.h, src/cpu/newcpu_common.c:
	Reading real 68EC040 MMU enable/page size TC register always returns
	zero (from WinUAE 3.6.1 beta1)
	[6c006bd463cb]

2018-02-02  Eero Tamminen

	* src/debug/profilecpu.c:
	Debug helper for cases when i & d cache hits & misses are zero
	[822222b90afb]

	* doc/compatibility.html:
	Add JagPad compatibility notes

	From: http://www.atari-forum.com/viewtopic.php?f=51&t=33023
	[3c2ef7ad5e0e]

2018-02-01  Nicolas Pomarede

	* src/cpu/fpp_native.c:
	Fix wrong rounding in FPU, add missing nan check (from WinUAE
	2018/01/31)
	[734a610e50da]

2018-02-01  Eero Tamminen

	* src/debug/profilecpu.c:
	Fix cache histogram typo
	[b15b32d8db8d]

2018-01-31  Eero Tamminen

	* src/debug/profilecpu.c:
	Fix comment typo
	[2840fcf684ac]

2018-01-31  Nicolas Pomarede

	* src/cpu/hatari-glue.c, src/m68000.c:
	Disable FPU is current CPU is 68000/68010
	[bd989d9bfa11]

2018-01-31  Eero Tamminen

	* src/gui-sdl/sdlgui.c, src/main.c:
	Handle SDL2 expose events also in SDL dialogs
	[704d8572e54a]

2018-01-28  Eero Tamminen

	* src/options.c:
	Fix typo
	[047de3d63a27]

2018-01-27  Nicolas Pomarede

	* src/cpu/gencpu.c:
	Fix some 68000 long word access order for movem/addx/subx/move using
	-(An) (patch from WinUAE)
	[359a32848269]

2018-01-26  Eero Tamminen

	* python-ui/.cvsignore:
	Remove obsolete file
	[cf7fa166c268]

	* doc/release-notes.txt, src/main.c:
	Handle expose events with SDL 2.0

	Compositing window manangers don't usually generate expose events
	when switching between overlapping windows, but you do get them when
	there's no compositing.

	SDL v2 doesn't seem to refresh window automatically on exposes like
	SDL v1 did, which means that Hatari window needs to be explicitly
	updated when it's exposed.

	This issue was most visible when Hatari is paused, because Hatari
	window doesn't then get updated every emulated VBL (i.e. at
	50-71Hz). However, it was probably visible only with non-compositing
	desktop.

	(If SDL renderer is disabled from Hatari config, one pauses Hatari
	and toggles fullscreen, this issue was even more severe. Easiest way
	to get properly updating desktop in that case, before this patch,
	was killing Hatari.)
	[e9fe2e3c46c8]

2018-01-26  Nicolas Pomarede

	* doc/compatibility.html:
	Improve doc : Transbeauce II demo will crash with more than 1MB on
	STF (bad MMU code, similar to Vodka Demo)
	[ee9f5e9eab26]

2018-01-26  Eero Tamminen

	* doc/release-notes.txt, src/debug/debugcpu.c, src/debug/log.c,
	src/debug/log.h:
	Shorten trace name: cpu_registers -> cpu_regs

	Requested by Nicolas
	[71dab0184d3d]

2018-01-25  Eero Tamminen

	* doc/release-notes.txt, src/debug/debugcpu.c, src/debug/log.c,
	src/debug/log.h:
	Add "cpu_registers" trace option
	[668545e4c558]

	* doc/release-notes.txt:
	Update release notes
	[60ca5cb0caf4]

2018-01-24  Nicolas Pomarede

	* src/includes/m68000.h:
	Remove commented code
	[67a9c6eb4686]

	* src/includes/m68000.h, src/m68000.c:
	In M68000_SetPC, refill prefetch after modifying PC
	[c097746b6efa]

	* src/includes/m68000.h, src/m68000.c:
	M68000_GetSR / M68000_SetSR are rarely used, no need to inline them
	[a70837b10a63]

2018-01-24  Eero Tamminen

	* src/debug/breakcond.c:
	Better usage information on width modifier errors
	[d9e385efc54d]

	* doc/emutos.txt, doc/release-notes.txt:
	Improve/update release notes
	[a880a0b9d1f9]

2018-01-22  Eero Tamminen

	* src/debug/68kDisass.c:
	Add comment for Coverity checks

	Requested by Thomas
	[179864d15f7f]

	* src/debug/evaluate.c:
	Fix '>>' bit-shifting on debugger command line

	Reported by Thomas, found by Coverity.
	[c928796559c7]

2018-01-21  Thomas Huth

	* src/falcon/videl.c:
	Fix bug in handling the read of 0xff820e.

	IoMem[] is a byte array, so applying a mask of 0x1ff is nonsense.
	Spotted with Coverity.
	[f36c959b9288]

	* src/gemdos.c:
	ftell can return -1, so error out in this case
	[77fb634dadcd]

	* src/file.c:
	Remove superfluous fseeko before fclose
	[cb5d2ddc4463]

	* src/avi_record.c:
	Remove superfluous post-increment in Avi_StoreU8
	[3373963fcceb]

2018-01-20  Thomas Huth

	* tools/debugger/gst2ascii.c:
	Let the usage() function exit immediately.

	There were multiple error messages in some cases since the code
	continued after the usage() function, which looks ugly. And Coverity
	complained about resource leaks in symbols_load(). Code flow is way
	easier if the usage() function simply exits immediately instead.
	[4ee532ddd13f]

	* src/gemdos.c, src/paths.c:
	Check library function return values (they can fail!)
	[0f2e702c139b]

	* src/screenConvert.c:
	Remove unnecessary calculations in screen convert functions.

	The final calculated value for hvram_column is never used anymore,
	so we can also simply drop it. Spotted with Coverity.
	[1ede06070e00]

	* src/inffile.c:
	Fix "array compared against 0" warning (spotted by Coverity)
	[989ae99b1edf]

2018-01-13  Nicolas Pomarede

	* src/cpu/gencpu.c:
	68020 V-flag behavior for BCD instructions is most likely exact same
	as 68030
	[dd89c4e1a7f9]

2018-01-09  Nicolas Pomarede

	* doc/authors.txt, doc/release-notes.txt:
	Update release notes and authors list
	[58c82d96c35f]

	* src/cpu/gencpu.c:
	Remove Hatari's specific code (no more warning about tmp_newv)
	[0c2fc4af2c3f]

	* src/cpu/gencpu.c:
	Fix V flag for BCD instructions for 68020/68030 (patch by Miro
	Kropacek)
	[943ab13cfff7]

	* src/cpu/gencpu.c:
	Fix NBCD instruction (patch by Miro Kropacek)
	[affe2b285093]

2018-01-06  Thomas Huth

	* CMakeLists.txt, cmake/FindSDL2.cmake, configure, doc/authors.txt,
	doc/manual.html, doc/release-notes.txt, readme.txt,
	src/CMakeLists.txt, src/ide.c, src/main.c:
	OSX is called macOS nowadays
	[73223c0d306a]

2018-01-07  Eero Tamminen

	* doc/release-notes.txt, src/debug/symbols.c:
	Improve symbols help and release notes
	[cfd16fcbc54a]

	* doc/release-notes.txt, src/configuration.c, src/debug/symbols.c,
	src/includes/configuration.h:
	Add debugger command & config option for symbols matching

	"symbols match" command and "bMatchAllSymbols" config file option
	control whether TAB completion matches just the symbol types
	relevant for the command (the default), or all symbols.
	[6df5cff0a21a]

2018-01-06  Eero Tamminen

	* doc/release-notes.txt, src/configuration.c, src/debug/symbols.c,
	src/includes/configuration.h:
	Add config file option for keeping program symbols resident
	[e853e5c2711b]

	* doc/release-notes.txt, src/configuration.c, src/debug/log.c,
	src/includes/configuration.h, src/inffile.c, src/options.c:
	Move exception mask from Log to Debugger section

	Exceptions invoke debugger, so their config file setting should be
	in Debugger section.
	[2f529a37a00d]

2018-01-03  Nicolas Pomarede

	* doc/release-notes.txt:
	Add note about disabling alt+F4 under Windows
	[81bff329265a]

	* src/screen.c:
	Disable closing Hatari with alt+F4 under Windows as alt+F4 can be
	used by some emulated programs
	[7a4f79704c80]

2017-12-31  Thomas Huth

	* src/shortcut.c:
	Ignore bad fullscreen shortcut events that can happen with SDL2
	[2decf569e6d7]

	* src/main.c:
	Ignore keyboard repeat events on SDL2

	In SDL1, keyboard repeat was disabled by default, which is what we
	want since we handle keyboard repeat on the ST side on our own. In
	SDL2, keyboard repeat is always enabled by default, so we
	continuously get KEYDOWN events until the key is released. This has
	some ugly effects with certain shortcut keys, so we have to
	explicitely ignore keyboard repeat events with SDL2.
	[eef7cae78041]

	* src/configuration.c, src/includes/configuration.h, src/main.c,
	src/screen.c:
	Add the possibility to use SDL2 without rendering via texture.

	SDL2 still contains the old software blitting functions from SDL 1.2
	that work without a texture renderer. These might work faster in
	case there is no proper hardware texture acceleration available, so
	this adds some experimental support for this blitting mode (which
	can be enabled in the configuration file).
	[3aa9175c8c51]

2017-12-30  Thomas Huth

	* src/configuration.c:
	bUseVsync is a boolean variable, so use Bool_Tag instead of Int_Tag
	[de63e0244a31]

2017-12-29  Nicolas Pomarede

	* src/cpu/newcpu.h, src/cpu/newcpu_common.c:
	In setdivsoverflowflags divisor should be uae_s16 not uae_u16
	[9287fae75421]

2017-12-28  Thomas Huth

	* src/stMemory.c:
	Fix segmentation fault with ENABLE_SMALL_MEM

	IoMem[] is not malloc'ed yet when when STMemory_Init() is called, so
	we should not call STMemory_Reset() from STMemory_init(). Replace it
	with a direct call to STMemory_MMU_ConfToBank() instead.
	[e553354fe22d]

2017-12-23  Thomas Huth

	* doc/compatibility.html:
	Add missing closing HTML tag
	[0ae483d4fd1e]

	* src/debug/68kDisass.c:
	Fix error path when realloc fails
	[87af6f204676]

	* src/cpu/fpp_softfloat.c:
	Silence compiler warnings in fpp_softfloat.c
	[a08f72e7c9de]

	* tools/hmsa/CMakeLists.txt:
	Fix compilation of hmsa without zlib
	[9092dbdda634]

2017-12-23  Eero Tamminen

	* doc/emutos.txt:
	Update EmuTOS links and remove obsolete information

	Rewrite a bit also the section on reasons for using EmuTOS.
	[20b68dcfab43]

2017-12-22  Thomas Huth

	* src/ioMemTabFalcon.c, src/ioMemTabSTE.c, src/ioMemTabTT.c:
	Fix compilation with ENABLE_SMALL_MEM

	STMemory_MMU_Config_ReadByte() and STMemory_MMU_Config_WriteByte
	were not defined in the ioMemTab*.c files due to a missing include
	of "stMemory.h".
	[8f87e74cbb29]

2017-12-22  Nicolas Pomarede

	* src/resolution.c:
	Resolution_Select() should be defined only when using SDL1 instead
	of SDL2
	[37e5f998bcf6]

2017-12-21  Nicolas Pomarede

	* doc/emutos.txt:
	Hatari 2.1.0 will ship with EmuTOS 0.9.9.1
	[0b8d462da0c3]

	* src/cpu/CMakeLists.txt:
	Remove more warning in cpu core when compiling in 'release' mode
	[d12281ffc931]

	* src/midi.c:
	Disable unused variable 'runningStatus' for now (suppress warning
	during compilation)
	[5bc17590da83]

	* doc/authors.txt, doc/release-notes.txt:
	Update release notes with new items since last version
	[c2cb6f90fcf0]

2017-12-13  Eero Tamminen

	* tools/debugger/gst2ascii.c:
	gst2ascii: print program section sizes

	This can be useful when debugging e.g. whether programs overwrite
	themselves in memory when they load their data files...
	[160d2df5b4b8]

	* cmake/FindPortMidi.cmake:
	Fix comment typo
	[5734677d3d49]

2017-12-12  Nicolas Pomarede

	* src/includes/video.h:
	Modify number of displayed lines when removing bottom border on a 60
	Hz screen (cancel commit rev 6646) (fix intro part in 'High Res Mode
	2' demo by Paradox)
	[53c633493ec3]

2017-12-10  Eero Tamminen

	* tools/hatari-tos-register.sh:
	Add note about new binfmt_misc distro facilities
	[1e5b8e1f1402]

2017-12-09  Eero Tamminen

	* src/blitter.c:
	Add register addresses to blitter info output

	Convenience. Easier to use "info blitter" than look up blitter
	register addresses from manual e.g. if one wants to set breakpoints
	on their changes.
	[f06325fa7448]

2017-12-06  Eero Tamminen

	* src/debug/symbols.c:
	Reduce warnings with ASCII symbol file imports

	Those files can contain symbols also for object file names. They
	will normally overlap with other symbol addresses and names, so it's
	not worth warning about all of them.

	That way user is more likely to notice potentially more important
	symbol name/address conflicts.
	[5bedcc09cbd1]

2017-12-05  Nicolas Pomarede

	* src/cpu/debug.h, src/cpu/gencpu.c, src/cpu/newcpu.c,
	src/cpu/newcpu.h, src/cpu/newcpu_common.c, src/cpu/options_cpu.h:
	Cache emulation fixes + Accurate DIV overflow undocumented flags
	(from WinUAE 3.6.0 beta10 04/12/2017)
	[2f4d1922ec44]

2017-12-04  Nicolas Pomarede

	* src/cpu/newcpu.c:
	68030 instr cache was not correctly disabled when writing 0 to EI
	bit of CACR Fix "Audio Sculpture 1.5 beta" when running in TT
	(thanks Troed for the report)
	[8857ab048b57]

	* src/cpu/newcpu.c, src/cpu/newcpu.h, src/m68000.c:
	Data cache for for 68040/68060 was not correctly flushed during
	Gemdos HD emulation, giving wrong directory This could display some
	wrong directory content, with some files appearing several times
	(thanks to V. Riviere for the report)
	[f6e583b67e45]

2017-12-03  Eero Tamminen

	* src/ioMem.c:
	Remove some redundant Falcon register setup code
	[c13196e42cc7]

2017-12-02  Nicolas Pomarede

	* src/includes/sound.h, src/sound.c:
	Improve YM2149 emulation by generating the whole 250000 audio
	samples per sec then downsampling Previous version was only updating
	YM counters at 250 KHz but audio was downsampled 'on the fly' to the
	output freq with a very basic method which could filter too much
	high frequencies, giving a sound slightly too loud.
	[fd9db92e69f3]

2017-12-01  Nicolas Pomarede

	* src/acia.c, src/dmaSnd.c, src/falcon/crossbar.c, src/fdc.c,
	src/ikbd.c, src/includes/cycInt.h, src/includes/m68000.h, src/mfp.c,
	src/midi.c, src/spec512.c, src/video.c:
	Remove old code for timings/cpu freq ratio (no more used since
	Hatari 2.0)
	[6be31ec5ad6d]

	* src/sound.c:
	Move some sound code, no change for emulation
	[b20cd4678e7b]

	* src/debug/profile.c, src/debug/profilecpu.c:
	Use the new CPU_Freq_Emul value to display the CPU freq in the
	debugger
	[baf0781e82e4]

	* src/clocks_timings.c, src/configuration.c,
	src/includes/clocks_timings.h, src/sound.c:
	Improve ClocksTimings_xxx functions by using the new variable
	CPU_Freq_Emul + fix some values for Falcon and TT The new
	CPU_Freq_Emul is now the real emulated value of the CPU freq using
	x2 or x4 cpu speed (while CPU_Freq is just the base freq for the
	emulated machine and remains constant) This also fixes YM sample
	playing for Falcon and TT (as reported by AtariZoll)
	[57242d02d016]

2017-11-29  Nicolas Pomarede

	* src/configuration.c, src/gui-sdl/dlgCpu.c,
	src/includes/configuration.h, src/ioMemTabFalcon.c,
	src/ioMemTabSTE.c, src/m68000.c, src/options.c, src/tos.c:
	Use a common function to handle change of CPU freq and to update
	related variables
	[8fc86b4ca3d7]

2017-11-29  Eero Tamminen

	* doc/thanks.txt:
	Add few missing persons to thanks file
	[fbf9f1789d4b]

2017-11-28  Thomas Huth

	* doc/authors.txt, doc/thanks.txt:
	Move list of people who did not actively contribute code into
	thanks.txt

	The authors.txt file should be for people who wrote a piece of code
	of Hatari. If we want to say "Thanks you" to somebody, that should
	be done in a separate list instead.
	[55bbab9d9ee7]

2017-11-27  Nicolas Pomarede

	* src/cpu/newcpu.c:
	Fix a bug in 68030 data cache when doing non aligned write on odd
	address
	[ae4d7baab631]

2017-11-26  Eero Tamminen

	* tests/tosboot/tos_tester.py:
	TOS tester fix for Hatari's virtual INF file handing improvements
	[5c4eb26eea4b]

	* tests/tosboot/readme.txt:
	Note that TOS tester doesn't work with PortMidi
	[16c49723a9c4]

	* tests/tosboot/tos_tester.py:
	Better test config prinout

	- Tell which memconfig is in question and list also bools
	- Python v2 needs single string
	[2654ab244756]

	* tests/tosboot/tos_tester.py:
	Python v2 vs v3, fix print output

	Python2 didn't print empty line but '()'...
	[a03e8d0b6f10]

	* tools/hconsole/hconsole.py:
	Print which Hatari binary is run by Python code

	Note: this is common code for hconsole, tos_tester and hatariui.
	[33aea1514783]

	* tests/tosboot/readme.txt, tests/tosboot/tos_tester.py:
	Additional --fast options
	[d5cee49e44b3]

	* tests/tosboot/tos_tester.py:
	Remove redundant parenthesis
	[be4a3253d784]

2017-11-22  Nicolas Pomarede

	* doc/compatibility.html:
	Add note about "Vodka Demo" crashing with more than 1MB
	[350dff4609e9]

2017-11-21  Eero Tamminen

	* doc/hatari.1, doc/manual.html, doc/release-notes.txt,
	src/configuration.c, src/gui-sdl/dlgKeyboard.c,
	src/includes/configuration.h, src/shortcut.c:
	Add keyboard shortcut for toggling borders
	[06fe398026a6]

	* doc/compatibility.html:
	Compatibility list updates

	- Replace old Apex Media demo with latest real version (which works
	and others can get)
	- Add Voxx, which doesn't work
	- Update Whirpool & "_" demos info
	[af94c19cc279]

	* doc/hatari.1, doc/manual.html:
	Add missing shortcuts & fix typo

	After this both manual page & manual give same information on
	shortcuts
	[b5c20dca2330]

	* python-ui/hatari.py, python-ui/hatariui.py:
	Use win.get_id() instead of win.xid/handle

	In hopes that this makes embedding work also with Wayland (on
	Ubuntu, issue reported by Vincent).
	[aa313706c31a]

2017-11-19  Eero Tamminen

	* readme.txt:
	readme.txt: Hatari tools and their run-time dependencies
	[6f5bb2fa5270]

2017-11-18  Eero Tamminen

	* doc/release-notes.txt:
	release-notes: new symbol handling features
	[f719e7934adb]

	* src/debug/profile.c:
	Give error when needed loop profiling file name is not given
	[33ee31f303fa]

	* src/debug/profilecpu.c:
	Add missing new line
	[b3e3da5fbc0b]

	* src/debug/debugcpu.c, src/debug/debugdsp.c, src/debug/profile.c,
	src/debug/profile_priv.h, src/debug/profilecpu.c,
	src/debug/profiledsp.c, src/debug/symbols.c, src/debug/symbols.h:
	Add DATA/BSS/ABS symbols back to disassembly / address list

	Other than TEXT symbols were removed from address list in commit
	b58be140330b. They were not needed for profiling (= speedup) and
	address conflicts with other types were not really interesting.

	This commit instead separates TEXT and other symbols in address
	list, and in address query functions take as argument what type to
	search for. If multiple types are queried, search TEXT symbols
	first. This retains speed advantage for profiling that needs just
	TEXT symbols, while non-speed critical disassembly can search all
	types.

	This also allowed symbol address listing to be done separately for
	TEXT and other symbol types, which helps a bit when there are a lot
	of symbols. So, I changed 'addr' subcommand to separate 'code' &
	'data' subcommands for 'symbols', and improved list summary line.

	Function names were changed to better reflect new functionality,
	some common functionality moved to common function and comments
	updated.
	[db3a4af1e25c]

	* src/debug/symbols.c:
	Skip most of symbol warnings with forced symbol loading

	'symbols resident' option forces symbol loading for every program
	(at least at their exit if user doesn't enter debugger earlier), and
	keeping symbols until next program.

	This forced symbol loading can produce a lot more output on the
	console, especially if there are symbol address or name duplicates.
	To avoid that, skip most of these warnings when this option is
	enabled.
	[69c81cd091f6]

2017-11-16  Eero Tamminen

	* src/debug/symbols.c:
	Improve symbol residency handling

	Now it's enough to run "symbols resident" command once, at any time,
	and Hatari makes sure that programs' symbols are automatically
	loaded and persist after their termination until another program is
	loaded.
	[7a7739938f21]

2017-11-15  Eero Tamminen

	* python-ui/uihelpers.py:
	Update Python-UI URL
	[0d33e0e9e248]

	* src/debug/symbols.c:
	Support for resident program symbol loading

	I.e. symbols are loaded from currently running program, but not
	freed when it exits.
	[3bc9dc511e25]

	* src/debug/profilecpu.c, src/debug/profiledsp.c, src/debug/symbols.c,
	src/debug/symbols.h:
	Remove other than TEXT symbols from address matching & 'symbols
	addr'

	Assumption is that all symbols for anything that may be executed,
	are marked as being of TEXT (code) type.

	This change limits symbol address indexing only to TEXT symbols.
	This can speed profiling slightly (as profiling does binary search
	for symbol addresses on every instruction, to see whether PC matches
	a symbol, i.e. something that user is interested about).

	Side-effect is that if one disassembles DATA or BSS sections, one
	doesn't anymore see symbols for those, only for TEXT section.

	Additionally this commit removes symbols that are complete
	duplicates (I've seen such things at least with GCC v2 for absolute
	symbols).

	Both of above get rid of some previously generated symbol warnings
	that can happen.

	Note that name index still contains all symbols, that's used for
	TAB-completion and symbol replacement (not for disassembly).
	[b58be140330b]

2017-11-14  Eero Tamminen

	* python-ui/README:
	Update URL
	[d80dbb1096ec]

	* src/debug/symbols.c:
	Tell why/where duplicate symbols could be an issue
	[7daf49ad4a56]

2017-11-13  Eero Tamminen

	* src/debug/symbols.c:
	'symbols' without arg, lists symbols instead of help

	As requested by Nicolas & Simon, default to "symbols name" when
	giving just "symbols" command.
	[e2d0dfa775f2]

	* src/cpu/newcpu.c:
	Fix exceptions debugging

	According to Nicolas, this was broken in WinUAE update
	[6113c184a5e2]

	* src/debug/symbols.c, tools/debugger/gst2ascii.c:
	Ignore *.a symbols in addition to *.o
	[4816337fa53e]

	* src/debug/symbols.c:
	Prevent accidental loading of e.g. binary files as symbols

	User would get huge number warnings, but may still get some
	"symbols". Just abort when things don't look right.
	[e644c954793e]

	* doc/release-notes.txt, src/configuration.c, src/debug/symbols.c,
	src/includes/configuration.h:
	Add nSymbolLines configuration option

	For configuring how many lines to page for 'symbols' command.
	Similar to nDisasmLines & nMemdumpLines options.
	[9b7ccf5bd8a6]

	* src/debug/symbols.c, tools/debugger/gst2ascii.c:
	Remove support for obsolete VBCC/vlink pre-release

	Not sure whether this issue was in any of vlink releases, or just in
	the private pre-release I got. It may also have been bug in Hatari's
	program symbol table type recognization as nowadays my older VBCC
	built programs seem to be recognized as a.out.

	Improved also few messages show to user.
	[c3e9cdaaeadf]

	* doc/release-notes.txt, src/debug/debugInfo.c, src/debug/symbols.c,
	tools/debugger/gst2ascii.1, tools/debugger/gst2ascii.c:
	Improve debug symbol section handling

	- According to Atari documentation, TEXT, DATA and BSS sections are
	consecutive, verify that this is the case in symbol loading
	- Accept symbols that are just past end of their corresponding
	section. This is common practice for marking the end of section
	- Change also debugger virtual TEXTEnd variable to conform with this
	- All symbols output by gst2ascii tool are now TEXT relative as
	suggested by Thorsten Otto. This makes loading them in debugger
	easier as one needs to provide just one section offset
	- Fix DRI/GST workaround for (incorrect?) TEXT relative symbol table
	to use correct section ends for its checks
	- Update documentation accordingly
	[3b04f2315fed]

2017-11-12  Eero Tamminen

	* src/debug/symbols.c, tools/debugger/gst2ascii.c:
	Remove debug line + update copyrights
	[2752b6aad124]

	* tools/debugger/hatari_profile.py:
	Improve profiler tool help
	[2ed58ba379cf]

2017-11-12  Thomas Huth

	* src/midi.c:
	Silence compiler warning about unused Midi_Host_SwitchPort()
	[22a4ac6a8c2f]

2017-11-11  Laurent Sallafranque

	* src/falcon/videl.c, src/falcon/videl.h, src/ioMemTabFalcon.c:
	fix: videl $ff820e unused bits are read as zero
	[eb2f2da07e8d]

2017-11-11  Eero Tamminen

	* doc/authors.txt, doc/release-notes.txt, tools/debugger/gst2ascii.1:
	Update documentation
	[4d934a925044]

	* src/debug/symbols.c, tools/debugger/gst2ascii.c:
	Improve symbol warnings and help output

	- Don't show address warnings for non-addresses (absolute symbols)
	- Make help up to date (add ABS ignore option help) + fix typos
	- Have options in same order in struct, help & option parsing
	[8dbdcacb59b2]

2017-11-10  Eero Tamminen

	* src/debug/symbols.c, tools/debugger/gst2ascii.c:
	Remove redundant code

	Malloc returns suitable aligned allocations, and converted 16- and
	32-bit values are at suitable alignments, so SDL macros can be used
	just with casting, with no extra macros.
	[154c8d8ec3a9]

	* src/debug/symbols.c, tools/debugger/gst2ascii.c:
	Improvements to symbol ignoring

	- Refactor internal GCC symbol / object / file name handling to a
	separate function. Improves that for parts that were missing the GCC
	symbols part
	- Provide statistics also for ignored invalid & weak symbols
	- Provide statistics about symbol types ignored because they didn't
	match requested types where that was missing
	- Count ignored N_FN symbols as debug instead of file/object ones, to
	avoid confusing user with statistics about ignored file/object
	symbols when he didn't select them to be ignored
	- Some code changes to make code between debugger & gst2ascii too DRI
	& a.out symbol handling more consistent (eases future refactorings)
	[f9db7ae4e2db]

	* src/debug/symbols.c, tools/debugger/gst2ascii.c:
	Symbols: update comments, fix typos, replace magic values with
	defines
	[9a7a29c8496c]

2017-11-10  Nicolas Pomarede

	* src/cpu/sysdeps.h:
	Don't redefine bswap_16/_32 macros if they already exist (fix
	compilation under recent SUSE Linux distrib)
	[fb6115fb37c1]

	* src/ikbd.c:
	During IKBD reset also stop custom mode if a memory load command was
	still running
	[e6f5944dde14]

2017-11-08  Thorsten Otto

	* tools/debugger/gst2ascii.c:
	Support loading GNU-style symbols for gst2ascii tool
	[be99b84a46b3]

2017-11-06  Thorsten Otto

	* src/debug/a.out.h, src/debug/symbols.c:
	Support loading GNU-style symbols for debugger
	[e1208b60c552]

2017-11-09  Eero Tamminen

	* src/configuration.c, src/debug/debug_priv.h, src/debug/debugcpu.c,
	src/debug/debugdsp.c, src/debug/debugui.c, src/debug/debugui.h,
	src/debug/profilecpu.c, src/debug/profiledsp.c, src/debug/symbols.c:
	Use terminal size for paging on rest of debugger commands

	Partly based on patch by Thorsten Otto:
	- if config values are negative, terminal size is used for determining
	paging lines instead of config values
	- supports both normal & profiler disassembly, both for DSP & CPU (in
	addition to earlier symbols listings)
	- changes default config variables to negative value

	Additional changes to Thorsten's code:
	- Split determining the correct number of lines to page, into a
	separate helper function
	- Fixes: take extra output (symbols etc) into account when counting
	how many lines to output
	[8f362edccc7f]

2017-11-08  Nicolas Pomarede

	* hatari.spec:
	Add portmidi-devel to the rpm spec, as it was reported to improve
	MIDI under Linux too, not just Windows/OSX
	[2adedcb27786]

	* src/floppy_ipf.c:
	Fix compilation when CapsLib/IPF is not available
	[7e7762c37cec]

2017-11-07  Thorsten Otto

	* src/debug/symbols.c:
	Check for duplicate symbols after sorting, to avoid reporting the
	same symbol several times
	[5bb370731f22]

	* src/debug/debugui.c, src/debug/debugui.h, src/debug/symbols.c:
	Use terminal lines to determine number of symbols to display
	[55c2b5731f28]

2017-11-06  Nicolas Pomarede

	* src/floppy_ipf.c:
	For CapsLib/IPF, load all raw tracks when floppy image is made of KF
	raw stream files for each track (not enabled for now) When a KF raw
	stream file is opened, we try to load all the raw tracks for both
	sides, based on the name of the raw file that was inserted first. As
	of capslib 5.1, processing raw stream tracks is not handled yet, so
	these changed are disabled for now until a new version of the
	library is released
	[6265858dbf86]

2017-11-05  Eero Tamminen

	* doc/authors.txt, doc/hatari.1, doc/manual.html, doc/release-
	notes.txt, readme.txt:
	Documentation changes for PortMidi support
	[4c83b2af0915]

	* src/gui-osx/PrefsController.h, src/gui-osx/PrefsController.m, src
	/gui-osx/en.lproj/SDLMain.xib:
	PortMidi support for OSX GUI from Jari Kleimola

	Note: this is Jari's original code, it doesn't include changes for
	the fixes I made for the SDL GUI. Somebody with OSX should test &
	update it
	[563ef7e4c03c]

	* CMakeLists.txt, cmake/FindPortMidi.cmake, cmake/config-cmake.h,
	src/CMakeLists.txt:
	CMake support for finding/enabling PortMidi
	[2c97c7094f52]

	* src/gui-sdl/dlgDevice.c:
	PortMidi support for SDL GUI from Jari Kleimola

	With few fixes from Eero:
	- Building when portmidi is disabled
	- Errors in MIDI toggling / re-initialization & error handling
	- Build warnings

	Main difference from Jari's code is that MIDI devices list needs to
	be always initialized, otherwise user isn't able to see any MIDI
	devices if MIDI was enabled only at run-time.
	[ac8c7a346eef]

	* src/change.c, src/configuration.c, src/includes/configuration.h,
	src/includes/midi.h, src/midi.c, src/options.c:
	Optional PortMidi library support from Jari Kleimola

	With few fixes + command line option from Eero.
	[afff80a3f74c]

2017-11-05  Nicolas Pomarede

	* src/configuration.c, src/cpu/memory.c:
	Update ST RAM banks' size when changing total RAM size in the UI RAM
	banks' size were only computed on the first start but not on next
	reboot
	[ef84527c714b]

2017-11-02  Nicolas Pomarede

	* src/cpu/newcpu.c, src/cpu/options_cpu.h, src/cpu/winuae_readme.txt:
	Update to the latest WinUAE's sources : avoid useless write in 68020
	cache (from WinUAE 3.6.0 beta7 29/10/2017)
	[39aa33e9673e]

2017-10-30  Nicolas Pomarede

	* src/video.c:
	Fix Timer B counting when screen is in Mono mode and video
	resolution is set to low/medium (fix 'Audio Sculpture' which
	temporarily switches to low res and uses timer B even when started
	in Mono mode)
	[5a85763a2704]

	* src/ikbd.c:
	Add support for Audio Sculpture's custom IKBD program (patch by
	Troed/Sync) Audio Sculpture uses a custom IKBD program which returns
	2 bytes that will be used to decrypt the main 68000 program
	[d2d0d7cfb3c9]

	* src/cpu/gencpu.c, src/cpu/newcpu.c:
	Fix a rare case on 68000 where STOP triggers a privilege exception
	and stack PC+4 if new SR has bit S=0 For example 'STOP #$555' will
	trigger a privilege violation exception on 68000 CPU and stacked PC
	will point after the STOP instruction. The behaviour is different on
	68000, 68020/030 and 68040/060 (more generic patch by Toni Wilen)
	Although this is not documented anymore in recent Motorola's doc, it
	seems it was described in very early 68000 documentations (used in
	Audio Sculpture's protection)
	[55d3e6212fc5]

2017-10-10  Nicolas Pomarede

	* src/cpu/debug.c, src/cpu/debug.h, src/cpu/fpp.c,
	src/cpu/fpp_native.c, src/cpu/newcpu.c, src/cpu/newcpu.h,
	src/cpu/options_cpu.h, src/cpu/winuae_readme.txt:
	Update to the latest WinUAE's sources, no real change for Hatari
	(from WinUAE 3.6.0 beta5 30/09/2017)
	- Disassembler data cache check
	- Switch temporarily to default host FPU mode when calling C-library
	trigonometric functions
	[02b0e5083c65]

	* cmake/FindSDL2.cmake:
	Also look into SDL2/ when looking for SDL2's include directory
	(needed when crosscompiling with mingw32)
	[0369859de42a]

2017-10-01  Thomas Huth

	* src/ioMemTabFalcon.c, src/ioMemTabSTE.c:
	Only change frequency automatically if the user did not request a
	faster one
	[3f4adb62da35]

	* src/cpu/memory.c, src/cpu/newcpu.c, src/resolution.c,
	src/stMemory.c, src/video.c:
	Use Log_Printf instead of fprintf where it is appropriate
	[d9de7b89f2f8]

2017-09-24  Thomas Huth

	* CMakeLists.txt, src/cpu/CMakeLists.txt, src/gui-sdl/CMakeLists.txt:
	Enable compiler warnings also with Clang
	[b3f9141eda8e]

	* src/debug/breakcond.c:
	Remove unused function is_register_type()
	[5de085e03174]

2017-09-09  Thomas Huth

	* src/cpu/memory.c:
	Silence GCC warning about unused variable
	[2c3f77969703]

	* src/cpu/CMakeLists.txt:
	Set the relaxing CPUMAIN_CFLAGS for all files we sync with WinUAE
	[b58495bea368]

	* src/cpu/compat.h, src/cpu/sysdeps.h, src/cpu/writelog.c:
	Fix problem with first parameter of f_out() being NULL

	Recent versions of GCC complain that f_out() and thus fprintf is
	called with the first parameter being zero. And indeed the WinUAE
	code expects to be able to do this, e.g. when ShowEA() is called
	with 0 as first parameter. Thus let's turn f_out() into a real
	function that checks the first parameter, just like its pendant is
	doing it.
	[4b2b0f4c6c86]

	* src/tos.c:
	TOS 1.06 and 1.62 only know about plain STEs, so do not allow Mega
	STE here
	[d49527870fb7]

	* CMakeLists.txt, src/cpu/CMakeLists.txt, src/uae-cpu/CMakeLists.txt:
	Get rid of the old CMP0026 CMake policy behavior.

	Recent versions of CMake (v3.9) started complaining that the old
	CMP0026 behavior is deprecated and will be removed in a future
	version. Thus let's fix the CMakeFiles that use the LOCATION
	property and bump the minimum required version of CMake to 2.8.8.
	[820dbb0ad7c7]

2017-09-07  Nicolas Pomarede

	* src/cpu/newcpu.c, src/cpu/winuae_readme.txt:
	Log FPU emulation mode + fix delayed prefetch mode MMU bus error
	(from WinUAE 3.6.0 beta3+ 05/09/2017)
	[d0b10947aafd]

	* src/avi_record.c:
	Fix timer in the window's title when recording more than 1 hour of
	AVI
	[3e39fe24d7d7]

2017-08-30  Nicolas Pomarede

	* src/cpu/cpummu.c:
	Fix typo in WinUAE's cpummu.c
	[1d1022aedefa]

2017-08-29  Nicolas Pomarede

	* src/avi_record.c:
	Small cleaning in avi record
	[3a5389b1e8bf]

2017-08-28  Nicolas Pomarede

	* src/avi_record.c:
	Add support for AVI files > 4GB (up to 256 GB) using the Open DML
	AVI extension specifications Each AVI file is now divided in chunks
	of 1 GB, each chunk has its own indexes for video and audio, then
	all the indexes are referenced in 2 super indexes in the main AVI
	header
	[864043c2a2db]

	* src/cpu/debug.c, src/cpu/debug.h, src/cpu/newcpu.c,
	src/cpu/newcpu.h, src/cpu/newcpu_common.c, src/cpu/readcpu.c,
	src/cpu/readcpu.h, src/cpu/sysconfig.h, src/cpu/winuae_readme.txt:
	Update to latest WinUAE 3.6.0 beta3 (from 27/08/2017) + allow
	compiling if DEBUGGER=1
	[3a6b98ead597]

2017-08-21  Nicolas Pomarede

	* src/cpu/hatari-glue.c, src/m68000.c, src/statusbar.c:
	Only 68040/60 can have 'internal' FPU, else set it to 'none' +
	update statusbar
	[81aaf8eb0e3c]

2017-08-19  Nicolas Pomarede

	* src/cpu/hatari-glue.c, src/cpu/newcpu.c, src/m68000.c:
	Fix --fpu_softfloat, it was only used at start, but forced to false
	when changing CPU prefs
	[d655210d3d13]

2017-08-18  Nicolas Pomarede

	* src/cpu/cpu_prefetch.h, src/cpu/cpummu.c, src/cpu/cpummu.h,
	src/cpu/cpummu030.c, src/cpu/cpummu030.h, src/cpu/debug.c,
	src/cpu/fpp.c, src/cpu/gencpu.c, src/cpu/jit/codegen_x86.h,
	src/cpu/jit/compemu_fpp.c, src/cpu/jit/compemu_support.c,
	src/cpu/jit/compemu_support_codegen.c, src/cpu/memory.h,
	src/cpu/newcpu.c, src/cpu/newcpu.h, src/cpu/options_cpu.h,
	src/cpu/winuae_readme.txt, src/m68000.c:
	Add 68040/60 data cache emulation, with optional MMU support (from
	WinUAE 3.6.0 beta2+ 17/08/2017)
	[f91c64504a64]

2017-08-16  Nicolas Pomarede

	* src/cpu/newcpu.c:
	Update m68k_run_mmu030 to match WinUAE's latest sources
	[37273e5db9e0]

2017-08-18  Eero Tamminen

	* doc/compatibility.html, doc/release-notes.txt:
	Jam-Cols works again, update docs
	[533f109a4ea9]

2017-08-16  Nicolas Pomarede

	* src/video.c:
	Fix regression in VBL / Video counter offset on STE (typo in Hatari
	2.0) Fix 'Jam-Cols' demo by ICE
	[2eb5b110c4dd]

2017-08-15  Nicolas Pomarede

	* doc/compatibility.html:
	Update fixed demo
	[e843b73bc7e6]

2017-08-14  Eero Tamminen

	* doc/compatibility.html:
	Fix table
	[60235c332cd5]

	* doc/authors.txt, doc/compatibility.html, doc/release-notes.txt:
	Update docs for FPU changes
	[ef90c00c5010]

2017-08-13  Eero Tamminen

	* src/video.c:
	Fix compiler warning
	[b46dcdd3f2bd]

2017-08-13  Nicolas Pomarede

	* src/statusbar.c:
	Remove comment
	[f5ebf1e5fc47]

	* src/blitter.c, src/includes/blitter.h, src/statusbar.c, src/video.c:
	Add a 'blitter-meter' to the status bar, depending on the blitter's
	usage
	[d3b661344f76]

2017-08-12  Thomas Huth

	* src/debug/68kDisass.c, src/gemdos.c, src/gui-sdl/dlgMemory.c:
	Silence the new sprintf-related compiler warnings from GCC 7.1
	[ccc4d1578730]

	* src/sound.c:
	Silence compiler warning about unused function YM2149_NextSample
	[369556c7df6e]

2017-08-11  Nicolas Pomarede

	* src/cpu/fpp.c, src/cpu/softfloat/softfloat.c,
	src/cpu/winuae_readme.txt:
	Added 68881/68882 FMOVECR undefined ROM offsets + FMOVECR cleanup
	(from WinUAE 3.5.1 beta 10/08/2017)
	[c3168efbbf81]

	* src/blitter.c:
	In blitter, don't clear hog bit when writing busy bit=0
	[b87cbadc433d]

	* doc/authors.txt, src/blitter.c:
	Update memory snapshot for blitter + reorder some code + add
	detailled notes on blitter's work
	[d3dc1dbf74aa]

	* src/blitter.c:
	If blitter's busy bit is forced to 0, we must update the interrupt
	line too
	[aea147995b21]

2017-08-10  Nicolas Pomarede

	* src/blitter.c:
	Correctly resume the blitter in non-hog mode if the CPU force an
	immediate restart by setting the busy bit
	[4d07fca22c8b]

	* src/cpu/custom.c, src/cpu/newcpu.c:
	Don't check for blitter anymore in do_cycles_ce(), only in
	do_cycles_ce_hatari_blitter()
	[25492f5cddb5]

2017-08-09  Nicolas Pomarede

	* src/blitter.c:
	Ensure blitter.c still compiles with old cpu core
	[b910af304e1f]

	* src/blitter.c, src/cpu/custom.c, src/cpu/events.h, src/cpu/newcpu.c,
	src/cpu/newcpu.h, src/includes/blitter.h, src/includes/m68000.h,
	src/m68000.c:
	Optimize the cpu emulation to limit overhead when blitter is idle in
	68000 CE mode
	[41cce10aa518]

2017-08-08  Nicolas Pomarede

	* src/blitter.c:
	Improve running CPU in parallel to the blitter when blitter used
	less cycles than the current instruction
	[239b6ee76afc]

2017-08-07  Nicolas Pomarede

	* src/blitter.c:
	In non-hog mode, blitter can be suspended/resumed after every bus
	access, not just after writing the result As verified on real STE,
	this means the state of the blitter must be kept to allow suspending
	and resuming after any read access (if a total of 64 bus accesses
	were made), not just after the write (as it was the case in previous
	Hatari version)
	[0d8b3ccf3980]

2017-08-04  Nicolas Pomarede

	* src/blitter.c, src/cpu/custom.c, src/cpu/events.h, src/cpu/newcpu.c,
	src/includes/blitter.h, src/spec512.c:
	Add cycle exact bus handling for the blitter : handle hog/non hog
	mode + executingi CPU instruction in parallel (work in progress)
	- In non hog mode, correctly run the CPU during 64 memory accesses and
	the blitter during 64 (or 63) memory accesses
	- If an instruction starts just after the blitter, it can run in
	parallel to the blitter (until the next bus access by the cpu). With
	the correct instructions combination, it can allow the CPU to run
	for example most of a DIV while the blitter uses the bus at the same
	time to transfer data
	[49098e58c429]

2017-08-06  Thomas Huth

	* doc/manual.html:
	Mention Mega-STE in features section and mark TT emulation as
	incomplete
	[24ffa09a48a6]

2017-08-03  Nicolas Pomarede

	* src/cpu/newcpu.c:
	Fix wrong cycles counting when using 68030+MMU with cycle exact mode
	[5702299a8e74]

2017-08-03  Eero Tamminen

	* doc/compatibility.html:
	Beams needs >=8MB
	[707a13967616]

2017-08-02  Nicolas Pomarede

	* src/cpu/CMakeLists.txt, src/cpu/cpummu.c, src/cpu/cpummu.h,
	src/cpu/cpummu030.c, src/cpu/gencpu.c, src/cpu/newcpu.c,
	src/cpu/newcpu.h, src/cpu/sysconfig.h, src/cpu/winuae_readme.txt:
	Add new cpu mode 68030+MMU+caches+cycle exact + 68040 MMU cache
	inhibit and full invalidation/flushing + 68030 locked RMW TTR (from
	WinUAE 3.5.1 beta 01/08/2017)
	[b4dcb3e73bf1]

2017-07-31  Nicolas Pomarede

	* src/cpu/newcpu.c:
	Fix C99/C11 syntax for older compilers
	[682757d00485]

2017-07-30  Nicolas Pomarede

	* src/cpu/cpummu.h, src/cpu/cpummu030.c, src/cpu/cpummu030.h,
	src/cpu/memory.c, src/cpu/memory.h, src/cpu/newcpu.c,
	src/cpu/newcpu.h, src/cpu/winuae_readme.txt:
	Improve 68030 MMU cache enable/inhibit + add instr cache for
	68040/60 MMU mode (from WinUAE 3.5.1 beta 27/07/2017)
	[2d000c2e5201]

2017-07-28  Nicolas Pomarede

	* src/cpu/CMakeLists.txt, src/cpu/cpu_prefetch.h, src/cpu/cpummu030.c,
	src/cpu/cpummu030.h, src/cpu/gencpu.c, src/cpu/newcpu.c,
	src/cpu/newcpu.h, src/cpu/sysconfig.h:
	Add support for prefetch + instr/data caches for 68030 in MMU mode
	(from WinUAE 3.5.1 beta 27/07/2017) To use this, choose CPU=68030,
	MMU=on and select "prefetch mode" or "cycle exact"
	[ffe781ebfc65]

2017-07-23  Nicolas Pomarede

	* src/cpu/fpp.c, src/cpu/winuae_readme.txt:
	More updates for 68040/60 without FPU (from WinUAE 3.5.1 beta
	22/07/2017)
	[ad1858dbb6ec]

2017-07-23  Thomas Huth

	* src/screen.c:
	Load hatari-icon.bmp after Screen_ChangeResolution() otherwise
	sdlWindow is NULL and SDL_SetWindowIcon() just fails.
	[3317d0003576]

2017-07-22  Nicolas Pomarede

	* src/includes/video.h:
	Fix correct number of displayed lines when removing bottom border As
	reported in several demos, 2 extra lines were displayed at 50 Hz
	which often showed "garbage" pixels
	[204fb1d41c1b]

2017-07-21  Nicolas Pomarede

	* src/cpu/compat.h, src/cpu/cpummu.c, src/cpu/cpummu.h,
	src/cpu/cpummu030.c, src/cpu/cpummu030.h, src/cpu/custom.c,
	src/cpu/debug.c, src/cpu/fpp.h, src/cpu/newcpu.c, src/cpu/newcpu.h,
	src/cpu/options_cpu.h, src/cpu/winuae_readme.txt:
	MMU updates : internal cache, opcodes validation from WinUAE 3.5.1
	beta 19/07/2017)
	- support data cache in 68030 MMU mode
	- add internal caching for MMU translations (faster emulation)
	- better validation of 68030 MMU instructions
	[096515b00451]

2017-07-19  Nicolas Pomarede

	* src/cpu/fpp.c:
	Missing 68040/060 no FPU check (from WinUAE 3.5.1 beta 19/07/2017)
	[f8313dfdde1e]

2017-07-17  Nicolas Pomarede

	* src/cpu/fpp.c:
	68040+ support unnormal zeros in hardware part 2 (from WinUAE 3.5.1
	beta 02/07/2017)
	[ac09387b381f]

	* src/cpu/newcpu.h:
	68030 memory cycle exact only mode data cache bug fix for bsr/rts
	(from WinUAE 3.5.1 beta 21/06/2017)
	[4aac92d2105e]

	* src/cpu/softfloat/softfloat-specialize.h:
	68040+ support unnormal zeros in hardware (from WinUAE 3.5.1 beta
	2/7/2017)
	[81ceb9d3061c]

2017-07-20  Eero Tamminen

	* src/gemdos.c, src/tos.c:
	Fix INF file handling in regards to GEMDOS reset

	INF file (TOS version specific) path is currently determined right
	after TOS ROM loading. INF file presence check relies on GEMDOS, and
	for that to use correct path after reset, GEMDOS reset needs to
	happen before INF file check.

	However, GEMDOS is reseted after TOS ROM has been loaded. To fix
	this, move INF file override handling to happen after GEMDOS reset.
	That is called even if GEMDOS HD emulation isn't enabled, so it
	works also for other disk types.
	[337df6900460]

2017-07-17  Nicolas Pomarede

	* src/CMakeLists.txt:
	Search for local headers first, then system's one (patch by Frederic
	Cambus) This fix a case where zip.h was picked from libzip's headers
	instead of using src/include/zip.h
	[5cfcf542f273]

2017-07-13  Eero Tamminen

	* src/inffile.c:
	Allocate space also for string terminating zero

	Otherwise strcpy() at end of function crashes. Reported by Uwe
	Seimet.
	[7af354da1f2a]

2017-06-30  Nicolas Pomarede

	* src/gui-osx/PrefsController.h, src/gui-osx/PrefsController.m, src
	/gui-osx/en.lproj/SDLMain.xib, src/gui-osx/fr.lproj/SDLMain.xib:
	Add a button to allow resizing of the main window in OSX UI (patch
	by Miguel Saro)
	[b530db3741c3]

2017-06-20  Eero Tamminen

	* doc/emutos.txt:
	More detailed line-A usage info
	[f1c3f40e7e88]

2017-06-18  Eero Tamminen

	* doc/release-notes.txt:
	Update release notes

	- Note new --resizable option
	- Move rest of emulator updates under subheadings
	[7dd5280f5b55]

	* doc/hatari.1, doc/manual.html, src/change.c, src/configuration.c,
	src/gui-sdl/dlgScreen.c, src/includes/configuration.h,
	src/options.c, src/screen.c:
	Add option for toggling SDL2 window resizing support

	New command line, config file and SDL GUI option.

	Required forcing SDL window recreation when mode changed.
	[44e441bb3882]

2017-06-17  Nicolas Pomarede

	* doc/authors.txt, src/gui-osx/Info-Hatari.plist, src/gui-
	osx/SDLMain.m, src/gui-osx/en.lproj/SDLMain.xib, src/gui-
	osx/fr.lproj/SDLMain.xib:
	Enable FPU radio buttons in OSX UI (patch by Miguel Saro)
	[2688e293f05a]

2017-06-17  Eero Tamminen

	* src/inffile.c:
	Hide bogus GCC 4.x/5.x -O3 compile warning
	[7064865acfdf]

2017-06-16  Nicolas Pomarede

	* src/audio.c, src/includes/sound.h, src/sound.c:
	New cycle exact emulation method of the YM2149, all counters are
	incremented using a simulated freq of 250 kHz Some undocumented
	cases where also measured on real STF to improve accuracy (this
	should improve a few rare specific cases, such as tone phases
	cancelling)
	[9471a77fcaf8]

	* src/cpu/winuae_readme.txt, src/floppy_ipf.c:
	Typos
	[64af0d0beefd]

	* src/cpu/cpummu030.c, src/cpu/cpummu030.h, src/cpu/debug.c,
	src/cpu/fpp.c, src/cpu/fpp_native.c, src/cpu/fpp_softfloat.c,
	src/cpu/newcpu.c, src/cpu/options_cpu.h, src/cpu/softfloat
	/softfloat-specialize.h, src/cpu/winuae_readme.txt:
	Update WinUAE cpu core from 3.4.1 b7 to 3.5.0
	 - softfloat cleanup
	 - RTE emulation was not fully model specific (with or without MMU)
	 - MMU on the fly switching (not used yet in Hatari)
	 - PLPA fake MMU emulation (same as 68040 PTEST)
	[ab2c15dc95d3]

2017-06-13  Nicolas Pomarede

	* src/cpu/gencpu.c:
	Fix rare possible wrong order in 'MOVEP M->R' depending on the
	compiler' optimisations (patch by Toni Wilen)
	[8a5e30eb9796]

2017-06-07  Eero Tamminen

	* src/inffile.c:
	Add defines for TOS resolutions

	As requested by Nicolas + additional comments and "resolution" ->
	"TOS resolution" clarification for messages.
	[275d888beeb6]

2017-06-06  Eero Tamminen

	* doc/release-notes.txt:
	Update release notes
	[ed5eeef80755]

2017-06-05  Eero Tamminen

	* src/inffile.c:
	Open window for boot drive, if one exists

	This is both a fix and new feature. Earlier builtin INF file
	contents asked TOS to open window for C: whether it existed or not.
	Now it opens it for boot drive, or none if there's no drive.

	Doesn't work for EmuTOS because it reads that partcular info from
	INF file only on second open, not first one like real TOS (virtual
	INF file disappears after being read once).
	[4f7eea139719]

	* src/inffile.c:
	Fix: remove #Z place holder

	Should have been removed when adding support for setting resolution
	without autostarting. When left as-is to virtual INF file, it messes
	what TOS will save to INF file when user saves desktop.
	[904c80e9fe98]

	* src/inffile.c:
	Rename also TosAutoStart -> TosOverride
	[f22f06401d66]

	* src/cart.c, src/gemdos.c, src/includes/inffile.h, src/inffile.c,
	src/options.c, src/tos.c, src/vdi.c:
	Better inffile.c function names

	Rename inffile.c functions to something more appropriate now that
	they aren't just about autostarting. Update also comments and some
	debug outputs & comments accordingly.
	[62279cd3ba93]

	* doc/hatari.1, doc/manual.html, src/inffile.c, src/options.c:
	Add low/med/high/ttlow/ttmed as --tos-res values

	And document the option.
	[4f9a42a04344]

	* src/includes/inffile.h, src/inffile.c, src/vdi.c:
	Replace vdi.c INF file overwrite with new INF handling

	Now that INF file override takes care also of resolution setting
	without autostarting, it can be used also to replace current vdi.c
	INF file overwriting code.

	Additional INF file handling features:
	- Not bound just to GEMDOS HD C: drive
	- INF file resolution mapping also for EmuTOS
	- Overriding doesn't anymore mean overwriting user's INF file, as it
	uses a "virtual" INF file for that
	[d17e95d30b51]

2017-06-04  Eero Tamminen

	* src/inffile.c, src/options.c:
	Support resolution setting without autostarting

	Besides the extra checks, required generalizing all the messages.
	--tos-res option could now also be moved to general display options
	section.
	[637849ef00d2]

	* src/inffile.c:
	Add EmuTOS ST/STE/TT resolution setting support

	EmuTOS resolution setting has different values, and in different
	place in #E line. So user setting needs to persist, but the INF file
	value needs to be mapped and written to a different place.
	[e78b4ac102bd]

	* src/inffile.c:
	Add TT mono res check
	[aee0081e301b]

	* src/inffile.c:
	Non-functional code moves

	- Move resolution comment details to validation function
	- Move TT case to more logical place in switch
	[4b2c19be1d05]

2017-06-03  Thomas Huth

	* doc/fr/clavier-exemple.txt:
	Use numeric values for comma and semicolon
	[665ddf3e3d81]

	* doc/fr/clavier-exemple.txt:
	New French keyboard mapping that should also work with SDL2. Thanks
	to Miguel for the file!
	[5d0b79230590]

2017-06-03  Eero Tamminen

	* src/inffile.c:
	Update default INF file contents

	For normal TOS version, this mainly added white space that seems to
	be "significant" for TOS to be able to write well formed INF file
	back to disk after doing autostart with one.

	EmuTOS INF file content is updated from <= 0.9.6 format to >= 0.9.7
	EmuTOS INF file format. With this change ETOS_OWN_INF option didn't
	have any sense so corresponding code was remove.

	TODO: handle current EmuTOS #E resolution setting (it's moved to 4th
	hex value from 2nd hex value used by all other TOS versions).
	[3f5ae4741bb0]

	* src/inffile.c:
	Fix INF file blitter setting handling
	[21c168a78bdc]

	* src/inffile.c:
	Fix autostart with existing, old EMUDESK.INF file

	(Which has #E line before #Z line)

	Also fine-tune/improve debug message.
	[40fcf561003a]

2017-06-02  Eero Tamminen

	* src/inffile.c:
	Autostart support for re-using existing INF file

	If there's on-disk INF file, create virtual modified version of that
	instead of the builtin INF file.

	Next step: make INF file resolution setting independent from
	autostarting, and use that even if user just selects VDI mode.
	Finally after that the vdi.c INF file mangling can be removed.
	[18a1e7422b4e]

	* src/gemdos.c:
	Initialize current paths when GEMDOS drives are initialized

	Will be needed by autostarting pre-existing INF file check.
	[1d61b101699b]

2017-06-01  Eero Tamminen

	* src/includes/inffile.h, src/inffile.c, src/main.c, src/tos.c:
	Better exit after --tos-res validation

	Returning error to TOS startup was bad idea. Revert part of previous
	patch and just make sure Hatari exits on resolution mismatch without
	user interaction.
	[3e257175c9c3]

2017-05-31  Eero Tamminen

	* src/inffile.c:
	Add VDI resolution support to autostart
	[c83d30d022db]

	* src/includes/inffile.h, src/includes/options.h, src/inffile.c,
	src/options.c, src/tos.c:
	Improve resolution option handling

	- Move checks to be done after TOS loading as machine type cannot be
	assured before that
	- If there's only single correct resolution for given monitor, warn
	and use that instead of erroring out
	- Warn about Falcon & EmuTOS not being properly supported yet
	- List in option help the actual supported resolution values

	(Erroring out after TOS loading needs more work.)
	[7a5b13a60ac0]

2017-05-23  Eero Tamminen

	* src/includes/inffile.h, src/inffile.c, src/options.c:
	Support for setting autostart resolution + validation

	Works for ST/STE/TT TOS versions.

	Falcon / TOS v4 support may require setting extra things on the INF
	file #E line as it doesn't work with current code.

	EmuTOS doesn't work either, maybe it uses other resolution values.
	[0db6f1472a3b]

	* src/inffile.c:
	Revert accidental debug settings
	[d12c81439fc8]

	* src/inffile.c:
	Improve Autostart INF file parsing

	This will now parse both autostart and resolution lines from the in-
	memory INF file, in a way that can be easily later switched to on-
	disk INF files. This is in preparation for joining VDI resolution
	code and adding user overridable resolution settings.

	Also, different TOS autostart IDs are now used for VT52 (TOS/TTP)
	and GEM applications.
	[c5a3357f3db1]

	* src/inffile.c:
	Add padding to INF file #d line

	According to ATARI TOS DESKTOP SURVIVAL KIT it's relevant for some
	TOS versions parsing of the INF file, and it missing can result in
	weird errors.

	Note: some of the later lines are still missing trailing space that
	TOS 1.04 has.
	[7bcfe2b88980]

	* src/gemdos.c, src/inffile.c:
	More debug output for autostarting + formatting fixes

	- Output errno string on errors
	- Defines for leaving INF file behind after use and using real TOS INF
	file also for EmuTOS
	- Formatting fixes for INF_AutoStartCreate()
	[ce6f0062a5a2]

	* src/cart.c, src/gemdos.c, src/includes/inffile.h, src/inffile.c,
	src/options.c, src/tos.c:
	Rename autostart functions TOS_* -> INF_*

	Now that code is in separate file from tos.c, it needed its own
	prefix.

	And some additional function name improvements for consistency:
	* TOS_AutoStartInvalidDrive -> INF_AutoStartValidate
	* TOS_CreateAutoInf -> INF_AutoStartCreate
	[3d7b4412e811]

	* src/CMakeLists.txt, src/cart.c, src/gemdos.c,
	src/includes/inffile.h, src/includes/tos.h, src/inffile.c,
	src/options.c, src/tos.c:
	Move TOS INF file / autostart handling to its own C-file

	This is done in preparation for merging VDI resolution INF file
	handling to it / expanding the functionality.
	[32b439e27958]

	* doc/authors.txt, doc/release-notes.txt:
	Update documentation accordingly
	[2ea913e7dd47]

	* src/debug/symbols.c, src/debug/symbols.h,
	tools/debugger/gst2ascii.c:
	Add absolute symbols support

	Contributed by Thorsten Otto.
	[d0469a962cd0]

2017-05-22  Eero Tamminen

	* tools/debugger/gst2ascii.c:
	Replace duplicate code with call to symbol_char()
	[dea5349997b9]

2017-05-17  Nicolas Pomarede

	* src/fdc.c:
	Fix description for FDC_DMA_GetSectorCount
	[07baad8dc89b]

2017-05-15  Nicolas Pomarede

	* src/floppy_ipf.c:
	Fix FDC compilation when capslib is not available
	[a49945ef4ff3]

2017-05-14  Nicolas Pomarede

	* src/fdc.c, src/floppy_ipf.c, src/includes/fdc.h:
	Add more detailled traces for each FDC command when handling IPF/CTR
	files
	[45391ec8f985]

	* cmake/FindCapsImage.cmake, readme.txt:
	Default to capslib 5.1 instead of 4.2 to handle IPF/CTR files
	[bda466953b10]

2017-05-12  Nicolas Pomarede

	* src/fdc.c:
	For STX images, add support for the verify bit in Type I commands
	The protection in some games will sometimes use wrong sector headers
	in some tracks, which should make the verify sequence fails on
	purpose when using type I commands (fix 'Le Necromancien' STX image
	by Ubi Soft, which uses "seek" on track 79 with verify=on and some
	sector headers with track=0x14, 0x21 or 0x02)
	[66cd885809f8]

	* src/floppy_stx.c:
	Fix a rare case when looking for the next sector header of an STX
	image
	[82ea2949d0cd]

2017-05-12  Eero Tamminen

	* doc/emutos.txt:
	EmuTOS compat updates after Roger's fixes
	[b0c02c30936a]

2017-05-09  Nicolas Pomarede

	* src/video.c:
	Add support for 4 pixel hardscroll propagated on every line without
	removing borders (fix beescrn4.prg by Paulo Simoes / LJKB)
	[502f1d4692a0]

2017-05-08  Nicolas Pomarede

	* src/cpu/gencpu.c, src/cpu/jit/compemu.h,
	src/cpu/jit/compemu_support.c, src/cpu/memory.c, src/cpu/newcpu.c,
	src/cpu/newcpu.h, src/cpu/newcpu_common.c,
	src/cpu/winuae_readme.txt:
	Small update to CPU core for 68020/30 RTE (From WinUAE 3.4.1 b8)
	[3f0ef2a2d4ce]

	* src/cpu/softfloat/softfloat.c:
	FPU/SoftFloat update (From WinUAE 3.4.1 b8)
	[541285fa9eb7]

2017-05-05  Eero Tamminen

	* doc/compatibility.html:
	Update compatibility doc accordingly
	[1417a4833d75]

	* doc/release-notes.txt, src/falcon/videl.c:
	Add dummy VFC register implementation

	From Laurent.
	[36cf0373f4b9]

2017-05-01  Eero Tamminen

	* src/options.c, src/tos.c:
	--auto: accept A:NAME.PRG, not A:DIR\NAME.PRG
	[581dd77915d3]

2017-04-26  Nicolas Pomarede

	* src/video.c:
	Add small test code to video rendering to dynamically see MMU
	translation and when video address points after end of RAM This is
	just a compilation option for now, this should be detected
	automatically one day depending on the MMU settings at $FF8001
	[8bf709930551]

2017-04-25  Eero Tamminen

	* doc/compatibility.html:
	Kioea & Playback actually work, they're just really show

	Found out by Laurent.
	[e658550621c1]

2017-04-24  Nicolas Pomarede

	* src/fdc.c:
	Call FDC_ClearIRQ() during FDC_Reset to ensure MFP GPIP5 is set to
	high/1 after a reset Fix Emutos ICD clock detection (thanks to
	Christian Zietz for reporting this)
	[efe9d9daa207]

2017-04-24  Eero Tamminen

	* tests/tosboot/bootauto.st.gz, tests/tosboot/bootdesk.st.gz,
	tests/tosboot/disk/GEMDOS.PRG, tests/tosboot/disk/MINIMAL.PRG:
	Update tester binaries

	New build with AHCC v5.5 + non-functional test source changes
	[b9227ce7fb05]

2017-04-23  Eero Tamminen

	* tests/tosboot/disk/ahcc-gemdos, tests/tosboot/disk/ahcc-minimal:
	Increase compiler scripts bootup timeouts

	Otherwise latest EmuTOS doesn't have enough time to get desktop up
	and respond to EmuCON invocation.
	[a030693a102b]

	* tests/tosboot/makefile:
	Don't rebuild bootup testers if compiler / TOS changes
	[5b529204bd40]

2017-04-23  Nicolas Pomarede

	* src/cpu/softfloat/softfloat-macros.h, src/cpu/softfloat/softfloat-
	specialize.h:
	Fix a few more warnings in the FPU code
	[6b18ba555958]

2017-04-22  Nicolas Pomarede

	* src/cpu/CMakeLists.txt, src/cpu/fpp.c, src/cpu/fpp_native.c,
	src/cpu/fpp_softfloat.c, src/cpu/newcpu.c, src/cpu/softfloat
	/softfloat-macros.h, src/cpu/softfloat/softfloat-specialize.h,
	src/cpu/softfloat/softfloat.c, src/cpu/softfloat/softfloat.h,
	src/cpu/softfloat/softfloat_extension.c:
	FPU update to WinUAE commit 7caf940c1e5ecda98d7e622267be09c9e0e50e18
	+ more warnings removals
	[d84dc2131312]

2017-04-20  Nicolas Pomarede

	* src/cpu/fpp.c, src/cpu/fpp_native.c, src/cpu/fpp_softfloat.c,
	src/cpu/softfloat/softfloat_decimal.c:
	FRESTORE updates and compilation warnings cleanups (From WinUAE
	commit a25869115a7298f1a0a2870c28352c1e6612fddd)
	[61ee446c14a0]

2017-04-19  Nicolas Pomarede

	* src/cpu/CMakeLists.txt, src/cpu/cpu_prefetch.h, src/cpu/custom.h,
	src/cpu/debug.c, src/cpu/debug.h, src/cpu/fpp.c, src/cpu/fpp.h,
	src/cpu/fpp_native.c, src/cpu/fpp_softfloat.c, src/cpu/gencpu.c,
	src/cpu/memory.c, src/cpu/memory.h, src/cpu/newcpu.c,
	src/cpu/newcpu.h, src/cpu/options_cpu.h, src/cpu/softfloat
	/softfloat-macros.h, src/cpu/softfloat/softfloat-specialize.h,
	src/cpu/softfloat/softfloat.c, src/cpu/softfloat/softfloat.h,
	src/cpu/softfloat/softfloat_decimal.c,
	src/cpu/softfloat/softfloat_fpsp.c,
	src/cpu/softfloat/softfloat_fpsp_tables.h, src/cpu/sysdeps.h,
	src/cpu/winuae_readme.txt:
	FPU/SoftFloat + small changes for 68020/30 prefetch cycles (From
	WinUAE 3.4.1 b6)
	[6986f406b928]

2017-04-13  Nicolas Pomarede

	* doc/compatibility.html:
	Add note for bad MMU code in 'Transbeauce II' demo
	[b2fd8f7c2aa6]

2017-04-12  Nicolas Pomarede

	* src/cpu/gencpu.c:
	Fix some cases where bus/address error stack had a wrong PC (from
	WinUAE beta) Thanks to Troed / Sync for reporting this case where
	"and.b #$fc,$ffff8e21.w" gives a bus error on non MegaSTE machine,
	but stacked PC was +4 instead of +6
	[10bc8a1afc86]

2017-04-07  Eero Tamminen

	* doc/hatari.1, doc/manual.html:
	Document earlier added --gemdos-drive option
	[fd6a85ebfed8]

	* doc/hatari.1:
	Improvemensts to hatari.1

	- Update disk format support info
	- Update EmuTOS compatibility info
	- Consistently capitalize Hatari name
	- Add missing punctuation
	[4dbe0d1a5beb]

2017-04-06  Eero Tamminen

	* doc/hatari.1, doc/manual.html, doc/release-notes.txt:
	Document --auto option
	[7850639a31ee]

	* doc/compatibility.html, doc/release-notes.txt:
	Update autostarting fixes to other docs
	[da03813b5fbd]

	* doc/todo.txt, src/tos.c:
	Fix: use separate INF files for TOS v1.x and v2+

	The new DESKTOP.INF and NEWDESK.INF file contents fix autostarting
	problems at least for TOS v1.04 and Falcon programs.
	[e1db111e99ac]

	* src/cart.c, src/gemdos.c, src/includes/tos.h, src/tos.c:
	Always enable GEMDOS interception for autoboot

	Autobooting a program requires GEMDOS interception.

	Support overriding Fopen() for autoboot INF file although it's on
	non-GEMDOS HD drive and enable GEMDOS interception (automatically)
	even if GEMDOS HD isn't enabled.
	[a0ccaae3f269]

	* src/includes/tos.h, src/options.c, src/tos.c:
	Minimum validation for autostart drive

	Validate that A:, B: or HD is enabled if autostart path points to
	such drive.
	[c026a206a77f]

	* src/includes/tos.h, src/options.c, src/tos.c:
	Support for autostarting from any drive/path

	Adds new --auto option for which one can specify Atari path to
	include into virtual Desktop INF file. Requires GEMDOS HD emulation
	to be enabled.
	[cf6edb543291]

2017-03-30  Eero Tamminen

	* doc/release-notes.txt:
	Improve "Other changes" section content
	[bb1fb13493bd]

	* src/tos.c:
	Cleanup: remove redundant match count

	It's same (1) in all cases so check for that is not needed.
	[d97b4d878ace]

	* src/options.c:
	Cleanup: magic value -> define + fix spacing
	[f1f8326f3352]

2017-03-29  Thomas Huth

	* src/CMakeLists.txt:
	Add missing toc.js to the macOS bundle. Thanks to Miguel for the
	patch.
	[13bc14fd540e]

2017-03-26  Eero Tamminen

	* doc/hatari.1, doc/manual.html, doc/release-notes.txt:
	Document --gemdos-time option

	Besides explaining the option, I added also couple of missing GEMDOS
	emulation items to manual.html options section, sorted them
	similarly to hatari.1, and removed (inconsistent) trailing periods
	from hatari.1
	[a2beeb7d7a4a]

	* src/configuration.c, src/gemdos.c, src/includes/configuration.h,
	src/options.c:
	Add --gemdos-time option functionality
	[55dc2366fed0]

2017-03-18  Thomas Huth

	* hatari.spec:
	Make the spec file usable again
	[9c87d34c61e9]

	* src/cpu/memory.c, src/stMemory.c:
	Do not use MMU/MCU for RAM setup if extended VDI resolutions are
	enabled. Otherweise (Emu-)TOS tries to detect the RAM, and updates
	the memtop/phystop variables with wrong values.
	[106c85a254b9]

	* src/gui-osx/PrefsController.h, src/gui-osx/PrefsController.m, src
	/gui-osx/en.lproj/SDLMain.xib, src/gui-osx/fr.lproj/SDLMain.xib:
	Correct nMemorySize and ttramsize_MB in the OSX GUI code. Thanks to
	Miguel for the patch.
	[62781916865f]

2017-03-12  Eero Tamminen

	* doc/compatibility.html, doc/emutos.txt:
	Add few SV16k demos
	[b4aaf4c70ae7]

2017-03-11  Eero Tamminen

	* doc/emutos.txt:
	Update EmuTOS information
	[7a66c2b5e9eb]

2017-03-05  Laurent Sallafranque

	* src/falcon/dsp_core.h, src/falcon/dsp_cpu.c:
	add DSP software RESET instruction.
	[09108bf2c199]

2017-02-27  Nicolas Pomarede

	* doc/compatibility.html, doc/release-notes.txt:
	Update note about bottom border fix at 60 Hz
	[9ee1235233e9]

2017-02-26  Nicolas Pomarede

	* src/video.c:
	Fix a wrong 'right-2' detection when the move overlaps the end of
	HBL / start of next HBL (fix 60 Hz bottom border removal in
	'Protracker 2.1' and 'Neochrome master' when running at 60 Hz)
	[92b2d7847899]

	* src/video.c:
	If a line has right-2/left+2 on a 60 Hz screen it should be
	considered as a normal 60 Hz line (fix 60 Hz bottom border removal
	in 'Protracker 2.1' and 'Neochrome master' when running at 60 Hz)
	[8edda3a49e18]

2017-02-25  Eero Tamminen

	* doc/release-notes.txt, src/debug/debugInfo.c, src/gemdos.c,
	src/includes/gemdos.h:
	Add "info dta" command
	[15c200b75a75]

	* src/gemdos.c:
	Gemdos code cleanup

	- Add defines for magic basepage sizes/offsets
	- Extract duplicated init code to separate
	GemDOS_ClearAllFileHandles() function
	- Remove redundant DTA_Gemdos/pDATA global variables by passing them
	as args to PopulateDTA() and replace their place in memory snapshot
	with a dummy. That's redundant as they always re- initialized before
	use
	- Remove GemDOS_SetDTA(), trace message can be shown by
	GemDOS_OpCode() and DTA is anyway validated by GEMDOS HD emu when
	needed
	[178fb186f2fd]

2017-02-25  Thomas Huth

	* doc/manual.html:
	Refresh the system requirements section
	[5b5a83c88196]

	* doc/hatari.1, doc/manual.html:
	Update machine type option and remove --rtc
	[784f5c597f1e]

2017-02-23  Nicolas Pomarede

	* doc/hatari.1, doc/manual.html, src/includes/options.h, src/main.c,
	src/options.c:
	New option --benchmark to measure emulation speed under different
	parameters
	[3087acb07f73]

	* doc/hatari.1, doc/manual.html, src/configuration.c,
	src/includes/configuration.h, src/options.c, src/screen.c,
	src/statusbar.c:
	New option --disable-video to run emulation without displaying video
	(audio only) Only main window will be created to get keys pressed
	and dislay F12 menu. Use this to emulate sound only programs or to
	benchmark internal emulation speed without on-screen rendering
	(which can add OS overhead)
	[97c3f5e87b05]

	* src/screen.c:
	When using SDL2, remove useless call to SDL_RenderClear() before
	SDL_RenderCopy()
	[694e8fff9387]

2017-02-21  Nicolas Pomarede

	* src/statusbar.c, src/video.c:
	Add refresh rate in the status bar (50, 60 or 71 Hz)
	[b314f1ac6496]

2017-02-19  Eero Tamminen

	* doc/emutos.txt:
	EmuTOS compat updates
	[83dc0b0c0efc]

2017-02-15  Eero Tamminen

	* doc/compatibility.html:
	More info about TYS problems
	[ffa6fd8d1065]

	* doc/compatibility.html, doc/release-notes.txt:
	Typo fix + update on current Color Runner status
	[88fa58812113]

2017-02-13  Thomas Huth

	* src/screen.c:
	Make sure that we really update the RGB table in
	Screen_SetSDLVideoSize() when we're comming from a generic screen
	conversion mode. This fixes the bug with the screen not working when
	running Hatari with: hatari --borders off --machine tt --tos
	tos206.rom
	[2d3378e5712a]

2017-02-12  Eero Tamminen

	* doc/compatibility.html:
	More accurate falcon demo problem info
	[71573b50a55f]

	* src/cpu/fpp.c:
	Fix compile error
	[45c99e26c845]

2017-02-12  Nicolas Pomarede

	* src/cpu/cpummu030.c, src/cpu/fpp.c, src/cpu/fpp.h,
	src/cpu/fpp_native.c, src/cpu/newcpu.c, src/cpu/options_cpu.h,
	src/cpu/softfloat/softfloat.c, src/cpu/sysconfig.h:
	FPU update + minor changes to WinUAE 3.4.1b1
	[53045c3a874c]

2017-02-11  Eero Tamminen

	* doc/compatibility.html, doc/release-notes.txt:
	Status update from memory timings improvement testing

	E.K.O system & Bound 2 work now. Some other updates from testing /
	debugging.
	[451f84df6c2a]

	* doc/compatibility.html:
	Minor updates to compatiblity list
	[4c3712d3113c]

	* doc/release-notes.txt, src/falcon/dsp_cpu.c:
	Rate-limit DSP illegal instruction warnings

	Otherwise warnings output slows down last 4 screens in "Terrorize
	your soul" Falcon demo by ~100x, making it unusable.
	[659305a1614f]

2017-02-10  Eero Tamminen

	* doc/compatibility.html:
	Document failing Falcon demo
	[1cb8a1abf3b8]

2017-02-09  Eero Tamminen

	* doc/compatibility.html, doc/release-notes.txt:
	Rest of Falcon demo compat updates for cache fix
	[4a9ffdac2527]

2017-02-08  Nicolas Pomarede

	* src/cpu/cpu_prefetch.h, src/cpu/custom.c, src/cpu/events.c,
	src/cpu/newcpu.c:
	Improve Falcon 68030 Cycle Exact mode with much better memory access
	timings
	[083dd1ced650]

2017-02-08  Thomas Huth

	* src/cpu/fpp_softfloat.c, src/cpu/softfloat/softfloat-specialize.h,
	src/cpu/softfloat/softfloat.c, src/cpu/softfloat/softfloat.h:
	FPU update to WinUAE commit 602c329c3ce88afcb4b269b39ed51a24669d9e09
	[5020c002fbd2]

2017-02-07  Thomas Huth

	* src/cpu/CMakeLists.txt, src/cpu/fpp.c, src/cpu/fpp.h,
	src/cpu/fpp_native.c, src/cpu/fpp_softfloat.c, src/cpu/newcpu.c,
	src/cpu/softfloat/softfloat-macros.h, src/cpu/softfloat/softfloat-
	specialize.h, src/cpu/softfloat/softfloat.c,
	src/cpu/softfloat/softfloat.h,
	src/cpu/softfloat/softfloat_extension.c:
	FPU update to WinUAE commit 5130b054e672bc46ea9f7ce82fe77975d773cd2e
	[ed2d8d28693a]

	* src/cpu/fpp.c, src/cpu/fpp.h, src/cpu/fpp_native.c,
	src/cpu/fpp_softfloat.c, src/cpu/softfloat/softfloat.c,
	src/cpu/softfloat/softfloat.h:
	FPU update to WinUAE commit e1311c810b96a4133ef43de782835aa8c1341d13
	[8fff208b7a72]

	* src/cpu/fpp.c, src/cpu/fpp.h, src/cpu/fpp_native.c,
	src/cpu/fpp_softfloat.c, src/cpu/newcpu.h,
	src/cpu/softfloat/softfloat.c, src/cpu/softfloat/softfloat.h:
	FPU update to WinUAE commit bd8bf3695c4297da5568db2571ef708a7298da14
	[916db6bee2ec]

2017-02-08  Eero Tamminen

	* doc/compatibility.html, doc/release-notes.txt:
	Document few more demos working with cache fix
	[ec3109e706f6]

2017-02-06  Eero Tamminen

	* doc/compatibility.html, doc/release-notes.txt:
	Add more things working with Nicolas cache fix

	Also change 2.0+ -> 2.1 dev (same as what Nicolas used)
	[1eec1e9782b4]

2017-02-05  Nicolas Pomarede

	* src/debug/68kDisass.c:
	Fix PMOVE reg,EA for external disassembler
	[5b9af53df9af]

2017-02-04  Nicolas Pomarede

	* src/cpu/cpu_prefetch.h:
	Fix typo in prototype
	[b36e388f60b9]

	* doc/compatibility.html, doc/release-notes.txt:
	Update release / compatibilty notes with fixed 68030 instr cache
	[bf60957efff0]

	* src/cpu/cpu_prefetch.h, src/cpu/gencpu.c, src/cpu/newcpu.c:
	Fix instruction cache bug in WinUAE CPU core when using 68030 in
	prefetch/CE mode
	[c8fb3b2e7852]

2017-02-03  Nicolas Pomarede

	* doc/compatibility.html:
	Fix href + typo
	[4ab949d55f21]

2017-01-29  Thomas Huth

	* src/cpu/fpp.c, src/cpu/fpp_native.c, src/cpu/fpp_softfloat.c,
	src/cpu/softfloat/softfloat.c:
	FPU update. Patch taken from WinUAE commit
	50adcf3c6252bfce321a060f52f7a34becec2f2e
	[57aa31819816]

	* src/cpu/fpp.c:
	Missing fpsr_make_status(). Patch taken from WinUAE commit
	ed0598333245e367a2863b6208abb797a86c6124
	[b44219f02b52]

	* src/cpu/fpp.c, src/cpu/fpp.h, src/cpu/fpp_native.c,
	src/cpu/fpp_softfloat.c, src/cpu/softfloat/softfloat.c,
	src/cpu/softfloat/softfloat.h:
	Softfloat/FPU update. Patch taken from WinUAE commit
	9e55624fd03d2cc4f28c56a6108207a979f29464
	[98578b387d18]

2017-01-28  Thomas Huth

	* src/tos.c:
	Do not allow TOS 2.0x in TT mode
	[63a89b2dfcf3]

2017-01-27  Eero Tamminen

	* tests/dbmsg/dbmsg.c:
	Fix dbmsg test comment typos
	[92f9e185a50a]

2017-01-26  Nicolas Pomarede

	* doc/release-notes.txt, src/vdi.c, tests/dbmsg/dbmsg.c,
	tests/debugger/test-breakcond.c, tests/debugger/test-evaluate.c,
	tests/tosboot/disk/common.c, tests/tosboot/disk/gemdos.prj,
	tests/tosboot/disk/minimal.prj, tests/tosboot/readme.txt,
	tools/debugger/hatari_profile.1, tools/debugger/hatari_profile.py,
	tools/hatari-prg-args.sh:
	Fix typos reported by codespell
	[2b8994b9c738]

2017-01-25  Nicolas Pomarede

	* src/cpu/memory.c, src/fdc.c, src/ide.c, src/includes/ioMem.h,
	src/ioMem.c, src/ioMemTabFalcon.c:
	Correctly store the 32 bit address in the stack in case of a bus
	error When accessing IO regs givings bus error, we stored only the
	lowest 24 bits instead of storing the full faulty 32 bit address
	[330458b172cc]

2017-01-24  Eero Tamminen

	* doc/compatibility.html, doc/emutos.txt:
	Compatibility info update
	[3e543d0c74c4]

	* src/cpu/fpp.c:
	Fix build error
	[9568841bde47]

2017-01-22  Thomas Huth

	* src/configuration.c, src/cpu/hatari-glue.c, src/cpu/newcpu.c,
	src/includes/configuration.h, src/options.c:
	Add a configuration switch for the softloat FPU
	[ec688478f146]

	* src/cpu/CMakeLists.txt, src/cpu/fpp-ieee-be.h, src/cpu/fpp-
	unknown.h, src/cpu/fpp.c, src/cpu/fpp.h, src/cpu/fpp_native.c,
	src/cpu/fpp_softfloat.c, src/cpu/newcpu.c, src/cpu/newcpu.h,
	src/cpu/softfloat/README.txt, src/cpu/softfloat/fpu_constant.h,
	src/cpu/softfloat/fsincos.c, src/cpu/softfloat/fyl2x.c,
	src/cpu/softfloat/mamesf.h, src/cpu/softfloat/milieu.h,
	src/cpu/softfloat/softfloat-macros.h, src/cpu/softfloat/softfloat-
	specialize.h, src/cpu/softfloat/softfloat.c,
	src/cpu/softfloat/softfloat.h:
	Softfloat update, switched back to QEMU softfloat, merged Previous
	additions, separated native and softfloat implementations. (Patch
	based on WinUAE commit ec9dd093d7beece3e2b34507255cc862cc0f26ec)
	[971d529a0d01]

2017-01-22  Eero Tamminen

	* doc/compatibility.html, doc/emutos.txt:
	Notes about few more demos
	[50ac25ec216f]

	* doc/compatibility.html, doc/emutos.txt:
	Demo compatibility updates & corrections

	Binliner is by Avena, Cream just added VGA support, and the screens
	work if started by *anything* else than Space key. Add also link to
	original pouet.net entry.

	Some updates to EmuTOS demos compat + consistent demo group naming.
	[394107fb70ca]

2017-01-15  Thomas Huth

	* src/cpu/sysdeps.h:
	Do not bail out if we do not recognize the host CPU (the error is
	only necessary for JIT which we do not support yet)
	[230cc43f07e2]

2017-01-13  Nicolas Pomarede

	* src/cpu/sysdeps.h:
	Define CPU_mips to compile for mips architecture (patch by Radovan
	Birdic)
	[4d2f13be436f]

2017-01-12  Nicolas Pomarede

	* src/includes/stMemory.h, src/stMemory.c:
	Add more doc about TT RAM + use bit 1 at $FF8001 in TT mode for bank
	0
	[10fa1de31f11]

	* src/cpu/fpp.c, src/cpu/softfloat/softfloat.c,
	src/cpu/softfloat/softfloat.h:
	FPU/SoftFloat update part 2 (work in progress, from WinUAE 3.5 beta)
	[ce90664a8758]

2017-01-11  Eero Tamminen

	* doc/authors.txt:
	Add more items done by Andreas to authors.txt
	[58f6051b4490]

2017-01-11  Nicolas Pomarede

	* src/cpu/CMakeLists.txt, src/cpu/softfloat/fsincos.c,
	src/cpu/softfloat/fsincos.cpp, src/cpu/softfloat/fyl2x.c,
	src/cpu/softfloat/fyl2x.cpp, src/cpu/softfloat/milieu.h,
	src/cpu/softfloat/softfloat.c, src/cpu/softfloat/softfloat.cpp:
	Compilation of SoftFloat support was not complete
	[d662689a3090]

	* src/m68000.c:
	Don't use SoftFloat FPU emulation for now
	[38917a27f60f]

	* doc/authors.txt:
	Add Andreas Grabher to the list of contributors (FPU)
	[3e2adc1d7a49]

	* src/cpu/CMakeLists.txt, src/cpu/fpp.c, src/cpu/md-fpp.h,
	src/cpu/newcpu.c, src/cpu/newcpu.h, src/cpu/softfloat/README.txt,
	src/cpu/softfloat/fpu_constant.h, src/cpu/softfloat/fsincos.cpp,
	src/cpu/softfloat/fyl2x.cpp, src/cpu/softfloat/mamesf.h,
	src/cpu/softfloat/milieu.h, src/cpu/softfloat/softfloat-macros.h,
	src/cpu/softfloat/softfloat-specialize.h,
	src/cpu/softfloat/softfloat.cpp, src/cpu/softfloat/softfloat.h,
	src/cpu/sysconfig.h:
	Update to FPU softfloat support by Andreas Grabher (from WinUAE 3.5
	beta)
	[df78bbc7923b]

	* src/cpu/gencpu.c, src/cpu/newcpu.c, src/cpu/newcpu.h:
	Improve T0 trace support on CPU >= 68020 (from WinUAE 3.5 beta)
	[2748c1943f64]

	* src/cpu/sysdeps.h:
	Remove unused defines (from WinUAE 3.5 beta)
	[5170489bed1d]

2017-01-10  Nicolas Pomarede

	* doc/authors.txt, doc/release-notes.txt:
	Update release note and contributors
	[be8527f6b102]

	* src/cartData.c:
	Update instructions to create cartData.c
	[e4eda78e75a9]

	* src/cart_asm.s:
	Use devpac syntax to be able to assemble with vasm
	[c384d2ded871]

2017-01-09  Eero Tamminen

	* doc/release-notes.txt:
	Update release notes
	[d67892045470]

2017-01-08  Nicolas Pomarede

	* src/cpu/custom.c, src/cpu/debug.c, src/cpu/jit/codegen_x86.c,
	src/cpu/jit/exception_handler.c, src/cpu/memory.c, src/cpu/memory.h,
	src/cpu/newcpu.c, src/cpu/newcpu.h, src/cpu/options_cpu.h,
	src/cpu/winuae_readme.txt:
	Update WinUAE cpu core from 3.4.0 b4 to 3.4.0 (no functional changes
	for Hatari)
	[b82fa658dda1]

2017-01-07  Nicolas Pomarede

	* src/cpu/memory.c, src/stMemory.c:
	Correctly save/restore MMU config at $FF8001
	[0a3d0cf7d3f7]

2017-01-05  Thomas Huth

	* src/falcon/dsp.c:
	Fix coding style in DSP_Run()
	[3e1ca1191db6]

	* src/control.c, src/screen.c:
	Fix X11 window embedding with SDL2 on Gnome
	[2b82cd9e99d1]

2017-01-04  Nicolas Pomarede

	* src/cpu/memory.c, src/cpu/memory.h, src/includes/stMemory.h,
	src/ioMemTabFalcon.c, src/ioMemTabST.c, src/ioMemTabSTE.c,
	src/ioMemTabTT.c, src/main.c, src/reset.c, src/stMemory.c:
	Add full support for STF/STE MMU at $FF8001 and address translation
	This emulates the behaviour of the RAS/CAS signals when addressing
	RAM, depending on the size of the 2 physical RAM banks and on the
	size of the logical banks defined in bit 0-1 and 2-3 at $FF8001.
	This allows TOS/Emutos to detect RAM size as a real ST would do.
	Thanks to Christian Zietz for his documentation of the CAS/RAS
	signal mapping
	[9b133f4e1832]

2017-01-04  Eero Tamminen

	* tools/atari-convert-dir.py:
	Support both Python v2 & v3

	Now all scripts that can support both, do so, and others (PyGtk
	ones) are Python v2 only.
	[7a2e9567fde8]

	* tests/tosboot/tos_tester.py:
	Make TOS boot tester Python v3 compatible
	[853c761c5349]

	* python-ui/FILES, python-ui/debugui.py, python-ui/dialogs.py, python-
	ui/hatari.py, python-ui/hatariui.py, python-ui/release-notes.txt,
	python-ui/uihelpers.py:
	Hatari UI fix for systems where "python" is v3

	GUI parts are python2 only due to PyGtk dependency, so set that as
	hashbang as specified in: https://www.python.org/dev/peps/pep-0394/
	[8b3c8fc1d777]

2017-01-03  Thomas Huth

	* src/avi_record.c, src/includes/pixel_convert.h,
	src/screenSnapShot.c:
	AVI record zooming: Round values when dividing instead of truncating
	to the lower integer. This might give slightly better optical
	results.
	[44eed48186ab]

2017-01-03  Eero Tamminen

	* tools/debugger/hatari_profile.py, tools/debugger/hatari_spinloop.py:
	Python3 support for profiler scripts

	With Python3, the sort order changes trivially (numerical sorting is
	still same, symbols following them are reversed), with Python2
	results should still be exactly same.
	[003432b387a6]

2017-01-01  Thomas Huth

	* src/cpu/sysdeps.h:
	uae_s64 needs to be a #define
	[323e91710168]

	* src/avi_record.c, src/includes/pixel_convert.h,
	src/includes/screenSnapShot.h, src/screen.c, src/screenSnapShot.c:
	Add the possibility to scale PNG frames for AVI recording
	[28968240d2d3]

	* src/avi_record.c, src/falcon/videl.c, src/includes/avi_record.h,
	src/includes/pixel_convert.h, src/screen.c:
	Add the possibility to scale BMP frames for AVI recording
	[bbcbaf9453f2]

	* src/avi_record.c, src/includes/pixel_convert.h,
	src/screenSnapShot.c:
	Remove support for unused color bit depths
	[4df561c288af]

2017-01-01  Eero Tamminen

	* python-ui/gentypes.py:
	Make gentypes.py work with both python2 & python3
	[e5aff70c8617]

2017-01-01  Thomas Huth

	* src/control.c:
	Fix X11 window embedding with SDL2
	[092f6e163261]

	* src/cpu/sysdeps.h:
	Do not define the uae variable types in sysdeps.h again since they
	are already defined in uae/types.h (and the double definition caused
	compilation errors on certain systems)
	[eb5e4c06f6d7]

2016-12-28  Nicolas Pomarede

	* src/includes/video.h, src/video.c:
	Improve RESTART_VIDEO_COUNTER on line 310/260, use 56 instead of 48
	Previous values were not measured accuretely enough on real HW,
	these new values were measured with a 2 cycle precision (fix sync-
	protection in Sprite32 by Leonard)
	[8a9994fb04cd]

2016-12-23  Thomas Huth

	* src/falcon/videl.c, src/falcon/videl.h, src/screen.c:
	Try to keep bits-per-pixel when recording AVIs
	[af2a1173a4de]

2016-12-23  Eero Tamminen

	* python-ui/TODO:
	PythonUI: update TODO
	[7a56b1a134b1]

	* python-ui/dialogs.py, python-ui/hatari.py, python-ui/release-
	notes.txt:
	PythonUI: Support for Hatari v2.0 option changes

	- no RTC option, instead there's new ModelType option that includes
	MegaST/E (which has RTC)
	- WinUAE & oldUAE support different set of CPUs
	- Keep ST resolution option is valid only with SDL1 builds
	[d1668fda4200]

	* python-ui/config.py, python-ui/hatari.py:
	PythonUI: Support both Hatari config file locations

	Hatari v2.0 config file can now be in:
	- ~/.hatari/hatari.cfg (old)
	- ~/.config/hatari/hatari.cfg (new)
	[7b3bcc42bc81]

2016-12-19  Nicolas Pomarede

	* src/cpu/cpummu.h:
	Typo
	[c95bffdada55]

2016-12-18  Nicolas Pomarede

	* src/cpu/cpummu.c, src/cpu/cpummu.h, src/cpu/jit/codegen_x86.c,
	src/cpu/jit/codegen_x86.h, src/cpu/jit/compemu.h,
	src/cpu/jit/compemu_midfunc_x86.c,
	src/cpu/jit/compemu_midfunc_x86.h, src/cpu/jit/compemu_support.c,
	src/cpu/jit/compemu_support_codegen.c, src/cpu/jit/flags_x86.h,
	src/cpu/jit/gencomp.c, src/cpu/newcpu_common.c, src/falcon/dsp.c,
	src/falcon/dsp.h, src/falcon/dsp_core.c, src/falcon/dsp_core.h,
	src/falcon/dsp_cpu.c, src/falcon/dsp_cpu.h, src/falcon/dsp_disasm.c,
	src/falcon/dsp_disasm.h:
	Update FSF address in sources' headers
	[ab292f790325]

	* src/cpu/sysdeps.h:
	Handle __aarch64__ like __arm__ and set CPU_arm=1 Fix compilation
	when using ARM 64 target (thanks to Andrea Musuruane for reporting
	the problem)
	[47c91930708f]

2016-12-15  Nicolas Pomarede

	* src/uae-cpu/memory.c, src/uae-cpu/memory.h:
	Add function memory_map_Standard_RAM() for old CPU core too
	[fd7c23297afb]

2016-12-14  Nicolas Pomarede

	* doc/hatari.1, doc/manual.html, src/options.c:
	Update doc : --memsize accepts a value in KiB too, not just in MiB
	[6f71f09d95a6]

	* src/cpu/memory.c:
	Return the latest data word read on the bus instead of 0 when
	accessing "void" memory "void" memory is located between end of RAM
	and 4 MB. When measured on STF, this seems to always return the
	latest word on the bus prefetched by the CPU. On STE, this can
	depend on what the shifter is reading on the bus too (not
	implemented yet)
	[f8aac18b261f]

	* src/change.c, src/configuration.c, src/debug/profilecpu.c, src/gui-
	sdl/dlgMemory.c, src/includes/configuration.h, src/options.c,
	src/statusbar.c, src/tos.c:
	Store TT RAM size in KB instead of MB (for consistency with ST RAM
	size and better readability in code)
	[22dede294e83]

	* src/debug/log.c, src/debug/log.h:
	Add "mem" to the --trace option
	[887117907d45]

	* src/change.c, src/configuration.c, src/gui-sdl/dlgMemory.c,
	src/includes/configuration.h, src/includes/stMemory.h, src/m68000.c,
	src/options.c, src/stMemory.c, src/statusbar.c, src/tos.c:
	Store ST RAM size in KB instead of MB + add support for 256 KB and
	2.5 MB + allow KB for --memsize Storing ST RAM size as an integer
	number of MB is not precise enough to cover all STF/STE memory
	configurations (256 KB and 2.5 MB).
	[dfdf93afb2bf]

2016-12-12  Eero Tamminen

	* doc/compatibility.html, doc/emutos.txt:
	Add few missing STE games to compatibility list
	[bc8e5680af6f]

2016-12-06  Eero Tamminen

	* doc/compatibility.html, doc/emutos.txt:
	Many EmuTOS compatibility updates

	Incompatibility details for debugged programs are documented at
	EmuTOS side now. Few Falcon games have started working. Re-tested
	most of the things marked as problematic.
	[375d84471977]

2016-11-30  Nicolas Pomarede

	* src/floppy.c, src/floppy_ipf.c:
	Fix possible double free crash after trying to load a bad STX/IPF
	floppy image
	[6c1cef72a026]

2016-11-29  Eero Tamminen

	* doc/compatibility.html:
	MMU helped only because its CPU emu is less accurate

	Better just to mark those games & demos as having an issue and that
	CPU prefetch / cycle exact mode needs to be disabled, than confuse
	real issue with MMU.
	[ec589131c194]

	* doc/compatibility.html, doc/release-notes.txt:
	Compatibility update notes from Laurent

	(I tested most of them also myself to verify it and to get tighter
	regs.)
	[37d815d7a270]

2016-11-28  Thomas Huth

	* src/CMakeLists.txt, src/gui-osx/en.lproj/SDLMain.xib, src/gui-
	osx/fr.lproj/SDLMain.xib, src/gui-osx/stdisk.png:
	Add floppy image to macOS GUI and unify help resources in the
	bundle. Thanks to Miguel for the update!
	[df34f122c82a]

2016-11-27  Eero Tamminen

	* doc/release-notes.txt:
	Add missing items (fixes & features) to release notes
	[f745e963b28c]

2016-11-27  Thomas Huth

	* share/CMakeLists.txt:
	Take DESTDIR into consideration when installing symlinks
	[35281f58daab]

	* src/vdi.c:
	Choose the default font depending on the choosen VDI height. The
	VDIs choice is purely based on Getrez() which might choose the 8x8
	font even for large resolutions. So use the 8x16 font for bigger
	resolutions instead. Thanks to Thorsten Otto for the patch!
	[dca750f303bb]

2016-11-25  Thomas Huth

	* src/file.c, src/hdc.c:
	Fix off-by-one error in HDC_CheckAndGetSize()
	[e6875a6f4281]

2016-11-24  Thomas Huth

	* doc/authors.txt:
	Mention Thorsten Otto in the list of contributors
	[3654afcf9366]

	* src/tos.c:
	Some patches for the ROM of the ST-BOOK. The ROM is similar to 2.06
	(and even has 2.06 as version in the header), but makes some
	accesses to 0xd00000 which have to be patched out. Thanks to
	Thorsten Otto for this patch!
	[84bd71078661]

2016-11-24  Eero Tamminen

	* doc/compatibility.html, doc/emutos.txt:
	Checked few other STe games
	[28907e296f6a]

	* doc/compatibility.html, doc/emutos.txt:
	Add couple of Cerebral Vortex games
	[5d9b43ac8e88]

2016-11-21  Eero Tamminen

	* doc/compatibility.html:
	Compatibility Falcon notes updates

	- Add 2 Lamers' Falcon demos
	- Sort Crac entries & put <td> to end of line like in other entries
	- Fix HTML typo
	[de1a237af0f2]

	* src/video.c:
	Fix extended VDI mode for Falcon

	Video_RestartVideoCounter() sets VideoBase used by VDI screen
	drawing, so can't call Videl function.
	[920bffd1ff68]

2016-11-20  Eero Tamminen

	* doc/manual.html, doc/release-notes.txt:
	Update debugger documentation
	[4e16e16ff785]

	* src/debug/debugui.c:
	Add -f 'cd' option so that script can set directory

	Script content is executed with current directory set to to the
	script's directory, and after execution, directory used before
	script is restored.

	File commands being relative to the script directory is convenient,
	but prevents setup scripts from specifying a directory for things
	that are done after the script.

	-> Add '-f' option to 'cd' command to specify thet given directory
	should be used after current script, and anything else it invokes,
	have finished.
	[2653dae05bda]

	* src/debug/debugui.c:
	Improve handling of scripts calling each other

	If breakpoint script calls another script, the information that re-
	init shouldn't be done isn't propagated. Handle that by checking re-
	init only when top most script is called.
	[b732836e1da3]

	* src/debug/vars.c:
	Expose global cycles counter to debugger
	[3fbe963c0084]

2016-11-19  Nicolas Pomarede

	* src/screen.c:
	Fix bug preventing screen to be drawn when video address = 0x0 For
	some unknown / too old reasons (before Hatari 1.0) , Screen_Draw()
	did not render screen when video address was set to 0x0, which means
	UI and screen content was never updated in such cases
	[42605777c9f9]

2016-11-18  Eero Tamminen

	* src/falcon/videl.c, src/memorySnapShot.c:
	Update memory snapshot version

	Videl Address Counter support required changing videl structure
	content, which is included into memory snapshot -> need to update
	version to indicated that snapshots are incompatible.

	Used this as opportunity to remove hole in the structure, by moving
	bool (i.e. uint8_t) to end of struct.
	[972bf2edaf50]

	* doc/compatibility.html, doc/release-notes.txt, doc/todo.txt:
	More info on Hextracker

	Hextracker actually works on Falcon, it fails only when autostarted,
	and only with TOS v4.

	Update links to point to dhs.nu as that has newer version.
	[c3d643e859f1]

2016-11-17  Eero Tamminen

	* doc/compatibility.html, doc/release-notes.txt, doc/todo.txt,
	src/falcon/videl.c, src/falcon/videl.h, src/video.c:
	Add (dumb) Videl address counter emulation
	[0a26a03128bc]

	* doc/release-notes.txt:
	Update release notes
	[a39988dc31cd]

	* doc/compatibility.html, doc/todo.txt:
	Laurent tested Ishar, update compat
	[9973004bc5ab]

2016-11-17  Thomas Huth

	* src/tos.c:
	Fix display of Atari logo with extended VDI resolutions. Thanks a
	lot to Thorsten Otto for the patch!
	[9fa4de98ac1a]

2016-11-17  Eero Tamminen

	* doc/compatibility.html:
	More info on few Falcon demos
	[9846d89ab83f]

2016-11-16  Eero Tamminen

	* doc/compatibility.html, doc/todo.txt:
	Update Videl address counter issues + few fixes
	[1891d5125a83]

2016-11-14  Nicolas Pomarede

	* src/file.c, src/includes/file.h, src/tos.c:
	Don't use tmpfile() directly under Windows as this needs
	administrative privileges (Thanks to Mark Fechtner for the patch)
	[6a7d5434867f]

2016-11-14  Eero Tamminen

	* doc/compatibility.html, doc/todo.txt:
	One more program with auto-start problem
	[d527521e02dc]

2016-11-13  Eero Tamminen

	* doc/compatibility.html, doc/todo.txt:
	Update rest of the Falcon demos

	About all listed Falcon demos have now been tested with Hatari 2.0.
	All games haven't been yet (mostly just known problematic ones).
	[e68a02d84844]

2016-11-13  Thomas Huth

	* src/stMemory.c:
	Skip memory check with TOS 3.0x and 4.0x by patching _hz200
	variable. Thanks to Christian Zietz and Thorsten Otto for the hint!
	[b4e6a71d9a63]

2016-11-13  Eero Tamminen

	* doc/compatibility.html:
	Update compat for last commits
	[59eed7db2eb2]

	* src/falcon/videl.c:
	Correct previous fix for 1600 x 600 demo

	http://www.pouet.net/prod.php?which=25543
	[1b877788b507]

2016-11-13  Thomas Huth

	* src/falcon/videl.c:
	Fix the comment about ff8210 from the last commit. I mixed up ff8210
	with ff820e - so using ff8210 should be OK here.
	[1f8a65e45c17]

	* src/falcon/videl.c:
	Add a sanity check for Videl width calculation (fixes Mahabharata
	demo)
	[a5b159983789]

2016-11-09  Eero Tamminen

	* doc/compatibility.html:
	More Falcon demo compatibility notes

	Have checked now all demos requiring DSP. Most of demos that work
	without DSP are still to be checked.
	[4820898c4630]

2016-11-08  Nicolas Pomarede

	* src/fdc.c:
	Handle ripple carry adder for STF DMA address at $FF8609/0B/0D (as
	described by Ijor) This behaviour is normally not used on purpose,
	but it must be emulated to be sure a program developed using Hatari
	will work the same under a real STF
	[d2d05e2521f1]

2016-11-07  Eero Tamminen

	* doc/compatibility.html:
	Falcon demo updates

	Main issue: SDL2 code doesn't handle too large Videl mode requests
	in Screen_SetGenConvSize() like Hatari SDL1 code does, and therefore
	it fails with Mahabharata demo.
	[3a5803de7e37]

	* src/screen.c:
	More info on SDL errors
	[2c977eae17a1]

2016-11-03  Nicolas Pomarede

	* .hgtags:
	Added tag v2.0.0 for changeset 8c26db22d338
	[b46721b7f0fa]

2016-11-03 : *** Version 2.0.0 ***

2016-11-03  Nicolas Pomarede

	* doc/compatibility.html, doc/manual.html, doc/release-notes.txt,
	hatari.spec, readme.txt:
	New release 2.0.0, update date in corresponding files
	[8c26db22d338] [tip]

2016-11-03  Thomas Huth

	* src/keymap.c:
	Fix build with SDL1
	[56972fd582fe]

	* doc/hatari.1, src/keymap.c:
	Unify the mapping of certain keys between symbolic and scancode
	maps. PRINT is now always mapped to HELP, SCROLL LOCK is now always
	UNDO, and PAGE UP / PAGE DOWN are now always mapped to KP "(" / ")".
	[6e86a19f1796]

	* src/keymap.c:
	Enable the commented-out symbolic key mappings
	[799f419ebc7d]

2016-11-03  Eero Tamminen

	* doc/compatibility.html:
	Falcon compat updates

	- Add one game
	- Finished checking all demos which have been marked as having issues
	earlier

	IMHO good enough for release. I'll continue checking demos that have
	been marked as working with earlier releasesm after 2.0 is out.
	[4dd73941ef6f]

2016-11-02  Eero Tamminen

	* doc/compatibility.html:
	Fix typos from previous commits
	[41df5e62a936]

	* doc/compatibility.html:
	Add few Falcon games + update few demo statuses
	[41380607cb7e]

2016-11-01  Eero Tamminen

	* doc/compatibility.html:
	More Falcon demo updates

	Few at the time, still most to go...
	[2c6a208bc966]

2016-10-31  Eero Tamminen

	* doc/compatibility.html:
	Gurkensalad apparently worked as expected

	According to Laurent and demozoo video, demo
	*is* supposed to end in frozen starfield.
	[8bb857975e66]

	* doc/compatibility.html:
	Checked Lazer's demos + few other updates

	- Stocasto works
	- Most of Lazer's demos work only with old UAE, not with cycle
	accurate WinUAE
	- Decided to treat such games/demos as minor issue as there's Hatari
	config with which they can be run

	It seems that all demos need to be done gone through (which is going
	to take time), but most regressions were there probably already with
	v1.9.
	[a7e092a62387]

2016-10-30  Eero Tamminen

	* doc/images/cpu.png:
	Update CPU options screenshot too
	[bd8b81a56936]

2016-10-30  Nicolas Pomarede

	* src/gui-osx/Hatari.icns:
	Update OSX icons
	[d9f04261bfc2]

	* src/gui-osx/AlertHooks.m, src/gui-osx/PrefsController.h, src/gui-
	osx/PrefsController.m, src/gui-osx/SDLMain.h, src/gui-osx/SDLMain.m,
	src/gui-osx/Shared.h, src/gui-osx/Shared.m, src/gui-
	osx/en.lproj/SDLMain.xib, src/gui-osx/fr.lproj/SDLMain.xib:
	Latest updates for the OSX UI by Jerome Vernet
	[22b7944d446d]

2016-10-30  Eero Tamminen

	* doc/compatibility.html:
	HD Driver compatibility update based on info from Uwe
	[05bbe3dd0557]

	* doc/compatibility.html:
	Quick updates for few Falcon demos

	Yepyha works now until the demo end and Collapze screen issue was
	due to not using VGA.

	However, several demos have regressed:
	- E.X.Illusion
	- Few "Bound" demos by Crac
	- Few demos by Lazer
	- Virtual City

	Most of them work with (older) old UAE CPU core. After I've checked
	more demos, I'll check whether that holds also for latest old UAE
	CPU core.

	Most of the demos are still to be checked.
	[81201d615ca0]

	* src/configuration.c, src/gui-sdl/dlgCpu.c, src/options.c:
	Comment/ifdef FPU JIT option out as there's no JIT support

	There's no point in allowing user change FPU JIT compatibility
	option when we don't support WinAUE JIT option.

	This comments / ifdefs out just support for changing the FPU JIT
	compatibility option from command line, config file or SDL GUI. The
	internal config struct variable is still there because removing that
	would make memory snapshots incompatible just before release.
	[34bb77eec376]

	* doc/hatari.1, doc/manual.html:
	Document WinUAE CPU core specific command line options
	[8b9ba6c796c1]

	* doc/compatibility.html, doc/release-notes.txt, src/options.c:
	Rename --fpu-type option to --fpu
	[c94bec3be183]

	* python-ui/hatariui:
	Exit HatariUI with python return status
	[3ca5f245058e]

2016-10-29  Eero Tamminen

	* doc/compatibility.html:
	Falcon games updates for 2.0

	Not sure when this has happened, but:
	- Bad Mood, Lasers and Hommes and Tank Blaster have regressed
	- Capy has improved

	Tron2 & Wotanoid aren't broken, they just need VGA.

	Also some consistency and other information updates.

	Falcon demos still to go (and somebody else needs to check Ishar and
	Humans games).
	[353bbb7c093e]

	* python-ui/dialogs.py:
	Add missing trace options
	[f177dbddc44d]

2016-10-29  Nicolas Pomarede

	* doc/authors.txt:
	Update contributors' list
	[3787c7333563]

	* src/dmaSnd.c:
	Improve STE DMA sound when frameEndAddr == frameStartAddr When
	repeat is OFF in such case, then DMA sound should be turned off (fix
	noisy sound in 'Amberstar cracktro' by DNT Crew / Fuzion, thanks to
	Anders Eriksson for reporting it )
	[655dddbf01fe]

2016-10-29  Eero Tamminen

	* doc/compatibility.html:
	Update some STE compat notes for 2.0
	[86ae1756447c]

2016-10-28  Thomas Huth

	* src/ikbd.c:
	Fix out-of-bounds array access in IKBD_CheckForDoubleClicks(). The
	DoubleClickPattern array has only 12 entries, so the check with ">=
	13" was off by one. Fix it by using the ARRAY_SIZE macro instead.
	(Bug found with GCC's -fsanitize=address checker)
	[b3696ad6417b]

	* src/joy.c:
	Fix out-of-bounds array access in Joy_GetStickData.
	ConfigureParams.Joysticks.Joy[].nJoyId can be -1 if there are no
	real joysticks connected. So we should not use this value
	(nSdlJoyId) to index into the sdlJoystick[] array without checking
	the value first. (Bug found with GCC's -fsanitize=address checker)
	[97601da8631c]

2016-10-27  Nicolas Pomarede

	* doc/compatibility.html:
	Update required Hatari version in compatibility list
	[1c59ae0d3353]

2016-10-27  Eero Tamminen

	* doc/release-notes.txt:
	Add older regression to old release notes
	[fde46a0b41f5]

	* doc/manual.html:
	More detailed "boot from HD" description
	[70f3580f8133]

	* doc/authors.txt:
	More details for Uwe's NF SCSI driver
	[de974d9f226b]

	* doc/compatibility.html:
	TT demos info checked / updated

	Faulty Falcon games & demos still to check.
	[a76395b35b2d]

	* doc/compatibility.html:
	Update oldUAE-only items & remove "experimental" mentions

	Still to check: Falcon & TT games & demos that have been marked as
	having issues.
	[f3982305aff8]

2016-10-26  Nicolas Pomarede

	* doc/authors.txt:
	Typo
	[208f5e37d9b8]

	* doc/authors.txt, doc/release-notes.txt:
	Update docs
	[57cebbac111f]

2016-10-25  Nicolas Pomarede

	* doc/compatibility.html:
	Rewording
	[91aa31e545b7]

2016-10-25  Eero Tamminen

	* doc/compatibility.html:
	Update Falcon apps compatibility info for v2.0
	[2ae19958f1e2]

	* doc/manual.html:
	Improve wording

	"Boot from HD" sets TOS bootdev variable. What happens after that is
	up to TOS (running AUTO programs etc).
	[52e5d89bfd5f]

2016-10-22  Nicolas Pomarede

	* src/falcon/crossbar.c:
	Remove debug printf
	[ae6ab21e982b]

2016-10-22  Eero Tamminen

	* doc/emutos.txt:
	New release will have new EmuTOS version
	[7d0e89e7448c]

2016-10-20  Nicolas Pomarede

	* doc/compatibility.html, doc/doxygen/Doxyfile, doc/manual.html, doc
	/release-notes.txt, hatari.spec, readme.txt, src/gui-osx/Info-Hatari
	Winuae.plist, src/gui-osx/Info-Hatari.plist, src/gui-
	osx/en.lproj/InfoPlist.strings, src/gui-
	osx/fr.lproj/InfoPlist.strings, src/includes/version.h,
	src/memorySnapShot.c:
	Prepare new release 2.0.0, increase version in corresponding files
	[033e65abf7da]

2016-10-20  Thomas Huth

	* src/cpu/memory.c:
	Fix compiling with ENABLE_SMALL_MEM. ROMmemory and IOmemory must not
	be static, they are used globally when ENABLE_SMALL_MEM is enabled.
	[c4b879b360e8]

2016-10-20  Nicolas Pomarede

	* doc/todo.txt:
	Remove old bug from todo list
	[c87c3f80a430]

2016-10-19  Nicolas Pomarede

	* doc/todo.txt:
	DMA sound is now correct in the game Tautology II
	[2c77f54fa4da]

	* doc/compatibility.html:
	Update compatibility list
	[4d544dd1cb8f]

	* doc/todo.txt:
	Update todo.txt, remove some of the items that were completed
	[f34353211114]

2016-10-19  Thomas Huth

	* doc/release-notes.txt:
	Add release note about the SCU general purpose registers
	[c3271990fd27]

2016-10-19  Eero Tamminen

	* doc/todo.txt, src/gemdos.c:
	Remove obsolete comment & include
	[6d972518f0a6]

2016-10-16  Eero Tamminen

	* doc/todo.txt:
	Add note about Videl timings
	[cdc45b673fef]

	* doc/release-notes.txt:
	More info on NF_SCSI
	[64122c6089b0]

2016-10-15  Nicolas Pomarede

	* doc/release-notes.txt:
	Update release notes
	[fb595ac2254e]

2016-10-14  Nicolas Pomarede

	* src/tos.c:
	Warn that Falcon mode requires EmuTOS instead of TOS 4 when using
	extended VDI
	[04fad1d2d13e]

2016-10-09  Thomas Huth

	* src/gui-osx/AlertHooks.m, src/gui-osx/CreateFloppyController.m, src
	/gui-osx/PrefsController.h, src/gui-osx/PrefsController.m, src/gui-
	osx/SDLMain.h, src/gui-osx/SDLMain.m, src/gui-osx/Shared.m, src/gui-
	osx/en.lproj/SDLMain.xib, src/gui-osx/fr.lproj/Localizable.strings,
	src/gui-osx/fr.lproj/SDLMain.xib:
	Updated the OS X GUI with the latest changes from Jerome Vernet
	[1f73df77a7b5]

2016-10-08  Eero Tamminen

	* doc/compatibility.html:
	Update Falcon DSP audio SW compatibility notes

	Now AM playback sounds fine!
	[f3d8c308e6db]

2016-10-07  Nicolas Pomarede

	* src/cycInt.c, src/falcon/crossbar.c, src/includes/cycInt.h,
	src/video.c:
	Fix internal interrupts order after changing pref with F12 and doing
	a reset (for Falcon sound) Shortcut keys are handled in the VBL, if
	F12 is used and a change requires a reset of the emulated machine,
	then the VBL would ack the wrong internal interrupt, which could
	disable sound in Falcon mode
	[0331cc60bbbf]

2016-10-06  Thomas Huth

	* src/ioMemTabTT.c:
	Rework / fix the SCU ("VME") registers. 0xff8e09 and 0xff8e0b are
	not VME bus GPIO registers, but simple general purpose registers of
	the TT's System Control Unit. TOS 3.06 takes care of setting the
	lowest bit in 0xff8e09 during boot on its own, no need to force this
	with a dedicated handler.
	[84c1c373a2eb]

2016-10-06  Nicolas Pomarede

	* src/configuration.c, src/falcon/crossbar.c:
	Fix for noisy Falcon DMA sound : dac.writePosition was not correctly
	computed
	[837aa2323f51]

2016-10-05  Thomas Huth

	* src/ioMemTabTT.c:
	Implement VME bus GPIO register 1 - it is required for AHDI.
	Apparently TOS 3.06 passes the contents of the register at 0xff8e09
	to the code in the boot sector of ACSI hard disks - it is meant as
	some kind of boot partition selector. The bits have to be zero,
	otherwise AHDI does not find any partitions.
	[11b89c5fd25e]

2016-09-25  Thomas Huth

	* src/cpu/sysdeps.h:
	Fix check for compiling Hatari on PowerMac machines with OS X.
	Thanks to Jerome Vernet for the hint.
	[2b7e12c490b7]

2016-10-05  Eero Tamminen

	* tests/keymap/makefile:
	Add makefile for building key tests
	[6a2fbad3e1ee]

	* tests/keymap/checkkeys.c:
	Support both SDL1 & SDL2 in checkkeys

	SDL2 support isn't quite as good as for SDL1, but it can be improved
	later.
	[c3ec8bfb1163]

	* tests/keymap/listkeys.c:
	Listkeys is no-op under SDL2

	SDL2 doesn't support iterating over all key codes.
	[9638546f53b5]

2016-10-03  Nicolas Pomarede

	* src/dmaSnd.c:
	Adjust STE DMA sound low pass filter (patch by David Savinkoff)
	[e651986b567a]

2016-10-02  Nicolas Pomarede

	* src/cpu/newcpu.c:
	In 68000 non CE mode, wait states should be added at the same time
	as the opcode cycles
	[43d64e44a73b]

2016-09-25  Eero Tamminen

	* doc/emutos.txt:
	EmuTOS games compat update
	[d45e253eb824]

	* src/nf_scsidrv.c:
	More comments to NF-SCSIDRV code from Uwe

	According to Uwe, Thomas had asked for some more comments, in
	particular related to udev, in nf_scsidrv.c.
	[b4255efa4a63]

2016-09-18  Thomas Huth

	* src/hdc.c:
	Free AcsiBus.resp buffer during HDC_UnInit, even if ACSI emu is off
	[a046895142ce]

	* src/sound.c:
	Do not endlessly warn about slow system (since this causes even more
	slowdown)
	[2597e29c06fe]

	* src/audio.c:
	SDL2 does not set desiredAudioSpec.size, so always use
	desiredAudioSpec.samples instead.
	[18edc86e0c97]

	* src/cpu/cpummu.c:
	Remove unneeded test, instruction fetch accesses are always even.
	Patch taken from WinUAE (thanks Toni!). This fixes a compiler
	warning with certain versions of GCC.
	[85c46901cfe5]

2016-09-14  Thomas Huth

	* src/falcon/crossbar.c:
	Improve the crossbar matrix info string handling. When compiling
	with -O1 (e.g. with --enable-debug), GCC always erroneously
	complains about uninitialized variables in Crossbar_Info(). While
	the warnings are harmless, they are still annoying. So let's shut
	them up by using lookup arrays instead of switch statements and by
	replacing one "case" statement with a "default". This way the code
	also gets a little bit smaller.
	[c6d496a141cb]

	* src/cpu/compat.h, src/cpu/hatari-glue.c, src/cpu/options_cpu.h:
	Add a proper error_log() function to the WinUAE core. The
	error_log() messages are often without a newline at the end, and if
	we only print then to stdout, they get stuck in the stdio buffering
	mechanism. It's better to print them straight to stderr and add a
	trailing newline if necessary.
	[4bf56b7b40a8]

	* src/cpu/newcpu.c:
	Use 1 cycle per instruction in 68040/060 prefetch mode, too
	[9339f978c23d]

	* src/cpu/custom.c, src/cpu/newcpu.c:
	Enable m68k_run_3ce() - the 'cycle-exact' 68040/060 mode
	[172297bc7fb3]

2016-09-12  Nicolas Pomarede

	* src/falcon/crossbar.c, src/falcon/crossbar.h, src/includes/m68000.h,
	src/ioMemTabFalcon.c, src/m68000.c:
	For Falcon mode, crossbar's variables should be updated when CPU
	freq is changed This is required to keep a constant sound rate for
	all the CPU freqs
	[e79424af8fd8]

2016-09-11  Nicolas Pomarede

	* src/cpu/hatari-glue.c, src/cpu/hatari-glue.h:
	Fix warning "assignment from incompatible pointer type"
	[50697549df6e]

	* src/cpu/fpp.c:
	Avoid define conflict for FP_SNAN when compiling for Windows with
	MinGW
	[25750f5fba45]

	* src/includes/video.h, src/video.c:
	Remove old/no more used code from video.c
	[c4b0cc371813]

	* src/audio.c:
	In Audio_CallBack, clear the rest of the buffer when we don't have
	enough sample This fixes a problem under OSX where some bad sound is
	hearable when entering the UI menus
	[b492d05b1082]

2016-09-11  Thomas Huth

	* src/cpu/gencpu.c, src/cpu/hatari-glue.c, src/cpu/memory.c,
	src/debug/evaluate.c, src/paths.c:
	Some cosmetic issues reported by 'sparse'
	[493d0ca0591c]

2016-09-10  Thomas Huth

	* src/cpu/CMakeLists.txt:
	Fix out-of-tree cross compilation problem
	[6927aff7bd63]

2016-09-11  Nicolas Pomarede

	* src/falcon/crossbar.c:
	Fix Falcon sound playing twice too fast (since new cycle counting in
	rev 6305)
	[f4fee3226139]

2016-09-10  Thomas Huth

	* src/ioMem.c:
	Do not generate bus errors for any VME bus register in Mega-STE
	mode. This is required to avoid a crash in EmuTOS when running in
	Mega-STE mode.
	[b98a852e12f2]

2016-09-08  Nicolas Pomarede

	* src/clocks_timings.c:
	Complete support for Mega STE and set defaut CPU speed to 8 MHz in
	that case
	[2953b34c6ca7]

	* src/bios.c, src/debug/debugInfo.c, src/debug/debugcpu.c,
	src/debug/debugdsp.c, src/debug/debugui.c, src/debug/history.c,
	src/debug/log.c, src/debug/natfeats.c, src/debug/profile.c,
	src/debug/profilecpu.c, src/debug/symbols.c, src/debug/vars.c,
	src/falcon/dsp.c, src/gemdos.c, src/gui-sdl/dlgScreen.c,
	src/includes/main.h, src/joy.c, src/nf_scsidrv.c, src/options.c,
	src/psg.c, src/vdi.c, src/xbios.c, tests/debugger/test-evaluate.c,
	tests/debugger/test-symbols.c, tools/debugger/gst2ascii.c:
	Rename ARRAYSIZE macro to avoid conflict with MinGW includes
	[9370f2846eff]

2016-09-08  Eero Tamminen

	* src/memorySnapShot.c:
	Improve snapshot output info

	- Move file name from error printfs to all result messages
	- Leave just error message to printfs and change them to use normal
	log messages like other outputs (same output file etc)
	- Add output on query canceling for debugger statesave usage

	Note: query dialogs don't work that well from debugger with SDL2.
	Unlike with SDL1, screen isn't refreshed when dialogs are called
	from debugger. It's refreshed only when user blindly clicks mouse
	over dialog button.
	[d6ba3a291448]

2016-09-07  Nicolas Pomarede

	* src/uae-cpu/sysdeps.h:
	Add compatibility define for old cpu core
	[0033d47150b6]

2016-09-08  Eero Tamminen

	* doc/release-notes.txt, src/memorySnapShot.c:
	Fix memory snapshot autosaving

	After Hatari v1.4 snapshot save file overwrite query was added.

	However, in case of autosave at Hatari exit, query dialog will
	immediately return without user input because Hatari is quitting,
	and in effect cancels the saving.

	I.e. this fixes autosaving to work first time since v1.4.
	[dcd4cc326d6a]

2016-09-07  Nicolas Pomarede

	* src/cpu/memory.c, src/ide.c, src/includes/ide.h,
	src/includes/ioMem.h, src/ioMem.c:
	Remove warning about incompatible pointer type
	[f9cef2298161]

	* src/joy.c:
	Avoid define conflict with mmsystem.h when compiling for Windows
	with MinGW
	[139ba2ce7322]

	* src/cpu/CMakeLists.txt, src/cpu/compat.h, src/cpu/cpu_prefetch.h,
	src/cpu/cpummu.h, src/cpu/cpummu030.c, src/cpu/cpummu030.h,
	src/cpu/custom.h, src/cpu/debug.c, src/cpu/debug.h,
	src/cpu/events.h, src/cpu/fpp-ieee-be.h, src/cpu/fpp-unknown.h,
	src/cpu/fpp.c, src/cpu/gencpu.c, src/cpu/hatari-glue.h,
	src/cpu/jit/codegen_x86.c, src/cpu/jit/codegen_x86.h,
	src/cpu/jit/compemu.h, src/cpu/jit/compemu_codegen.h,
	src/cpu/jit/compemu_fpp.c, src/cpu/jit/compemu_midfunc_x86.c,
	src/cpu/jit/compemu_midfunc_x86.h,
	src/cpu/jit/compemu_optimizer_x86.c, src/cpu/jit/compemu_prefs.c,
	src/cpu/jit/compemu_raw_x86.c, src/cpu/jit/compemu_support.c,
	src/cpu/jit/comptbl.h, src/cpu/jit/exception_handler.c,
	src/cpu/jit/flags_x86.h, src/cpu/jit/gencomp.c, src/cpu/m68k.h,
	src/cpu/machdep/m68k.h, src/cpu/machdep/rpt.h, src/cpu/md-fpp.h,
	src/cpu/memory.c, src/cpu/memory.h, src/cpu/mmu_common.h,
	src/cpu/newcpu.c, src/cpu/newcpu.h, src/cpu/newcpu_common.c,
	src/cpu/options_cpu.h, src/cpu/readcpu.h, src/cpu/rpt.h,
	src/cpu/savestate.h, src/cpu/sysconfig.h, src/cpu/sysdeps.h,
	src/cpu/uae/attributes.h, src/cpu/uae/likely.h,
	src/cpu/uae/string.h, src/cpu/uae/time.h, src/cpu/uae/types.h,
	src/cpu/uae/vm.h, src/cpu/writelog.c, src/m68000.c:
	Update WinUAE cpu core from 3.1.0 to 3.4.0 b4 (no functional changes
	for Hatari)
	[5edf1aa5a518]

2016-08-30  Nicolas Pomarede

	* src/video.c:
	Missing case, fix regression in Video_Update_Glue_State in rev 6296
	[acb1a8b3657c]

2016-08-22  Eero Tamminen

	* src/hdc.c:
	Show Atari MBR partition options
	[8c955b86606c]

2016-08-14  Thomas Huth

	* src/cpu/fpp.c:
	Silence compiler warnings about maybe uninitialized variables. GCC
	is wrong here, the exts array is never used uninitialized. The
	warning is annoying anyway, so let's simply shut it up with a simple
	initializer.
	[397d05052705]

	* src/cpu/build68k.c:
	Silence compiler warning from GCC 6.1 about misleading indentation
	[58b9f519348e]

	* doc/images/cpu.png, doc/images/main.png, doc/images/system.png,
	doc/manual.html:
	Update manual with new system and CPU dialogs
	[f95032923e77]

	* doc/compatibility.html:
	Fix HTML errors (discovered with W3 validator)
	[4a1af702c0a7]

2016-08-13  Eero Tamminen

	* doc/manual.html:
	Add note about Fforce() limitations
	[ada93571f34a]

	* doc/release-notes.txt, src/gemdos.c:
	Fix: '*.*' pattern should match also files without extension

	GEMDOS HD pattern matching was geared more towards matching overlong
	host filenames that were mapped to Atari names than replicating TOS
	matching behavior with TOS names.

	Whereas:
	- '*.*' pattern should match also files without extension
	- '*' should not match patterns with extension

	Thanks to Vincent for noticing and reporting this issue.
	[b573841d2ce1]

2016-08-06  Thomas Huth

	* src/gui-sdl/dlgHardDisk.c:
	Make it clear that GEMDOS HD is added after ACSI/IDE partitions
	[4bc170f624f0]

	* src/ioMem.c:
	Add a dummy VME bus register on Mega-STE so that TOS detects the
	machine right
	[725814272267]

2016-08-03  Nicolas Pomarede

	* src/acia.c, src/blitter.c, src/cpu/newcpu.c, src/cycInt.c,
	src/dmaSnd.c, src/falcon/crossbar.c, src/fdc.c, src/ikbd.c,
	src/includes/cycInt.h, src/includes/m68000.h, src/includes/video.h,
	src/mfp.c, src/midi.c, src/sound.c, src/spec512.c, src/video.c:
	More accurate cycles counting + improved video timing when CPU runs
	at 16/32 MHz All components now have their delay updated to take
	nCpuFreqShift into account, instead of dividing CPU cycles by 2 or 4
	(as it was done up to now)
	[b5add8951ca2]

2016-07-25  Eero Tamminen

	* doc/manual.html:
	One more...
	[264b9218990a]

	* doc/manual.html:
	Typo fixes to Manual from Roger + some rewording
	[940ab68f9871]

2016-07-18  Eero Tamminen

	* src/configuration.c, src/debug/log.c, src/gemdos.c, src/options.c:
	Improved logging for Hatari argument handling

	- Default to LOG_INFO level, and have that right at start (otherwise
	there's no log output from option parsing)
	- Show what Hatari thought the argument to be
	- Log GEMDOS HDD multipartition mapping failure
	[ae415c956da2]

	* doc/release-notes.txt, src/debug/debugui.c, src/debug/vars.c:
	Update release notes & variables command descriptions
	[9d33f6b73e55]

	* src/debug/CMakeLists.txt, src/debug/breakcond.c,
	src/debug/breakcond.h, src/debug/debugcpu.c, src/debug/debugdsp.c,
	src/debug/debugui.c, src/debug/evaluate.c, src/debug/vars.c,
	src/debug/vars.h, tests/debugger/makefile:
	Improve Hatari debugger variables handling

	- Split Hatari internal variable handling from (huge) conditional
	breakpoint code file to its own vars.c file & header.
	- Add 'variables' command for listing the variables instead of it
	being part of (huge) breakpoints help.
	- 'evaluate' command TAB-completes now also internal variables, in
	addition to supporting them otherwise.
	- Remove somewhat related unnecessary code from breakcond.c.
	- Update debugger tests accordingly.
	[eeb49970e291]

	* tests/debugger/test-evaluate.c:
	Update debugger test for video header change
	[4a03b8046783]

2016-07-16  Eero Tamminen

	* src/hdc.c:
	Improve ACSI partition table trace info

	- DOS MBR partition info is little-endian, use suitable SDL
	functions
	- list if MBR partition is invalid
	- Show disk size more accurately (x.x MB)
	[d1193f4f447c]

	* tools/atari-hd-image.sh:
	Remove broken check

	Script exits with warning if file exists, so no point in checking
	anything about it.
	[0fb929676707]

2016-07-10  Nicolas Pomarede

	* src/video.c:
	Remove some old border code from Video_EndHBL and update
	Video_Update_Glue_State This part was reponsible for catching some
	late left/right border changes when staying too long in 60 Hz (used
	by TCB in Swedish New Year and fixes Gigaintro by Newline)
	[3b153def6cd6]

2016-06-30  Thomas Huth

	* src/CMakeLists.txt, src/gui-osx/English.lproj/InfoPlist.strings, src
	/gui-osx/English.lproj/Localizable.strings, src/gui-
	osx/English.lproj/SDLMain.nib/designable.nib, src/gui-
	osx/English.lproj/SDLMain.nib/keyedobjects.nib, src/gui-
	osx/English.lproj/SDLMain.xib, src/gui-
	osx/French.lproj/InfoPlist.strings, src/gui-
	osx/French.lproj/Localizable.strings, src/gui-
	osx/French.lproj/SDLMain.nib/designable.nib, src/gui-
	osx/French.lproj/SDLMain.nib/keyedobjects.nib, src/gui-
	osx/French.lproj/SDLMain.xib, src/gui-
	osx/en.lproj/InfoPlist.strings, src/gui-
	osx/en.lproj/Localizable.strings, src/gui-osx/en.lproj/SDLMain.xib,
	src/gui-osx/fr.lproj/InfoPlist.strings, src/gui-
	osx/fr.lproj/Localizable.strings, src/gui-osx/fr.lproj/SDLMain.xib:
	Switch to XML-only-based .xib files in the OS X GUI. Thanks to
	Jerome Vernet for the files!
	[447c07af07a3]

2016-06-26  Nicolas Pomarede

	* src/video.c:
	Split Video_HBL_GetPos() into 2 functions (to get default and
	current pos)
	[4e94edd07fea]

	* src/video.c:
	Remove some special cases in Video_AddInterruptHBL()
	[1d8dc7dba45a]

2016-06-26  Thomas Huth

	* src/gui-sdl/dlgAlert.c:
	Emulation has to be paused when showing an alert dialog
	[09a6583d26aa]

	* src/screen.c:
	Do not try to change window size if it is maximized
	[99d393f99448]

	* src/gui-sdl/dlgSystem.c:
	Align radio buttons vertically in the system dialog. As suggested by
	Uwe Seimet, it looks much nicer this way.
	[e943d7c2a4af]

2016-06-25  Nicolas Pomarede

	* src/ide.c:
	Remove warning : use %PRId64 instead of %li to print off_t variable
	[219047a98760]

2016-06-23  Eero Tamminen

	* doc/compatibility.html, doc/emutos.txt, doc/todo.txt:
	Misc TOS compatibility doc updates, mainly about EmuTOS
	[8f95a5918ebe]

2016-06-20  Nicolas Pomarede

	* src/video.c:
	Improve mixing low/med lines on the same screen With previous code,
	if resolution was changed to med near the end of line 'n' then line
	'n' would be rendered as med res, which was wrong, the switch to med
	should be applied to line 'n+1' (we use cycle 460 as a limit) Mixing
	low/med lines is not accurately supported yet, as this would require
	to render the same line with 2 resolutions in screen.c
	[a67b101b4cdd]

2016-06-19  Thomas Huth

	* src/gui-osx/English.lproj/SDLMain.nib/designable.nib, src/gui-
	osx/English.lproj/SDLMain.nib/keyedobjects.nib, src/gui-
	osx/French.lproj/SDLMain.nib/designable.nib, src/gui-
	osx/French.lproj/SDLMain.nib/keyedobjects.nib:
	Remove the RTC option from the OS X GUI preferences dialog. Thanks
	to Bob Carpenter for the files.
	[306cbd29d694]

	* src/unzip.c:
	Remove the ALLOC and TRYFREE wrappers from unzip.c. They are no
	longer needed on modern systems.
	[b1c5fdee6b66]

	* src/debug/debugui.c, src/floppy_stx.c, src/gui-sdl/dlgFloppy.c, src
	/gui-sdl/dlgNewDisk.c, src/scandir.c, src/shortcut.c:
	Do not check pointers before calling free() since free() is checking
	for NULL pointers anyway. (Patch created with coccinelle)
	[7211e6f5e269]

	* src/gui-osx/English.lproj/SDLMain.nib/designable.nib, src/gui-
	osx/English.lproj/SDLMain.nib/keyedobjects.nib, src/gui-
	osx/French.lproj/SDLMain.nib/designable.nib, src/gui-
	osx/French.lproj/SDLMain.nib/keyedobjects.nib, src/gui-
	osx/disk.icns:
	Update OS X GUI (new machine types, disabled RTC option). Thanks to
	Jerome Vernet for the files!
	[537322240717]

	* src/gui-osx/PrefsController.m:
	Remove the RTC from PrefsController code
	[7cb1c402e3c9]

2016-06-18  Thomas Huth

	* src/gui-sdl/CMakeLists.txt, src/gui-sdl/dlgCpu.c, src/gui-
	sdl/dlgMain.c, src/gui-sdl/dlgSystem.c, src/includes/dialog.h:
	Split System dialog into general system options and CPU settings to
	gain more space to add new options like the wake state video
	timings.
	[7e8bbf1fd274]

2016-06-18  Nicolas Pomarede

	* src/blitter.c:
	Typo
	[f72f9fd99544]

	* src/blitter.c:
	Blitter needs 4 extra cycles to start on MegaSTE (fix "We Were @" by
	Oxygene when running in MegaSTE mode)
	[54b9993a9925]

	* src/blitter.c, src/cpu/memory.c, src/uae-cpu/memory.c:
	Don't trigger a bus error if blitter writes to address $0, just
	ignore it (fix 'P0rnc0de' by MJJ Prod : the demo has a bug and will
	write to $0 using the blitter)
	[1578414238e7]

2016-06-15  Nicolas Pomarede

	* src/fdc.c:
	FDC clock should remain 8 MHz when CPU is set to 16 or 32 MHz
	Programs measuring the drive's speed should report 300 RPM for any
	CPU speed
	[fcf1811f4034]

2016-06-13  Nicolas Pomarede

	* src/video.c:
	Add a temporary case for 'Death of the left border' by TNT Emulation
	is not correct yet in Hatari : this demo doesn't use a stabiliser
	and video planes are shifted by 2 bytes.
	[c6e27fa19d16]

2016-06-13  Eero Tamminen

	* doc/release-notes.txt:
	Release notes update

	- Add few missing entries
	- Split things under few new subheadings (Removed features,
	Configuration etc)
	- Make entries more consistent: capitalize, "Fix" -> "Fix:", remove
	trailing period
	[6a5e2c20bc16]

2016-06-13  Thomas Huth

	* src/ioMem.c:
	IO mem 0xff820a is defined, so no need to set this to void handler
	first
	[fe65805e07a7]

2016-06-12  Nicolas Pomarede

	* doc/compatibility.html, src/includes/ioMemTables.h, src/ioMem.c,
	src/ioMemTabSTE.c:
	Add support for MegaSTE cache/cpu speed control register at $FF8E21
	(used in 'Tymewarp' by 'YM Rockerz' to force cpu speed to 8 MHz)
	[42ef3ec69b80]

2016-06-12  Thomas Huth

	* src/ioMemTabTT.c:
	TT does not have shadow registers at 0xff8801 and 0xff8803
	[80577c5bb9fe]

	* src/ioMem.c, src/ioMemTabFalcon.c:
	Fix STE-compatible bus mode in Falcon mode. Some undefined areas
	behave really strange and only generate a bus error when read with
	either a byte or word access.
	[6784c8c5656d]

	* src/ioMemTabFalcon.c:
	Fix coding style in ioMemTabFalcon.c
	[47b897753f60]

	* src/ioMemTabSTE.c:
	Indent with tabs, not with spaces
	[73ef60e35761]

	* src/ioMem.c:
	Rename be_regions to no_be_regions
	[5abdcb77b994]

	* cmake/DistClean.cmake:
	Remove *.pyc files during distclean, too
	[175ed6e93a17]

	* src/fdc.c:
	Fix bus error behaviour for 0xff8604 and 0xff8606 in Falcon mode
	[7eb03334210b]

	* src/ioMemTabFalcon.c:
	Fix Falcon IO memory table at address 0xff9206. According to our bus
	error tester, there is a bus error here on a real Falcon. I also
	checked Wotanoid and it working with bus errors here now, too, so
	this was likely just a hack to workaround for another problem in the
	past.
	[ab57b6644fb4]

	* src/ioMem.c, src/ioMemTabST.c:
	Add bus error behavior for the Mega-ST
	[2cb9083cfe7c]

	* tests/buserror/buserr_b.prg, tests/buserror/buserr_b.s,
	tests/buserror/buserr_w.prg, tests/buserror/buserr_w.s:
	Fix bug in bus error testing program. The return value of Super() is
	32 bits, not 16 bits. (this fixes now the crash at the end of the
	program)
	[e05b996a5ed6]

2016-06-10  Nicolas Pomarede

	* src/video.c:
	Add a temporary case for 'Gen4 Demo' by Ziggy / Overlanders Under
	Hatari this demo triggers a wrong left+2 when removing top border,
	due to a 4 cycle extra delay (cause is not known yet)
	[feeb2e5e1250]

2016-06-10  Eero Tamminen

	* src/includes/video.h, src/statusbar.c, src/video.c:
	No need to copy timings name around

	They're all const strings used just for output.
	[568fe887ccfa]

2016-06-10  Laurent Sallafranque

	* src/falcon/videl.c:
	videl fix border color in true color mode
	[a12af39b3cad]

2016-06-09  Nicolas Pomarede

	* src/screen.c, src/xbios.c:
	Fix typos reported by codespell
	[c18fe09f411b]

	* src/sound.c, src/video.c:
	More use of the Config_IsMachineXX() function
	[4af5cc33c4ec]

2016-06-07  Nicolas Pomarede

	* src/video.c:
	Improve no de/blank line detection for STF/STE by switching to hi/lo
	around pos 28-36 (fix 'Lemmings' in Nostalgic-o-demo by Oxygene in
	STE mode)
	[aa86f78c88d9]

	* src/video.c:
	Add a temporary case for Closure's overscan without stabiliser in
	STE mode
	[069a35a05809]

	* src/video.c:
	In Video_Update_Glue_State(), add STE timings for "0 byte" and
	"left+2" lines (fix "LoSTE" and "Closure" by Sync in STE mode)
	[cf50df1af07c]

2016-06-06  Nicolas Pomarede

	* src/video.c:
	Add preliminary support for STE timings in Video_Update_Glue_State()
	(fix "We Were @" by Oxygene, "More or less 0", "Sea of colors" and
	more demos by DHS)
	[03b057983ba4]

	* src/video.c:
	GLUE will latch freq register 1 cycle later than res only on STF,
	not on STE On STE, GLUE and MMU were replaced by the GST MCU
	[4576a173b25f]

	* src/video.c:
	If switch to high res after cycle 500/502, then next line should
	defaut to "remove left" (eg : hi/lo switch at 504/4 in DHS demos
	using "20 bytes remove left" on STE)
	[5d7c77a9f1e9]

2016-06-04  Nicolas Pomarede

	* src/video.c:
	Improve blank line detection when doing 60/50 switches at cycle 28
	[79b88452a4a1]

2016-06-03  Nicolas Pomarede

	* src/video.c:
	Fix no de/blank line by switching to hi/lo at pos 28 in the new GLUE
	code (fix 'Lemmings - part 2' in Nostalgic-o-demo by Oxygene)
	[a6da88f856c1]

2016-06-02  Nicolas Pomarede

	* src/video.c:
	Add some different timings for 'blank stop' at 50/60 Hz
	[d9aa586a2765]

	* src/video.c:
	Add some examples of common freq/res switches altering the GLUE's
	video signals
	[e12ffd605a49]

2016-05-27  Nicolas Pomarede

	* src/video.c:
	Remove old code for top/bottom border
	[faeaf86656f0]

2016-05-25  Nicolas Pomarede

	* src/configuration.c:
	Save VideoTiming's value into the System section of the
	configuration file Possible values : 0=random STF wakeup state
	1-4=STF wakeup state 1 to 4
	[e2360696afaa]

	* src/includes/screen.h, src/includes/video.h, src/screen.c,
	src/spec512.c, src/video.c:
	Handle top/bottom border removal in the common GLUE's state machine
	This gives a shorter / more readable / more robust code than the
	previous version and also fully supports STF's wakeup states
	[c6e5362779ab]

2016-05-18  Nicolas Pomarede

	* src/video.c:
	Remove old code to setup next VBL when mixing 50/60 Hz HBL
	[3e0d48f38dfa]

	* src/video.c:
	Remove old video timings code
	[69c924e6ad56]

2016-05-13  Nicolas Pomarede

	* src/video.c:
	In GLUE's state machine, use line_cycles-50/-10 + WS instead of
	460/500 for hsync start/stop (fix Menu in 'Galtan 6' demo when
	running in WS2)
	[6e7d45d7960c]

2016-05-11  Nicolas Pomarede

	* src/video.c:
	Disable/remove old version of border removal code
	[24b05942d1e0]

	* src/video.c:
	Replace more display start/end constants by their VideoTiming
	structure equivalent
	[ba0a55a04440]

	* src/includes/video.h, src/ioMemTabST.c, src/ioMemTabSTE.c,
	src/ioMemTabTT.c, src/video.c:
	Handle resolution changes in the common GLUE's state machine State
	machine correctly runs 'shforstv' by Paulo Simoes, as well as
	'Closure' by Sync in all 4 STF wakeup states ; also Swedish New Year
	by TCB in WS2 gives a centered logo and Nostalgic demo main menu by
	Oxygene is correctly broken in WS2/4
	[5b6caa38ecaa]

2016-05-04  Nicolas Pomarede

	* src/video.c:
	Better cycles value to start VBL from the last HBL (works for all
	WS, WS1 was wrong before)
	[905a72392c69]

2016-04-10  Nicolas Pomarede

	* src/video.c:
	Remove BORDERMASK_RIGHT_PLUS_2 on a 60 Hz line (same effect as
	LEFT_PLUS_2 in 50 Hz)
	[62299744f596]

2016-04-08  Nicolas Pomarede

	* src/video.c:
	Small fixes to GLUE's state machine for freq changes (fix line+2 50
	Hz, apply states to all lines) State machine correctly runs
	'shforstv' by Paulo Simoes in the 4 STF wakeup states, as well as
	'Closure' by Sync in STF WS1.
	[ec82b98e6016]

2016-04-06  Nicolas Pomarede

	* src/includes/video.h, src/video.c:
	Add a separate function Video_Update_Glue_State to handle freq/res
	changes This function should give a more accurate / concise
	representation of the GLUE's state machine used to start/stop
	display and remove borders (based on Troed / Sync doc) For now,
	handles freq changes in STF for all wakeup states
	[b8d9627dbedf]

2016-03-29  Nicolas Pomarede

	* src/video.c:
	Use the current video timings values to handle 50/60 Hz switches
	(left+2, right border removal, ...)
	[846604e014cb]

2016-03-28  Nicolas Pomarede

	* src/video.c:
	Add video counter restart's position to the video timings structure
	[2b59c93737f5]

	* src/includes/video.h, src/statusbar.c:
	Print name of STF video timings in the status bar (for wakeup
	states)
	[e400887aea7a]

	* src/video.c:
	Round video timings to the lowest 2 cycles
	[34c4094f440f]

	* src/shortcut.c:
	Update status bar when pressing shortcut keys for warm/cold reset
	[f9a5b9760c94]

	* src/shortcut.c:
	Change indentation (space -> tab)
	[3a203f4c7f41]

2016-03-26  Nicolas Pomarede

	* src/includes/video.h, src/mfp.c, src/video.c:
	Better code to start internal hbl/timer b timers whne overlapping
	with end of HBL
	[9ee27a855cfb]

2016-03-23  Nicolas Pomarede

	* src/video.c:
	In Video_ConvertPosition, fix a possible corner case at the end of
	the last HBL (STF WS1)
	[265d93e2fa4b]

2016-03-20  Nicolas Pomarede

	* src/video.c:
	Don't detect left+2 / right-2 outside of displayed lines
	[e56582bc4e39]

2016-03-19  Nicolas Pomarede

	* src/video.c:
	On STF/STE, GLUE reads resolution (FF8260) one cycle later than
	frequency at the same spot This is based on documentation by Troed /
	Sync and visible in some wakeup states
	[0760f026a5df]

2016-03-15  Nicolas Pomarede

	* src/main.c, src/video.c:
	Use the current video timings values instead of some defines
	(top/bottom border removal)
	[725ce67498a9]

	* src/video.c:
	Init video timings structures for STF/STE/TT
	[f9aad07af6ae]

2016-06-05  Thomas Huth

	* src/hdc.c:
	Use alert dialogs for showing HD image size mismatches
	[47f016a31f1b]

	* src/ide.c:
	Remember IDE file size instead of file name so we don't have to
	carry along big arrays in BlockDriverState and do not need to look
	up the file size each time bdrv_get_geometry() has been called. Also
	add a check for IDE minimum file size (1 MB) to avoid to use files
	that can not be represented with the CHS addressing.
	[e784a79a17f0]

2016-05-29  Thomas Huth

	* src/audio.c, src/dmaSnd.c, src/fdc.c, src/hdc.c,
	src/includes/configuration.h, src/ioMem.c, src/m68000.c,
	src/options.c, src/psg.c, src/reset.c, src/screen.c, src/sound.c,
	src/stMemory.c, src/tos.c, src/video.c:
	Add inline wrapper functions for checking for TT or Falcon mode,
	too. This is now consistent with the ST/STE wrapper functions and
	also shortens the code at some places a little bit.
	[a290abf8238c]

	* src/screen.c, src/shortcut.c:
	Remove some unnecessary includes
	[dc52dc4dda1e]

	* src/tos.c:
	Remove unused string variable pszHwDisable
	[dff4fc94fac0]

2016-05-28  Thomas Huth

	* src/configuration.c:
	Use same default machine type for both CPU cores again
	[2a573accadf3]

	* src/change.c, src/clocks_timings.c, src/configuration.c, src/gui-
	sdl/dlgSystem.c, src/includes/configuration.h, src/ioMem.c,
	src/options.c, src/statusbar.c, src/video.c:
	Add support for Mega ST and Mega STE machines. Mega ST is a complete
	new machine type in Hatari. The only difference right now to the ST
	is the RTC - and blitter is always enabled for the Mega. Mega STE
	was basically already there, just not enabled in the GUI yet - now
	it is selectable, too.
	[36964069a01d]

	* src/audio.c, src/dmaSnd.c, src/fdc.c, src/includes/configuration.h,
	src/screenConvert.c, src/sound.c, src/tos.c, src/video.c:
	Use an inline function for checking whether machine type is ST or
	STE. That way we can easier support Mega ST and Mega STE later.
	[808e8bc8f013]

	* CMakeLists.txt, cmake/config-cmake.h, src/ide.c:
	Remove the qemu_memalign() wrapper from ide.c. We do not really need
	aligned memory buffers in Hatari, so remove these wrappers and
	simply use malloc() instead.
	[96a90d487122]

	* src/cpu/events.c, src/cpu/events.h, src/cpu/jit/compemu.h,
	src/cpu/newcpu.c:
	Remove unused WinUAE event code. event.c was almost completely
	ifdef'd out, so it does not make much sense to keep this code for
	sync'ing with WinUAE. It's likely easier to completely restore it
	from the latest version of WinUAE in case we ever need this again.
	[abb558d9a254]

2016-05-26  Thomas Huth

	* src/file.c:
	Use fseeko() instead of fseek() when using ftello() to work around a
	bug with Cygwin, and it's also more consistent. Thanks to Vincent
	RiviÃ¨re for the hint.
	[53d97241c316]

2016-05-22  Thomas Huth

	* src/includes/joy.h, src/ioMemTabFalcon.c, src/ioMemTabSTE.c,
	src/joy.c:
	Add Falcon half-moon switches register at address $ff9200. Thanks to
	Roger Burrows for the description.
	[f40a430ccc89]

2016-05-21  Thomas Huth

	* src/hdc.c, src/ide.c, src/includes/hdc.h:
	Improve HD image size check and use it to test IDE images, too
	[4b9abbbcf858]

2016-05-19  Thomas Huth

	* src/ide.c:
	Fix WORD access to IDE data register at 0xf00002. This is especially
	important with the WinUAE CPU core since it splits LONG accesses
	into two WORD accesses in certain CPU modes. This fixes the problem
	that the IDE driver of recent versions of EmuTOS did not work
	anymore with Hatari (since it is using LONG accesses).
	[8cd6c537262b]

2016-05-19  Eero Tamminen

	* doc/compatibility.html:
	Update Hatari compatibility list
	[e92c0fe372a7]

	* doc/emutos.txt:
	Update EmuTOS compatibility list
	[80e236d03655]

2016-05-16  Thomas Huth

	* src/ioMemTabTT.c:
	Fix the DIP switches register to contain the right value (thanks to
	Roger Burrows for the clarification)
	[2f09023af5ec]

	* src/ioMemTabTT.c:
	Add a handler for the DIP switches register on the TT. Using the
	description of the switches from the webpage at http://gfa.atari-
	users.net/TT030/htm/swi.htm
	[88adfd75c635]

	* src/nf_scsidrv.c:
	Fix coding style in nf_scsidrv.c (use tabs instead of spaces)
	[15e6df2b8462]

	* CMakeLists.txt:
	Improve the udev configuration status message, second try
	[ae1a1b48ba23]

2016-05-15  Thomas Huth

	* CMakeLists.txt:
	Shorten the 'udev' detection text a little bit since this was way
	longer than 80 characters and thus overflowing to the next line in
	small terminal windows.
	[ddb146be88a6]

	* CMakeLists.txt, src/main.c:
	Don't use #warning since it's a GCC extension so let's rather warn
	at configure-time instead.
	[18dcb5f29c2d]

2016-05-14  Thomas Huth

	* src/paths.c:
	Set a better path for storing the application's config data on
	Windows
	[5d62b0dac8b2]

	* tools/CMakeLists.txt:
	The man pages of the tools should also not be built on Windows
	[ad560abafac3]

	* src/cpu/sysdeps.h:
	Remove the strcasecmp/strncasecmp wrappers from sysdeps.h since they
	collide with the wrappers from vs-fix.h now.
	[46656deef811]

	* src/ide.c:
	Remove __attribute__((packed) from struct partition. Since all
	members of this struct are aligned to their natural boundaries,
	there should not be any padding here and we thus can get rid of the
	compiler-specific attribute.
	[a9c3a8b66cac]

	* doc/CMakeLists.txt:
	Man-pages are not required on Windows
	[3b0d1db93f15]

	* Visual.Studio/VisualStudioFix.c, Visual.Studio/VisualStudioFix.h:
	Remove the old Visual Studio fix-up files
	[f86df7562b19]

	* src/includes/main.h, src/includes/vs-fix.h:
	Add a new header file with fix-ups for compiling with Visual Studio
	(slightly based on the old version from Vaughan Kaufman, but reduced
	to the bare minimum now)
	[bdc1511a534c]

	* CMakeLists.txt, cmake/config-cmake.h, src/gemdos.c:
	utime.h seems to be available as sys/utime.h in VS
	[d2ed35c29190]

	* src/avi_record.c, src/gemdos.c:
	Use alloca() instead of variable length arrays. Variable length
	arrays only work with GCC and friends, while alloca() seems to be
	more portable.
	[db2544c5e360]

	* src/floppy_ipf.c:
	Empty structs are not allowed in the C standard, so keep at least
	one element
	[50fe7c5bfac6]

	* src/cpu/sysdeps.h:
	Remove obsolete posixemu wrappers from sysdeps.h. The implementation
	does not seem to be available anymore, and the wrappers conflict
	with the other unistd.h replacement that I am using with VS.
	[bb7d0f6e5692]

	* src/cpu/memory.c:
	Remove duplicated definition of illegal_count
	[0987d05b8422]

	* src/change.c, src/debug/log.h:
	Use __VA_ARGS__ instead of the GCC extension with named variable
	length macros
	[501bbfb561d6]

	* src/file.c, src/includes/file.h:
	Move ftello wrapper to header since ftello is used in other files,
	too
	[4be0c0b7b16e]

	* src/cpu/memory.c, src/cpu/newcpu.c, src/debug/68kDisass.c,
	src/hd6301_cpu.c, src/includes/file.h, src/mfp.c:
	Clean up header includes. Make sure that main.h gets included first
	(where it is appropriate), and add some missing header includes for
	compiling with VS.
	[f0db12631315]

	* src/cpu/compat.h, src/cpu/sysdeps.h:
	Clean up the REGPARAM definitions. Move the default wrappers to
	sysdeps.h (since all others are defined here, too), and disable the
	__fastcall for now, since it causes trouble when compiling with VS.
	[3554c82123be]

	* src/cpu/build68k.c, src/cpu/compat.h, src/cpu/sysdeps.h:
	Use tchar.h with VS instead of our own definitions
	[7d5fa0737c1f]

	* CMakeLists.txt, cmake/config-cmake.h, src/control.c, src/file.c:
	sys/time.h is not available on all system, make it optional
	[91b26f7c67f6]

2016-05-13  Thomas Huth

	* src/acia.c:
	Official name of the GPL is 'GNU General Public License'
	[db7da0a6e5c5]

2016-05-09  Thomas Huth

	* src/cfgopts.c, src/gemdos.c, src/ide.c:
	Replace malloc(num*sizeof) + memset with calloc
	[3469d597b674]

2016-05-05  Eero Tamminen

	* doc/keymap-sample.txt, src/keymap.c:
	Support comment chars in keymap file if they're quoted
	[51049589ddea]

2016-05-03  Eero Tamminen

	* doc/release-notes.txt:
	Add note about Debian bug fixed in v1.9

	Same commit had fixed 2 reported bugs.
	[65d75b49486b]

2016-04-25  Eero Tamminen

	* tests/natfeats/natfeats.c:
	Test NF_DEBUGGER

	+ improve tester user messages.
	[b842d6f275ae]

2016-04-23  Eero Tamminen

	* doc/emutos.txt:
	Update EmuTOS notes

	- Debugged issues in few things & couple of new things working
	- Remove floppy-only things from compat list (when everything is
	expected to work, we can list just things that don't work and then
	those can come back)
	[09da4b12f307]

	* doc/release-notes.txt:
	Update release notes
	[9c3fb937d162]

	* src/xbios.c, tests/dbmsg/dbmsg.c, tests/dbmsg/dbmsg.prj:
	Implement Atari debugger XBIOS Dbmsg() API support

	And a tester.
	[9f038bd6346c]

	* src/xbios.c:
	Move XBIOS interception & trace code together
	[1fd1e47a9873]

	* src/includes/rs232.h, src/rs232.c, src/xbios.c:
	Remove buggy XBios interception RsConf() implementation

	This may have been useful before Hatari's RS-232 emulation worked
	well enough, but currently it's just harmful. XBios() interception
	is nowadays used mainly to enable XBios(255) Hatari control.

	If somebody uses RS-232 with XBios interception, he will get
	intercepted version of RsConf, which:
	- Doesn't set RsConf() return value, so apps querying RsConf()
	settings before using it will get undefined values in D0.
	- Doesn't implement flow control.

	This change provides just RsConf() tracing and cleans up from
	rs232.c and its header things that were used only for interception.
	[340a2f92f729]

	* src/xbios.c:
	Improve XBios return value & opcode comments
	[8c8b1130ea28]

	* src/debug/debugcpu.c, src/debug/debugcpu.h, src/debug/debugui.h,
	src/debug/history.c, src/debug/natfeats.c:
	Improve NF_DEBUGGER implementation

	- Revert earlier 6152 commit for this
	- Add new debugger invocation reason (program itself)
	- Invoke debugger directly instead of stepping
	[b118fe3edb57]

	* doc/hatari.1, doc/manual.html:
	Add note to docs about --desktop-st / SDL2
	[aa1ca2693cf9]

	* src/options.c:
	Fix --desktop-st with SDL2

	Commit 5964 disabling --desktop-st forgot to increase argument index
	for the parameter.
	[1135b8490486]

	* src/gemdos.c:
	Fix segfault with previous commit

	Gemdos_Reset() is called at startup regardless of whether GEMDOS HD
	is enabled or not, so the code cannot be assume that drives have
	been init.
	[db6c6b59d405]

2016-04-23  Thomas Huth

	* src/gemdos.c:
	Reset GEMDOS HD CWD to root of the drive during GemDOS_Reset
	[c407ed88fccc]

2016-04-20  Eero Tamminen

	* src/cpu/newcpu.c:
	Allow catching unhandled exceptions also on WinUAE CPU core
	[847ab27e4d59]

	* doc/release-notes.txt, src/debug/debugui.c, src/debug/log.c,
	src/debug/log.h:
	Support for catching trace exception
	[dfc7ba139158]

2016-04-18  Eero Tamminen

	* doc/manual.html:
	Update profiler help

	- More info on Hatari (cycle) accuracy
	- Fix typo
	[644983c8e7c1]

	* doc/emutos.txt:
	Larger update to EmuTOS info

	- Add things working with new 2016-04-17 snapshot
	- Nothing needs cartridge image anymore
	- Remove v0.8 notes as obsolete
	- Update comments
	[3400ae231da3]

2016-04-17  Thomas Huth

	* doc/release-notes.txt:
	Add GEMDOS HD and 68060 news to release notes
	[f135d73744e1]

	* src/cpu/gencpu.c:
	Do not generate useless 68030-only MMU opcodes if CPU is not 68030.
	(patch taken from WinUAE)
	[e0d3e841643b]

	* src/cpu/newcpu.c:
	Remove the Hatari-specific address_space_24 hack in
	prefs_changed_cpu()
	[0d421771dc93]

	* src/cpu/newcpu.c:
	68060 unimplemented CPU emu option also enabled 68030 MMU
	instructions. (patch taken from WinUAE)
	[7ad514bd2f35]

	* src/cpu/newcpu.c:
	68040/060 SR M-bit fixes. (patch taken from WinUAE)
	[5af7ae13f21d]

2016-04-17  Eero Tamminen

	* doc/release-notes.txt:
	Add last debugger improvements to release notes
	[e0c9cd396424]

	* src/xbios.c:
	Show VcheckMode() arg when tracing XBios
	[dc6995631b66]

2016-04-16  Eero Tamminen

	* src/debug/debugcpu.c:
	Next ('n') command runs until loop ends

	I.e. sets breakpoint to next instruction also if instruction is dbcc
	branch backwards, which is normally used for loop end conditions.

	(It already supported running until subroutine and exception calls
	returned.)
	[d1e0581622cf]

	* src/debug/debugcpu.c, src/debug/debugcpu.h, src/debug/natfeats.c:
	Get NatFeats debugger command actual to drop into debugger
	[6bb2308d9171]

2016-04-11  Thomas Huth

	* src/cpu/hatari-glue.c:
	Fixed bug with setting mmu_model, introduced a couple of commits ago
	[9957ae420b82]

2016-04-11  Eero Tamminen

	* src/debug/profile_priv.h:
	Fix caller info addr size for TT-RAM

	24-bit isn't enough for caller address with TT-RAM.
	[9ffbbc92221e]

2016-04-10  Thomas Huth

	* src/tos.c:
	Some additional 68060 patches for various TOS versions
	[3e39d7126d26]

	* src/options.c:
	Remove deprecated and non-working option '--slowfdc'
	[c768731394f0]

	* src/options.c:
	List all CPU related options in one section
	[16dc4a4e3db3]

	* src/gui-sdl/dlgSystem.c, src/options.c:
	Disable the 'FPU compatible' option for now since it has no effect
	[8797dabee39b]

	* src/cpu/hatari-glue.c:
	Set fpu_no_unimplemented for more realistic FPUs
	[fd14de108cdf]

	* src/cpu/hatari-glue.c:
	Simplify Init680x0() by removing the initialization of currprefs
	here. The function is finally calling init_m68k() which in turn
	calls prefs_changed_cpu() and that function copies all CPU settings
	from changed_prefs into currprefs (after validating them with
	fixup_cpu()), so setting currprefs in Init680x0() is just redundant.
	[1411877e05ca]

	* src/cpu/memory.c, src/cpu/newcpu.c, src/tos.c:
	Fix address_space_24 settings for non-TT machines. There should be a
	bus error for invalid memory regions > 16 MiB, and we've got to make
	sure to set the currprefs.address_space_24 variable always right.
	[2db5562c2efb]

2016-04-09  Thomas Huth

	* src/stMemory.c:
	Do not patch memory sysvars when running Falcon mode with EmuTOS
	since EmuTOS is supposed to be able to detect Fast-RAM on its own.
	[08cf6664781d]

2016-04-02  Thomas Huth

	* src/cpu/hatari-glue.c:
	Do not emulate 68030-only instructions in 68040/68060 mode. The
	WinUAE CPU code has a setting called int_no_unimplemented which can
	be used to allow older CPU instructions to be used in higher CPU
	levels, too, where they officially did not exist anymore. The
	setting has been used by accident in Hatari, but we should rather
	try to match real hardware and thus disallow those opcodes in
	68040/68060 mode.
	[76657e587c65]

	* src/tos.c:
	Disable TOS MMU instructions in 68040 and 68060 mode, too. The PMOVE
	instruction only exists on the 68030 and can not be used on the
	68040 and 68060 anymore.
	[5efda5bc7528]

	* src/tos.c:
	The 060 patches are about replacing MOVEP, so name them correctly
	since PMOVE is a different (MMU-related) instruction.
	[16cac6604d16]

2016-04-01  Thomas Huth

	* src/uae-cpu/hatari-glue.c:
	Use is_cart_pc() wrapper for old UAE CPU core, too
	[ee71816589b5]

2016-04-01  Eero Tamminen

	* src/uae-cpu/hatari-glue.c:
	Revert bogus indent change
	[28148351a918]

2016-03-31  Thomas Huth

	* src/cpu/hatari-glue.c, src/uae-cpu/hatari-glue.c:
	Ignore uppermost PC byte in our cartridge opcode handlers if using
	24-bit addressing mode or if the PC is within the mirror space.
	[b84d8688435e]

2016-03-31  Eero Tamminen

	* src/cpu/hatari-glue.c, src/uae-cpu/hatari-glue.c:
	Warn about trampoline opcode errors when tracing
	[2afccc4f4d6c]

	* src/uae-cpu/hatari-glue.c:
	Fix indenting
	[c2ca2a81bc3f]

2016-03-31  Thomas Huth

	* src/cpu/newcpu.c, src/uae-cpu/newcpu.c:
	Silence bus error blitter checks from TOS 2.06. That TOS version
	permanently checks for the availability of the blitter by accessing
	0xff8a00 - which causes a bus error if it is not there. This
	currently clutters the console output very quickly, so let's avoid
	that by not printing the bus error message in that case.
	[78fcd469f8b3]

	* src/cpu/hatari-glue.c, src/uae-cpu/hatari-glue.c:
	Allow GemDOS_OpCode() only to be called from cartridge space
	[b1ada9eb0270]

	* src/cpu/hatari-glue.c:
	Harmonize coding style in hatari-glue.c
	[60e6034d266f]

	* src/gemdos.c:
	The value of act_pd must be read from the current OS pointed by
	0x4f2 (and not from the ROM header) since another OS like EmuTOS
	might have been started from RAM again. Thanks to Vincent RiviÃ¨re
	for the patch!
	[5c570ab9490a]

	* src/cpu/hatari-glue.c, src/gemdos.c, src/uae-cpu/hatari-glue.c:
	Allow GemDOS_Boot() to be called multiple times. Otherwise, the
	GEMDOS HD emulation does not work anymore when TOS has been
	restarted with CTRL-ALT-DEL or when EmuTOS has been started as a RAM
	image from a PRG loader. Thanks to Vincent RiviÃ¨re for the hint!
	[29e8853e6199]

2016-03-30  Thomas Huth

	* src/tos.c:
	Fix compilation with old UAE CPU core
	[e1b37b2919ca]

2016-03-28  Eero Tamminen

	* doc/emutos.txt:
	emutos compatibility update

	- Move commercial game demos under own heading (as there are so many
	of them)
	- Add info about things things that work with latest EmuTOS snapshot
	(20160326)
	[43388aae70b4]

2016-03-27  Thomas Huth

	* src/screen.c:
	Remove bUseVDIRes code from Screen_SetSTResolution() since this
	function is now never used in VDI mode anymore.
	[6d8ca2ce8b9c]

2016-03-25  Thomas Huth

	* src/falcon/videl.c, src/falcon/videl.h, src/main.c, src/screen.c:
	Do not call Screen_SetSTResolution from Screen_Init since it should
	not be called in Falcon/TT/VDI video modes. Introduce a new function
	called Screen_ChangeResolution() instead (based on the code from
	Screen_ModeChanged()) which is able to figure out the right
	resolution settings for any mode.
	[a2ec1a2db588]

	* src/screen.c:
	Rename Screen_SetResolution to Screen_SetSTResolution to make it
	clear that it is only used for ST resolutions.
	[de9f0825ee01]

2016-03-23  Eero Tamminen

	* doc/compatibility.html:
	Add mono emu + update TT compatibility issues
	[4c99e88161e2]

2016-03-22  Thomas Huth

	* src/screen.c:
	Simplify Screen_ComparePaletteMask() and Screen_SetConvertDetails().
	These functions are not called in VDI mode anymore, so the related
	code can now be removed.
	[86c6911d0805]

2016-03-20  Thomas Huth

	* src/tos.c:
	Apply anti-MMU patches when running with a 68020 CPU, too since
	there is no MMU available in the 68020 CPU.
	[5f4978ee4249]

	* src/tos.c:
	Fix the check for having a FPU on the TT when using the WinUAE core
	[082bb3d501f9]

	* src/gui-sdl/dlgHalt.c:
	Fix previous commit: SPCFLAG_BRK should always be set
	[89f13071ac73]

	* src/gui-sdl/dlgHalt.c:
	Set SPCFLAG_BRK during quit to make sure CPU does not continue to
	run
	[d24d8594a2d1]

	* src/cpu/newcpu.c:
	Fix problem when cycle exact and MMU mode is enabled at the same
	time. There is no real cycle exact MMU mode, so we must not use the
	M68000_AddCycles_CE() function in this case.
	[bbea1f98d83b]

	* src/cpu/memory.c:
	Always mirror the lowest 16 MBs to the top of the address space no
	matter whether MMU is enabled or not. This is what real hardware is
	doing, too, according to the TT hardware reference manual.
	[223b0f90b7a3]

	* src/video.c:
	Fixed wrong assert() statement
	[2734d339ecd5]

2016-03-18  Eero Tamminen

	* src/debug/profile.c:
	Fix profile help indenting
	[0f3754caabc9]

2016-03-17  Eero Tamminen

	* doc/emutos.txt:
	Final demo works also
	[fe72725974b4]

2016-03-12  Thomas Huth

	* src/screenSnapShot.c:
	Fix problem that stack variable might get clobbered during longjmp
	since GCC complained about this with -Wclobbered in the CFLAGS.
	[25de751df30b]

	* src/keymap.c:
	Remove useless const qualifier from Keymap_SymbolicToStScanCode().
	Thanks to David Savinkoff for the hint.
	[1c656711d959]

	* src/ide.c, src/options.c:
	Silence some more warnings with -Wshadow
	[34a0ea02efb5]

	* src/debug/68kDisass.c:
	Clean up the variable naming mess in Disass68k(). GCC reports a lot
	of warnings in Disass68k() when compiling with -Wshadow ... and
	indeed, the variable naming is very confusing here. Let's try to
	clean up that mess!
	[c629c4854a85]

	* src/falcon/crossbar.c:
	Remove duplicated sample rates lists
	[17eb44c9d600]

2016-03-08  Nicolas Pomarede

	* src/options.c:
	Warn that --video-timing option has no effect for now
	[c2193308db97]

2016-03-05  Thomas Huth

	* src/cpu/newcpu_common.c:
	Silence compiler warning about comparison between signed and
	unsigned integer expression
	[d8bb1078fd7f]

	* src/cpu/gencpu.c:
	Remove unused function get_prefetch_020_0()
	[8093a7ecabca]

	* src/cpu/fpp.c:
	Silence GCC warnings about cast from function call of type 'double'
	to non-matching type 'int'. The warnings of GCC are non-sense here,
	but can simply be avoided by removing the superfluous casts (the
	double value is cast to int automatically during the assignment).
	[bfc4cf39ce03]

2016-03-05  Nicolas Pomarede

	* doc/hatari.1, doc/manual.html:
	Add "--video-timing" option to the manuals
	[98aef4852d03]

	* src/options.c, src/video.c:
	New option --video-timing to select video state after a cold boot
	(fixed or random) Those states are known as "wakeup states" and are
	random when powering on ; so far 4 states were documented on STF but
	real hardware sometimes shows more states on STF/STE
	[2e73f29d49c3]

	* src/cpu/gencpu.c:
	68020/030 RTE should not support 68040+ and 68010-only frames (from
	WinUAE 3.3.0 b8)
	[703f478677f5]

	* src/configuration.c, src/cycInt.c, src/debug/breakcond.c,
	src/ikbd.c, src/includes/configuration.h, src/includes/video.h,
	src/ioMemTabST.c, src/ioMemTabSTE.c, src/ioMemTabTT.c, src/main.c,
	src/reset.c, src/spec512.c, src/tos.c, src/vdi.c, src/video.c:
	Add code to choose between different video timings for each machine
	type This is mainly used for STF (which can have 4 different sets of
	timings) and for STE (which can have 1 set of timings)
	[e4cd639d0304]

2016-03-04  Nicolas Pomarede

	* src/includes/video.h, src/main.c, src/video.c:
	Add structure/array to store video timing specific to each emulated
	machine
	[f49c3e1b2be1]

2016-03-03  Eero Tamminen

	* doc/authors.txt:
	Add note about Douglas' contributions
	[4bf10b37fe8a]

	* doc/release-notes.txt:
	Update release notes
	[07f3b3d6086a]

	* src/includes/video.h, src/ioMemTabTT.c, src/video.c:
	Add proper support for TT palette bank switching

	- For 4-16 color modes, update colors from correct TT palette bank
	(the one mapping ST palette)
	- Whenever TT shifter is written, copy palette entries from correct TT
	palette bank to ST palette, in case bank was switched
	- Add helper for mapping the color value from TT color register to
	ST(e) color register, and use that both in shifter writes and when
	TT color register is written
	  - correct the bit mapping, it was wrong earlier
	- Move TT ST color registers handling to its own function. It uses
	correct bank, and skips TT register update if write is byte sized

	Thanks to Roger for writing test program(s) for this, testing them
	on his TT and reporting how color handling actually works.
	[21de0194eea5]

2016-03-02  Nicolas Pomarede

	* src/dmaSnd.c, src/fdc.c, src/includes/m68000.h,
	src/includes/video.h, src/ioMemTabST.c, src/ioMemTabSTE.c,
	src/ioMemTabTT.c, src/m68000.c, src/video.c:
	For STF/STE with <= 4 MB, video and dma sound addresses should be
	limited to 22 bits (4 MB) TT/Falcon can access 16 MB for
	video/sound/fdc. In case STF/STE are set to 8 or 16 MB, hardware
	only allows access to lowest 4 MB and some internal buffers must
	used to transfer data to the rest of the RAM. To simplify such
	cases, Hatari allow accesses to 16 MB for video/sound/fdc by keeping
	24 bits in DMA addresses and patching TOS to validate extra memmory.
	(thanks to Cyprian on atari-forum for checking some values on his
	machines)
	[e73dbd8e8247]

2016-02-26  Nicolas Pomarede

	* doc/authors.txt:
	Update entry
	[ced6489e1793]

2016-02-26  Eero Tamminen

	* doc/authors.txt:
	Update my authors.txt entry + add EmuTOS info
	[1ab3983b81c7]

	* tools/zip2st.1, tools/zip2st.sh:
	zip2st can now create images of directories too

	zip2st internally creates .st image file from directory contents
	extracted from the .zip file. Expose that functionality directly to
	user (otherwise they would need to zip a directory first to convert
	it).

	Update manual page accordingly.
	[b62bf0881e62]

2016-02-26  Nicolas Pomarede

	* src/sound.c:
	Remove old version of the sound's step functions from Leonard (not
	used since 2008/11 - Hatari 1.1.0)
	[cc80b8b96c94]

	* src/spec512.c:
	Remove old/unused heuristics for cycles accesses (moved to cycles.c)
	[3bd3bce0c670]

	* src/cycles.c:
	Remove old/unused version of Cycles_GetInternalCycleOnReadAccess /
	Cycles_GetInternalCycleOnWriteAccess
	[a61d8abf39f5]

	* src/cycInt.c, src/includes/cycInt.h:
	Remove commented/unused function CycInt_AddRelativeInterruptNoOffset
	[406aaa608181]

	* src/m68000.c:
	Remove 'if 0' block (old codei not valid anymore)
	[bb3de8fc194f]

	* src/spec512.c:
	Remove define/ifdef (always false, old test code)
	[8ead96cb8714]

	* src/video.c:
	Remove define/ifdef (always true)
	[0ce6d44ee244]

	* src/video.c:
	Test code for WS1, disabled for now
	[88f21ef0b35e]

	* src/includes/video.h, src/video.c:
	Add support for 'remove left' including a med res stabiliser (230
	bytes overscan) (fix 'Closure' demo by Troed/Sync)
	[66d9068c2e59]

2016-02-25  Eero Tamminen

	* src/nf_scsidrv.c:
	NF scsidrv media change detection improvement from Uwe
	[ef76ff694c96]

	* doc/authors.txt:
	Make wording consistent with other authors.txt entries
	[f96249c5c443]

	* doc/authors.txt:
	Add note about Roger's contributions

	Content from Roger.
	[8d382fcdf94c]

	* doc/emutos.txt:
	Remove note of fixed EmuTOS bug
	[35b150bdc4a0]

	* doc/todo.txt:
	Steem .STT format isn't anymore relevant

	- Also improve few wordings
	[f340a01ae1a0]

2016-02-25  Nicolas Pomarede

	* src/dmaSnd.c:
	STE DMA sound addresses must be word-aligned, bit 0 is always 0
	[e8fb5af2960b]

2016-02-23  Thomas Huth

	* src/stMemory.c:
	Patch memvars in 24-bit TT mode only if using real TOS
	[bcc7a3bdb76f]

2016-02-23  Nicolas Pomarede

	* src/video.c:
	Simpler/more accurate code to update number of cycles per VBL when
	mixing 50/60/71 Hz lines
	[31559c13e406]

	* src/video.c:
	Fix comment
	[406e58430918]

2016-02-21  Eero Tamminen

	* doc/authors.txt:
	Reformat some authors.txt entries to fit better into 80 cols
	[6708d52e5e49]

2016-02-21  Nicolas Pomarede

	* src/video.c:
	With 2 cycles precision, number of cycles per line (pal/ntsc) can
	change up to pos 54, not 56
	[bd6c440e4969]

	* src/video.c:
	Fix next internal HBL timer in case number of cycles per line
	changes at cycle 0 in WS1
	[275ca48bbf3d]

2016-02-21  Thomas Huth

	* src/video.c:
	Force monochrome mode when using 1-bpp VDI res on the TT
	[8ea716de0a8e]

	* src/video.c:
	Take palette in TT duochrome mode from the last two TT colors.
	Thanks to Roger Burrows for the hint!
	[b9452e538674]

	* src/stMemory.c:
	TOS 3.0x only works with 24-bit addressing if we're patching the
	memory sysvars
	[a5973be26468]

2016-02-20  Nicolas Pomarede

	* src/video.c:
	Improve reloading of $ff8205/07/09 at the end of VBL (needs more
	tests on real HW)
	[b949220e9f20]

2016-02-20  Thomas Huth

	* src/video.c:
	TT supports the STe compatible palette encoding
	[1f3f54ecbca3]

2016-02-19  Nicolas Pomarede

	* src/video.c:
	Improve blank line detection when switching to 60 Hz at cycle 28
	(allow combining blank line and left+2 in 'Closure' by Sync)
	[c9e3fe2564f0]

	* doc/release-notes.txt, src/dmaSnd.c:
	STE DMA sound should be played even when frameEndAddr ==
	frameStartAddr (fix 'A Little Bit Insane' demo by Lazer)
	[b0f31f84e30b]

2016-02-18  Nicolas Pomarede

	* src/blitter.c:
	When blitter was used at 16/32 MHz, interrupts cycles were not
	correctly updated
	[b5d7c9485321]

2016-02-17  Nicolas Pomarede

	* src/cpu/newcpu.c:
	Don't clear M bit during trace exception (from WinUAE beta)
	[34593aabec43]

2016-02-15  Eero Tamminen

	* doc/release-notes.txt:
	Update release notes

	Add notes on few relevant changes from Laurent, Thomas & me. Change
	the order of Emulator part so that (hopefully) more relevant changes
	to end-user are first.
	[4a48e8f57bcf]

	* doc/release-notes.txt, src/falcon/videl.c:
	Handle byte sized ST color register write on Falcon

	Thanks for Roger Burrows for making a test-case and testing this on
	his Falcon!

	On Falcon, similarly to ST/STE, byte sized writes to ST color
	registers should be duplicated to the other byte in the register.
	[52a660ca284f]

2016-02-14  Thomas Huth

	* src/CMakeLists.txt, src/dim.c, src/file.c, src/includes/unzip.h,
	src/zip.c:
	Make it possible to compile also without zlib
	[64ccefccc4b4]

2016-02-14  Eero Tamminen

	* src/includes/video.h, src/ioMemTabTT.c, src/video.c:
	Fix TT color register long & byte access for commit 6029

	Change 6029 to TT color register synchonization between ST<->TT
	color registers regressed TT emulation. It handles sync immediately
	instead of at VBL, but it assumed register accesses to be word
	sized/aligned.

	Because register handlers were declared for larger register area,
	that isn't necessarily true. The change regressed e.g. gwEm's
	4getful demo TT-version as it changed all TT ST-palette entries with
	single movem.l instruction.

	Fixed by:

	ST->TT register sync:
	- Use ST/STE color register wrappers for each ST color register and
	make that code call ST->TT sync function on TT (which is now static
	and handles only single register).

	TT->ST register sync:
	- Align register access to word boundary (in case it was byte access)
	and handle access being larger than word by looping.
	[10b3c0a41cd9]

2016-02-14  Thomas Huth

	* src/cpu/newcpu.c:
	Turn some hard-coded printfs into Log_Printf(LOG_DEBUG, ...)
	statements and also silence some compiler warnings in the
	m68k_run_mmu*() functions.
	[f4b08e61d22d]

2016-02-14  Nicolas Pomarede

	* src/includes/floppy.h:
	Add missing define
	[2f3f4c8d5d23]

	* src/floppy.c:
	Do not warn about Pacifist/Makedisk bug with SPC=0 if boot sector is
	executable If boot sector is executable and SPC=0, it's likely to be
	a custom loader for a game/demo (fix wrong warning with 'Closure'
	demo by Sync)
	[5946039a3f5c]

2016-02-14  Thomas Huth

	* src/cpu/CMakeLists.txt:
	Do not warn about unused functions and variables in the WinUAE
	sources. The warnings are completely harmless, but hard to fix if we
	want to keep the files as close to the WinUAE sources as possible,
	thus simply ignore them for now.
	[b79c564b4bcc]

	* src/cpu/CMakeLists.txt:
	Use a variable for the sources generated by gencpu
	[f7732dc0fc27]

2016-02-13  Nicolas Pomarede

	* src/video.c:
	More robust value for start cycle of each HBL (required for future
	changes)
	[f768f1440d0d]

2016-02-08  Eero Tamminen

	* src/debug/console.c:
	Flush BIOS console output

	BIOS console output needs to be flushed to Hatari's console
	(=stdout), otherwise it's always one line behind the emulation. And
	e.g. EmuTOS panic message "press any key to continue" would be
	output only after user does something (pauses emulation, quits
	Hatari etc).
	[9ddd8d4f9d56]

2016-02-07  Nicolas Pomarede

	* src/includes/m68000.h:
	Fix compilation for old UAE CPU core
	[a379b0444e69]

2016-02-07  Thomas Huth

	* src/cpu/newcpu.c:
	Silence some more compiler warnings in newcpu.c. Since srp_030 and
	crp_030 are basically defined as "unsigned long long", GCC
	complained about the PRIX64 format string on 64-bit Linux systems.
	Fix it by typecasting the variables to uint64_t here instead.
	[5d876080dcb8]

2016-02-07  Nicolas Pomarede

	* src/cpu/newcpu.c, src/includes/m68000.h:
	E-clock jitter was not correct for HBL/VBL in non CE 68000 mode
	[2069beccee79]

2016-02-05  Nicolas Pomarede

	* src/video.c:
	On STE, reading video counter was not correct with the +20 bytes
	left border removal
	[8c90bd815d04]

	* src/video.c:
	Add support for left+2 border at 50 Hz if switch back to 50 Hz is
	made at pos 54 This requires CE mode and 2 cycle precision when
	accessing FF820A (fix wsdtect.prg by Troed / Sync and report WS1 for
	STF)
	[94808b781b00]

	* src/video.c:
	On STF, the switch back to low res to remove left border should be
	made at pos > 4
	[33dcb7aed4d6]

2016-02-04  Nicolas Pomarede

	* src/includes/video.h, src/ioMemTabSTE.c, src/video.c:
	Access to STE hscroll registers must be on a 4 cycle boundary
	(shifter regs)
	[9a39e7629ced]

2016-01-31  Nicolas Pomarede

	* src/cpu/memory.c, src/includes/m68000.h, src/m68000.c, src/video.c:
	In CE mode, IO regs can be accessed on a 2 cycle boundary (except
	shifter regs) IO regs don't require to be accessed every 4n cycles,
	they can be accessed at 4n+2 too (like ROM and cartridge memory).
	Only shifter registers require to be aligned on 4n cycles (colors
	palette, resolution).
	[1fbb235758f1]

	* src/cpu/custom.c, src/cycles.c:
	In CE mode, accesses to slow 16 bit memory added 2 cycles
	before/after, instead of 4 cycles after like fast 16 bit memory
	Without this 'AddCycles' in Cycles_GetInternalCycleOnReadAccess /
	Cycles_GetInternalCycleOnWriteAccess for CE mode gave different
	results depending on the type of memory, even for case where results
	should be the same
	[cad7b0b90ffc]

	* src/cpu/memory.c:
	CE parameters for memory banks were not correctly copied when using
	24 bit addressing
	[63d8169f1940]

2016-01-28  Nicolas Pomarede

	* src/tos.c:
	DSP was not enabled when choosing Falcon's TOS 4
	[7ebdc2c741db]

	* src/cpu/newcpu.c:
	Fix DSP not working in CE mode (change #6017 was not complete)
	[aaa4fa710779]

2016-01-27  Eero Tamminen

	* doc/emutos.txt:
	Update EmuTOS compat
	[fc37fefae04a]

2016-01-25  Thomas Huth

	* src/cpu/newcpu.c:
	Need to call fill_prefetch() when returning early due to intercepted
	(X)BIOS call
	[cea08170aa60]

	* src/cpu/newcpu.c:
	Fix extended VDI resolution mode in certain WinUAE CPU modes. The PC
	was not set to CART_VDI_OPCODE_ADDR in MMU-enabled and non-cycle-
	exact WinUAE CPU modes. Fix it by moving the exception code to the
	ExceptionX() wrapper function instead, and by using m68k_getpc() and
	m68k_setpc() for modifying the PC (this should work in all modes).
	[1862739470f4]

2016-01-17  Thomas Huth

	* doc/images/keyboard.png, doc/manual.html:
	Update manual for the latest keyboard dialog changes
	[43ac93c6ac8c]

2016-01-15  Eero Tamminen

	* tests/debugger/test-breakcond.c:
	Change breakpoint test code to match previous commit

	I.e. rewrite breakpoint matching test code not to rely on breakpoint
	index being returned, just the information whether there was any hit
	at all.
	[177d2123b305]

	* src/debug/breakcond.c, src/debug/breakcond.h:
	Fix commit 5684 issue with breakpoint :once option

	Changing returned breakpoint index was needed in case list of
	breakpoints was changed (fix #5684). However, if there was only one
	breakpoint and it had :once option set, zero was returned,
	indicating that nothing was hit (bug reported by Laurent).

	Breakpoint index was needed only by testing code, so remove replace
	them just with bool value about whether any breakpoint was hit, and
	fix testing code in further commit.
	[3a59421e7949]

	* tests/debugger/test-dummies.c:
	Fix debugger tests
	[d70a97cdfd3e]

2016-01-15  Nicolas Pomarede

	* src/video.c:
	Don't modify HBL's position if we're handling the special HBL to
	restart video counter
	[105935882d90]

2016-01-15  Eero Tamminen

	* doc/release-notes.txt, src/video.c:
	TT: Sync ST & TT color registers on write

	Color register values between ST and TT palette on TT should be
	synched immediately on write instead of post-poning it to VBL.

	Issue reported by Roger Burrows, who provided test-case for it and
	tested it on real HW.
	[84f5e208d022]

2016-01-14  Eero Tamminen

	* doc/emutos.txt:
	EmuTOS compatiblity list update

	- Add new demos
	- Update compatibility information for latest EmuTOS with TT-low
	support and evnt_multi() fixes
	[6aa07ef8d88e]

2016-01-11  Eero Tamminen

	* doc/compatibility.html:
	Add STE, TT and Falcon demos + updates

	4getful regressed in last Hatari version
	[f4018fac92d2]

2016-01-10  Eero Tamminen

	* doc/todo.txt:
	Add TODO for Videl border color
	[df7875a85697]

	* doc/release-notes.txt:
	Fix typo
	[9947430cd6e1]

	* src/gui-sdl/dlgKeyboard.c:
	Improve shortcut dialog

	- Show values and have separate "Define" buttons for shortcut keys
	with and without modifiers
	- Tell user when new shortcut required removing another shortcut
	[8d5cca25b6e7]

2016-01-10  Thomas Huth

	* src/convert/macros.h:
	Remove now unused 8-bit convert macros
	[6c2162ae5910]

2016-01-09  Thomas Huth

	* src/screen.c:
	Fix crash when switching to fullscreen in paused VDI mode
	[4756d5aefe5a]

	* src/screen.c:
	Initialize STScreenRect in Screen_SetGenConvSize, too. This way, the
	statusbar does not get erased by accident during
	Screen_ClearScreen() in monochrome mode. And we can get rid of
	genconv_rect this way since this rect was storing the very same
	information as STScreenRect.
	[e908b1fbb8dd]

2016-01-03  Thomas Huth

	* src/screenConvert.c:
	Fix Falscreen convertion functions on big endian systems
	[ecfb0491e274]

	* CMakeLists.txt:
	Use SDL2_FOUND instead of ENABLE_SDL2 where appropriate since
	ENABLE_SDL2 only says whether SDL2 should be used, not whether it is
	really available now.
	[270dca9757a3]

2016-01-03  Nicolas Pomarede

	* src/video.c:
	Remove wrong warnings "bug nHBL=..." appearing after pressing
	shortcut key for reset These warnings were harmless and due to the
	reset functions altering PendingInterruptCount by restarting
	interrupts for every component (acia, ikbd, ...)
	[b9f7402ff1f9]

	* src/cpu/newcpu.c:
	Temporarily revert change #5976 to count cycles when calling DSP_Run
	This new method of counting CPU/DSP cycles creates problems when
	using Falcon's crossbar sound and should only be used when CPU
	cycles are more accurate in 68030 mode
	[23778cbd7eb8]

2016-01-02  Nicolas Pomarede

	* src/cpu/memory.c:
	For 68000 in CE mode, access to ROM/cartdridge don't require to be
	aligned on 4 cycles As measured on a real STF, this is because in
	that case CPU don't have to share bus with the shifter (as it's the
	case when accessing RAM)
	[323e07264819]

	* src/avi_record.c:
	Fix cropping one extra line at top for AVI recording using BMP codec
	The BMP codec stores lines in reverse order (from bottom to top) :
	line 0 was never saved and last saved line could be outside of the
	screen buffer
	[bf811118d9ed]

2016-01-01  Thomas Huth

	* src/screenConvert.c:
	Extract zoomed rendering code into separate functions for better
	readability and maintainability.
	[2abecdedafb2]

	* src/screenConvert.c:
	Extract non-zoomed rendering code into separate functions for better
	readability and maintainability.
	[17a992a17593]

	* src/screenConvert.c:
	Extract the common line rendering code into separate functions
	[9522e8d08ca0]

2015-12-31  Nicolas Pomarede

	* src/includes/video.h, src/video.c:
	More accurate reloading of $ff8205/07/09 at the end of VBL (used in
	Intro and Menu of 'Dark Side Of The Spoon' by ULM)
	[ab0a76d8ca9e]

2015-12-31  Thomas Huth

	* src/ioMemTabTT.c:
	The regions at 0xff8002 and 0xff8914 cause a bus error on the TT
	[b60b98541812]

	* src/video.c:
	Mask correct bits in shifter mode register on the TT
	[59c970c6e4db]

	* src/ioMemTabTT.c:
	Do not set TT horizontal scroll register to 0xff when being read
	[d66fb0fd7518]

	* src/ioMemTabSTE.c:
	Joypad fire button register is only 1 byte on STE
	[3e2d650e00da]

	* src/ioMemTabTT.c:
	Atari TT does not have the enhanced joystick ports, so remove these
	IO registers
	[553e1b8c8b6c]

	* src/falcon/videl.c, src/includes/screenConvert.h, src/screen.c,
	src/screenConvert.c:
	Use the pSTScreen copy of the video ram to render monochrome mode.
	This way the screen effects like writing to the screen counter
	registers are handled correctly again. This fixes the regression in
	the "Time Slices demo.
	[fe363df91db9]

2015-12-27  Thomas Huth

	* src/cpu/cpummu.c, src/cpu/cpummu.h, src/cpu/cpummu030.c,
	src/cpu/cpummu030.h:
	Sync cpummu sources with WinUAE
	[c70bfb005c69]

	* doc/release-notes.txt, src/paths.c:
	Use ~/.config/hatari as preferred home config directory if possible.
	Modern application save their configuration files in a subfolder of
	the ~/.config directory instead of polluting the user's main
	directory. Hatari should do this, too, unless there is already an
	~/.hatari folder - in that case we continue to use the old folder
	instead.
	[5189be2f52dd]

	* src/cpu/newcpu.c:
	Silence some of the compiler warnings in newcpu.c
	[bb108cb5946e]

2015-12-25  Thomas Huth

	* doc/release-notes.txt:
	Add release notes about SDL2 and shortcuts
	[83d55881ef59]

	* doc/images/keyboard.png, doc/manual.html:
	Update the manual for the new shortcut configuration
	[24178f7342f0]

	* CMakeLists.txt, configure:
	Use SDL2 now by default if available. SDL2 support should now be
	mature enough to be enabled by default.
	[f877051a6c90]

	* src/main.c:
	Make sure that window gets properly redrawn on restore events, too
	[60b968fdac89]

	* src/gui-sdl/dlgKeyboard.c:
	Add the possibility to configure the keyboard shortcuts in the GUI
	[2d592879a885]

	* src/keymap.c:
	Add names for the SDLK_WORLD keys from SDL1
	[95d40d8e7da8]

	* src/keymap.c:
	Also print the key name when tracing keymap
	[9cda14afdf77]

2015-12-22  Thomas Huth

	* doc/keymap-sample.txt, src/keymap.c:
	Allow keyboard names in the keymap files, too
	[56275937e52a]

2015-12-20  Thomas Huth

	* src/main.c:
	Handle mouse wheel events on SDL2, too
	[3f27ad5fb642]

2015-12-15  Thomas Huth

	* src/screen.c:
	Do not cripple huge resolutions with SDL2, use scaling to desktop
	limits instead
	[6b85c5872716]

	* src/resolution.c:
	Don't force software scaling with SDL2 since we're more flexible
	here
	[2dc75348d90b]

	* doc/manual.html:
	On Mac OS X, the Cmd key is used instead of AltGr
	[8aeb38998d8b]

	* src/gui-osx/English.lproj/SDLMain.nib/designable.nib, src/gui-
	osx/English.lproj/SDLMain.nib/keyedobjects.nib, src/gui-
	osx/French.lproj/SDLMain.nib/designable.nib, src/gui-
	osx/French.lproj/SDLMain.nib/keyedobjects.nib:
	Remove the Cmd-m keyboard shortcut from the OS X NIB files since
	this shortcut clashes with the grab-mouse keyboard shortcut from
	Hatari. Thanks to Bob Carpenter for the update.
	[3415294680a8]

2015-12-15  Nicolas Pomarede

	* src/cpu/newcpu.c, src/falcon/dsp.h, src/uae-cpu/newcpu.c:
	Use DSP_CPU_FREQ_RATIO instead of '2' when calling DSP_Run()
	[df8e39cb4ce3]

2015-12-14  Nicolas Pomarede

	* src/cpu/newcpu.c:
	Immediately start a new exception if IPL changes while processing
	the exception for an interrupt (from WinUAE beta) As measured on STF
	with a custom program, if a higher interrupt happens when already
	processing an exception A for an interrupt and before jumping to the
	new PC, then the new exception B will be processed immediately
	instead of jumping to the new PC A. This undocumented features of
	the 68000 means several interrupts can be stacked without processing
	any instruction in between, as long as IPL increases (this was also
	measured on Amiga for WinUAE) (fix fullscreen tunnel in Suretrip 49%
	by Checkpoint, VBL will sometimes happens while processing exception
	for the last HBL on line 312, just before jumping to the HBL handler
	; in that case, VBL handler should be called first)
	[4c9764cd8299]

2015-12-10  Thomas Huth

	* src/falcon/videl.c:
	Delete unused code VIDEL_getMonitorScale()
	[8a468b65b01b]

	* src/falcon/CMakeLists.txt, src/falcon/hostscreen.c,
	src/falcon/hostscreen.h, src/falcon/videl.c, src/includes/screen.h,
	src/screen.c, src/screenConvert.c, src/video.c:
	Move remaining Hostscreen code to screen.c to get rid of
	src/falcon/hostscreen.c
	[575b209f711f]

	* src/gui-osx/AlertHooks.h, src/gui-
	osx/English.lproj/SDLMain.nib/designable.nib, src/gui-
	osx/English.lproj/SDLMain.nib/keyedobjects.nib, src/gui-
	osx/French.lproj/SDLMain.nib/designable.nib, src/gui-
	osx/French.lproj/SDLMain.nib/keyedobjects.nib, src/gui-
	osx/PrefsController.h, src/gui-osx/PrefsController.m:
	Update Mac OS X GUI with fixes for SDL2 and FPU selection. Thanks to
	Jerome Vernet for the updates.
	[871b260bc6b4]

	* src/cfgopts.c, src/configuration.c, src/includes/cfgopts.h,
	src/includes/keymap.h, src/keymap.c:
	Use key names in config file instead of SDL version specific keysym
	codes
	[3da0d87d889a]

2015-12-08  Eero Tamminen

	* src/debug/breakcond.c:
	Breakpoint help output improvements

	- Show also :quiet option if it's set
	- Tell where one sees list of bp options
	[ce2d2e50e45a]

2015-12-06  Nicolas Pomarede

	* src/fdc.c, src/floppy.c:
	Improve the value of the WPT bit when inserting/ejecting a floppy As
	measured on real 520 STF, when a floppy is write protected, it is
	not possible to detect an insert/eject sequence, because WPT will
	always be 1 Only non-write protected floppies can be correctly
	detected during insert/eject (previous version was not correct as it
	created a 0/1 transitions in all cases, even for write protected
	floppies)
	[e585bd5c5322]

2015-12-03  Thomas Huth

	* src/gui-sdl/sdlgui.c, src/main.c, src/screen.c:
	Enable resizable window with SDL2
	[d9d72bbb823c]

2015-12-02  Eero Tamminen

	* doc/manual.html:
	"right Alt", as suggested by David Savinkoff
	[a9aed2d4fa09]

	* doc/manual.html:
	Same key names as on keyboard, explain AltGr

	- Add link explaining what is AltGr key, in case user's keyboard
	doesn't contain that key.
	- Change special key names from upper case to mixed case, like they're
	in the keys on most keyboards (as some of those names already were)
	[5c551f68f770]

2015-11-29  Nicolas Pomarede

	* src/cpu/newcpu.c:
	Reset 'currcycle' after calling M68000_AddCycles_CE for 68020/68030
	CE mode
	[059226a1a712]

	* src/cpu/newcpu.c, src/falcon/dsp.c, src/falcon/dsp.h:
	Safer method to count the number of cycles the DSP should use on
	each run When using CE mode, currcycle can be reset/incremented at
	different places, so we need a global variable to count the total
	number of cycles since the previous CPU instruction was executed.
	[7f3717e03d38]

2015-11-29  Thomas Huth

	* src/screen.c:
	Try to keep the SDL2 window if possible to avoid some flickering
	when switching resolutions
	[616372838abb]

	* src/falcon/hostscreen.c:
	Use nicer fullscreen mode for Falcon/TT/VDI video modes in SDL2
	fullscreen
	[18c64fcbfd5b]

	* src/gui-osx/PrefsController.m:
	Replace SDL_JoystickName() with Joy_GetName() for proper SDL2
	support
	[1d0984b1f53d]

	* src/gui-osx/English.lproj/SDLMain.nib/designable.nib, src/gui-
	osx/English.lproj/SDLMain.nib/keyedobjects.nib, src/gui-
	osx/French.lproj/SDLMain.nib/designable.nib, src/gui-
	osx/French.lproj/SDLMain.nib/keyedobjects.nib:
	Update the OS X nib files for the 8bpp option removal. Thanks to
	Jerome Vernet for the new files.
	[da60d3514916]

	* src/gui-osx/PrefsController.h, src/gui-osx/PrefsController.m:
	Remove 8bpp GUI option handling in OS X PrefsController
	[307ae01bcc78]

	* src/gui-sdl/dlgScreen.c:
	Add shortcut for 'keep desktop resolution'
	[a85aeef9249b]

	* src/screen.c:
	SDL2 fullscreen flags should be ORed with the other flags, not
	overwrite them
	[702ab1404d96]

2015-11-28  Nicolas Pomarede

	* src/screen.c:
	Add missing declaration when compiling with SDL1
	[98d40cd84998]

	* src/video.c:
	Check for nHBL range only when in STF/STE mode
	[fee592a8abb0]

2015-11-28  Thomas Huth

	* src/screen.c:
	Only delay when switching resolution between desktop and fullscreen
	mode
	[507ee690d3f6]

	* src/screen.c:
	Add a function for abstracting the bKeepResolution information
	between SDL1 and SDL2
	[7125614a5a5e]

	* src/configuration.c, src/gui-sdl/dlgScreen.c,
	src/includes/configuration.h, src/options.c, src/screen.c:
	Allow host screen resolution switching in SDL2 fullscreen mode, too
	[4838ccc01514]

2015-11-21  Nicolas Pomarede

	* src/cpu/gencpu.c:
	Don't prefetch for i_BKPT, i_CALLM and i_RTM (from WinUAE beta)
	[df8f14e35582]

	* src/video.c:
	In Video_ConvertPosition, improve a rare case between end of last
	HBL and start of next VBL
	[534045a1bad8]

	* src/cpu/gencpu.c:
	For WinUAE CPU, fix undocumented behaviour for BFFFO (patch by Toni
	Wilen)
	[0f034599c6b5]

2015-11-19  Laurent Sallafranque

	* src/falcon/dsp_cpu.c:
	dsp fix from Andreas. The appended minor patch makes handling of
	rreg in dsp_update_rn consistent with my the previous patch and
	avoids singed integer wrap around in certain conditions.
	[62cb704f2b97]

2015-11-15  Nicolas Pomarede

	* src/video.c:
	Call ShortCut_ActKey() earlier in VBL to get more consistent memory
	snapshots created using shortcut keys (eg, fix restoring screen 1 in
	the B.I.G. Demo, where the raster bar can be wrongly displayed
	during several VBL)
	[db90b6c4d17b]

2015-11-10  Nicolas Pomarede

	* src/cycles.c, src/includes/cycles.h, src/mfp.c:
	Use Cycles_GetInternalCycleOnWriteAccess() instead of
	CurrentInstrCycles when starting MFP timers (fix 'Fuck Cancer' by
	Phalanx when running in CE mode)
	[2d40179952b9]

2015-11-09  Nicolas Pomarede

	* CMakeLists.txt, configure:
	Use WinUAE CPU core by default for STF/STE mode too, not just for
	TT/Falcon The old UAE CPU core is still available but should be
	considered deprecated since the new WinUAE CPU core should now give
	similar or better results for STF/STE and without the need for
	special cases (eg prefetch, pairing, stack frames, ...)
	[68c5ccbd018c]

	* src/uae-cpu/gencpu.c, src/uae-cpu/newcpu.h:
	For old UAE CPU, improve refill_prefetch for i_ADD (fix the
	protection in 'Cubase 2' which uses self modified code)
	[105646edc92f]

2015-11-08  Thomas Huth

	* src/falcon/hostscreen.c, src/falcon/hostscreen.h,
	src/falcon/videl.c, src/includes/screen.h, src/screen.c,
	src/screenConvert.c:
	Get rid of some HostScreen functions
	[6c2c64b6e0aa]

	* src/falcon/hostscreen.c, src/falcon/hostscreen.h, src/main.c:
	Remove the unused HostScreen_Init/UnInit functions
	[c8c4dda04330]

2015-11-07  Thomas Huth

	* src/includes/screen.h, src/includes/video.h, src/screenConvert.c,
	src/video.c:
	Clean up bTTSampleHold and bTTHypermono variables
	[983631265d0b]

	* src/includes/screenConvert.h, src/memorySnapShot.c,
	src/screenConvert.c:
	Save palette of generic screen convert function in memory snapshots,
	too
	[7be382360e25]

2015-11-06  Nicolas Pomarede

	* src/debug/68kDisass.c, src/uae-cpu/newcpu.c:
	Allow disassembling lower RAM < $800 even when not in supervisor
	mode
	[846a841542bc]

2015-11-06  Thomas Huth

	* src/screenConvert.c:
	Fix the TT sample-n-hold screen mode. This was broken because it had
	been only implemented in the 8-bit host screen rendering functions
	which have recently been removed.
	[d9a86d7ea65b]

	* src/screen.c, src/video.c:
	Keep the nForceBpp value in TT, VDI and mono mode
	[3d0e060fe905]

2015-11-05  Laurent Sallafranque

	* src/falcon/dsp_cpu.c:
	another fix for dsp adressing mode by Andreas, for testing purpose
	[74e823b2f7f0]

2015-11-05  Nicolas Pomarede

	* src/mfp.c:
	Avoid checking interrupt one by one if there's no pending bit at all
	[f527505e68e8]

	* src/cpu/newcpu.c:
	Correctly clear level 6 pending IRQ after processing the IACK
	sequence for DSP/MFP (fix slideshow part in 'Froggies Over The
	Fence' demo when using CE mode)
	[f5d45ba90b59]

2015-11-04  Thomas Huth

	* src/video.c:
	Improve palette handling in TT mode. Make sure that the lower nibble
	is set, too, so that e.g. the white color is really white and not
	just bright grey. Also refactor the code a little bit to avoid
	duplication of the color calculation.
	[76501feb5a96]

	* src/falcon/dsp_cpu.c, src/falcon/videl.h, src/ikbd.c:
	Remove redundant declarations
	[deff995f621a]

2015-11-02  Nicolas Pomarede

	* src/includes/version.h:
	Use devel naming in PROG_NAME
	[65c28383507f]

2015-11-01  Thomas Huth

	* src/screenConvert.c:
	Initial calculation in BitplaneToChunky is only necessary in >= 4
	bpp
	[e6f09bdcedfc]

	* src/falcon/videl.c, src/falcon/videl.h, src/video.c:
	Update VIDEL colors when using VDI mode in Falcon mode
	[918ae49b976d]

	* src/video.c:
	Fix palette handling when using VDI mode with TT machines
	[4aadc4c39c53]

	* src/screen.c, src/video.c:
	Fix the palette handling in monochrome VDI mode
	[c9c64a564082]

2015-11-01  Eero Tamminen

	* CMakeLists.txt:
	Correct 'udev' dependency message in CMakeLists.txt
	[d199be91c06d]

2015-11-01  Nicolas Pomarede

	* doc/compatibility.html:
	Add note for Reset screen in 20 Years Atari STE Megademo
	[2db5fa50dfb8]

2015-10-30  Thomas Huth

	* src/convert/macros.h:
	Remove the macros for converting ST-high to 8-bit surfaces. They are
	not needed anymore now that ST-high is converted via the generic
	screen conversion function.
	[0d9580f19ff9]

	* src/screenConvert.c:
	Duplicate the bitplaneToChunky function, one for 16-bit & one for
	32-bit pixels. This way we can get rid of the indirection via the
	"Uint8 color[16]" array, and this speeds up the screen rendering
	quite a bit.
	[eae3e6974a39]

2015-10-29  Thomas Huth

	* src/falcon/hostscreen.c, src/falcon/hostscreen.h,
	src/falcon/videl.c, src/includes/screenConvert.h, src/screen.c,
	src/screenConvert.c, src/video.c:
	Move palette handling from hostscreen.c into screenConvert.c
	[9a7c062f806a]

2015-10-28  Thomas Huth

	* src/falcon/hostscreen.c, src/falcon/videl.c, src/video.c:
	Remove HostScreen_updatePalette() - it's not required anymore
	[0aa79ae6cb84]

	* src/screenConvert.c:
	Remove the generic 8-bit-per-hostscreen-pixel rendering code. Now
	that 8-bit depths are disallowed in the config file and from the CLI
	option, the generic 8-bit rendering code is also not needed anymore.
	[f937b89d64c3]

	* src/screen.c, src/video.c:
	Render TT modes in preferred bit-depths, too
	[49ac164ae46a]

	* src/configuration.c:
	Add a sanity check to disallow 8-bit color depths from the config
	file
	[f16d73bd5866]

	* src/convert/low320x8.c, src/convert/low640x8.c,
	src/convert/med640x8.c, src/convert/routines.h, src/options.c,
	src/screen.c:
	Get rid of the 8-bit only low and medium resolution conversion
	functions
	[612e95d32bfe]

2015-10-24  Thomas Huth

	* src/convert/routines.h, src/convert/vdi16.c, src/convert/vdi2.c,
	src/convert/vdi4.c, src/screen.c, src/video.c:
	Get rid of the 8-bit only VDI conversion functions
	[b889886d323f]

	* src/convert/high640x8.c, src/convert/routines.h, src/screen.c:
	Get rid of the 8-bit only monochrome conversion function. Use the
	generic screen conversion function instead - that's better since it
	supports also other host screen depths.
	[eeecad62e36c]

2015-10-23  Thomas Huth

	* src/includes/screenConvert.h, src/screenConvert.c, src/video.c:
	Add Screen_GenDraw() wrapper that also takes care of the screen
	locking
	[71add78e853f]

	* src/CMakeLists.txt, src/falcon/videl.c,
	src/includes/screenConvert.h, src/screenConvert.c, src/video.c:
	Detach the generic screen rendering code from the Videl code
	[95ecfcd56cac]

	* src/falcon/videl.c, src/screenConvert.c:
	Move VIDEL screen convert functions to separate file. The plan is to
	make them independent of VIDEL to be able to re-use them for VDI and
	monochrom screen convertion, too, so they should reside in a file
	that is not directly related to the VIDEL code.
	[10183a613d67]

2015-10-30  Nicolas Pomarede

	* src/video.c:
	Correctly show the last 8 pixels when displaying an STE 224 byte
	overscan line with 416 usable pixels (fix 'Drone' by DHS,
	'PhotoChrome Viewer' by DML, ...)
	[75d4fd97f94d]

2015-10-29  Eero Tamminen

	* cmake/FindUdev.cmake:
	Fix: Add the missing udev CMake file
	[cfe1fa06c7ab]

2015-10-29  Nicolas Pomarede

	* src/cpu/newcpu.h, src/cpu/savestate.h, src/fdc.c, src/floppy_stx.c,
	src/gemdos.c, src/gui-osx/Shared.h, src/gui-sdl/sdlgui.c, src/hdc.c,
	src/ioMem.c, src/psg.c, src/spec512.c, src/uae-cpu/newcpu.h:
	Fix typos reported by codespell
	[1be28bed3a62]

2015-10-29  Eero Tamminen

	* CMakeLists.txt, cmake/config-cmake.h, readme.txt,
	src/CMakeLists.txt, src/nf_scsidrv.c:
	NF SCSI driver media change support / libudev dependency

	- CMake stuff to detect whether udev include & lib are installed
	- NF SCSI driver media change detection using libudev
	- optional, enabled only if libudev available

	Code from Uwe with small modifications for udev detection.
	[9e11e20df838]

2015-10-25  Laurent Sallafranque

	* CMakeLists.txt:
	bad param in CMakeList file (return to previous file)
	[9fd8a83bd51e]

	* CMakeLists.txt, src/falcon/dsp_cpu.c:
	fix DSP again: modulo addressing mode should work also for (Rn)-Nn
	[8a4ebbad7346]

2015-10-22  Laurent Sallafranque

	* src/falcon/dsp_cpu.c:
	DSP fix: modulo arythmetic was wrong in address computing when Nx>Mx
	and Nx=P*2xp(k)
	[482fd5250a59]

2015-10-18  Eero Tamminen

	* doc/emutos.txt:
	Minor improvements to emutos.txt + add one STE demo
	[fc78b727e8da]

2015-10-14  Eero Tamminen

	* doc/scsi-driver.txt, src/nf_scsidrv.c:
	NF SCSIDRV v1.02 from Uwe

	- NF error function added
	- Automatic media change and reset handling
	[a91a9ac32d13]

2015-10-28  Nicolas Pomarede

	* src/video.c:
	Add special case for 'Tekila' screen in 'Delirious Demo IV' (change
	video counter while display is ON) This is a temporary patch and it
	doesn't fix all the cases
	[132f794eabe7]

2015-10-26  Nicolas Pomarede

	* src/video.c:
	Add special case for 'Gen 4 Demo' by Ziggy Stardust / OVR (for old
	and new CPU)
	[e4cb7838d8e1]

	* src/cycles.c, src/video.c:
	Update heuristics for read accesses in prefetch mode to get more
	code common with CE mode Remove special case for 'RGBeast' by
	'Aggression' and add special case for 'E605' by 'Light'
	[45928c6106d4]

2015-10-24  Nicolas Pomarede

	* src/cpu/gencpu.c:
	For WinUAE CPU in prefetch mode, fix number of cycles for DBcc
	(patch by Toni Wilen) Cycles were correct for DBF, but not for other
	DBNE (fix top border removal in 'Bird Mad Girl Show' loader screen)
	[66b829d0c2f2]

2015-10-23  Nicolas Pomarede

	* src/fdc.c:
	Fix a possible crash (division by 0) if drive was unselected during
	an FDC DMA transfer Once an FDC command (eg read sector) is started,
	it's in fact possible to unselect the drive and the transfer will
	complete anyway. (fix loader in the menu of the 'Bird Mad Girl
	Show')
	[7b0f2fd39168]

	* src/cycles.c:
	For Cycles_GetInternalCycleOnRead/WriteAccess() in CE mode, wait
	states are already counted
	[0410cc106d10]

	* src/blitter.c, src/cpu/newcpu.c, src/cycles.c,
	src/includes/m68000.h, src/m68000.c, src/mfp.c, src/uae-
	cpu/newcpu.c:
	Slighlty improve handling of wait states in run_xx() in newcpu.c
	(remove use of SPCFLAG_EXTRA_CYCLES)
	[7b85a1f534cb]

	* src/cpu/newcpu.c, src/includes/m68000.h, src/m68000.c:
	When using CE mode, wait state cycles in M68000_WaitState() should
	be added during the opcode, not at the end
	[8e78294138bf]

2015-10-22  Nicolas Pomarede

	* src/cpu/gencpu.c, src/cpu/newcpu.c:
	Make STOP take at least 8 cycles in gencpu.c, not in newcpu.c (from
	WinUAE 3.2.0 b17)
	[5f93bdacc1b7]

	* src/cpu/newcpu.c:
	For 68000 in CE mode, STOP should take at least 8 cycles (not 4)
	when interrupt is already pending This was verified by Toni Wilen
	with a logic analyzer and also measured on STF using a home made
	program (partially fix 'Grid' by Overlanders in the Ventura demo)
	[30a608293ccf]

	* src/cpu/newcpu.c, src/includes/m68000.h:
	For 68000 in CE mode, improve cycles for auto vectored IACK sequence
	(HBL/VBL) + documentation These values were measured on STF using a
	home made program, then adapted on Hatari to get the same results
	[a1670cb2c707]

2015-10-19  Nicolas Pomarede

	* src/includes/video.h:
	Update comments for RESTART_VIDEO_COUNTER_CYCLE_xxx
	[34865524ac1f]

2015-10-18  Nicolas Pomarede

	* src/psg.c:
	Add comments
	[9f5f3c6f4be0]

2015-10-16  Nicolas Pomarede

	* src/psg.c:
	Better handling of the wait states when accessing YM2149 regs, using
	PSG_WaitState()
	[f1f5eeb0c884]

2015-10-14  Nicolas Pomarede

	* src/video.c:
	Add a temporary special case for 'Delirious Demo IV' loader This
	demo reads video counter while mixing low/high res on the same line,
	which is not supported on Hatari yet.
	[73765807f658]

	* src/video.c:
	Remove unneeded special case for 'Gen 4 Demo' by Ziggy Stardust /
	OVR
	[73774b66d291]

	* src/cpu/newcpu.c:
	For 68000 in CE mode, fix cycles for TRACE exception (should be 34,
	not 38)
	[9c22d8facc11]

	* src/cpu/newcpu.c:
	For WinUAE CPU, remove unneeded specific cases for Hatari
	[99ecc8ef9850]

2015-10-13  Nicolas Pomarede

	* src/cpu/newcpu.c:
	Clean some code for 68000 in CE mode
	[85f73a42741f]

	* src/cpu/newcpu.c:
	For 68000 in CE mode, correctly update cycles during IACK sequence
	[5474a5cf2097]

2015-10-11  Nicolas Pomarede

	* src/cpu/newcpu.c, src/m68000.c:
	When using CE mode, call M68000_Update_intlev() after changing
	pendingInterrupts
	[8a07284cfdee]

2015-10-10  Nicolas Pomarede

	* src/cpu/newcpu.c, src/includes/m68000.h:
	For 68000 in CE mode, interrupts should take 56 cycles
	[18404857e99f]

2015-10-09  Nicolas Pomarede

	* src/cycles.c:
	For 68000 in CE mode, just add 2 cycles instead of 4 to get internal
	cycles for memory accesses
	[a305ad8fa763]

	* src/cpu/cpu_prefetch.h:
	For 68000 in CE mode, enable 2 cycle wait when memory write is not
	on a multiple of 4 cycles
	[6e4f67bda16a]

2015-10-08  Nicolas Pomarede

	* src/cpu/newcpu.c, src/cycles.c, src/includes/m68000.h, src/m68000.c:
	Add M68000_AddCycles_CE() to handle cycles when running with
	WinUAE's cpu in 'cycle exact' mode In that case, we don't round
	cycles anymore to the next nearest 4 cycles and 'instruction
	pairing' don't need to be handled with some tables/heuristics, they
	just show as a consequence of having opcode's sub-cycles on a 2
	cycle boundary, as on real HW
	[92b7bec1f222]

	* src/cpu/cpu_prefetch.h, src/cpu/custom.c:
	For 68000 in CE mode, automatically add 2 cycle wait when memory
	access is not on a multiple of 4 cycles For memory shared with
	shifter, 68000 STF/STE can only access memory on the next multiple
	of 4 cycles. If some accesses are made at 4n+2 cycles, 2 cycle wait
	must be added, which means some instructions will sometimes take 2
	or 4 cycles more than in the official 68000 documentation. Examples
	of instructions with possible misaligned accesses are : DBcc, Bcc,
	JSR, JMP, d8(an,xn) addressing mode, ...
	[0c454e08ef00]

2015-10-07  Nicolas Pomarede

	* src/cycles.c, src/video.c:
	When using CE mode, use the exact cycles for memory access, not
	heuristics
	[c6879058c9f6]

2015-10-06  Eero Tamminen

	* doc/scsi-driver.txt, src/includes/nf_scsidrv.h, src/nf_scsidrv.c,
	src/reset.c:
	New NatFeats SCSI driver version from Uwe

	- close() call added
	- open()/inout() get handle as argument
	- open handles are closed at emulation reset
	- inquire_bus() argument 16 -> 32 bit
	[42e899feceba]

2015-10-05  Nicolas Pomarede

	* src/cpu/memory.c:
	Typo
	[e9ee84a2b7ab]

	* src/cpu/gencpu.c:
	Fix CAS2 writting to the compare registers instead of the update
	registers (from WinUAE 3.2.0 b15)
	[527b1ab7b012]

	* src/cpu/newcpu.c:
	Fix disassembler for movem (from WinUAE 3.2.0 b15)
	[1a9676aa78ed]

2015-10-03  Nicolas Pomarede

	* src/cycles.c, src/spec512.c:
	Move spec512's cycles heuristics into cycles.c and use
	Cycles_GetCounterOnWriteAccess() instead
	[4560d7e84cab]

	* src/tos.c:
	We must call M68000_CheckCpuSettings() after changing
	bAddressSpace24
	[d8200d209b24]

2015-10-01  Nicolas Pomarede

	* src/ikbd.c:
	In IKBD_Reset, don't restart INTERRUPT_IKBD_AUTOSEND if it's already
	enabled (fix unresponsive keyboard after pressing alt+r during the
	intro of the 'Vodka Demo' by 'Equinox')
	[cd533431b24c]

2015-09-29  Nicolas Pomarede

	* doc/release-notes.txt:
	Update release notes
	[1a854d4ad1fc]

	* src/includes/video.h, src/video.c:
	Add values for RestartVideoCounterCycle when using 60 Hz in STF/STE
	mode (fix 60 Hz spectrum 512 double buffer image in the intro of the
	'Place To Be Again' demo)
	[447312e0b694]

	* src/video.c:
	Remove debug printf
	[cc5c9190cc16]

	* doc/compatibility.html, doc/release-notes.txt:
	Update doc / compatibility list
	[755cf8a8a77c]

	* src/video.c:
	In STE mode, fix reading $ff8205/07/09 after modifying values while
	display is ON (fix timer B / colors in the Menu screen in the 'Place
	To Be Again' demo in STE mode)
	[e0d6286a2959]

2015-09-25  Nicolas Pomarede

	* src/spec512.c:
	Improve spectrum512 like images for WinUAE CPU in "prefetch mode"
	when using "movem.l" Similar to "move.l", this was wrong when old
	UAE CPU was used (fix Menu in Dragonnels Demo)
	[cf29fa053e27]

	* src/spec512.c:
	Remove old/unused code
	[3126a9b221f9]

2015-09-24  Nicolas Pomarede

	* src/spec512.c:
	Improve spectrum512 like images for WinUAE CPU in "prefetch mode"
	when using "move.l" When colors are changed using a "move.l" we get
	2 word accesses to IO, not 1 unique long access (old UAE CPU does 1
	unique long access to IO, but that's wrong because ST's bus is only
	16 bits) (fix Spectrum 512 slideshow by TEX, F6 screen in Overscan
	Demos by Paulo Simoes, HighResMode STE demo by Paradox)
	[69f03999a8a7]

	* src/acia.c, src/cpu/gencpu.c, src/cycles.c, src/includes/cycles.h,
	src/uae-cpu/gencpu.c:
	Remove special case for MOVEP from CPU emulation, use more generic
	IoAccessInstrCount in IoMem.c instead
	[10c2f11dd473]

2015-09-23  Nicolas Pomarede

	* src/cycles.c, src/includes/ioMem.h, src/ioMem.c:
	For IO memory, add IoAccessInstrCount to keep track of instructions
	doing several IO accesses This is used to get better approximation
	of read/write cycles when CPU runs in "prefetch mode" and not in
	"cycle exact mode". For example, this tells which nth byte a "movep"
	is accessing, or which nth long a "movem.l" is accessing This can be
	used to improve heuristics in cycles.c for
	Cycles_GetInternalCycleXXXX()
	[6ace0f2b187c]

2015-09-21  Eero Tamminen

	* src/gui-sdl/sdlgui.c:
	SDL GUI: Add (disabled) dialog debugging code
	[b957026c6eb5]

	* src/gui-sdl/sdlgui.c:
	SDL GUI cleanup: minor refactoring

	- better variable name: defocus -> defbutton (defocus is bad name
	with focused variable)
	- move duplicate code out of if/else
	- fix brace formatting
	[cb2731d4d6f5]

	* src/gui-sdl/sdlgui.c:
	SDL GUI: Fix wrong memory access

	Clearing focus for an item with error (=negative) index, besides
	being redundant, changes value for "random" value that happens to be
	at that offset before the dialog structure.

	(After SDLGUI_NOTFOUND change, this cleared default Alert button
	setting if Fileselector was used before Alert dialog.)

	Additionally add couple of assert()s to make sure FocusNext() method
	is used correctly.
	[535d7def5dd2]

2015-09-20  Eero Tamminen

	* src/gui-sdl/dlgAlert.c, src/includes/sdlgui.h:
	SDL GUI cleanup: remove redundant define & string
	[cd0cde50ea2b]

2015-09-20  Thomas Huth

	* src/cpu/newcpu.c:
	Add missing Hatari special code to m68k_run_mmu060()
	[f60dc9c66d17]

	* src/m68000.c:
	Ensure that Hatari with old UAE core does not crash with 68060 in
	config file!
	[3dec9bb90508]

	* src/screen.c:
	Fix compilation when DEBUGPRINT is enabled
	[369f7f00d344]

2015-09-20  Eero Tamminen

	* src/shortcut.c:
	Remove redundant code from disk insert shortcut
	[75e4d5334c92]

	* src/gui-sdl/sdlgui.c:
	SDL GUI: more required SDLGUI_NOTFOUND changes
	[a6f88ab21cff]

	* src/gui-sdl/sdlgui.c:
	SDL GUI: improve comments
	[e4ebbf288b4a]

	* src/gui-sdl/sdlgui.c, src/includes/sdlgui.h:
	SDL GUI: Replace magic values with a SDLGUI_NOTFOUND define

	sdlgui.c used two different magic values, -1 & 0, to indicate that
	there's no match for a dialog item. Besides there being two values
	for this, 0 is valid object ID for top container so this is
	confusing. Replaced these with a SDLGUI_NOTFOUND define.
	[c36f8569fed6]

2015-09-19  Eero Tamminen

	* src/gui-sdl/dlgAbout.c, src/gui-sdl/dlgAlert.c, src/gui-
	sdl/dlgDevice.c, src/gui-sdl/dlgFileSelect.c, src/gui-
	sdl/dlgFloppy.c, src/gui-sdl/dlgHalt.c, src/gui-sdl/dlgHardDisk.c,
	src/gui-sdl/dlgJoystick.c, src/gui-sdl/dlgKeyboard.c, src/gui-
	sdl/dlgMain.c, src/gui-sdl/dlgMemory.c, src/gui-sdl/dlgNewDisk.c,
	src/gui-sdl/dlgRom.c, src/gui-sdl/dlgScreen.c, src/gui-
	sdl/dlgSound.c, src/gui-sdl/dlgSystem.c, src/gui-sdl/sdlgui.c,
	src/includes/sdlgui.h:
	SDL GUI: Replace magic value -1 with SGSTOP define
	[300b7f1680de]

	* src/nf_scsidrv.c:
	NF SCSI driver fixes from Uwe

	Handle NULL sense buffer in scsidrv_inout().
	[50399608e94c]

2015-09-17  Eero Tamminen

	* doc/release-notes.txt:
	Fix typo
	[973489cff30e]

	* doc/release-notes.txt:
	Update release notes
	[38838883df38]

	* src/debug/debugui.c:
	Fix debugger log file handling

	Debugger log file was changed back to stderr whenever emulation was
	continued from debugger. Now that requires explicit "logfile"
	command.
	[a4708d6145a3]

	* src/debug/debugdsp.c, src/falcon/dsp.c, src/falcon/dsp.h,
	src/falcon/dsp_cpu.c, src/falcon/dsp_disasm.c,
	src/falcon/dsp_disasm.h:
	DSP debug output must respect output settings

	Use trace file when tracing and debugger log file when outputting
	registers, disassembly and memory dumps, like CPU side does.
	[03ca96c7d5ae]

	* src/debug/debugcpu.c:
	Fix: CPU symbol tracing should go to trace file
	[18b4aad85e80]

	* doc/compatibility.html:
	More info on color runner
	[95ce2d893eb5]

2015-09-17  Nicolas Pomarede

	* src/cart.c:
	When ejecting Gemdos HD drive, the 3 opcodes were still patched
	instead of returning 'illegal' This was a regression from rev #5476
	and could cause some games/demos protections to fail if Gemdos HD
	was disabled after starting Hatari instead of disabling it before
	starting (fix protection in Transbeauce II demos)
	[587cd6b12afa]

2015-09-14  Eero Tamminen

	* doc/compatibility.html, doc/todo.txt:
	Ishar has same issue as Hextracker. Add Color runner
	[335f8dc9440b]

	* doc/release-notes.txt:
	User noted that v1.9 fixed also Cubase2 midi output
	[4dff7b9d649f]

	* doc/manual.html:
	Add note about loop label matching overhead for profiling
	[60ff0f0f55b0]

2015-09-14  Nicolas Pomarede

	* src/createBlankImage.c, src/gui-osx/CreateFloppyController.m, src
	/gui-sdl/dlgNewDisk.c, src/includes/createBlankImage.h,
	tools/hmsa/hmsa.c:
	Allow to set the volume's label when creating a floppy disk from
	Hatari's menu The volume's label is stored in the 1st entry of the
	directory
	[6cc9c9012135]

	* src/cpu/CMakeLists.txt:
	Re-enable some compilation's warnings
	[60249d1462a9]

2015-09-12  Eero Tamminen

	* doc/authors.txt, doc/release-notes.txt, doc/scsi-driver.txt,
	src/CMakeLists.txt, src/debug/log.c, src/debug/log.h,
	src/debug/natfeats.c, src/includes/nf_scsidrv.h, src/nf_scsidrv.c:
	Add NatFeats SCSI driver from Uwe Seimet
	[214fb9dad54f]

2015-09-11  Eero Tamminen

	* doc/emutos.txt:
	Add few demos to EmuTOS compat list
	[65087518a60a]

2015-09-11  Nicolas Pomarede

	* .hgtags:
	Added tag v1.9.0 for changeset 978142ac82ff
	[48901f35be92]

	* src/cpu/CMakeLists.txt:
	Disable some compilation's warnings for release 1.9
	[978142ac82ff] [v1.9.0]

2015-09-10 : *** Version 1.9.0 ***

2015-09-10  Nicolas Pomarede

	* doc/compatibility.html, doc/doxygen/Doxyfile, doc/manual.html, doc
	/release-notes.txt, hatari.spec, readme.txt, src/gui-osx/Info-
	Hatari.plist, src/includes/version.h, src/memorySnapShot.c:
	New release 1.9.0, increase version in corresponding files
	[f89638264376] [tip]

2015-09-09  Nicolas Pomarede

	* src/cpu/newcpu.c:
	Disable debug for 68030's cache
	[196f9d3877d0]

2015-09-08  Eero Tamminen

	* doc/authors.txt:
	authors.txt update from Uwe
	[4fa5a272ae68]

2015-08-28  Eero Tamminen

	* src/falcon/nvram.c, src/falcon/nvram.h, src/falcon/videl.c:
	Improved NVRAM logging + comment fix
	[be7c2f9f4594]

2015-08-27  Nicolas Pomarede

	* doc/release-notes.txt, src/blitter.c:
	When blitter transfer ends, we must also clear hog bit, not just
	busy bit (fix BLTBENCH.TOS and BBENCH3.TOS by Franck B on www.atari-
	forum.com)
	[86e2caf1d1a5]

2015-08-26  Eero Tamminen

	* src/falcon/videl.c:
	Fix crash with bad Videl reg values

	For some reason Falcon screen width is now always zero ($ff8210 is
	set to 0x0c00 at TOS4 boot and as this value is ORed with 0x3ff to
	get sensible values -> zero width).

	Videl Zoom code will then allocate zero sized buffer and tries to
	write there at least 16 values which naturally segfaults. -> Added
	check and Videl trace logging to catch & prevent that.

	The check earlier catches cases where screen size + borders is too
	small, added logging there too and updated comments.
	[d1b01a6bf36f]

2015-08-18  Nicolas Pomarede

	* src/video.c:
	On STE, fix a rare case when reading video counter at end of line
	and $FF820F is != 0
	[00c86eb22297]

2015-08-12  Eero Tamminen

	* doc/compatibility.html, doc/release-notes.txt:
	Update compatibility notes / regressions
	[e5fe9faa83b8]

2015-08-12  Nicolas Pomarede

	* src/cpu/gencpu.c, src/cpu/newcpu.c:
	Small 68020/30 prefetch update (from WinUAE 3.2.0 b7)
	[ab6b0d0ce386]

2015-08-12  Eero Tamminen

	* src/gui-sdl/dlgHalt.c:
	Keyboard shortcuts to Halt dialog
	[64b9afcd4e69]

2015-08-07  Eero Tamminen

	* doc/compatibility.html, doc/emutos.txt:
	Update compatibility docs
	[f27b0711f92b]

2015-08-04  Nicolas Pomarede

	* src/cpu/cpummu.c, src/cpu/cpummu.h, src/cpu/newcpu.c:
	Fix MMU ATC flag for 68040/68060 (from WinUAE 3.2.0 b3)
	[56f8d28da7bc]

2015-08-02  Nicolas Pomarede

	* doc/release-notes.txt:
	Add more changes to WinUAE's CPU release notes
	[b241b6b4c051]

	* src/cpu/build68k.c, src/cpu/cpu_prefetch.h, src/cpu/gencpu.c,
	src/cpu/newcpu.c, src/cpu/newcpu.h:
	Better handling of the 68020/30's prefetch pipeline in CE mode (from
	WinUAE 3.2.0 b7) When the 68020/30 prefetches 3 words for the next
	instructions, it will stop prefetching when one of the prefetched
	word can trigger a branch (bsr, bra, jmp, ...). This removes
	unnecessary bus accesses by not prefetching code after a branch.
	Since less words can be prefetched, this will impact the state of
	the instruction cache. (Fix the Falcon game Tautology II by
	Reservoir Gods when using 68030 in cycle exact mode with
	instruction/data caches (music replay uses self modified init code))
	[c5d5a2da7181]

	* doc/authors.txt:
	Add more credits for Toni Wilen / WinUAE
	[921d9c8bf7be]

2015-07-29  Nicolas Pomarede

	* doc/release-notes.txt:
	Update doc for War Heli
	[51e6ae64a5f0]

	* src/uae-cpu/gencpu.c:
	For old UAE CPU, add refill_prefetch for i_Bcc (fix the protection
	in War Heli)
	[cb666724984a]

	* src/uae-cpu/newcpu.c:
	For old UAE CPU, add a special case to correct the stacked PC when
	an address error happens during a move.l dx,(ax) (fix the protection
	in War Heli)
	[d81edd421446]

	* src/uae-cpu/gencpu.c:
	For old UAE CPU, correctly set last_writeaccess_for_exception_3 to 0
	(read) or 1 (write) (fix stack frame for War Heli)
	[3dbfcc95bf1c]

2015-07-05  Eero Tamminen

	* doc/compatibility.html:
	Update chainz/jewelz notes after Nicolas fix
	[6b739ea6352a]

2015-07-04  Nicolas Pomarede

	* src/cpu/newcpu.c:
	For WinUAE CPU, 68010 cpu was not correctly handled in the main cpu
	loop
	[5c0832d7d899]

2015-07-04  Thomas Huth

	* src/psg.c:
	Fix comment about PSG port A bit 3
	[b1ddf8a3b706]

2015-07-03  Nicolas Pomarede

	* src/falcon/dsp_core.h:
	In DSP emulation, remove useless 'volatile' keywords Those are not
	needed since DSP doesn't run in a separate thread anymore
	[de916d772ef2]

2015-07-02  Eero Tamminen

	* doc/compatibility.html:
	Minor compatibility updates

	- Consistent terminology for WinUAE hangs
	- As some Capy versions have problems on TT and neither the program
	nor its documentation have version number for identification, move
	Capy under Falcon
	- Updates to few WinUAE issues
	[38c58edbf86b]

2015-07-01  Nicolas Pomarede

	* doc/release-notes.txt:
	Add DSP changes to release notes
	[97f82fa232b5]

	* src/falcon/dsp.c, src/falcon/dsp_core.c, src/falcon/dsp_core.h:
	Improve the DSP's HREQ signal, it was not correctly handled to work
	with WinUAE CPU core
	[4704feb5ea9d]

	* src/cpu/newcpu.c:
	debug log
	[186460b2dad8]

	* src/cpu/CMakeLists.txt:
	Add some rules to silence some WinUAE cpu warnings
	[e0a93fd2820b]

	* src/cpu/debug.h:
	Add missing prototype
	[5db0e962d27a]

2015-06-30  Eero Tamminen

	* doc/compatibility.html:
	Fix ChainZ/JewelZ RAM reqs, update few others
	[1c14ea97750a]

	* src/debug/profilecpu.c:
	Increase profiler data cache hits max

	Teknoballs Falcon game had even more hits than cases I had tested
	before.
	[e0f98be8ca92]

2015-06-30  Nicolas Pomarede

	* src/cpu/gencpu.c, src/cpu/newcpu.c:
	For WinUAE CPU, fix a bug in movep, pack and unpack when 68030 data
	cache is enabled (fix the game Corsair by Impulse when running in
	cycle exact mode with data cache)
	[40461e70f59c]

2015-06-29  Nicolas Pomarede

	* src/cpu/newcpu.c:
	Remove WinUAE's specific code that conflicts with Hatari's DSP
	interrupt SPCFLAG_TRAP had the same value as SPCFLAG_DSP, which
	triggered unwanted exception(3)
	[283e62ea16fc]

	* src/blitter.c, src/cpu/memory.c, src/cpu/memory.h,
	src/includes/stMemory.h, src/stMemory.c, src/uae-cpu/memory.c, src
	/uae-cpu/memory.h:
	Blitter should not cause a bus error exception when accessing
	regions that cause a bus error for the CPU Fix bad blitter accesses
	in the games Chainz and Jewelz by Paradize
	[e5ad66def36c]

	* src/cpu/newcpu.c:
	Remove old/unused code for 68030 data cache
	[4cb229caf61a]

	* doc/release-notes.txt:
	Add note about fix for SDL UI caused by the file selector
	[c2c7bfb2337e]

2015-06-29  Eero Tamminen

	* doc/compatibility.html:
	Add compat links for few Falcon games
	[2575adbed54d]

2015-06-28  Nicolas Pomarede

	* src/m68000.c:
	Add pairing for ABCD/SBCD and DBcc
	[ae864f71ccd3]

2015-06-28  Eero Tamminen

	* src/debug/profilecpu.c:
	reduce max d-hits

	Only half needed after Nicolas' d-cache counting fix.
	[dc4cecd0e782]

2015-06-28  Thomas Huth

	* doc/compatibility.html:
	Fix URLs for valid HTML
	[ed273e672304]

2015-06-28  Nicolas Pomarede

	* src/gui-sdl/dlgAbout.c, src/gui-sdl/dlgAlert.c, src/gui-
	sdl/dlgDevice.c, src/gui-sdl/dlgFileSelect.c, src/gui-
	sdl/dlgFloppy.c, src/gui-sdl/dlgHalt.c, src/gui-sdl/dlgHardDisk.c,
	src/gui-sdl/dlgJoystick.c, src/gui-sdl/dlgKeyboard.c, src/gui-
	sdl/dlgMain.c, src/gui-sdl/dlgMemory.c, src/gui-sdl/dlgNewDisk.c,
	src/gui-sdl/dlgRom.c, src/gui-sdl/dlgScreen.c, src/gui-
	sdl/dlgSound.c, src/gui-sdl/dlgSystem.c, src/gui-sdl/sdlgui.c,
	src/includes/sdlgui.h:
	Fix a possible out of bound access in the SDL UI and the file
	selector The fileselector maintains the value of current_object to
	keep track of the scrollbar position, but in all other cases
	current_object should be reset before displaying a new dialog (else
	some dialogs will behave as if exiting automatically)
	[009b993e57b3]

2015-06-28  Eero Tamminen

	* tests/tosboot/readme.txt, tests/tosboot/tos_tester.py:
	Add TT-RAM support to TOS bootup tester

	Relies on hconsole version that can tell whether Hatari is WinUAE
	version.
	[cc27da2001fc]

	* tests/tosboot/tos_tester.py:
	Fix error message arg

	...by making size a local variable.
	[d41163f9d600]

	* tests/tosboot/tos_tester.py:
	Better method names
	[1bf7089c149a]

2015-06-27  Eero Tamminen

	* tests/tosboot/tos_tester.py:
	misc tos tester updates

	- disable mouse warping
	- increase TOS v2 timeouts, earlier ones weren't enough with VDI mode
	and lots of memory
	- update copyright accordingly
	[5d1e852dff8a]

2015-06-26  Eero Tamminen

	* src/debug/profilecpu.c:
	Fix compiler warning with olduae CPU core
	[a097778ccc34]

2015-06-25  Eero Tamminen

	* tools/hconsole/hconsole.py:
	Check whether Hatari instance is WinUAE CPU core one

	This will be used in next TOS boot tester commit
	[8d724798059b]

2015-06-24  Eero Tamminen

	* src/tos.c:
	Allow 32-addressing only for systems supporting it

	Previous code checked just for TT & Falcon machine types, but TOS v2
	supports TT, but not 32-bit addressing. So, check also TOS version.
	[6cd639704349]

	* tests/tosboot/disk/ahcc-gemdos, tests/tosboot/disk/ahcc-minimal:
	EmuCON startup has gotten slower, compensate
	[48d8b150d3ff]

2015-06-23  Nicolas Pomarede

	* src/gui-osx/AlertHooks.h, src/gui-
	osx/English.lproj/InfoPlist.strings, src/gui-
	osx/English.lproj/SDLMain.nib/designable.nib, src/gui-
	osx/English.lproj/SDLMain.nib/keyedobjects.nib, src/gui-
	osx/English.lproj/SDLMain.xib, src/gui-
	osx/French.lproj/InfoPlist.strings, src/gui-
	osx/French.lproj/SDLMain.nib/designable.nib, src/gui-
	osx/French.lproj/SDLMain.nib/keyedobjects.nib, src/gui-
	osx/French.lproj/SDLMain.xib, src/gui-osx/Info-Hatari Winuae.plist,
	src/gui-osx/Info-Hatari.plist, src/gui-osx/PrefsController.h, src
	/gui-osx/PrefsController.m:
	Update OSX UI (changes by Jerome Vernet)
	[a9bc04038ce6]

2015-06-22  Nicolas Pomarede

	* doc/manual.html:
	Update a few items in the manual
	[2c1915231311]

	* src/debug/profilecpu.c:
	Don't shift cycles by nCpuFreqShift when profiling CPU Cycles should
	not be shifted, else we don't get the same values as displayed when
	using --trace cpu_disasm
	[67824e87dc4e]

2015-06-21  Nicolas Pomarede

	* doc/emutos.txt:
	EmuTOS 0.9.4 is included with Hatari 1.9.0
	[c355dc4af8b3]

2015-06-19  Nicolas Pomarede

	* src/video.c:
	For now, don't use STE's LineWidth when reading video counter in
	high res
	[97de55da9132]

	* doc/release-notes.txt:
	Update release notes
	[a5a28a79b7e3]

	* src/video.c:
	For STF/STE, handle a special/simplified case when reading video
	pointer in high res (fix high res sync protection in the demo 'My
	Socks Are Weapons' by 'Legacy')
	[0a27e6c8bd5a]

2015-06-17  Nicolas Pomarede

	* src/cpu/newcpu.c:
	For WinUAE CPU, fix write to 68030 data cache for misaligned long
	word
	[a632893c2cbb]

2015-06-15  Nicolas Pomarede

	* src/cpu/newcpu.c:
	For WinUAE CPU, fix write to 68030 data cache when Write Allocate=0
	[11bb50fa507f]

2015-06-15  Eero Tamminen

	* doc/compatibility.html, doc/todo.txt:
	Update Falcon compatibility notes

	- Aazohm needs 8MB
	- update auto-start notes
	- use auto-start spelling consistently
	[d72e45998bd2]

2015-06-14  Eero Tamminen

	* doc/compatibility.html:
	Falcon compatibility doc updates + Voxel demo entry
	[dae634098bcb]

2015-06-14  Nicolas Pomarede

	* src/uae-cpu/newcpu.c:
	Don't call Dialog_HaltDlg() directly, call it from cpu_halt()
	[1a2c5455a57b]

2015-06-13  Eero Tamminen

	* doc/compatibility.html, doc/todo.txt:
	Falcon compatibility doc updates
	[fb8bfdf825a6]

	* src/gui-sdl/dlgScreen.c:
	remove rendundant macro
	[834ce9230511]

	* doc/release-notes.txt, src/CMakeLists.txt, src/cpu/newcpu.c, src
	/gui-sdl/CMakeLists.txt, src/gui-sdl/dlgHalt.c,
	src/includes/dialog.h, src/uae-cpu/newcpu.c:
	Fix problems with CPU halt dialog

	Problems:

	* Some programs (like Falcon DryEgg with <4MB RAM) can get emulation
	into a state where warm reset doesn't fix the issue and you get halt
	dialog immediately again.

	* Worse problem is that if user clicks to Hatari close button when
	this dialog is open, dialog gets canceled which invokes console
	debugger. If user didn't run Hatari from console, Hatari is
	completely non-responsive after that.

	 If user continues emulation or tries to quit it from debugger, he
	just gets back to debugger (due to bQuitProgram state canceling
	dialog). Only way to exit from debugger is to cold reset emulation
	from it, but user doesn't know that.

	Fix:

	* Create separate dialog with more buttons from which user can warm
	and cold reset emulation, invoke debugger or quit Hatari.

	* Check SDLGUI_QUIT and bQuitProgram being already set, and if they
	are, cold reset emulation so that Hatari gets back to emulation main
	loop and can quit itself.
	[8cf52d2503e9]

2015-06-11  Eero Tamminen

	* doc/release-notes.txt, src/configuration.c, src/main.c:
	fix: default IDs for joysticks were invalid

	Joysticks are verified only in SDL GUI joystick dialog. As result,
	statusbar information and switching joystick types through keyboard
	shortcuts could show joystick being enabled although it was mapped
	to non-existing one.

	Fixes to joystick defaults in configuration.c:
	- if there are no joysticks, don't enable joystick
	- limit default joystick ID assignments to valid values
	[94856b97b69e]

2015-06-11  Nicolas Pomarede

	* src/cpu/custom.h, src/cpu/debug.c, src/cpu/options_cpu.h,
	src/cpu/winuae_readme.txt:
	Update remaining parts of WinUAE cpu core from 3.1.0 b16 to 3.1.0
	final
	[6184cf97bacd]

2015-06-10  Laurent Sallafranque

	* src/falcon/dsp_cpu.c:
	fix: no prefetch interrupt 2 is first one was a single word
	instruction
	[ef7ac6c24efe]

2015-06-10  Eero Tamminen

	* doc/hatari.1, doc/release-notes.txt, src/configuration.c, src/gui-
	sdl/dlgHardDisk.c, src/includes/configuration.h, src/includes/str.h,
	src/options.c, src/str.c:
	8-bit file name Atari <-> host charset conversion option

	- both command line and SDL GUI options
	- there are now so many disk options that I also split floppy and
	harddisk options under their own headings in --help and in manual
	page
	[75285830e52b]

2015-06-09  Eero Tamminen

	* doc/compatibility.html, doc/todo.txt:
	updates to Falcon games compatibility

	More updates to follow after I've had time to test them...
	[cdb25779f25f]

2015-06-08  Nicolas Pomarede

	* src/cpu/newcpu.c:
	For WinUAE CPU, correctly invalidates entries in data cache during a
	'write miss'
	[c09e046fe65b]

2015-06-06  Nicolas Pomarede

	* src/gemdos.c, src/includes/m68000.h, src/m68000.c, src/stMemory.c:
	Add functions to flush instructions cache, data cache, or both
	[a7c02de3c842]

2015-06-05  Eero Tamminen

	* doc/compatibility.html, doc/todo.txt:
	update docs: packers are causing autostart issues

	pouet.net version of Virtual City works fine and isn't packed.
	[0b7583105c28]

2015-06-04  Nicolas Pomarede

	* src/cpu/newcpu.c, src/cpu/newcpu.h, src/gemdos.c,
	src/includes/m68000.h, src/m68000.c, src/stMemory.c:
	With Gemdos HD emulation, we must also flush the instruction cache
	after writing to memory
	[3925f1033acd]

	* src/cpu/newcpu.c:
	Reorder some code
	[698c3eede17d]

2015-06-03  Eero Tamminen

	* src/debug/debugcpu.c:
	Add TODO on debugger binary -> memory read command
	[d2eb6ddf4c52]

	* src/gemdos.c, src/stMemory.c:
	move flush before memory update

	This doesn't matter with current 030 cache which seems to be write
	through. But doing flush afterwards would be a problem with 040
	cache copyback mode, so it's better to do it right from start.

	Corrected also flush args for fread() memory update.
	[e5f37e57240a]

2015-06-02  Eero Tamminen

	* doc/compatibility.html:
	compatiblity version update: 1.9.0 -> 1.9, 1.8+ -> 1.9

	- for consistency with other version numbers in compat list, use 1.9
	instead of 1.9.0
	- change 1.8+ to 1.9 for things which clearly require 1.9 features
	(MMU or TT-RAM)

	Other 1.8+ items need re-testing before their version number can be
	updated.
	[9a1edfdc93b9]

2015-06-02  Nicolas Pomarede

	* src/cpu/newcpu.c:
	For WinUAE CPU, currpc was not initialized when intercepting VDI &
	AES
	[1483ea908f40]

	* src/cpu/newcpu.c:
	In printf, use portable PRIX64 macro instead of llX (for Windows)
	[31a81ac44940]

	* src/cpu/fpp.c:
	6888x NULL frame undocumented feature (from WinUAE 3.1.0 b23)
	[90209c14abb2]

	* src/gemdos.c:
	For Gemdos HD emulation, flush CPU's data cache in Fread function
	(Gemdos $3F)
	[62772e248aa3]

	* doc/compatibility.html, doc/release-notes.txt:
	Update the devel version from 1.8.1 to 1.9.0
	[226316b15e38]

2015-06-01  Nicolas Pomarede

	* src/cpu/memory.c:
	Remove unused old call that set IO region to cachable and broke
	blitter with TOS 4
	[67c89576874e]

	* src/stMemory.c:
	Add missing include
	[1f8942765c59]

	* src/stMemory.c:
	In STMemory_Write(), call M68000_Flush_DCache() in case CPU >= 68030
	[f699090b64a6]

	* src/cpu/newcpu.c:
	68030 cache hits were counted twice
	[b9821eaeb3b8]

2015-06-01  Eero Tamminen

	* doc/release-notes.txt:
	update release notes
	[3b323478a219]

	* doc/hatari.1, src/configuration.c, src/falcon/hostscreen.c, src/gui-
	sdl/dlgAlert.c, src/gui-sdl/dlgMain.c, src/includes/configuration.h,
	src/includes/main.h, src/main.c, src/options.c, src/reset.c:
	Add "--mousewarp <bool>" option

	By default, Hatari warps mouse position on following events:
	- Cold reset
	- Falcon resolution change
	- Dialog exit (restore mouse where it was when emulation was paused)

	Regardless of whether Hatari window is even visible.

	This can be pretty annoying, so now there's "--mousewarp <bool>"
	option with which one can disable warping on reset & resolution
	changes.
	[01043c9a9d53]

2015-06-01  Nicolas Pomarede

	* src/includes/version.h:
	Use devel information string to identify the version
	[bbea99d3c377]

2015-05-31  Nicolas Pomarede

	* src/gemdos.c, src/includes/m68000.h, src/m68000.c:
	We need to flush the CPU's data cache when Gemdos HD emulation
	directly modifies the memory
	[b00f2acfe58b]

2015-05-31  Eero Tamminen

	* src/debug/profile_priv.h, src/debug/profiledsp.c:
	separate counters field for DSP specific cycles diff

	Add new counters field for cycles diffs instead of re-using i_misses
	field which name doesn't relate to the stored value. This is OK
	because it's not used in caller counts, just for final statistics.
	[6d161e98538f]

	* src/debug/profile.c, src/debug/profile_priv.h,
	src/debug/profilecpu.c:
	Add "profile caches" command for cache hit histograms

	Histogram data can be for all hits & misses (whereas per address
	stats need to be limited to i-misses & d-hits to save memory).
	[e0dedbcd9dfc]

	* src/debug/68kDisass.c, src/debug/profile.c, src/debug/profile.h,
	src/debug/profile_priv.h, src/debug/profilecpu.c:
	track data cache hits instead of misses

	Not really any functional changes, just renamings.
	[d9724d4192b3]

2015-05-29  Nicolas Pomarede

	* src/cpu/cpummu030.c, src/cpu/cpummu030.h, src/cpu/newcpu.c:
	For WinUAE CPU, better handling of the "fake prefetch" used in 68030
	MMU (patch by Tony Wilen)
	[6044e8f77b71]

2015-05-28  Nicolas Pomarede

	* src/cpu/memory.c, src/cpu/memory.h:
	Factorize some code for memory regions
	[860ddb4806c8]

2015-05-27  Nicolas Pomarede

	* CMakeLists.txt, cmake/FindCapsImage.cmake, src/mfp.c:
	Revert bad commit
	[bb90e3ca7750]

	* src/cpu/newcpu.c:
	For WinUAE CPU, fix 68030 data cache where 'hit' returned random
	data
	[8cb677c12d3e]

	* CMakeLists.txt, cmake/FindCapsImage.cmake, src/cpu/memory.c,
	src/cpu/newcpu.c, src/mfp.c:
	More init for each memory region in CE mode (16 or 32 bits,
	cachable, ...) This is needed to enable data cache in 68030 CE mode
	[a606de221b42]

	* src/bios.c, src/blitter.c, src/debug/debugInfo.c,
	src/debug/history.c, src/debug/history.h, src/falcon/crossbar.c,
	src/falcon/crossbar.h, src/falcon/dsp.c, src/falcon/dsp.h,
	src/falcon/videl.c, src/falcon/videl.h, src/gemdos.c,
	src/includes/bios.h, src/includes/blitter.h, src/includes/gemdos.h,
	src/includes/psg.h, src/includes/vdi.h, src/includes/video.h,
	src/includes/xbios.h, src/psg.c, src/vdi.c, src/video.c,
	src/xbios.c:
	Use a variable 'FILE *fp' instead of 'stderr' for some debugger
	outputs
	[f6c3a5eb0cf6]

2015-05-26  Eero Tamminen

	* src/debug/console.c:
	normal conout output should go to stdout

	only warnings should go to stderr
	[a57267f31ac9]

	* doc/release-notes.txt:
	note os_base in release notes
	[d0a261f73de6]

	* src/debug/log.c:
	enable xoncount console redirection with "os_base" trace

	- only if xconout redirection isn't already specified
	- "os_all" includes "os_base" so that gets it too
	[4af816ed4893]

	* src/gemdos.c:
	add Pexec() & Pterm*() tracking to "os_base" traces
	[6b87749a1647]

	* src/cart.c, src/debug/log.c, src/debug/log.h, src/gemdos.c:
	rename: fopen->os_base / TRACE_GEMDOS_FOPEN -> TRACE_OS_BASE
	[42c8d985cd8d]

2015-05-23  Thomas Huth

	* doc/compatibility.html, doc/manual.html:
	Fix warnings from HTML validator
	[1db9b45663db]

2015-05-22  Eero Tamminen

	* src/debug/profilecpu.c:
	add info needed for d-cache data by profile post-processor
	[7f7803c8b605]

	* src/debug/68kDisass.c, src/debug/profile.c, src/debug/profile.h,
	src/debug/profile_priv.h, src/debug/profilecpu.c,
	src/debug/profiledsp.c:
	add profiler support for D-cache miss information

	in addition to already existing I-cache information.
	[41566a21b565]

2015-05-19  Nicolas Pomarede

	* src/cpu/newcpu.c:
	Typo, ifndef -> ifdef
	[0a8a0153a185]

	* src/cpu/newcpu.c, src/debug/profilecpu.c, src/includes/m68000.h:
	For WinUAE CPU, update hit/miss stats for instruction and data
	caches
	[bb76ad9f2fac]

	* src/cpu/newcpu.c:
	For WinUAE, we must call do_specialties() after bus_error() in case
	spcflags was modified
	[34a2afb30697]

2015-05-18  Eero Tamminen

	* python-ui/TODO, python-ui/hatariui, python-ui/hatariui.1, python-
	ui/hatariui.py, python-ui/release-notes.txt:
	update Hatari Python GUI documentation
	[134e4392cff3]

	* doc/emutos.txt:
	update emutos compat

	- EmuTOS has few line-A improvements which fix games
	- Entombed freezes with EmuTOS v0.9.4 was probably Hatari issue as it
	works now
	[369057a5c6c2]

2015-05-18  Thomas Huth

	* src/debug/evaluate.c:
	Silence compiler warning
	[40bf3176f555]

2015-05-18  Eero Tamminen

	* python-ui/debugui.py:
	Support WinUAE CPU core regs output in Python GUI

	Without this the Python GUI debug window doesn't work.
	[6d8c578ef393]

	* src/debug/debugInfo.c:
	show warnings only for "info" commands, not for debugger variables

	If one sets breakpoint for something like pc=text at boot, it would
	generated warning on every instruction because:
	-> system header isn't there
	  -> basepage cannot be located
	     -> basepage variables are undefined So don't generated warnings for
	such debugger variables, only when system header and basepage are
	requested as part of info command.
	[7a07ef63c51c]

2015-05-17  Eero Tamminen

	* doc/compatibility.html, doc/todo.txt:
	doc updates to autostart issues

	Tested Falcon demos. Firestarter is one more demo that doesn't work
	if autostarted. Interestingly some of such demos can be autostarted
	with EmuTOS.
	[fd4c11fcef76]

	* src/debug/profilecpu.c:
	2 minor fixes to profile code

	- TEXT variable is zero when there's no program loaded, check for
	that
	- use successive instructions zero cycles check only for old UAE CPU
	core, with WinUAE CPU core such things are valid
	[fa97a7fbb469]

2015-05-15  Nicolas Pomarede

	* src/cpu/memory.c, src/uae-cpu/memory.c:
	Fix check when reading/writing to SysMem RAM < $800 (mask first,
	then compare) For example, in 24 bit mode, a read to $1000008 in
	user mode or a write to $1000004 would not cause the expected bus
	error
	[36820c297f10]

2015-05-14  Nicolas Pomarede

	* src/cpu/compat.h, src/cpu/newcpu.c, src/cpu/newcpu.h:
	In WinUAE CPU core, m68k_dumpstate_file() didn't redirect to the
	correct file
	[96bafa507c39]

2015-05-13  Eero Tamminen

	* python-ui/CMakeLists.txt, python-ui/hatari-logo.png, python-
	ui/hatari.png, python-ui/uihelpers.py:
	rename logo image + update python GUI info

	Hatari icon is named hatari.png, so rename Python GUI Hatari logo to
	hatari-logo.png. Update also some other Hatari UI info.
	[1d85c8f7218f]

	* python-ui/dialogs.py, python-ui/hatari.py:
	add Python GUI support for --ttram (sets --addr24 too)
	[448a7db72a88]

	* doc/release-notes.txt:
	update release notes now that python gui supports --gemdos-drive
	[66dda7eab116]

	* python-ui/dialogs.py:
	add new trace options
	[325eae85432c]

	* python-ui/dialogs.py, python-ui/hatari.py:
	Python GUI support for GEMDOS HD drive option
	[2e7be4afaacd]

2015-05-13  Nicolas Pomarede

	* doc/release-notes.txt:
	Add note about reset/debug dialog when CPU is in 'halt' state
	[9024c27b77d0]

	* src/cpu/newcpu.c, src/uae-cpu/newcpu.c:
	In case CPU is halted (double bus/address errors), show a dialog to
	reset or debug
	[029d05b0db8e]

2015-05-13  Eero Tamminen

	* src/change.c, src/configuration.c, src/gemdos.c, src/gui-
	sdl/dlgHardDisk.c, src/includes/configuration.h, src/options.c:
	better config name: nHardDiskDrive -> nGemdosDrive

	It's not about harddisks in general, just about GEMDOS HD emulation.
	[d826b6d63cb2]

2015-05-12  Eero Tamminen

	* src/debug/natfeats.c:
	allow natfeats from ROM

	necessary for EmuTOS debugging
	[0097eb037404]

	* src/debug/breakcond.c:
	fix nasty breakpoint removal thinko

	this came with changes adding delayed removal support
	[461798402693]

2015-05-11  Nicolas Pomarede

	* src/ioMemTabTT.c:
	Contrary to some unofficial documentations, the TT doesn't have
	hardware scrolling similar to the STE
	[49f838ec4381]

2015-05-10  Nicolas Pomarede

	* doc/compatibility.html, doc/release-notes.txt:
	Update release notes
	[99cb6dddd5d4]

	* src/video.c:
	Temporary fix for the STE demo RGBeast by Aggression (modification
	of video counter)
	[7878849e8098]

2015-05-09  Nicolas Pomarede

	* src/blitter.c:
	Typo
	[bc24cd991dbe]

	* doc/manual.html, doc/release-notes.txt, tools/CMakeLists.txt:
	Fix more typos
	[f0cf4f4aa804]

2015-05-08  Nicolas Pomarede

	* src/blitter.c:
	Typo
	[0bc50f8dad2d]

	* src/blitter.c:
	Rewrite the bus arbitration when blitter is started This is mostly
	hardcoded specific cases for now, it would require cycle accurate
	emulation to handle each prefetch done by the cpu instruction (fix
	overscan plasma in 'Graphics Sound 2' part in 'Relapse' by
	Cybernetic)
	[14e465064f9a]

2015-05-06  Eero Tamminen

	* doc/emutos.txt:
	emutos notes update
	[02ba6644bdc0]

	* doc/release-notes.txt:
	list debian bugs in release notes
	[42c607a5b8d7]

2015-05-06  Nicolas Pomarede

	* src/debug/evaluate.c:
	In printf, use portable PRIx64 macro instead of llx (for Windows)
	[8e00c7a077c4]

2015-05-06  Eero Tamminen

	* src/joy.c:
	use true/false for bool return values instead of 1/0
	[a6814e666db1]

	* src/options.c:
	Fix: https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=716536

	Release are compiled with NDEBUG, so assert didn't catch the issue,
	and asserts are anyway no-no in user input handling.
	-> replace assert with real check.

	Additionally, reject option name if it has anything else than single
	digit at end.
	[2be138d236d5]

	* src/includes/str.h:
	local includes should be in "", system ones in <>
	[f2a604486e1d]

	* src/includes/configuration.h:
	Fix: https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=688594

	If header's struct contents depend on configuration options, header
	must include config.h. Anything else is too fragile (wrong include
	order doesn't necessarily cause warnings and bugs resulting from
	struct offset differences can be hard to track down).
	[b31b00ff5f50]

	* src/debug/breakcond.c, src/includes/main.h:
	better fix to assert() variable compiler warning
	[618cf09920d3]

2015-05-05  Nicolas Pomarede

	* doc/compatibility.html, doc/release-notes.txt:
	Update MIDI state in release notes
	[40b357f09ac5]

	* src/midi.c:
	Update save/restore for MIDI + clean debug code
	[5253f6ae3f0a]

	* src/debug/breakcond.c:
	Temporarily rollback change #5689 as it can break compilation
	[4696b88f5e66]

2015-05-05  Eero Tamminen

	* src/debug/breakcond.c, src/includes/main.h:
	fix compiler warning about variable used only by assert

	adds macro that outputs its contents only when asserts are enabled
	[a7c2862a45e6]

2015-05-04  Nicolas Pomarede

	* src/midi.c:
	Better accuracy for MIDI's TDRE bit at $fffc04 Handle the case where
	a new byte is written at $fffc06 while the previous byte is still
	not completely transferred (fix overflow indicator in Notator)
	[158dad8c6f0f]

2015-05-03  Eero Tamminen

	* doc/release-notes.txt:
	update release notes
	[7f67e8a74f2e]

	* tools/debugger/gst2ascii.c:
	Windows/DOS requires binary files to be opened with "rb"
	[090c85c879e5]

	* src/debug/profilecpu.c:
	disable profiler DEBUG

	Besides causing large amount of (zero cycles) warnings with new
	WinUAE CPU core, DEBUG does things that can in some circumstances
	trigger asserts, so it's not good to have it enabled by default.
	[488279f1db9c]

	* src/debug/breakcond.c:
	breakpoints: fix corner-case + optimize

	Corner-case needs to abort, it can cause invalid accesses, not just
	leaks.

	Optimize few additional check by specifying how likely they're to
	happen.
	[95fd50438763]

	* doc/compatibility.html:
	add few programs requiring TT-RAM to compatibility list
	[57cda279cd30]

	* tests/debugger/makefile, tests/debugger/test-breakcond.c,
	tests/debugger/test-dummies.c:
	update debugger tests accordingly
	[e71b9f97dceb]

	* src/debug/breakcond.c, src/debug/breakcond.h, src/debug/debugcpu.c,
	src/debug/debugdsp.c:
	fix breakpoint array traversal with chained breakpoints

	Chained breakpoints can parse arbitrate debugger files when hit, and
	user could in those add and remove breakpoints. This parsing &
	resulting modifications happen while breakpoint array is being
	traversed, which means that traversal code can return invalid
	breakpoint indexes.

	Solution is suspending existing breakpoint array modifications
	during array traversal, doing the modification after it and
	correcting the index. This required adding several new variables
	both for CPU & DSP breakpoints to indicate that deletes need to be
	delayed and what needs then to be deleted.

	This which was easier to handle by refactoring the code so that
	these variable sets are in their own structures. Use of the new high
	level structures required changes in many places, but allowed making
	rest of the code both simpler & more flexible.

	It also allowed getting rid of the ugly bForDsp argument in many
	internal functions. At the same time I added separate CPU & DSP
	variants of the exported BreakCond_BreakPointCount() wrapper.
	[3fb8e0ececbc]

2015-05-02  Eero Tamminen

	* src/debug/breakcond.c:
	use temporary var for readability (shorter lines)
	[c799a25720b8]

2015-05-02  Nicolas Pomarede

	* src/floppy_ipf.c:
	For IPF, update pointers to prevent crash before calling
	CAPSFdcInvalidateTrack()
	[0eec73b08511]

2015-05-02  Eero Tamminen

	* src/debug/symbols.c, src/debug/symbols.h, src/gemdos.c,
	src/includes/options.h, src/options.c:
	use common code for identifying Atari programs

	symbols.c had mostly duplicate code for detecting whether given file
	is an Atari program, compared to what was used by options.c. As
	symbols.c detection apparently doesn't work on Windows although
	options.c one does, use latter also for former.

	Only functional diffs are use of "rb" mode instead of "b". As Hatari
	is just reading first two chars of the file and neither is CR or LF,
	I don't see how that could fail, but hopefully it works now also on
	Windows...
	[528947b85ee3]

2015-04-30  Thomas Huth

	* src/includes/msa.h, src/msa.c, src/zip.c:
	Make the MSA image loading more robust by checking the remaining
	file size
	[9dcc6b5b5c70]

2015-04-28  Nicolas Pomarede

	* src/cpu/fpp.c, src/cpu/gencpu.c, src/cpu/newcpu.h:
	Fix prefetch refilling for FPU instructions fpuop_bcc and fpuop_dbcc
	(patch by Tony Wilen)
	[570b8949f415]

2015-04-27  Nicolas Pomarede

	* src/cpu/cpummu.c, src/cpu/debug.c, src/cpu/fpp.c, src/cpu/newcpu.c,
	src/cpu/newcpu.h, src/cpu/options_cpu.h, src/cpu/winuae_readme.txt:
	Update WinUAE cpu core from 3.1.0 b15 to 3.1.0 b16 (mostly
	compilation warnings)
	[cf5573e84cf2]

2015-04-27  Thomas Huth

	* src/msa.c:
	Add more sanity checks to MSA header verification
	[1e38234ccc06]

	* src/msa.c:
	Get rid of some indentation levels in MSA_UnCompress
	[e2357a53c594]

2015-04-26  Eero Tamminen

	* src/stMemory.c:
	add TODO for memtop

	(move setting it beside phystop as they're related)
	[d906c3e5394a]

	* doc/compatibility.html, doc/emutos.txt:
	update compatibility notes / improve texts slightly
	[b008c0d4fa0e]

	* doc/hatari.1, doc/release-notes.txt, tools/CMakeLists.txt, tools
	/atari-hd-image.1, tools/atari-hd-image.sh, tools/zip2st.1:
	use atari-convert-dir in atari-hd-image + refer to it in docs
	[ce383be348a7]

	* tools/atari-convert-dir.1, tools/atari-convert-dir.py:
	add script for converting long file names to Atari names
	[7849d38d9f57]

2015-04-25  Thomas Huth

	* doc/todo.txt, src/cartData.c, src/cart_asm.s:
	Add Pexec7 support (to allocate in TT RAM) to the cartridge, 2nd try
	[364a45dedd0a]

2015-04-25  Eero Tamminen

	* src/debug/symbols.c, tools/debugger/gst2ascii.c:
	show program header info even when it has no symbols

	both in Hatari debugger & gst2ascii:
	- parse program flags and name them for user
	- show header info before checking whether symbols are present

	These are useful to know now that Hatari supports TT-RAM & MMU.
	[20bbad707c06]

2015-04-19  Thomas Huth

	* doc/todo.txt, src/cartData.c, src/cart_asm.s:
	Undo last commit, there is still something broken in there
	[3538e73c2aa6]

2015-04-20  Eero Tamminen

	* src/debug/debugInfo.c:
	fix debugger "info" commands for data in TT-RAM

	basepage & cookiejar subcommands assumed all addresses are within
	ST-RAM and used STram[] offsets. Fixed by using STMemory_Read*()
	accessors instead.
	[325400bb4258]

2015-04-19  Thomas Huth

	* doc/todo.txt, src/cartData.c, src/cart_asm.s:
	Add Pexec7 support (to allocate in TT RAM) to the cartridge
	[f5096d163a31]

2015-04-17  Thomas Huth

	* src/printer.c:
	Open printer file in binary mode
	[cc2fbaf159b6]

2015-04-15  Eero Tamminen

	* doc/todo.txt:
	add links to toshyp
	[da4696e8dfaf]

	* doc/todo.txt:
	update TODO / add item for GEMDOS EMU program header flags support
	[3470e5c5aa8c]

2015-04-09  Nicolas Pomarede

	* src/m68000.c:
	When using WinUAE CPU in CE mode, we need to call ipl_fetch() after
	each call to doint()
	[3aa2a2cdf7ab]

2015-04-09  Eero Tamminen

	* src/debug/profilecpu.c:
	fix formatting & update copyright
	[dbfe41794772]

	* doc/release-notes.txt, src/debug/profilecpu.c:
	add profiler support for TT-RAM

	- add new TT-RAM area: update address checks, allocate memory for
	it, process data & output new area info
	- remove redundant WINUAE ifdefs (code builds fine without them on
	oldUAE and isn't in perf critical path)
	[a077b4eeb861]

2015-04-09  Nicolas Pomarede

	* src/mfp.c:
	When an interrupt happens on timers A/B/C/D, use PendingCyclesOver
	to determine if a 4 cycle delay is needed
	[31ca65029761]

2015-04-06  Nicolas Pomarede

	* src/cpu/custom.c, src/cpu/custom.h:
	Remove duplicated code also present in debug.c
	[be78790417ca]

2015-04-06  Eero Tamminen

	* src/cart.c, src/gemdos.c:
	allow fopen tracing without GEMDOS HD emulation
	[083639e6a0b2]

2015-04-06  Nicolas Pomarede

	* src/cpu/cpummu.c, src/cpu/newcpu.c, src/cpu/newcpu.h,
	src/cpu/newcpu_common.c:
	Remove some warnings in WinUAE CPU (printf, signed/unsigned)
	[40b7a4ae202e]

2015-04-05  Nicolas Pomarede

	* src/cpu/newcpu.c, src/cpu/options_cpu.h, src/cpu/winuae_readme.txt:
	Update WinUAE cpu core from 3.1.0 b14 to 3.1.0 b15
	[8d5f90ee8d73]

	* src/cpu/cpummu.c, src/cpu/cpummu030.c, src/cpu/debug.c,
	src/cpu/debug.h, src/cpu/fpp.c, src/cpu/memory.c, src/cpu/memory.h,
	src/cpu/newcpu.c, src/cpu/newcpu_common.c, src/cpu/options_cpu.h,
	src/cpu/sysdeps.h, src/cpu/winuae_readme.txt:
	Update WinUAE cpu core from 3.1.0 b10 to 3.1.0 b14
	[39b723be23e0]

2015-03-30  Eero Tamminen

	* doc/release-notes.txt, src/debug/log.c, src/debug/log.h,
	src/gemdos.c:
	"fopen" trace option to trace just Fopen() calls

	This is useful for debugging missing files (and file accesses done
	by programs in general), when full GEMDOS trace produces too much
	output (from fseeks, text output single letter at the time etc).
	[731b871f5935]

2015-03-29  Thomas Huth

	* src/change.c, src/gui-sdl/dlgScreen.c:
	Add missing checks for WITH_SDL2
	[da2eac4f4404]

	* src/change.c, src/falcon/hostscreen.c, src/falcon/hostscreen.h,
	src/falcon/videl.c, src/falcon/videl.h, src/includes/screen.h,
	src/screen.c, src/video.c:
	Make sure that screen mode gets refreshed when options changed
	[b0c187865904]

	* src/change.c, src/configuration.c, src/gui-sdl/dlgScreen.c,
	src/includes/configuration.h, src/screen.c:
	Add the possibility to set SDL2 scale quality and Vsync option
	[6b901d175829]

2015-03-25  Nicolas Pomarede

	* src/floppy_ipf.c:
	Remove some warnings during compilation when using caps library v4
	[cd3d4007f820]

2015-03-24  Eero Tamminen

	* doc/compatibility.html, doc/emutos.txt:
	add Chorensha
	[123713bb0896]

2015-03-20  Nicolas Pomarede

	* src/midi.c:
	Don't change MIDI's frequency when CPU's frequency is changed
	[49fcdf652bb1]

2015-03-20  Eero Tamminen

	* src/midi.c:
	remove obsolete midi comment & fix typo
	[23a8f973b85c]

2015-03-20  Nicolas Pomarede

	* src/midi.c:
	Improve state of TDRE bit in MIDI's status register fffc04
	[139a73f2a112]

2015-03-19  Nicolas Pomarede

	* src/midi.c:
	In default TOS config, transferring 1 byte over MIDI requires 10
	bits, not 9
	[b070f44137c6]

2015-03-17  Eero Tamminen

	* doc/release-notes.txt:
	note multiple ACSI device support in release notes
	[fb5a89465e84]

	* doc/hatari.1, src/options.c:
	change ACSI ID/filename divider from ':' to '='

	It's less likely to conflict with Windows path names.
	[cddc54241874]

2015-03-16  Thomas Huth

	* src/cpu/cpummu030.c:
	Silence compiler warnings in cpummu030.c
	[cee2b3db08c0]

	* src/cpu/newcpu.c:
	Silence some compiler warnings in newcpu.c (sync with upstream
	WinUAE repository)
	[d3c4fee7349e]

2015-03-16  Nicolas Pomarede

	* doc/release-notes.txt:
	EmuTOS 0.9.4 was released, remove mention of devel version
	[c9ca4f05a190]

2015-03-15  Nicolas Pomarede

	* src/midi.c:
	Don't disable internal MIDI's timer when MIDI is disabled If MIDI is
	disabled, we should not try to read/write bytes from the MIDI's
	filehandlers, but we should still flush bytes regularly and update
	ACIA's status register, else some programs will not work (which
	would not be the case on a real STF) (fix lock in Notator when MIDI
	is disabled)
	[f4171b289fa4]

2015-03-14  Eero Tamminen

	* doc/hatari.1, src/options.c:
	support optional BUS ID for --acsi option
	[a8b6d94454ea]

	* src/debug/debugInfo.c:
	nicer "info osheader" output
	[b6097a3f6bd5]

2015-03-13  Eero Tamminen

	* doc/emutos.txt:
	document STVidPlay issue
	[30304fcaecb1]

	* doc/emutos.txt:
	align notes + list NeoChrome Master line-A functions
	[285382059133]

2015-03-12  Eero Tamminen

	* doc/emutos.txt:
	update to EmuTOS 0.9.4 + some re-ordering / header changes
	[6a34d8f1f087]

2015-03-06  Thomas Huth

	* share/CMakeLists.txt, share/applications/hatari.desktop,
	share/mime/packages/hatari.xml:
	Switch to the official .msa and .dim mime-types
	[bc9d0c053c6e]

2015-03-04  Eero Tamminen

	* src/memorySnapShot.c:
	fix compiler warning
	[31401714f1e2]

2015-03-04  Nicolas Pomarede

	* src/includes/midi.h, src/memorySnapShot.c, src/midi.c:
	Save/restore MIDI state
	[bf3b39c17ea3]

	* src/midi.c:
	Use MIDI_TRANSFER_CYCLE cpu cycles to transfer 1 byte over MIDI
	[8381de89ce03]

2015-03-03  Nicolas Pomarede

	* src/midi.c:
	Use MIDI_UpdateIRQ() to factorize code
	[6cd1874e321f]

	* doc/release-notes.txt:
	Update release notes for MIDI
	[abe274b0257b]

	* src/cpu/newcpu.c, src/includes/m68000.h:
	Add more notes about IACK cycles
	[bc81c16dc3a1]

	* src/midi.c:
	Fix for interrupts' condition when using MIDI (some bitmasks were
	wrong/incomplete) (fix the MIDI programs Realtime and M by Eric
	Ameres, and possibly many others)
	[189b8a768901]

2015-03-01  Eero Tamminen

	* src/debug/debugcpu.c:
	fix DBCC mask in debugger instruction type check

	Thanks to Thomas for reporting this!
	[88862aae6620]

2015-03-01  Thomas Huth

	* src/paths.c:
	Make sure to leave space for NUL byte in buffer when calling
	readlink
	[6f4a0e03ecbd]

	* src/gemdos.c:
	Check return value of ftello for errors, too
	[df420b628309]

2014-08-04  Thomas Huth

	* src/cfgopts.c:
	Refactor input_config() for better readability
	[8b3d8a7c05d7]

2015-02-28  Nicolas Pomarede

	* doc/release-notes.txt:
	Update release notes for MFP
	[dc6407cd08e4]

	* src/cpu/newcpu.c, src/cpu/newcpu.h:
	Improve I/N bit in stack frame for bus/address error (from WinUAE
	3.1.0 b11)
	[fa93c0ace5ec]

2015-02-28  Thomas Huth

	* src/gui-sdl/dlgFileSelect.c:
	Make sure to always free all resources when leaving the file
	selection dialog
	[de141456b59f]

	* src/xbios.c:
	Do not blindly trust XBIOS parameters when accessing arrays
	[5d030aacd4d7]

2015-02-27  Nicolas Pomarede

	* doc/compatibility.html:
	Add notes for MIDI programs Realtime and M by Eric Ameres
	[28322a51a850]

	* src/mfp.c:
	In MFP, better support for GPIP/AER/DDR and trigerring an interrupt
	when AER is changed (fix the MIDI programs Realtime and M by Eric
	Ameres, which toggle bit 0 in AER)
	[0222ffc11be1]

	* src/midi.c:
	Add missing clear to GPIP in Midi_Data_WriteByte
	[bc79337d2ce8]

2015-02-25  Nicolas Pomarede

	* doc/compatibility.html:
	Add notes about the game 'Antago'
	[bd0558525e01]

2015-02-25  Thomas Huth

	* src/falcon/crossbar.c:
	Cosmetic clean-up in crossbar.c
	[c7064597b5c9]

2015-02-25  Nicolas Pomarede

	* src/mfp.c:
	In MFP_CheckPendingInterrupts(), check all 16 possible interrupts
	Even if some printer interrupts can't happen because Hatari can't be
	connected to a real printer, it's possible to trigger them by
	writing into AER
	[fcc4138d34c4]

	* src/mfp.c:
	Improve GPIP reading/writing at $fffa01 by taking DDR into account
	[823af3aa7922]

	* src/blitter.c, src/includes/mfp.h:
	Correctly set GPIP bit 3 depending on whether blitter is busy or not
	[ee52d8ad3ddc]

	* src/mfp.c:
	MFP's GPIP should be 0x00 after a reset (according to Motorola's
	doc)
	[d906530c849a]

	* src/acia.c, src/fdc.c, src/ide.c, src/includes/mfp.h, src/mfp.c,
	src/midi.c:
	Use MFP_GPIP_Set_Line_Input() instead of direct access for
	components connected to MFP's GPIP (ACIA, FDC, HDC)
	[1df843dfcfef]

2015-02-23  Nicolas Pomarede

	* src/cpu/winuae_readme.txt:
	Update WinUAE's version file
	[e5313b487165]

	* src/cpu/cpummu.c, src/cpu/cpummu.h, src/cpu/cpummu030.c,
	src/cpu/debug.c, src/cpu/fpp.c, src/cpu/gencpu.c, src/cpu/newcpu.c,
	src/cpu/options_cpu.h:
	Update WinUAE cpu core from 3.1.0 b3 to 3.1.0 b10
	[b074837a5751]

2015-02-22  Nicolas Pomarede

	* src/cpu/gencpu.c, src/cpu/newcpu.c:
	Fix STOP timing for WinUAE's CPU Minimal number of cycles was 2 in
	CE mode, it should be 4. We should also exit the STOP state
	immediately and don't add 2 or 4 cycles if an interrupt is already
	pending
	[0da8f0baf677]

	* src/cpu/newcpu.c:
	Don't use 'goto' before ENDTRY macro, else internal stack will
	overflow
	[6a5061274090]

2015-02-21  Thomas Huth

	* src/cpu/build68k.c, src/cpu/gencpu.c:
	Silence compiler warnings in gencpu.c and build68k.c
	[cc896cabea86]

2015-02-20  Thomas Huth

	* src/cpu/fpp.c:
	Silence some of the compiler warnings in fpp.c
	[44bd8d568a99]

	* src/cpu/fpp.c:
	Fix the FPU revision numbers in stack frames
	[19f1a0600cff]

	* src/vdi.c:
	Do not blindly trust the line-a cell height value (it could be zero,
	which would cause a division by zero bug in Hatari).
	[b2d4baa39fe2]

2015-02-22  Nicolas Pomarede

	* src/cpu/gencpu.c, src/cpu/newcpu.c, src/cpu/newcpu.h:
	Improve PC value pushed in stack frame for bus/address error (from
	WinUAE 3.1.0 b10) For bus/address errors, the stacked PC will depend
	on prefetch and addressing mode of the current instruction
	[22f9f9a6837f]

	* src/cpu/cpummu.c:
	Add more logs in CATCH/TRY macros
	[a1b741cde710]

2015-02-19  Nicolas Pomarede

	* src/audio.c:
	Apply STF low pass filter for any audio freq >= 40 kHz
	[84d651306df7]

2015-02-18  Nicolas Pomarede

	* src/uae-cpu/gencpu.c, src/uae-cpu/newcpu.c, src/uae-cpu/newcpu.h:
	In UAE CPU, use last_writeaccess_for_exception_3 (as in WinUAE CPU)
	[3adc26838673]

2015-02-15  Eero Tamminen

	* doc/release-notes.txt:
	update
	[fa0d73d69f60]

	* doc/emutos.txt:
	update EmuTOS Falcon notes (sound matrix support)
	[44788c0ada6e]

	* doc/video-recording.txt:
	add atari-forum guide lines for getting best video recordings
	[d9fc8f7754e2]

2015-02-13  Nicolas Pomarede

	* src/cpu/debug.c, src/debug/68kDisass.c:
	Prevent bus error when using external disassembler with WinUAE CPU
	in region requiring bit S in SR
	[2cdb745d3386]

2015-02-11  Thomas Huth

	* src/zip.c:
	Fixed stupid bug introduced with zip code cleanup three days ago
	[4bd49dd0e269]

2015-02-11  Nicolas Pomarede

	* src/cycles.c, src/includes/m68000.h, src/m68000.c, src/uae-
	cpu/newcpu.c:
	In old UAE's CPU, store the current opcode in regs structure and add
	M68000_CurrentOpcode macro
	[ac048bdd4a38]

	* src/cycles.c, src/includes/m68000.h, src/m68000.c, src/uae-
	cpu/newcpu.c, src/uae-cpu/newcpu.h:
	In old UAE's CPU, replace BusErrorPC by regs.instruction_pc to share
	more code and remove some #ifdef
	[0218bff2413b]

	* src/cpu/newcpu.c, src/cycles.c:
	Use regs.instruction_pc instead of BusErrorPC in WinUAE's CPU
	[59b53f5064d0]

	* src/cpu/memory.c, src/cpu/newcpu.c, src/debug/natfeats.c, src/fdc.c,
	src/ide.c, src/includes/m68000.h, src/ioMem.c, src/m68000.c, src
	/uae-cpu/memory.c:
	Update M68000_BusError() to be able to use WinUAE's CPU bus error
	functions
	[0ba4a8208998]

2015-02-10  Thomas Huth

	* src/ikbd.c:
	Use bitwise 'or' in IKBD_SendAutoJoysticksMonitoring (issue
	discovered with 'smatch')
	[b4c2f65d9d6c]

	* src/acia.c, src/audio.c, src/debug/68kDisass.c, src/debug/debugui.c,
	src/dmaSnd.c, src/falcon/videl.c, src/fdc.c, src/file.c,
	src/floppy.c, src/gui-sdl/dlgFileSelect.c, src/hdc.c, src/mfp.c,
	src/psg.c, src/screen.c, src/unzip.c, src/video.c:
	Fix style issues discovered by sparse: Mark file-local variables as
	'static' etc.
	[e8c4a33a00f0]

	* src/floppy_stx.c, tools/hmsa/hmsa.c:
	Fix style issues discovered by sparse: Remove 'extern' keyword from
	non-extern functions
	[902f2d455876]

2015-02-08  Thomas Huth

	* src/avi_record.c, src/gemdos.c, src/gui-sdl/dlgFileSelect.c,
	src/hdc.c, src/ide.c, src/wavFormat.c:
	Make sure to check return value of library functions that may fail
	[38bbcf70f357]

	* src/floppy.c, src/tos.c, src/zip.c:
	Fixed potential resource leaks (discovered with Coverity)
	[cf22ec2d2e14]

2015-02-07  Thomas Huth

	* CMakeLists.txt, cmake/config-cmake.h, src/debug/debugui.c,
	src/ide.c, src/includes/str.h, src/paths.c:
	Introduce strlcpy to avoid non-terminated string buffers
	[e9145497f0db]

	* src/hdc.c, src/ide.c, src/screenSnapShot.c:
	Fix some issues discovered with Coverity
	[56600f8a9ba7]

	* src/tos.c:
	Improve the checks for valid TOS versions a little bit and make sure
	that RAM TOS images get loaded into the STRam (for SMALL_MEM).
	[74e42795a099]

2015-02-05  Nicolas Pomarede

	* src/cpu/newcpu.c:
	Remove logs for Line-A and Line-F calls
	[8cbca7247d33]

	* src/m68000.c:
	Split M68000_Exception() into 2 parts for old and new CPU core for
	better readability
	[cd68d86dc5c0]

	* src/cpu/cpummu030.c, src/cpu/fpp.c, src/cpu/gencpu.c,
	src/cpu/newcpu.c, src/cpu/newcpu.h, src/cpu/newcpu_common.c,
	src/debug/natfeats.c, src/m68000.c:
	For the new WinUAE's CPU, don't use ExceptionSource anymore when
	calling Exception()
	[7603ad5ea12e]

	* src/mfp.c:
	Keep old MFP interrupt code when using old uae cpu (bis)
	[dc97e84a3756]

	* src/mfp.c:
	Keep old MFP interrupt code when using old uae cpu
	[8b9463fca7fc]

	* src/cpu/compat.h, src/cpu/hatari-glue.c, src/cpu/newcpu.c,
	src/m68000.c, src/mfp.c:
	For WinUAE's cpu, remove old code that handled MFP/DSP interrupts by
	calling Exception() directly
	[25c5e5bcc31b]

	* src/cpu/newcpu.c:
	For WinUAE's cpu, more accurate emulation of the E clock delay for
	autovectored interrupts Instead of using some tables with different
	jitter patterns for HBL and VBL interupts in InterruptAddJitter(),
	we really measure the delay to the next E clock and use it in
	iack_cycle(), as it is done on a real 68000
	[dbc702b3ca12]

	* src/video.c:
	Update temporary hack for 'Panic' by Paulo Simoes to work with new
	WinUAE CPU too See changeset #5160 for details
	[23b6759d3328]

2015-02-05  Eero Tamminen

	* doc/compatibility.html, doc/emutos.txt:
	add more SillyVenture 2014 demos
	[d9570c4cb61e]

2015-02-04  Eero Tamminen

	* doc/hatari.1, doc/manual.html:
	add SDL GUI keyboard shortcuts section also to manual
	[097901d55330]

2015-02-03  Eero Tamminen

	* src/gui-sdl/sdlgui.c:
	improve keyboard shortcut indicator

	- on 2x mode, use black underline like PC desktops do
	- on 1x mode, move underline higher so that it doesn't go:
	  - over next line text
	  - over button borders and make it purple so that it's easier to
	distinguish from font
	[7348e7f52bf6]

2015-02-02  Nicolas Pomarede

	* src/fdc.c:
	Typo
	[62d8d2acd33c]

	* doc/release-notes.txt, src/fdc.c:
	When using 'read address' and 'read track' on ST/MSA, check the
	track number is valid If track is beyond limit, we return RNF for
	'read address' and random data for 'read track'
	[d68ecd523850]

2015-01-29  Thomas Huth

	* src/cpu/CMakeLists.txt:
	Disable -Wno-unused-but-set-variable for old GCCs
	[024f52440267]

2015-01-28  Eero Tamminen

	* doc/compatibility.html:
	add sillyventure 2014 Falcon demos + update TBL info
	[e8255fec795b]

2015-01-27  Laurent Sallafranque

	* src/falcon/dsp_core.c, src/falcon/dsp_core.h, src/falcon/dsp_cpu.c:
	revert DSP ea pipeline change
	[5741681e7d9f]

2015-02-02  Nicolas Pomarede

	* src/cpu/compat.h, src/cpu/hatari-glue.c, src/cpu/newcpu.c,
	src/falcon/dsp.c, src/falcon/dsp.h, src/includes/m68000.h,
	src/includes/mfp.h, src/m68000.c, src/mfp.c, src/uae-cpu/newcpu.c:
	For WinUAE's cpu, handle MFP/DSP interrupts as level 6 interrupts
	instead of calling Exception() directly Unlike HBL and VBL
	interrupts, MFP/DSP interrupts were handled by calling directly
	Exception() with the new vector number from 0xfffa17 and 0xffa203,
	but this was not the correct way to do it because it required
	special code for the IACK sequence and lot of changes to the
	original WinUAE's code, making it harder to merge code's change with
	WinUAE
	[5894fc89f59b]

2015-02-01  Nicolas Pomarede

	* src/uae-cpu/gencpu.c:
	Cancel change #5515 from 7/1/2015 : extra cycles for JSR/JMP with
	Ad8r and PC8r were already counted (fix 'European Demos' Main Menu)
	[7c7d08d97add]

2015-01-25  Nicolas Pomarede

	* src/includes/m68000.h, src/m68000.c, src/video.c:
	Use exceptions's number instead of their vector
	[c585c7b4549a]

2015-01-24  Eero Tamminen

	* doc/compatibility.html:
	add No Extra's STE demos to compat list
	[03db4765be12]

2015-01-22  Nicolas Pomarede

	* src/blitter.c, src/mfp.c:
	During blitter transfer, also increase main cycle counter used for
	MFP timing Fix "Infinite Live of the Blitter" by "No Extra" that
	crashed after the dot tunnel part due to an MFP interrupt being
	delayed after the VBL interrupt
	[aa35fd01aec6]

2015-01-21  Nicolas Pomarede

	* src/cpu/cpummu030.h, src/cpu/custom.c, src/cpu/debug.c,
	src/cpu/debug.h, src/cpu/mmu_common.h, src/cpu/newcpu.c:
	Remove some compilation's warnings
	[a26201a9a581]

	* src/cpu/newcpu.c:
	Call iack_cycle() for all CPU modes
	[e043575d9815]

2015-01-19  Nicolas Pomarede

	* src/cpu/newcpu.c:
	Move some old UAE code for interrupts into WinUAE's cpu
	[5dffd6ed9f86]

2015-01-18  Eero Tamminen

	* doc/compatibility.html, doc/emutos.txt:
	update info on few other TT programs
	[48fb080b0fbd]

	* doc/compatibility.html, doc/emutos.txt:
	update tSCc demo info
	[c009099270fb]

2015-01-16  Nicolas Pomarede

	* src/cpu/newcpu.c:
	Use a different variable 'vector_nr' to store the return value of
	iack_cycle() Vectored interrupts can return a new value for 'nr',
	but we need to keep the old and the new value to correctly process
	the exception
	[bbe3cf0b8c34]

2015-01-15  Nicolas Pomarede

	* src/cpu/newcpu.c:
	Add some default cycles values for interrupts in 68000 CE mode These
	are not accurate timings, but they work with many demos and allows
	to improve other parts of the CPU when in CE mode
	[7003152c5da6]

	* src/cpu/cpu_prefetch.h:
	Add preliminary memory access timing : count 4 cycles per byte/word
	access in 68000 CE mode This already fixes a lot of instructions'
	timings for most EA, but real HW is more complex and requires to add
	2 extra cycles on non-aligned accesses
	[b93313999f16]

	* src/cpu/gencpu.c:
	Fix bad cycles count for divu/divs with WinUAE's cpu in prefetch
	mode
	[89f486d595ba]

2015-01-14  Eero Tamminen

	* doc/hatari.1, doc/manual.html:
	updates to VDI mode descriptions (limits etc)
	[bd63ce2672a8]

	* doc/release-notes.txt, src/stMemory.c:
	change VDI mode phystop again, NVDI crashes if gap is too large
	[1ce6289afd51]

2015-01-13  Nicolas Pomarede

	* src/cpu/compat.h, src/cpu/newcpu.c, src/cpu/sysdeps.h:
	Define macro for gui_message
	[6e90f8af89e8]

2015-01-13  Nicolas Pomarede

	* src/cpu/cpummu030.c, src/cpu/cpummu030.h, src/cpu/debug.c,
	src/cpu/newcpu.c, src/cpu/options_cpu.h, src/cpu/savestate.h,
	src/cpu/winuae_readme.txt:
	Update WinUAE cpu core from 3.1.0 b1 to 3.1.0 b3
	 - DBcc cycles in 68000 compatible/prefetch mode were wrong
	 - Set unused bits of "mode" in bus/address errors stack frame
	 - update prefetch when turning MMU on/off
	[24ef75d87e13]

2015-01-13  Nicolas Pomarede

	* src/cpu/hatari-glue.c, src/uae-cpu/hatari-glue.c:
	Use a NOP to return from opcodes used to intercept gemdos/natfeats
	[fb489428c6a4]

2015-01-12  Nicolas Pomarede

	* src/cpu/newcpu.c, src/m68000.c:
	Fix bad cycles count in 68000 cycle exact mode
	[9d5fc7282180]

2015-01-12  Eero Tamminen

	* tests/natfeats/natfeats.c, tests/natfeats/natfeats.h:
	fix natfeats test-code for 16-bit compilers

	AHCC sizeof() returns word and probably so does e.g. "gcc -mshort".
	Thanks & apologies to Nicolas for needing to debug this!
	[57811c1ded3c]

2015-01-12  Nicolas Pomarede

	* src/cpu/hatari-glue.c:
	Fix NatFeat_ID and NatFeat_Call with new WinUAE's cpu
	[e396d9e06353]

2015-01-12  Eero Tamminen

	* doc/manual.html:
	update HD Driver / EmuTOS HD image notes

	info was 5 years out of date...
	[25e72df09123]

	* src/stMemory.c:
	give warning about VDI mode <-> mem detection incompatibility
	[a4df9ed6f7c7]

2015-01-11  Nicolas Pomarede

	* src/main.c:
	Call STX_Init from Main_Init_HW, not from Main_Init else it breaks
	some options STX_Init should be called before parsing --disk-X
	options, else the STX file won't be loaded.
	[0270ca2b7603]

2015-01-11  Eero Tamminen

	* src/stMemory.c:
	VDI mode mem gap limit is needed for TOS v3
	[f2d14d9da099]

	* src/stMemory.c:
	debug output of VDI mode memtop/physbase

	to help debugging people's issues with VDI mode
	[684e34e2f9d1]

	* doc/release-notes.txt, src/stMemory.c:
	improved memtop/phystop values for VDI mode

	Situation was more complicated, it depends on TOS version what
	works.
	[036a41cfbc56]

	* doc/release-notes.txt, src/stMemory.c:
	align memtop to 32k for better compatibility between VDI mode & TT-
	RAM
	[74ab45ad6356]

2015-01-10  Eero Tamminen

	* doc/manual.html:
	improve wording
	[abda03557db5]

	* doc/manual.html:
	IDE works also with older TOS version, they just don't boot from IDE
	[6d03929f9aa9]

2015-01-09  Thomas Huth

	* src/cpu/hatari-glue.c, src/debug/68kDisass.c,
	src/debug/debug_priv.h, src/floppy_stx.c, src/includes/unzip.h,
	src/main.c, src/str.c, src/unzip.c:
	Fixed issues discovered with cppcheck
	[e3e7d488159d]

2015-01-09  Eero Tamminen

	* tools/hatari-prg-args.sh:
	finally fix hatari-prg-args.sh argument parsing (shell bug)

	Debian LTS builtin /bin/sh echo command is borked, it by default
	interprets backslashes with letters from different variables when
	they're concatenated. And it doesn't support -E option to disable
	this. Fix by forcing use of separate echo command.

	Fixed by using system echo command. Converting path string to upper
	case before concatenating
	[e209b01e628b]

	* doc/compatibility.html:
	update
	[e1cbb3fa0401]

2015-01-08  Nicolas Pomarede

	* src/cpu/gencpu.c, src/cycles.c:
	Backport MovepByteNbr in MOVEP from old UAE cpu to new WinUAE cpu
	[465bc4286ffa]

2015-01-07  Nicolas Pomarede

	* src/cpu/gencpu.c:
	Fix JMP timing in prefetch mode, broken in change #5514
	[4893bab43a87]

	* src/uae-cpu/gencpu.c:
	Add 2 extra cycles for JSR/JMP with Ad8r and PC8r in old UAE cpu
	[01195fa93771]

	* src/cpu/gencpu.c:
	Update special case for Ad8r and PC8r when using 68000 prefetch mode
	[c88976657f73]

2015-01-07  Eero Tamminen

	* src/debug/profilecpu.c:
	fix profile stats with different TOS & CART addr order
	[26ec40203078]

2015-01-06  Eero Tamminen

	* src/debug/profilecpu.c:
	fix: save whole profile

	TOS area was left out if it was in lower address than CART
	[0e499189303d]

	* src/debug/debugui.c:
	fix recursion + segfault with profiler DEBUG option
	[c823ec94eb84]

2015-01-06  Nicolas Pomarede

	* src/m68000.c, src/uae-cpu/options_cpu.h:
	Also define cpu_cycle_exact with old UAE cpu, but always force it to
	false
	[b351fab701c6]

	* CMakeLists.txt:
	Cancel adding '-g' option to gcc in previous commit
	[795218a43886]

	* CMakeLists.txt, src/cpu/gencpu.c:
	In WinUAE's cpu, add 2 cycles for Ad8r and PC8r only when using
	68000 prefetch mode
	[25ffdf027488]

	* src/cpu/gencpu.c:
	Backport some ST specific cycles values from old UAE cpu to new
	WinUAE cpu Unaligned memory accesses take 2 more cycles on ST when
	using Ad8r and PC8r adressing mode ; we need to handle this in
	prefetch mode.
	[3bf5f18f12e0]

2015-01-05  Nicolas Pomarede

	* src/cpu/gencpu.c:
	Fix DBF cycles in 68000 prefetch mode (from WinUAE 3010b2)
	[87430a54b1c2]

	* src/cpu/options_cpu.h:
	Disable WinUAE's specific variables in struct uae_prefs
	[b7e38145f4f1]

2015-01-05  Eero Tamminen

	* src/gemdos.c:
	fix Pexec() cmdline trace output
	[37dce586933d]

	* src/configuration.c:
	fix compile warning from DSP change
	[28eff0256b5e]

2015-01-04  Eero Tamminen

	* doc/hatari.1, doc/manual.html:
	sync hatari input sections better between manuals
	[7e4a38a5610e]

	* doc/hatari.1:
	add info on middle button -> double click, fix AltGr+Fx notes
	[0f54313c31c8]

2015-01-04  Nicolas Pomarede

	* src/cpu/debug.c, src/cpu/newcpu.c:
	Factorize code with WinUAE : use get_long_debug() instead of direct
	STMemory_ReadLong()
	[c2892dc90598]

	* src/cpu/debug.c, src/cpu/gencpu.c, src/cpu/memory.h,
	src/cpu/newcpu.c, src/cpu/options_cpu.h, src/cpu/winuae_readme.txt:
	Update WinUAE cpu core from 3.0.0 to 3.1.0b1
	[ed23098b5c91]

	* src/cpu/cpummu.c:
	Fix movem stack frame in mmu_bus_error from WinUAE 3010b1
	[f62246905caf]

2015-01-03  Nicolas Pomarede

	* src/change.c, src/configuration.c, src/falcon/dsp.c,
	src/falcon/dsp.h:
	Fix restoring DSP state after loading a memory snapshot DSP_Init()
	should be called only at start, during emulation we only call
	DSP_Enable() or DSP_Disable(). Also remove a call to DSP_Reset()
	which seems useless.
	[a6a3ac3ab02f]

	* src/falcon/dsp.c:
	Fix crash when restoring a memory snapshot where DSP was enabled
	DSP_Init should be called after restoring the snapshot, else if
	defaut value for nDSPType==0, then dsp_core_init won't be called at
	start and dsp_core_hostport_update_hreq will crash when calling
	dsp_host_interrupt (null pointer)
	[cde42d1f28c7]

2015-01-02  Eero Tamminen

	* doc/compatibility.html:
	update compatibility notes for problematic sound apps
	[75fd99dbafea]

	* src/gemdos.c:
	fix gemdos hex number showing
	[214fc1ea33ed]

2015-01-01  Eero Tamminen

	* doc/release-notes.txt:
	update release notes
	[6a734f53ee49]

	* tools/hatari-prg-args.sh:
	fix path
	[3a25e7967b23]

	* tools/hatari-prg-args.sh:
	improve host path removal from Atari prg args

	shell replace syntax didn't work reliably, so replaced it with
	otherwise equivivalent, but (hopefully) more robust 'sed'
	incantation.
	[4ac9c4299837]

	* tools/hatari-prg-args.sh:
	add script to autorun Atari programs with arguments using Hatari
	[0913059a34a0]

	* src/debug/breakcond.c, src/debug/debugInfo.c, src/debug/debugInfo.h:
	expose basepage address as variable to debugger
	[087f0d29ad62]

2014-12-30  Eero Tamminen

	* doc/compatibility.html:
	add TLB/oceanmachine
	[3d4b72482cda]

2014-12-29  Eero Tamminen

	* doc/compatibility.html:
	update Falcon compatibility info for new WinUAE CPU core
	[56c9eda446ae]

2014-12-28  Nicolas Pomarede

	* src/cpu/newcpu.c:
	Fix cycles counting when using 68040/68060 in compatible/prefetch
	mode
	[dc392dc09a2e]

2014-12-28  Eero Tamminen

	* doc/release-notes.txt:
	add Nicolas' updates to release notes
	[03c949a41e8b]

2014-12-28  Nicolas Pomarede

	* src/ioMemTabFalcon.c:
	For Falcon, change cpu freq when writing to 0xff8007 only if CPU is
	68030 TOS 4 forces CPU freq to 16 MHz at boot, but we don't want to
	apply this when running in 68040 or 68060 mode at 32 MHz
	[0b30df2dccee]

	* src/statusbar.c:
	Correctly display 68060 CPU type in the statusbar
	[80b765ce56ab]

	* src/gui-sdl/dlgSystem.c:
	Correctly init cpu frequencies when displaying System dialog
	[94cc75e2c029]

	* src/options.c:
	Allow --cpulevel 6 to use 68060 with new cpu core
	[23aa98f8dd71]

	* src/video.c:
	Don't save a memory pointer, save the video address in ST memory
	space
	[71cb37d475ee]

2014-12-28  Laurent Sallafranque

	* src/falcon/dsp_core.c, src/falcon/dsp_core.h, src/falcon/dsp_cpu.c:
	fix 1 bug in dsp parallel move + dsp code simplification + ea
	pipeline preparation
	[8b371afc21f2]

2014-12-27  Nicolas Pomarede

	* src/gemdos.c:
	Gemdos DTA was not correctly restored when using extra TT RAM
	[a5d3a8fb52f0]

	* src/cart.c, src/includes/cart.h, src/memorySnapShot.c, src/reset.c:
	Fix a crash when accessing HD after restoring a memory snapshot with
	new WinUAE cpu When restoring a snapshot, patching cpu opcodes
	should only be done at the end, after rebuilding the cpu tables
	(else the patches in the cartridge used for HD gemdos emulation
	could be overwritten)
	[49ff2d95519c]

2014-12-24  Nicolas Pomarede

	* tests/buserror/results/mste4_b.txt,
	tests/buserror/results/mste4_w.txt:
	Add bus error results for the Mega STE4. We need to add a separate
	machine type "Mega STE" (thanks to Cyprian Konador for the tests)
	[3d940f5465a3]

	* src/tos.c:
	Update the messages when adding TT RAM and 24 bit addressing is used
	- For TT, we force to 32 bit addressing
	- For Falcon, we just warn the user and let him choose if he really
	wants 24 bit without extra RAM or 32 bit with extra RAM
	[4920d05c6b34]

	* src/blitter.c:
	Allow blitter to use 32 bit for src/dst addresses in Falcon mode
	with TT RAM As TOS 4.04 is supposed to be limited to 24 bit
	addressing with the Falcon's 68030, there's no check in TOS to
	ensure the blitter is not used with addresses above the 24 bits
	limit and the TOS will try to blit between ST RAM and TT RAM, which
	will crash is addresses are masked to 24 bits.
	[c3e62d91bd68]

	* src/tos.c:
	Patch TOS 4.04 to automatically call maddalt() when TT RAM is added
	to the Falcon As TOS 4.04 is only supposed to run in 24 bit mode, it
	doesn't expect extra memory to be present at address $01000000. Even
	if this extra memory is validated in $5A4/$5A8, we must add it to
	the TOS ourselves. We patch the TOS to call maddalt() just before
	booting on the 1st drive (same method as in the CT60 extension
	board)
	[94f3f814e673]

2014-12-22  Nicolas Pomarede

	* src/tos.c:
	Remove another PMOVE when using TOS4.04 with 68060 As the patch
	can't be stored in place, we put it in an unused memory region at
	the end of the TOS 512 kB region
	[3d3dab04db7b]

2014-12-21  Nicolas Pomarede

	* src/cpu/memory.c, src/includes/stMemory.h, src/stMemory.c, src/uae-
	cpu/memory.c:
	Validate TT RAM at 0x01000000 when using fast boot or Falcon mode
	[409aa73bd325]

	* src/cpu/newcpu.c:
	In the CPU, remove some remaining get_long in log messages
	[d949670441a9]

	* src/stMemory.c:
	When using fast boot on TT, set bit0=1 at $ff8e09 to simulate a warm
	start Else memory detection is not skipped after a cold start/reset
	This worked so far, because reading $ff8e09 is not emulated yet and
	always returns 0xff ; with this we're safe if emulation improves for
	$ff8e09
	[4052b43e33c9]

	* src/stMemory.c:
	When using fast boot on Falcon, set bit6=1 at $ff8007 to simulate a
	warm start Else memory detection is not skipped after a cold
	start/reset
	[cc55446ed1d2]

2014-12-20  Eero Tamminen

	* src/debug/breakcond.c:
	improve debugger breakpoint address checks

	use already available function with 24/32-bit support and take also
	address size into account.
	[c84704b8581a]

	* tests/debugger/makefile, tests/debugger/test-breakcond.c,
	tests/debugger/test-dummies.c, tests/debugger/test-evaluate.c:
	better debugger tests update/fix

	when using real stMemory.c, memory banks would need to be enabled
	with lots of variables (without that tests just segfault like with
	previous commit). Better just to write minimal needed mem read &
	write functions. To test those, changed tests to use them too.
	[1226b9c04e27]

	* tests/debugger/makefile, tests/debugger/test-dummies.c:
	changes needed to get debugger tests compile again
	[db0e3054e3ec]

2014-12-19  Nicolas Pomarede

	* src/debug/symbols.c:
	Handle 32 bit addressing to load CPU symbols table
	[8be4491463f9]

2014-12-19  Nicolas Pomarede

	* src/cpu/newcpu.c:
	In the CPU, don't use get_long in log messages as it can trigger a
	bus error
	[7e20d7ea48e1]

2014-12-19  Nicolas Pomarede

	* src/debug/profilecpu.c:
	In profiler, only mask PC if 24 bit addressing mode is enabled
	[1e3a41c54920]

	* src/debug/68kDisass.c, src/debug/debugcpu.c:
	Display memory ranges with 8 digits instead of 6
	[0ef09e455dce]

	* src/debug/breakcond.c:
	Don't mask to 24 bits in BreakCond_ReadSTMemory(), this is handled
	in STMemory_Read()
	[345e027d98fb]

	* src/debug/debugcpu.c:
	In debugger, don't limit address ranges to 24 bits in memdump/disasm
	[6a262668b417]

	* src/includes/stMemory.h, src/stMemory.c:
	Rewrite STMemory_Read / STMemory_Write functions to be 32 bit
	compliant Previous version was limited to 24 bit addresses and
	RAM/ROM. This new version can handle 32 bit accesses and any kind of
	memory (including TT RAM) This fixes non working gemdos HD emulation
	with TT in 32 bit modei and TOS 3.06 when DTA was located in TT RAM.
	[4c53e5764c52]

	* src/cpu/memory.c, src/uae-cpu/memory.c:
	Set the infos about allocated memory pointers for each mem bank This
	allows direct access to a memory region in stMemory.c
	[ba731ace4b37]

	* src/uae-cpu/memory.h:
	Backport from new cpu core : add baseaddr/start/mask to addrbank to
	directly access a memory region
	[9f1020c0f470]

2014-12-18  Eero Tamminen

	* doc/release-notes.txt:
	update release notes
	[58066a7b6408]

	* src/cpu/memory.c, src/includes/stMemory.h, src/statusbar.c,
	src/tos.c, src/uae-cpu/memory.c:
	expose TTmemory so that statusbar knows whether TT-RAM is in use

	With this, TT-RAM config value doesn't need to be zeroed to avoid
	bogus statusbar info.
	[0ca5f3fbd5f0]

2014-12-18  Nicolas Pomarede

	* src/cpu/winuae_readme.txt:
	Keep track of the WinUAE's version used for the CPU : 3.0.0
	(17/12/2014)
	[d4c6ff9b39aa]

2014-12-18  Eero Tamminen

	* src/change.c, src/statusbar.c, src/tos.c:
	less strict TT-RAM forcing, add WINUAE define checks
	[0d39dda86acb]

2014-12-17  Eero Tamminen

	* src/debug/debugInfo.c, src/stMemory.c:
	fix recently changed "info" command CheckAreaType() calls, tell why
	it fails

	CheckAreaType() is called so rarely that I think it's fine to output
	from it what kind of type mismatch caused the failure.
	[9c12ec4dd52e]

	* src/tos.c:
	disable 24-bit addressing & fastboot for TT-RAM
	[929ba85ae849]

	* src/gui-sdl/dlgMemory.c:
	prefix defines (requested by Nicolas)
	[7c71877c214a]

2014-12-17  Nicolas Pomarede

	* src/configuration.c:
	By default, don't patch TOS for faster boot
	[c6c916adab81]

	* src/cpu/memory.c, src/tos.c:
	Add support for extra TT RAM starting at address $01000000 This
	requires machine to be TT and to not use 24 bit addressing. 'Patch
	TOS for faster boot' should also be disabled. TOS and EmuTOS will
	detect up to 2047 MB, but it seems expansion boards didn't use more
	than 256 MB.
	[a48cd15812ee]

	* src/configuration.c:
	Fix saving of TT RAM size
	[dfd4dbcce715]

2014-12-16  Eero Tamminen

	* src/gui-sdl/dlgMemory.c, src/options.c:
	TT-RAM options are available only with WinUAE CPU core
	[0ec3bf9d9fae]

	* doc/hatari.1, src/change.c, src/configuration.c, src/gui-
	sdl/dlgMemory.c, src/includes/configuration.h, src/options.c,
	src/statusbar.c:
	GUI/config/option support for specifying TT-RAM amount

	(CPU core side implementation will be provided by Nicolas soon.)
	[0fd1a6f1f2f8]

2014-12-15  Nicolas Pomarede

	* src/cpu/memory.c:
	Remap memory 00xxxxxx to FFxxxxxx if MMU is disabled in 32 bit
	TT/Falcon mode Some IO registers are sometimes accessed at addresses
	$FFFFxxxx instead of $00FFxxxx, so we need to point our internal
	memory banks to the same location.
	[fbd1d8cb45c8]

	* tests/buserror/results/mst4_b.txt,
	tests/buserror/results/mst4_w.txt:
	Add bus error results for the Mega ST4. We need to add a separate
	machine type "Mega ST" (thanks to MasterOfGizmo for the tests)
	[5c79d8e481da]

	* src/fdc.c:
	FDC's "Step Out" command was not correctly displayed in the status
	bar
	[3006e3fef00f]

	* src/cpu/debug.c:
	Update cpu to latest WinUAE 3.00b28
	[6b1469ba5eba]

2014-12-15  Eero Tamminen

	* src/debug/profilecpu.c:
	enable debug for successive zero cycles, until issue is
	fixed/clarified
	[08a8ef685667]

	* src/debug/profilecpu.c:
	fix CPU cycle counting for new WinUAE CPU core

	Patch from Nicolas for using global cycle counter.

	Now all CPU cores behave the same in regards to cycle counting, and
	regardless of whether DSP is enabled or not.
	[a18a7066cc71]

2014-12-12  Eero Tamminen

	* src/hdc.c:
	better error messages on ACSI image lenght check
	[7524a2f7ea70]

2014-12-12  Nicolas Pomarede

	* src/includes/stMemory.h, src/stMemory.c:
	Use more generic addrbank functions in STMemory_CheckAreaType() and
	STMemory_STAddrToPointer() Also take bAddressSpace24 into account
	when converting ST address to direct pointer
	[631d5aa8f3c6]

	* src/debug/debugInfo.c, src/debug/natfeats.c, src/gemdos.c,
	src/hdc.c, src/vdi.c:
	Replace STMemory_ValidArea with STMemory_CheckAreaType
	[bdca7e5f4378]

	* src/includes/stMemory.h, src/stMemory.c:
	Add STMemory_CheckAreaType to check that memory access are within a
	valid range/memory type
	[cc43421926a3]

	* src/cpu/memory.c, src/uae-cpu/memory.c, src/uae-cpu/memory.h:
	Backport from new cpu core : add a flag to addrbank to store its
	memory type (RAM, ROM, IO, ...)
	[1bfda33e793d]

2014-12-11  Laurent Sallafranque

	* src/falcon/dsp_core.c, src/falcon/dsp_core.h:
	cosmetic change : remove all spaces at end of lines
	[8e3167621f4b]

2014-12-11  Nicolas Pomarede

	* src/debug/natfeats.c, src/gemdos.c, src/includes/stMemory.h,
	src/stMemory.c, src/vdi.c, src/xbios.c:
	Replace STRAM_ADDR with STMemory_STAddrToPointer
	[1bb2510b7a53]

	* src/bios.c:
	In debug for Bios(4), it's more useful to have the ST address than a
	pointer
	[e5bddf7c1093]

	* src/configuration.c, src/includes/configuration.h:
	Also define bAddressSpace24 with old UAE cpu, but always force it to
	true
	[f9402fce04df]

2014-12-11  Laurent Sallafranque

	* src/falcon/dsp_cpu.c:
	rewrite of the loop condition according to the motorola DSP
	documentation. This won't change anything, but it like it should be.
	[5277eb03cc8c]

2014-12-10  Nicolas Pomarede

	* src/floppy_stx.c, src/includes/floppy_stx.h:
	Correctly check the 4 first bytes of STX files
	[ea193083ff75]

	* src/cpu/CMakeLists.txt:
	Fix CMakeLists.txt for new WinUAE's cpu
	[aca63031cc09]

2014-12-08  Nicolas Pomarede

	* src/cpu/CMakeLists.txt, src/cpu/build68k.c, src/cpu/compat.h,
	src/cpu/cpu_prefetch.h, src/cpu/cpummu.c, src/cpu/cpummu.h,
	src/cpu/cpummu030.c, src/cpu/cpummu030.h, src/cpu/custom.c,
	src/cpu/custom.h, src/cpu/debug.c, src/cpu/events.c,
	src/cpu/events.h, src/cpu/fpp.c, src/cpu/gencpu.c,
	src/cpu/jit/compemu.h, src/cpu/jit/compemu_support.c,
	src/cpu/jit/gencomp.c, src/cpu/md-fpp.h, src/cpu/memory.c,
	src/cpu/memory.h, src/cpu/mmu_common.h, src/cpu/newcpu.c,
	src/cpu/newcpu.h, src/cpu/newcpu_common.c, src/cpu/options_cpu.h,
	src/cpu/savestate.h, src/cpu/sysconfig.h, src/cpu/table68k,
	src/m68000.c:
	Update WinUAE cpu core from 2.8.1 to 3.00b7
	- fixes a few MMU bugs
	- fixes 68000 cycles in compatible/prefetch mode to match those of old
	UAE cpu core
	- fixes bug when EmuTOS would not boot with 68030 in compatible or CE
	mode
	- various small changes in some opcodes
	[d5d4a5daa92b]

2014-12-08  Eero Tamminen

	* doc/release-notes.txt:
	update release notes
	[c63f3b8c068f]

2014-12-08  Nicolas Pomarede

	* src/floppy_stx.c:
	Remove compiler's warning with strncmp when checking STX files
	[cd5d6789291d]

2014-12-07  Thomas Huth

	* share/icons/hicolor/scalable/mimetypes/application-x-st-disk-
	image.svg:
	Replaced the scalable floppy icon with a repainted, cleaner version
	[9448801c7660]

2014-12-06  Eero Tamminen

	* src/gui-sdl/dlgScreen.c, src/includes/options.h, src/includes/vdi.h,
	src/options.c, src/screen.c, src/vdi.c:
	long overdue VDI_Limit -> Opt_ValueAlignMinMax rename/move

	- VDI_Limit() function has been used for a long time for
	aligning/limiting other than VDI related configuration values.
	Rename & move this functionality to options.c (it will be used there
	later by TT-RAM function)
	- Lines got really long in SDL dialog code, added there shorter local
	variable for readability while doing the rename
	- removed outdated VDI_Limit() comment in screen.c
	[523c59a9db47]

	* src/statusbar.c:
	change statusbar info format slightly for later TT-RAM info
	[55740bea3fdf]

	* src/statusbar.c:
	Fix: Statusbar msg len didn't accommodate WinUAE/FPU/MMU info
	[218cf9063047]

2014-12-06  Nicolas Pomarede

	* src/floppy_stx.c, src/includes/floppy_stx.h:
	A valid .stx file should have a "RSY\0" header
	[0b97ec041b6b]

2014-12-02  Nicolas Pomarede

	* src/video.c:
	Add a temporary hack for 'Gen 4 Demo' by Overlanders, don't trigger
	'left+2' on 1st line The timing used in this demo is similar to the
	left+2 case on the 1st line that normally require a 2 cycle
	precision. This hack is required because we only have 4 cycle
	precision, but should be removed later (similar to 'Panic' by Paulo
	Simoes)
	[2eb9303988b3]

2014-12-01  Nicolas Pomarede

	* src/uae-cpu/savestate.h:
	Add missing prototypes
	[c63e23a35f16]

	* src/cpu/CMakeLists.txt, src/cpu/build68k.c, src/cpu/compat.h,
	src/cpu/cpu_prefetch.h, src/cpu/cpummu.c, src/cpu/cpummu.h,
	src/cpu/cpummu030.c, src/cpu/cpummu030.h, src/cpu/custom.c,
	src/cpu/custom.h, src/cpu/debug.c, src/cpu/debug.h,
	src/cpu/events.c, src/cpu/events.h, src/cpu/events_jit.h,
	src/cpu/events_normal.h, src/cpu/falcon_cycle030.h, src/cpu/fpp.c,
	src/cpu/gencpu.c, src/cpu/hatari-glue.c, src/cpu/hatari-glue.h,
	src/cpu/jit/compemu.h, src/cpu/jit/compemu_fpp.c,
	src/cpu/jit/compemu_raw_x86.c, src/cpu/jit/compemu_support.c,
	src/cpu/jit/comptbl.h, src/cpu/jit/gencomp.c, src/cpu/maccess.h,
	src/cpu/md-fpp.h, src/cpu/memory.c, src/cpu/memory.h,
	src/cpu/mmu_common.h, src/cpu/newcpu.c, src/cpu/newcpu.h,
	src/cpu/newcpu_common.c, src/cpu/options_cpu.h, src/cpu/readcpu.c,
	src/cpu/readcpu.h, src/cpu/rpt.h, src/cpu/savestate.h,
	src/cpu/sysconfig.h, src/cpu/sysdeps.h, src/cpu/table68k,
	src/debug/68kDisass.c, src/debug/debugcpu.c, src/debug/natfeats.c,
	src/m68000.c, src/memorySnapShot.c, src/tos.c:
	Update WinUAE's cpu from the old 2.3 version to the more recent
	2.8.1 This new core features MMU emulation for 68030/40, as well as
	many improvements in "cycle exact" mode for 68000 and 68020/30.
	[ac537e1d80f4]

2014-11-28  Thomas Huth

	* src/hdc.c:
	Put the hard disk response data into a separate buffer first to
	separate the DMA logic from the SCSI command logic.
	[ca7bdb0452db]

	* src/hdc.c:
	NCR5380 is work-in-progress, so disable the code by default
	[c78faf684355]

2014-11-27  Nicolas Pomarede

	* doc/compatibility.html, doc/release-notes.txt, src/uae-cpu/gencpu.c:
	Improve exception's stack for address error and JMP (fix the game
	The Teller)
	[5eb411120e81]

2014-11-26  Thomas Huth

	* src/tos.c:
	Patch TOS 4.04 to work without MOVEP when running with 68060
	[71d063d22f23]

2014-11-23  Thomas Huth

	* src/hdc.c:
	Factor device init into a separate function so that it can be later
	used for SCSI, too
	[ddde028f2981]

2014-07-24  Thomas Huth

	* src/configuration.c, src/includes/configuration.h:
	Add SCSI devices to the configuration settings
	[d81828b67d19]

2014-11-22  Thomas Huth

	* src/fdc.c, src/hdc.c, src/includes/fdc.h:
	Make sure that HDC IRQ gets cleared before analyzing a new byte
	[6044e451ec4c]

2014-11-20  Nicolas Pomarede

	* doc/release-notes.txt, src/fdc.c:
	For STX disks, fix type I commands with verify bit on tracks with no
	sector (fix the game 'Obitus', seek command never completed)
	[26ddec584e48]

2014-11-16  Eero Tamminen

	* doc/hatari.1, doc/manual.html, src/avi_record.c,
	src/includes/avi_record.h, src/options.c:
	add --png-level option
	[5449e91a3e3f]

	* doc/emutos.txt:
	update etos compat info
	[57b38a3c0c7a]

	* src/gui-sdl/dlgJoystick.c, src/includes/configuration.h,
	src/includes/joy.h, src/joy.c:
	fix: potential initial statusbar & GUI joy state mismatch

	Same check needs to be done at startup as is done in Joystick
	dialog, otherwise statusbar and dialog will show different Joy
	settings when Joy Id has changed from configured.
	[8e52c3ed2e93]

	* src/statusbar.c:
	remove redundant flag set/check
	[edaa7c4d2738]

2014-11-14  Thomas Huth

	* share/CMakeLists.txt, share/applications/hatari.desktop,
	share/icons/hicolor/128x128/mimetypes/application-x-msa-disk-
	image.png, share/icons/hicolor/256x256/mimetypes/application-x-msa-
	disk-image.png, share/icons/hicolor/32x32/mimetypes/application-x
	-msa-disk-image.png,
	share/icons/hicolor/48x48/mimetypes/application-x-msa-disk-
	image.png, share/icons/hicolor/64x64/mimetypes/application-x-msa-
	disk-image.png, share/icons/hicolor/scalable/mimetypes/application-x
	-msa-disk-image.svg, share/mime/packages/hatari.xml:
	All disk types (MSA, STX and DIM) now use the same icon as the .ST
	images
	[b5b83b218ef3]

2014-11-10  Thomas Huth

	* share/CMakeLists.txt,
	share/icons/hicolor/128x128/mimetypes/application-x-msa-disk-
	image.png, share/icons/hicolor/128x128/mimetypes/application-x-st-
	disk-image.png, share/icons/hicolor/256x256/mimetypes/application-x
	-msa-disk-image.png,
	share/icons/hicolor/256x256/mimetypes/application-x-st-disk-
	image.png, share/icons/hicolor/32x32/mimetypes/application-x-msa-
	disk-image.png, share/icons/hicolor/32x32/mimetypes/application-x
	-st-disk-image.png,
	share/icons/hicolor/48x48/mimetypes/application-x-msa-disk-
	image.png, share/icons/hicolor/48x48/mimetypes/application-x-st-
	disk-image.png, share/icons/hicolor/64x64/mimetypes/application-x
	-msa-disk-image.png,
	share/icons/hicolor/64x64/mimetypes/application-x-st-disk-image.png,
	share/icons/hicolor/scalable/mimetypes/application-x-msa-disk-
	image.svg, share/icons/hicolor/scalable/mimetypes/application-x-st-
	disk-image.svg, share/mime/packages/hatari.xml:
	Add icons and mimetype definitions for .ST and .MSA disk images
	[894108a79865]

	* share/CMakeLists.txt, share/applications/hatari.desktop:
	Add hatari.desktop file for the main executable
	[af5b141a53f0]

2014-11-08  Thomas Huth

	* share/CMakeLists.txt, share/icons/hicolor/64x64/apps/hatari.png:
	Add a 64x64 icon, too
	[0962705bb8ea]

	* share/CMakeLists.txt, share/icons/hicolor/scalable/apps/hatari.svg:
	Add a scalable version of the H icon
	[312d19370bc6]

2014-11-07  Thomas Huth

	* CMakeLists.txt, python-ui/CMakeLists.txt, python-
	ui/hatariui.desktop, share/CMakeLists.txt,
	share/icons/hicolor/128x128/apps/hatari.png,
	share/icons/hicolor/256x256/apps/hatari.png,
	share/icons/hicolor/32x32/apps/hatari.png,
	share/icons/hicolor/48x48/apps/hatari.png:
	Provide desktop icons with higher resolutions
	[a25e74f89132]

2014-11-03  Eero Tamminen

	* src/hdc.c:
	partition is valid only if bit 1 is set
	[1fc4d1648073]

	* src/hdc.c:
	add TODOs for partition counting
	[20ccea07781f]

	* doc/manual.html:
	update hard disk section in manual
	[4ef2d8b0ff5b]

	* CMakeLists.txt, cmake/config-cmake.h, doc/release-notes.txt,
	src/file.c, src/hdc.c, src/ide.c, src/includes/file.h:
	add advisory locking for HD images on systems with flock()
	[ed60df214f1b]

2014-11-02  Eero Tamminen

	* doc/emutos.txt:
	add laserball
	[1a9e6ef5fa16]

2014-10-28  Nicolas Pomarede

	* src/memorySnapShot.c, src/zip.c:
	Fix compilation when zlib is not available
	[0118399fa0cd]

2014-10-26  Nicolas Pomarede

	* src/cpu/hatari-glue.c, src/uae-cpu/hatari-glue.c:
	Don't restore SR after a natfeat command
	[52d443f2f240]

2014-10-20  Eero Tamminen

	* doc/release-notes.txt:
	update release notes
	[d3c31721816d]

2014-10-19  Eero Tamminen

	* doc/emutos.txt:
	improve wording + more consistent line wrapping
	[17cfea04a29f]

2014-10-17  Thomas Huth

	* src/gemdos.c, src/includes/gemdos.h, src/vdi.c:
	Use GemDOS_IsDriveEmulated() to check for GEMDOS C: drive
	[0bf4ab820d62]

2014-10-16  Thomas Huth

	* src/ide.c:
	Silence compiler warnings
	[1ce41134a291]

	* src/gemdos.c:
	GemDOS_CreateHardDriveFileName should only be called with valid
	drives so use assert() here instead
	[bfd4047209b5]

2014-10-14  Eero Tamminen

	* doc/keymap-sample.txt:
	update keymap comments for --trace keymap
	[a6ea14519c7a]

2014-10-13  Eero Tamminen

	* src/change.c, src/gui-sdl/dlgHardDisk.c:
	add SDL GUI option for GEMDOS HD to skip ACSI/IDE partitions
	[02093c7e2c2e]

	* src/options.c:
	add option to specify GEMDOS HD drive

	Either directly with drive letter, or asking GEMDOS HD letter
	assignation to skip known partitions.
	[e84738287305]

	* src/configuration.c, src/gemdos.c, src/includes/configuration.h:
	make GEMDOS HD skipping ACSI/IDE drives configurable

	- rename (previously unused) nHardDiskDir configuration variable to
	more appropriate nHardDiskDrive and save it with config

	- add DRIVE_SKIP define and only if nHardDiskDrive option has that
	value, skip ACSI/IDE partitions detected from drive images MBR [1]

	- by default assign GEMDOS drive to C:

	[1] This parses only Atari & DOS 4 primary partitions table, not the
	extended ICD 8 one, no or logical partitions. Neither will it (yet)
	handle IDE MBR created with non-host byte order.

	Additionally, native Atari HD drivers can parse partition table
	information differently from each other, even when they're installed
	and get run succesfully at boot, so automatic skipping is just a
	"best effort" convenience feature.
	[9428148df300]

2014-10-12  Eero Tamminen

	* src/options.c:
	improve error message

	(permissions aren't necessarily wrong :))
	[c8892e1e2725]

2014-10-12  Thomas Huth

	* src/file.c:
	Fix File_Exists() for block devices
	[6ff33df519ca]

	* src/vdi.c:
	Modify DESKTOP.INF only when using GEMDOS C: drive
	[bcebaaebc880]

	* src/gemdos.c:
	Make sure that we really operate on a GEMDOS HD when creating a file
	name
	[64922e31475f]

	* src/gemdos.c:
	Avoid initializing GEMDOS HD emulation with illegal host folders
	[7e4fd87bfaae]

2014-10-12  Eero Tamminen

	* tests/readme.txt:
	document natfeats subdir in tests readme
	[08360856dd61]

2014-10-11  Eero Tamminen

	* src/gemdos.c:
	fix: file writability check was inverted
	[3635572fe94a]

	* doc/manual.html:
	improve debugger doc wording
	[8070bf77b9b2]

2014-10-03  Thomas Huth

	* src/fdc.c, src/hdc.c:
	Revert the ff8604 longword hack, and rather ignore the A1 line for
	the second byte
	[d910217ea576]

	* src/hdc.c:
	Fix the newlines of the scsi_cmd log statements
	[069aefb0968f]

	* src/fdc.c, src/ioMem.c:
	Add the possibility to access ff8604 and ff8606 with one longword
	access
	[8ed1d7ad9175]

2014-10-02  Eero Tamminen

	* doc/release-notes.txt:
	update release notes
	[26ee49bf32ad]

2014-09-30  Eero Tamminen

	* src/ide.c:
	remove IDE trace output from bus error paths

	According to Nicolas, other (HW) trace options don't do that either.
	[02fde9d52a29]

	* src/gemdos.c, src/hdc.c, src/ide.c, src/includes/hdc.h,
	src/includes/ide.h:
	skip IDE partitions when assiging GEMDOS HD drive

	This required:
	- adding partition counting also for IDE
	- supporting DOS MBR as those are more common with IDE images than
	Atari MBR

	This was done by adding DOS MBR support to current hdc.c (ACSI)
	Atari MBR parsing and generalizing it so that IDE code can use the
	same function.

	ACSI partition count was renamed to differentiate it from IDE one,
	and gemdos.c GEMDOS HD drive assignment changed to take into account
	both partition counts.

	NOTE:: only primary partitions are counted, but drives can use also
	extended partitions. ICD drivers supports up to 8, and DOS MBR has
	several extension mechanisms.
	[084bf14534ec]

2014-09-29  Eero Tamminen

	* src/debug/log.c, src/debug/log.h, src/ide.c:
	add IDE tracing support
	[c1276a988b1b]

2014-09-27  Nicolas Pomarede

	* src/blitter.c:
	Allow blitter to access any memory, not just RAM and IO registers
	Fix IDE driver for Falcon by Peter Putnik which accesss
	$ff0000-$ff0040 using the blitter
	[7a5973eb8ae1]

	* src/m68000.c:
	As verified on STE, there's no bus error when read or write access
	is made by the blitter
	[1178558c213f]

2014-09-26  Eero Tamminen

	* src/hdc.c:
	add OK/ERROR output to HDC traces
	[48335f968c57]

2014-09-25  Eero Tamminen

	* src/gemdos.c:
	fix typo in Fopen() trace info array
	[44fb1b64d3a0]

2014-09-22  Eero Tamminen

	* doc/manual.html:
	improve multi-partition GEMDOS HD emu docs
	[63f5d2d9d1d3]

	* doc/release-notes.txt:
	update release notes
	[9d347bef38d7]

	* src/memorySnapShot.c:
	make snapshot save/restore more robust

	- version match should be exact
	- store & check which CPU core is used
	- store & check state data end marker
	- tell user that he should reboot if state restore fails
	- update snapshot version
	[64eb1fad5e56]

	* src/cpu/fpp.c, src/cpu/savestate.h, src/m68000.c:
	fix: WinUAE CPU FPU state save/restore

	Depending on whether FPU happened to be enabled at restore time,
	WinUAE CPU code could save different amount of data, which naturally
	mismatches what got read with the default Falcon state of FPU being
	disable.

	Fix this by removing FPU model check and the redundant differences
	to oldUAE FPU state/restore API.
	[ec394d4daadb]

2014-09-21  Nicolas Pomarede

	* doc/compatibility.html, doc/release-notes.txt:
	Update notes for buggy version of Blood Money on Superior 65
	compilation
	[3f75b6bfdf4e]

2014-09-20  Thomas Huth

	* src/gui-sdl/font10x16.bmp, src/gui-sdl/font10x16.h, src/gui-
	sdl/font5x8.bmp, src/gui-sdl/font5x8.h:
	Added missing characters for cp1252.
	[4143fb064bb9]

2014-09-19  Eero Tamminen

	* doc/emutos.txt:
	EmuTOS Falcon resolution <-> mouse issue was fixed few months ago
	[820d892d41e4]

2014-09-13  Thomas Huth

	* CMakeLists.txt:
	Switch to SDL_MAIN_NEEDED, seems to work better
	[1d477ef60566]

2014-09-12  Thomas Huth

	* CMakeLists.txt:
	Fixed stupid typo in CMakeLists.txt
	[b1343f9ad56a]

2014-09-11  Thomas Huth

	* CMakeLists.txt, src/main.c:
	Only redefine main on OS X if bundle is enabled
	[63c19ea1a91f]

2014-09-09  Nicolas Pomarede

	* doc/release-notes.txt:
	Update release notes
	[e092c395d703]

2014-09-07  Nicolas Pomarede

	* src/uae-cpu/gencpu.c, src/uae-cpu/newcpu.c, src/uae-cpu/newcpu.h:
	Improve 'special status' word in the stack after an address error
	(fix Blood Money on Superior 65)
	[eb085b1e3f9e]

	* src/uae-cpu/newcpu.c:
	If fetching the next opcode triggers a bus error, we must call the
	bus error handler immediately
	[8c9481b8253b]

2014-09-02  Nicolas Pomarede

	* src/uae-cpu/newcpu.c:
	Correctly increment address when disassembling in a bus error region
	[2b668dbb98d4]

	* src/uae-cpu/memory.c:
	Don't put debugging message in memory _check functions used by
	valid_address() valid_address() is only used internally before
	accessing a memory region, so there's no point in printing debug
	messages, else it will print text in the middle of the disassembly
	when accessing memory in a bus error region
	[2836b20cae95]

	* src/m68000.c:
	Print PC value when a bus error occurs
	[802f09c0a069]

	* src/debug/68kDisass.c, src/uae-cpu/newcpu.c:
	When disassembling, don't call get_word if the region is not valid
	(bus error) This would create extra bus errors when disassembling,
	which is not correct, only cpu execution should create bus error,
	not debugger functions
	[0b3da84ca6b4]

2014-08-29  Eero Tamminen

	* src/midi.c:
	trace message also about MIDI error stop
	[462c37311fd1]

	* doc/release-notes.txt, src/debug/log.c, src/debug/log.h, src/midi.c:
	add tracing support for MIDI
	[f579dd7a6793]

	* tools/hatari-local-midi-ring.sh, tools/hatari-local-rs232.sh:
	improve midi/rs232 test script error handling
	[ec5970417e24]

2014-08-28  Eero Tamminen

	* doc/release-notes.txt:
	add note of joystick changes to release notes
	[502c2a0c5501]

	* src/gui-sdl/sdlgui.c:
	add joystick navigation to SDL GUI
	[c3e65996ee22]

2014-08-27  Eero Tamminen

	* doc/hatari.1, src/configuration.c, src/includes/configuration.h,
	src/includes/joy.h, src/joy.c, src/shortcut.c:
	shortcuts for switching joystick/pad types
	[52c341fd1b5b]

2014-08-26  Eero Tamminen

	* doc/compatibility.html:
	add notes about Kronos and Statistician
	[744674c23462]

2014-08-26  Thomas Huth

	* src/gui-sdl/sdlgui.c:
	Fixed compilation problem with SDL2
	[28bad458b7f4]

2014-08-25  Eero Tamminen

	* src/gui-sdl/dlgJoystick.c:
	fix: SDL GUI joy dialog tab switching
	[6ba71e551a80]

	* doc/hatari.1, src/gui-sdl/dlgFileSelect.c, src/gui-
	sdl/dlgJoystick.c, src/gui-sdl/dlgNewDisk.c, src/gui-
	sdl/dlgScreen.c, src/gui-sdl/sdlgui.c, src/includes/sdlgui.h:
	keyboard shortcut handling improvements / SDL2 compatibility

	- Underlined shortcuts are triggered with Alt, like on Desktop
	- Fileselector button texts change so that shortcuts are normal
	letters
	- Arrow shortcuts specified separately to avoid need for SDL1 specific
	key event unicode field
	- Separate field in structs for shortcut key

	All current SDL GUI shortcuts will now hopefully work also with
	SDL2.
	[5b2d1e868a69]

2014-08-25  Thomas Huth

	* src/debug/log.c, src/debug/log.h, src/keymap.c:
	Added tracing for keymapping
	[6e3df1ed4636]

2014-08-24  Eero Tamminen

	* src/debug/debugui.c:
	improve setopt command help
	[8d9f81e380ef]

	* doc/release-notes.txt, src/debug/debugui.c:
	add reset debugger command
	[4eb64c7284a0]

2014-08-24  Nicolas Pomarede

	* readme.txt:
	Hatari can be linked with capslib 4.2 or 5.1
	[deff43c32640]

	* doc/release-notes.txt:
	Update release notes
	[85c0bf412b9e]

	* src/configuration.c, src/debug/68kDisass.c, src/debug/68kDisass.h:
	When CPU/FPU change, update mask for the external disassembler For
	example, when in 68000 mode, only show valid 68000 opcodes, not all
	680x0 opcodes
	[bf64da7bbd44]

2014-08-19  Thomas Huth

	* src/gui-osx/PrefsController.m, src/gui-osx/Shared.m:
	Correction for the last correction for deprecated OS X functions.
	Thanks to Miguel Saro for the patch.
	[0880434ab725]

2014-08-18  Thomas Huth

	* src/gui-osx/PrefsController.m, src/gui-osx/SDLMain.m, src/main.c:
	Some more fixes for compiling with SDL2 on Mac OS X
	[1a3adb1b3152]

2014-08-17  Eero Tamminen

	* doc/release-notes.txt, src/gui-sdl/sdlgui.c, src/includes/str.h,
	src/str.c:
	use same logic for UTF-8 conversion as Max' GEMDOS code

	Currently only file names will / can have non-ASCII letters in the
	SDL GUI.

	It's not possible to reliably know what encoding file names use as
	that's a mount option user can specify. However:
	- On linux distros UTF-8 is nowadays the default
	- According to Max, it works also on OSX

	So, similarly to Max' GEMDOS HD conversion code, assume UTF-8 unless
	we're on Windows or UTF-8 conversion is explicitly overridden with
	USE_LOCALE_CHARSET.

	In latter case code assumes that charset is 8-bit one and closer to
	latin1 encoding used by the font, than what UTF-8 conversion would
	produce, and does no conversion (font encoding is latin1).

	If / when translations are added, UTF-8 conversion will be
	unconditional, but there's conditional conversion needed from host
	to UTF-8 encoding when file names are read in.
	[18803a9273a7]

	* src/gui-sdl/sdlgui.c, src/includes/sdlgui.h:
	fix shortcut bit clearing
	[902cea24b3ff]

	* src/gui-sdl/sdlgui.c:
	initial UTF-8 -> latin1 SDL GUI font index conversion

	Based on Thomas' code in SDL Ballerburg.

	Currently only file paths can be anything else than ASCII, but if
	translations are added for the GUI, they should be UTF-8.
	[7741ebfc1fc2]

	* src/gui-sdl/dlgDevice.c, src/gui-sdl/dlgFileSelect.c, src/gui-
	sdl/dlgFloppy.c, src/gui-sdl/dlgHardDisk.c, src/gui-
	sdl/dlgJoystick.c, src/gui-sdl/dlgKeyboard.c, src/gui-sdl/dlgMain.c,
	src/gui-sdl/dlgMemory.c, src/gui-sdl/dlgNewDisk.c, src/gui-
	sdl/dlgRom.c, src/gui-sdl/dlgScreen.c, src/gui-sdl/dlgSound.c, src
	/gui-sdl/dlgSystem.c:
	remove (now redundant) SG_SHORTCUT_KEY macro use

	leave them for arrow shortcuts as those don't have text which could
	specify the shortcut.
	[a64001c77c60]

	* src/gui-sdl/sdlgui.c:
	get shortcut keys from item texts at run-time

	This way key doesn't need to be specified twice in dialog structs
	(using macro and into text), and it will work also if translations
	are (at some time in future) loaded into GUI instead of texts being
	hardcoded.
	[64d3aba1fee1]

2014-08-17  Thomas Huth

	* CMakeLists.txt:
	Set ENABLE_SDL2 as proper build feature variable
	[d60cb6a7f8c2]

	* src/gui-sdl/sdlgui.c:
	Use symbolic KEYDOWN events for shortcuts on SDL2
	[77e0ed6a118e]

2014-08-17  Eero Tamminen

	* src/gui-sdl/sdlgui.c:
	hopefully fix SDL2 build issue

	(don't have setup to test it)
	[721bbe637221]

	* doc/hatari.1, src/gui-sdl/dlgDevice.c, src/gui-sdl/dlgFileSelect.c,
	src/gui-sdl/dlgFloppy.c, src/gui-sdl/dlgHardDisk.c, src/gui-
	sdl/dlgJoystick.c, src/gui-sdl/dlgKeyboard.c, src/gui-
	sdl/dlgMemory.c, src/gui-sdl/dlgNewDisk.c, src/gui-sdl/dlgRom.c, src
	/gui-sdl/dlgScreen.c, src/gui-sdl/dlgSound.c, src/gui-
	sdl/dlgSystem.c:
	add keyboard shortcuts to rest of dialogs
	[b1932dba3bea]

2014-08-16  Eero Tamminen

	* doc/hatari.1, src/gui-sdl/dlgFileSelect.c, src/gui-sdl/sdlgui.c:
	add special character key shortcuts to filesel buttons

	So that normal letters can be used to shortcut positions in file
	list...
	[61db0b679df0]

	* src/gui-sdl/dlgScreen.c:
	add keyboard navigation to atari & hatari screen dialogs
	[9bad0cf14cea]

	* doc/hatari.1, src/gui-sdl/sdlgui.c:
	keyboard navigation improvements

	- also space activates focused item
	- numbers can be used as shortcuts
	- update these & previous filesel change to manpage
	[401134bc99dc]

	* doc/compatibility.html:
	add note about Cybernetics demos / writer.prg
	[90ab7cd0a865]

2014-08-16  Thomas Huth

	* src/resolution.c:
	Slightly improve resolution code for SDL2
	[0866e0e6dc84]

	* src/falcon/hostscreen.c:
	Fix height scaling in window size calculation
	[54625828c180]

	* src/screen.c:
	Check for bit depth 24 in SDL2 code, just in case
	[b4877277e312]

	* src/gui-sdl/dlgFileSelect.c:
	Use OK instead of Okay, as it is used in the other dialogs already
	[cd45340a92f8]

	* src/gui-sdl/dlgFileSelect.c:
	A hack to get rid of GCC warning
	[3b57a6469661]

	* src/gui-sdl/dlgFileSelect.c, src/gui-sdl/sdlgui.c:
	Add the possibility to control the entries in the file selector with
	the cursor keys
	[e6c1fa40624e]

	* src/gui-sdl/sdlgui.c:
	Use a better color for the focus
	[4d32bd2595e1]

	* src/cycInt.c, src/fdc.c:
	Include inttypes.h for definition of PRIu64. Thanks to Max BÃ¶hm for
	the hint.
	[76f880338d72]

2014-08-15  Nicolas Pomarede

	* doc/release-notes.txt:
	Update cpu's changes in release notes
	[417436f606b9]

	* src/uae-cpu/gencpu.c:
	CPU fix : generate an address error if return PC is odd for RTE, RTS
	and RTR
	[f98d8d4d760f]

2014-08-15  Eero Tamminen

	* doc/hatari.1, src/gui-sdl/sdlgui.c:
	SDL GUI focus can be changed also with TAB
	[d0ef89465bc0]

	* doc/release-notes.txt, src/gemdos.c:
	fix GEMDOS trace crash without GEMDOS HD emulation
	[f03e35d6cbaf]

2014-08-15  Nicolas Pomarede

	* src/cpu/table68k, src/uae-cpu/table68k:
	CPU fix : RTD does not exist for 68000, only for >= 68010 (thanks to
	Peter Putnik for his opcodes validator program)
	[de73e8810d6f]

	* src/uae-cpu/gencpu.c, src/uae-cpu/readcpu.c:
	CPU fix : cancel change from 2008/04/26, MOVE.B is not valid with An
	as source (thanks to Peter Putnik for his opcodes validator program)
	[f9e0ce5ab276]

	* doc/authors.txt:
	Update notes in contributors' list
	[15eea4f58b31]

	* src/cpu/table68k, src/uae-cpu/table68k:
	CPU fix : TST is not allowed with #imm, An and d(PC) in 68000 mode
	(thanks to Peter Putnik for his opcodes validator program)
	[6451175cd5d0]

2014-08-14  Thomas Huth

	* src/gui-osx/English.lproj/SDLMain.nib/designable.nib, src/gui-
	osx/English.lproj/SDLMain.nib/keyedobjects.nib:
	Update the language in the SDLMain.nib, too
	[7a9ba58915f7]

2014-08-14  Eero Tamminen

	* doc/hatari.1, src/gui-sdl/sdlgui.c:
	improvements to SDL GUI keyboard navigation

	- Remove Space key, Enter is now exclusively for selecting the
	focused item. By default it's on default item so if user doesn't
	navigate keyboard, it works like earlier.
	- Add Home / End key for moving to first & last item
	- Update manual page
	[5e325e1f73de]

2014-08-14  Thomas Huth

	* src/gui-osx/English.lproj/SDLMain.xib:
	Switch language of English.lproj/SDLMain.xib back to english
	[b8c5257bc758]

	* src/screen.c:
	Stop recording before changing the resolution
	[da5495966100]

	* src/gui-sdl/dlgFileSelect.c:
	White space cleanup
	[6552e7c31363]

2014-08-14  Eero Tamminen

	* src/str.c:
	fix compile warning
	[2ef14c72d27c]

2014-08-13  Eero Tamminen

	* src/gemdos.c:
	define for value + typo fix
	[0cd0941339cb]

	* doc/authors.txt, doc/release-notes.txt, src/gemdos.c,
	src/includes/str.h, src/str.c:
	code from Max BÃ¶hm for mapping host<->Atari file name encodings
	[5c2218f0e65f]

2014-08-13  Nicolas Pomarede

	* src/fdc.c:
	Use LOG_TRACE instead of fprintf (after Log_Default() was called)
	[e78511035a79]

	* src/debug/log.c, src/debug/log.h, src/main.c:
	Logs default to stderr at start Without this, we had some segfaults
	in case --trace was used in Main_Init_HW() before options/parameters
	were parsed
	[85e6fcaa80b0]

	* src/gemdos.c:
	Don't print directly to TraceFile, use LOG_TRACE_PRINT
	[79b775027654]

2014-08-13  Eero Tamminen

	* doc/hatari.1, doc/manual.html:
	add Windows console info to more places
	[f6d0d9eb98b5]

	* doc/release-notes.txt:
	add note of host->gemdos error mapping improvement

	(which went in accidentally in my previous commit)
	[447a419156cf]

2014-08-13  Nicolas Pomarede

	* CMakeLists.txt, cmake/config-cmake.h, src/gui-sdl/dlgFileSelect.c:
	In cmake, check if the 'dirent' struct has a 'd_type' member The
	d_type member is not mandatory in the dirent struct and some OSes /
	toolchains don't provide it (mingw for example)
	[5c66eb71ade9]

2014-08-13  Eero Tamminen

	* src/gemdos.c, src/gui-sdl/dlgFileSelect.c:
	support folder sorting for system without d_type field
	[93dc9f007c29]

2014-08-12  Eero Tamminen

	* doc/release-notes.txt, src/gui-sdl/dlgFileSelect.c:
	sort file selector items case-insensitively with folders first
	[f45e3bf27f6c]

	* src/gui-sdl/sdlgui.c:
	fix button text centering with underlines
	[ff197d8a5b59]

2014-08-12  Thomas Huth

	* src/gui-osx/SDLMain.m:
	White space cleanup
	[1a7bb5ca1173]

	* src/gui-osx/SDLMain.m:
	Mac OS X 10.9 no longer uses the -psn_XXX command line arg for
	Finder launches. Patch based on upstream SDL 1.2 fixes. Thanks to
	Bob Carpenter for testing it with Hatari.
	[6f049907b727]

2014-08-11  Nicolas Pomarede

	* doc/release-notes.txt:
	Add cpu changes to release notes
	[7883a194008d]

2014-08-11  Thomas Huth

	* src/gui-sdl/dlgJoystick.c:
	Fixed joystick dialog problem (keyboard and real joystick were
	swapped)
	[65153a724f39]

2014-08-11  Nicolas Pomarede

	* src/cpu/table68k, src/uae-cpu/table68k:
	CPU fix : BTST #n is not allowed with immediate value as destination
	[2d5ed9d288b4]

	* src/cpu/table68k, src/uae-cpu/table68k:
	CPU fix : CMPI is not allowed with d(PC) ea in 68000 mode, only in
	68020+ (fix 'Pole Position' preview on atari-forum, game should
	crash in 68000 mode)
	[e388b8dd4d0a]

2014-08-11  Eero Tamminen

	* src/gui-sdl/dlgJoystick.c:
	fixes to SDL GUI joystick dialog

	- fix radio buttons my previous commit broken (group needs to be
	consecutive)
	- fix for first key definition, need to drain queue from keys coming
	e.g. from keyboard navigation
	[5f50b6909a70]

2014-08-10  Eero Tamminen

	* doc/release-notes.txt:
	update release notes
	[1497c32143bc]

	* src/gui-sdl/sdlgui.c:
	fix: don't draw underline for editfield (content)
	[c0add4b2e3b3]

	* src/gui-sdl/dlgMain.c:
	indicate Q shortcut
	[7af7b0eab675]

	* doc/hatari.1:
	update SDL GUI key documentation
	[73e919759e40]

	* src/gui-sdl/sdlgui.c:
	set focus at dialog start only if it's missing

	This makes file selector to behave sensibly and using interactive
	buttons like arrows doesn't reset focus back to default button.
	[a3ab39e34721]

	* src/gui-sdl/dlgJoystick.c:
	order joy dialog widgets in visual order

	Otherwise focus changes works illogically
	[319659d58f7c]

	* src/gui-sdl/dlgMain.c, src/gui-sdl/sdlgui.c:
	support keyboard shortcuts also for other than button widgets
	[bc33d55a1ba2]

	* src/gui-sdl/sdlgui.c:
	indent switch similarly to other one in same function
	[9a8a61192ece]

	* src/gui-sdl/dlgNewDisk.c:
	enable keyboard navigation for dialog
	[5ae44dbb033b]

	* doc/manual.html:
	document -W
	[d8bd02be059d]

	* src/gui-sdl/dlgDevice.c, src/gui-sdl/dlgFileSelect.c, src/gui-
	sdl/dlgFloppy.c, src/gui-sdl/dlgHardDisk.c, src/gui-sdl/dlgMain.c,
	src/gui-sdl/dlgMemory.c, src/gui-sdl/dlgScreen.c, src/gui-
	sdl/dlgSound.c, src/gui-sdl/dlgSystem.c:
	correct object widths for focus highlighting
	[4aaf8636caba]

	* doc/hatari.1, src/gui-sdl/sdlgui.c, src/includes/sdlgui.h:
	major improvements to keyboard SDL GUI navigation

	- less weird MOUSEUP handling
	- focus is in state member, not in flags
	- space selects focused item, enter the default
	- support radio buttons & checkboxes

	Last one required quite a bit of refactoring, but now it's easier to
	add other widget types for keyboard navigation.
	[363ef7e04f42]

	* src/gui-sdl/sdlgui.c, src/includes/sdlgui.h:
	add SDL GUI button focus keyboard navigation
	[e1b65a2943cd]

	* src/gui-sdl/dlgMain.c:
	add shorcut also for Quit button
	[664360fb6d0e]

	* src/gui-sdl/sdlgui.c:
	move color specifications into single place

	With this whole GUI color scheme changes get easier, they could
	later even be made configurable.
	[a793d852dc52]

	* doc/hatari.1:
	fix previous commit
	[8f543d01efbd]

	* doc/hatari.1:
	improve manual page

	- add empty lines before section headings so that it's easier to
	notice them when scrolling
	- add information for SDL GUI keyboard shortcuts
	- re-order keyboard section & update its subsection headings for
	clarity
	[569b85a87bd0]

2014-08-10  Thomas Huth

	* src/joy.c:
	Fixed extended firebuttons for joypad B
	[0544623c0ebe]

2014-08-09  Eero Tamminen

	* src/gui-sdl/dlgDevice.c, src/gui-sdl/dlgFileSelect.c, src/gui-
	sdl/dlgFloppy.c, src/gui-sdl/dlgHardDisk.c, src/gui-
	sdl/dlgKeyboard.c, src/gui-sdl/dlgMain.c, src/gui-sdl/dlgMemory.c,
	src/gui-sdl/dlgNewDisk.c, src/gui-sdl/dlgRom.c, src/gui-
	sdl/dlgSound.c, src/includes/sdlgui.h, src/shortcut.c:
	Add title to SDL GUI file selector

	This has annoyed me for a long time. With SDL GUI keyboard shortcuts
	user is even less sure what he (e.g. accidentally) invoked, so it's
	better to have it stated in fsel explicitly.
	[e579332ce3a8]

	* src/gui-sdl/dlgMain.c, src/gui-sdl/sdlgui.c, src/includes/sdlgui.h:
	keyboard shorcut support for SDL GUI
	[b4486db91003]

	* src/joy.c:
	add joypad debug + use Uint16 to avoid overflow
	[200bda94b48b]

	* src/joy.c:
	fix: STE pad A Option button value
	[99eafbac245c]

	* src/debug/debugui.c, src/debug/history.c:
	add save subcommand to history
	[b6544652fa09]

	* doc/compatibility.html:
	tymewarp issue is minor

	There's now bus error handling hack in Hatari to get demo started,
	so downgrading the issue to minor.
	[593d687f4dbd]

2014-08-08  Thomas Huth

	* src/gui-osx/French.lproj/Localizable.strings:
	Update for the French OS X localization. Thanks to Miguel & Jerome
	for the patch.
	[c1180f88a852]

	* src/gui-osx/English.lproj/InfoPlist.strings, src/gui-
	osx/English.lproj/Localizable.strings, src/gui-
	osx/English.lproj/SDLMain.nib/designable.nib, src/gui-
	osx/English.lproj/SDLMain.xib, src/gui-
	osx/French.lproj/InfoPlist.strings, src/gui-
	osx/French.lproj/Localizable.strings, src/gui-
	osx/French.lproj/SDLMain.nib/designable.nib, src/gui-
	osx/French.lproj/SDLMain.xib, src/gui-osx/PrefsController.m, src
	/gui-osx/Shared.m:
	Three corrections for the OS X part of Hatari. 1- correction of
	values sent back by NSAlert 2- Resolving differences between
	localized files: InfoPlist.strings, Localizable.strings, SDLMain.nib
	3- "default folder choice" correction (for config file). cfg file
	can be read-writed anywhere, but you can select the default folder
	directly. Thanks to Miguel Saro for the patch!
	[a624e0eabc05]

2014-08-07  Nicolas Pomarede

	* doc/compatibility.html:
	Update Tyme Warp in compatibility list
	[c91dd6fda5f4]

2014-08-07  Eero Tamminen

	* src/configuration.c, src/includes/screen.h,
	src/includes/statusbar.h, src/options.c, src/resolution.c,
	src/statusbar.c:
	fix incorrect screen size values for 2-line statusbar

	- add defines for magic values (max Atari screen width, max
	statusbar height) so they're easier to find & replace
	- correct max window size for 2-line statusbar
	- output optimal size to console so that bad config values are easier
	to notice
	[a7737fb8db39]

	* src/convert/low320x8.c, src/convert/vdi16.c:
	remove redundant initializations

	continuing Thomas' earlier conversion code cleanup...
	[033af68ffe17]

2014-08-07  Thomas Huth

	* doc/emutos.txt, doc/hatari.1, doc/release-notes.txt:
	Fix some typos
	[96c591ecf684]

	* src/screen.c:
	Free SDL2 resources during shutdown
	[0528e5f3228c]

	* src/gui-osx/PrefsController.m:
	Include keymap.h for SDLK_* compatibility definitions
	[2b8d610f56e4]

	* src/includes/keymap.h, src/keymap.c:
	Reworked symbolic key mapping so that it works with SDL2, too
	[520ba958ed9b]

2014-08-05  Thomas Huth

	* src/control.c:
	Enable window reparenting with SDL2
	[748dc5bc13cf]

2014-08-04  Thomas Huth

	* doc/release-notes.txt:
	Add information about SDL2 to the release notes
	[1f0fcab409b9]

	* src/gui-osx/SDLMain.h, src/gui-osx/SDLMain.m:
	Clean up comments in SDLMain.m and SDLMain.h
	[9c94a6e88ac1]

	* CMakeLists.txt, cmake/FindSDL2.cmake:
	Print information about SDL version during build configuration
	[3bf84191a21e]

2014-08-03  Thomas Huth

	* CMakeLists.txt:
	Reworked the library summary to fit in 80 columns and to be aligned
	with tabs
	[235d95f4d17f]

	* src/gui-osx/AlertHooks.m, src/gui-osx/CreateFloppyController.m, src
	/gui-osx/English.lproj/Localizable.strings, src/gui-
	osx/PrefsController.m, src/gui-osx/SDLMain.m, src/gui-osx/Shared.h,
	src/gui-osx/Shared.m:
	Method NSRunAlertPAnel is deprecated since OSx 10.6. Must be
	replaced by alertWithMessageText:defaultButton:alternateButton:other
	Button:informativeTextWithFormat: which is deprecated in OSx 10.9.
	So change all in agreement with Apple documentation into [[NSAlert
	alloc] init]. Thanks to Miguel Saro for the patch!
	[372eb808cd31]

	* src/configuration.c:
	Save/load the SDL2 keyboard shortcuts from/to a different section
	[fc13186d7ced]

2014-06-26  Thomas Huth

	* src/dialog.c, src/gui-sdl/dlgAlert.c:
	Make sure that SDL2 relative mouse mode is disabled in GUI
	[6bbb339008be]

2014-06-17  Thomas Huth

	* src/main.c, src/shortcut.c:
	Remaining minor fixes for compiling with libSDL2
	[14434f878d29]

2014-07-02  Thomas Huth

	* src/includes/keymap.h, src/keymap.c:
	A quick hack to get the keyboard code running with libSDL2
	[3466e53d9db3]

2014-07-24  Thomas Huth

	* src/control.c, src/falcon/hostscreen.c, src/includes/screen.h,
	src/resolution.c, src/screen.c:
	Adapt screen code to work with libSDL2, too
	[676be1c07802]

2014-07-02  Thomas Huth

	* src/gui-sdl/dlgFileSelect.c, src/gui-sdl/sdlgui.c:
	Rework the sdl-gui to be compilable with libSDL2
	[438d9dd0c3d5]

2014-06-26  Thomas Huth

	* src/gui-sdl/dlgJoystick.c, src/includes/joy.h, src/joy.c:
	Fixed the joystick code to work with libSDL2
	[9b7ae20910bc]

2014-06-17  Thomas Huth

	* src/rs232.c:
	Reworked rs232 code for libSDL2
	[a7dfc3a50db8]

2014-08-01  Thomas Huth

	* CMakeLists.txt, cmake/FindSDL2.cmake, cmake/config-cmake.h,
	configure, src/control.c:
	Prepare the build-system for compiling with libSDL2
	[18af7e4c069a]

2014-06-17  Thomas Huth

	* src/falcon/hostscreen.c, src/includes/screen.h, src/screen.c:
	Consolidate the code around SDL_SetVideoMode in a separate function.
	SDL_SetVideoMode will be gone with libSDL2. Let's merge the two code
	paths that use SDL_SetVideoMode into a separate function, so that it
	can be replaced easier at a later point in time.
	[387b612f9ca7]

2014-07-31  Eero Tamminen

	* src/gemdos.c:
	fix: matching of 8 chars long filenames with a dot

	If GEMDOS was given 8 chars long file name with a dot and extension
	shorter than 3 letters, which didn't exist, same file name with
	longer extension would be matched.

	Instead, only requests for files with 8 chars long part before the
	extension, should be matched using 'string*' pattern if there was no
	exact match. This is to match cases where host name gets clipped to
	8+3 chars.
	[45943c124bcc]

2014-07-30 : *** Version 1.8.0 ***

2014-07-30  Nicolas Pomarede

	* doc/compatibility.html, doc/doxygen/Doxyfile, doc/manual.html, doc
	/release-notes.txt, hatari.spec, readme.txt, src/gui-
	osx/English.lproj/InfoPlist.strings, src/gui-
	osx/French.lproj/InfoPlist.strings, src/gui-osx/Info-Hatari.plist,
	src/includes/version.h, src/memorySnapShot.c:
	New release 1.8.0, increase version in corresponding files
	[b825febc915f] [tip]

2014-07-28  Nicolas Pomarede

	* src/gui-osx/PrefsController.m:
	Fix path selection in OSX UI
	[e2f26eddece2]

2014-07-25  Nicolas Pomarede

	* readme.txt:
	Add notes about compiling with capsimage library
	[dd55accfa1ed]

2014-07-22  Nicolas Pomarede

	* src/fdc.c:
	Add more log when using 'write track' on ST/MSA files
	[b12055468cdb]

	* src/fdc.c:
	Correctly terminates 'restore' command if track 0 is not reached
	after 255 attempts
	[99f9c9c8cb69]

2014-07-22  Thomas Huth

	* src/debug/debugui.c, src/debug/evaluate.c, src/file.c, src/gui-
	sdl/dlgFileSelect.c, src/paths.c, src/zip.c:
	More fixes for Xcode Analyze warnings (possible memory leaks, etc.).
	Thanks to Miguel for the list.
	[549fdc042774]

	* src/convert/low320x16_spec.c, src/convert/low320x32_spec.c,
	src/convert/low640x16_spec.c, src/convert/low640x32_spec.c,
	src/debug/68kDisass.c, src/debug/profiledsp.c, src/statusbar.c:
	Fixed Xcode Analyze warnings about values stored to variables which
	are never read. Thanks to Miguel for the list with warnings.
	[c7014d062b64]

	* CMakeLists.txt, src/cpu/CMakeLists.txt, src/uae-cpu/CMakeLists.txt:
	Revert changeset 7b110dcc02bf, set policy CMP0026 instead
	[880a388cc05b]

2014-07-16  Thomas Huth

	* tests/natfeats/Makefile, tests/natfeats/makefile:
	Renamed Makefile so that it does not get clobbered by 'make
	distclean'
	[3d3e1faf1cd8]

	* src/floppy_stx.c:
	Make sure that SaveSectorIndex gets initialized properly. This fixes
	a problem with the Xenon II STX disk image.
	[058dad3b7a71]

	* src/floppy_stx.c:
	Switch off verbose debug messages by default
	[2f8e4cae80ae]

2014-07-15  Laurent Sallafranque

	* src/falcon/dsp_cpu.c:
	fix: bug in DSP dsp_macr_p_x1_y0_b instruction
	[62d0cd38c8fc]

2014-07-13  Thomas Huth

	* src/cpu/CMakeLists.txt, src/uae-cpu/CMakeLists.txt:
	Fix build warning with CMake 3.0
	[7b110dcc02bf]

2014-07-12  Thomas Huth

	* doc/de/tastatur-windows.txt:
	Added mapping file for German keyboard on Windows. Thanks to Max
	Boehm for the listing.
	[be70d7305be4]

2014-07-07  Thomas Huth

	* src/gui-osx/English.lproj/InfoPlist.strings, src/gui-
	osx/English.lproj/SDLMain.nib/keyedobjects.nib, src/gui-
	osx/French.lproj/InfoPlist.strings, src/gui-
	osx/French.lproj/SDLMain.nib/keyedobjects.nib:
	Update the gui-osx binary files. Thanks to Jerome Vernet for the
	files.
	[3bb756a1ebbd]

2014-07-06  Nicolas Pomarede

	* src/ikbd.c:
	Ignore command 0x13 IKBD_Cmd_StopKeyboardTransfer during ikbd's
	reset (fix for the loader of 'Just Bugging' by ACF ; need better
	timings for the IKBD)
	[cd7602644734]

	* src/fdc.c:
	Fix FDC_ClearIRQ() when forced IRQ was set with command 0xD8
	[8e11ec8bd7b5]

2014-07-04  Nicolas Pomarede

	* src/fdc.c, src/floppy_ipf.c, src/hdc.c, src/includes/fdc.h:
	Store the source of the IRQ in FDC_SetIRQ() + don't set IRQ if
	already set
	[53fd36d70561]

2014-07-06  Thomas Huth

	* doc/release-notes.txt, readme.txt:
	Two small typo fixes. Thanks to Teemu Hukkanen for the patch.
	[3b47db946648]

2014-07-04  Eero Tamminen

	* doc/compatibility.html:
	fix link + update descriptions
	[383ae6a393e9]

2014-07-03  Nicolas Pomarede

	* src/floppy_stx.c:
	When saving a 'write track', free all the sectors previously saved
	for that track
	[6809539c776e]

2014-07-02  Nicolas Pomarede

	* doc/release-notes.txt:
	Add note about support for 'write track' to STX disk image
	[18c0d28729c4]

	* src/fdc.c, src/floppy_stx.c, src/includes/floppy_stx.h:
	Add support for 'write track' on STX disk image (using a .wd1772
	file) Result of 'write track' will be saved to an additional file
	with the extension .wd1772 For now, data are not used for a 'read
	track' but in many cases it already allows programs to format a
	track without error before writing sectors (fix saving high scores
	with 'write track' + 'write sectors' in the game 'Platoon')
	[00ff406961f2]

2014-07-01  Thomas Huth

	* doc/manual.html:
	Mention the extended ACSI host adapter protocol in the feature list
	[bab4db90974a]

2014-06-29  Nicolas Pomarede

	* src/memorySnapShot.c:
	In memory snapshot, Cycles_MemorySnapShot_Capture should be called
	before FDC_MemorySnapShot_Capture FDC_IndexPulse_Init needs
	CyclesGlobalClockCounter when the motor starts ; if
	CyclesGlobalClockCounter was not correctly restored before, then
	wait for index didn't complete and disk operation failed with RNF
	[8f581755d7f4]

2014-06-27  Eero Tamminen

	* python-ui/TODO, python-ui/dialogs.py, python-ui/gentypes.py, python-
	ui/hatari.py, python-ui/release-notes.txt, python-ui/uihelpers.py:
	add support for many new Hatari options
	[59acd84c751e]

	* doc/hatari.1, doc/manual.html:
	update gemdos case doc
	[ad2cfb273b9d]

2014-06-26  Thomas Huth

	* doc/manual.html:
	Fixed error reported by HTML validator
	[81b2f87098e5]

	* src/falcon/videl.c:
	Always do the host color sync when writing to a color register (also
	in monochrome mode). This fixes the "red monochrome" bug.
	[8ade25e27c6b]

	* doc/manual.html:
	Added comment about ACSI hard disk size constraints
	[c77697bd9ffd]

	* .hgignore, src/gui-osx/AlertHooks.m, src/gui-
	osx/CreateFloppyController.m, src/gui-
	osx/English.lproj/SDLMain.nib/designable.nib, src/gui-
	osx/French.lproj/SDLMain.nib/designable.nib, src/gui-osx/Info-
	Hatari.plist, src/gui-osx/PrefsController.m, src/gui-osx/SDLMain.m,
	src/gui-osx/Shared.h, src/gui-osx/Shared.m:
	Some updates for the OS X GUI, mostly code cosmetics. Thanks to
	Jerome Vernet for the patch.
	[69ed960496b2]

2014-06-25  Nicolas Pomarede

	* doc/release-notes.txt:
	Add note about write support for STX files
	[63e906f748b0]

2014-06-25  Eero Tamminen

	* doc/release-notes.txt:
	update release note
	[c31b439be985]

	* doc/release-notes.txt, tools/atari-hd-image.1, tools/atari-hd-
	image.sh:
	raise atari-hd-image image size limit to 512MB
	[e45c012ca214]

2014-06-24  Nicolas Pomarede

	* doc/authors.txt:
	Update contributors' list
	[bd89502d86e3]

	* doc/compatibility.html, doc/todo.txt:
	Update todo / compatibility list
	[145ac9e842b8]

	* src/floppy_stx.c:
	Warn that writes to an STX file will be saved into a .wd1772 file
	[21071f9b661f]

	* src/floppy_stx.c, src/includes/floppy_stx.h:
	Minor changes to the structures used to save STX sectors/tracks
	[15df3dc586b6]

2014-06-24  Eero Tamminen

	* src/gemdos.c:
	update link
	[058a0fbb82a6]

2014-06-24  Nicolas Pomarede

	* cmake/FindCapsImage.cmake:
	Revert change about IPF version used to compile
	[f10e4fafbecc]

	* cmake/FindCapsImage.cmake, src/floppy.c:
	When ejecting a disk, we don't need to check if it's write protected
	to save changes If changes were made, it means WP was OFF earlier
	when data were written to disk, so even if WP is ON at the time of
	ejecting the disk, we must save changes anyway because writing was
	enabled at the time of the writes
	[8b99e7b54a5f]

	* src/createBlankImage.c, src/dim.c, src/floppy.c, src/floppy_ipf.c,
	src/floppy_stx.c, src/includes/dim.h, src/includes/floppy_ipf.h,
	src/includes/floppy_stx.h, src/includes/msa.h, src/includes/st.h,
	src/includes/zip.h, src/msa.c, src/st.c, src/zip.c,
	tools/hmsa/hmsa.c:
	When using 'write sector' with STX images, save changes to an
	external file Writes made to an STX image will be saved to a file
	whose extension is .wd1772 instead of .stx ; when a .stx file is
	loaded later, we look for a matching .wd1772 file to restore the
	changes made to the .stx file For now, only 'write sector' commands
	are saved, not 'write track'
	[5c976e0be162]

	* src/file.c, src/includes/file.h:
	Add the function File_ChangeFileExtension()
	[7a121fdb20a1]

2014-06-22  Nicolas Pomarede

	* doc/compatibility.html:
	Add a note about the game "Platoon"
	[cf92866b3e67]

2014-06-20  Nicolas Pomarede

	* src/avi_record.c:
	Fix type in comment
	[053e20ddc3d5]

2014-06-24  Eero Tamminen

	* doc/emutos.txt:
	improve & update emutos documentation
	[ba1a55d7d0ac]

	* doc/compatibility.html:
	update hextracker & bad mood information
	[687b4dc4f617]

2014-06-18  Thomas Huth

	* src/gui-osx/SDLMain.m:
	Disabled gFinderLaunch in OS X GUI
	[335fed22fd2e]

2014-06-18  Nicolas Pomarede

	* src/str.c:
	Fix a remaining cast to unsigned char for ctype functions
	[39cde6dcadad]

2014-06-17  Thomas Huth

	* src/change.c, src/control.c, src/debug/68kDisass.c,
	src/debug/breakcond.c, src/debug/debugInfo.c, src/debug/debugcpu.c,
	src/debug/debugdsp.c, src/debug/debugui.c, src/debug/evaluate.c,
	src/debug/log.c, src/debug/symbols.c, src/falcon/dsp.c,
	src/gemdos.c, src/keymap.c, src/options.c, src/str.c,
	tools/debugger/gst2ascii.c:
	Typecast arguments of ctype functions to unsigned char. The ctype
	functions need an unsigned char, or the behaviour is "undefined"
	with certain compilers and C-libraries. Thanks to Vincent RiviÃ¨re
	for the hint.
	[c9d60725e5d8]

2014-06-17  Nicolas Pomarede

	* doc/compatibility.html, doc/release-notes.txt:
	Add notes about "Lethal Xcess Beta"
	[1b22ad17f046]

2014-06-15  Nicolas Pomarede

	* doc/release-notes.txt:
	Add some fixed demos/games + sort list
	[6a12a4efff6f]

2014-06-13  Nicolas Pomarede

	* doc/release-notes.txt:
	Update release notes
	[e4a4a0547e27]

	* src/video.c:
	Add a temporary hack for 'Panic' by Paulo Simoes, don't trigger
	'left+2' on 1st line The timing used in this demo is similar to the
	left+2 case on the 1st line that normally require a 2 cycle
	precision. This hack is required because we only have 4 cycle
	precision, but should be removed later
	[5d6e584891dd]

2014-06-13  Eero Tamminen

	* doc/release-notes.txt:
	update release notes
	[f67ccfcfe8a3]

	* tools/debugger/gst2ascii.c:
	generalize similarly to debugger symbols command

	It seems that whether offsets are from section start or from TEXT
	section start is not just VBCC vlink issue, so try TEXT offset if
	section offset fails regarless of compiler identification.
	[5b3c643b3d8e]

	* src/debug/symbols.c:
	support also text-relative data & bss symbol offsets

	AFAIK there's no indication of whether compiler/assembler uses
	section or TEXT relative symbol offsets in its DRI compatible symbol
	table. And which one should be used, doesn't seem to be documented
	anywhere either. So, if offsets are invalid for section relative
	ones, try whether loading them as TEXT relative would succeed.
	[3c2362d06ab5]

2014-06-12  Eero Tamminen

	* src/debug/symbols.c:
	improve symbol loading error messages

	allow using "symbols prg" after symbols autoloading fails, so that
	user gets the same errors instead of misleading error about HD
	emulation.
	[4b878cb43cd6]

2014-06-12  Nicolas Pomarede

	* src/fdc.c, src/floppy_stx.c, src/includes/floppy_stx.h:
	Add support for 'write sector' command with STX images For now,
	modified sectors are only stored in RAM and in memory snapshot, they
	will be lost when exiting Hatari
	[c877476e1d39]

2014-06-10  Thomas Huth

	* src/gui-sdl/dlgAlert.c:
	Fix hooked alert dialog in Mac OS X fullscreen mode. Thanks to
	Jerome Vernet for the patch.
	[74abdf3146c1]

2014-06-09  Nicolas Pomarede

	* src/fdc.c:
	Improve ID field's timings for 'read sector' and 'write sector'
	[d03be9edeef3]

	* src/fdc.c, src/includes/fdc.h:
	Update the 'write sector' command to use the same logic as 'read
	sector'
	[62adc4f2d286]

2014-06-08  Nicolas Pomarede

	* doc/manual.html:
	Add more details about STX, IPF, RAW and CTR disk images
	[b5572c218299]

	* src/fdc.c:
	Update comment
	[70c02017c87d]

	* src/floppy.c:
	When restoring a memory snapshot, call FDC_InsertFloppy() in
	Floppy_MemorySnapShot_Capture() Due to the order used when restoring
	snapshot, some restored FDC variables were overwritten when
	restoring the floppy.c part : FDC had no more inserted floppy, which
	made disk accesses fail
	[4b20d3f90ae8]

2014-06-07  Thomas Huth

	* doc/manual.html:
	Added comment about IPF support library in the manual. Thanks to
	David Savinkoff for the hint.
	[26a11e910add]

	* src/gui-osx/SDLMain.m:
	Wire up the endCaptureAnimation action in the OS X GUI. Thanks to
	Bob Carpenter for the patch.
	[af3caef1a6d6]

2014-06-07  Eero Tamminen

	* doc/manual.html:
	improvements to disk related documentions

	- fix it's genetives -> its
	- fix --harddisk -> --harddrive
	- use consistent terminology:
	  - harddisk/drive -> hard disk/drive
	  - GEMDOS harddisk/drive -> GEMDOS HD
	  - *drive* emulation/activity, *disk* partition/image
	- improve wording in floppy drive section
	[fba1cbf20911]

2014-06-07  Nicolas Pomarede

	* doc/manual.html:
	Fix image's size in manual.html
	[ba1da0b793c4]

	* doc/images/fileselector.png, doc/images/floppydisks.png,
	doc/images/harddisks.png, doc/manual.html:
	Update manual's screenshots for floppy and harddisk
	[6c180aa3935f]

2014-06-06  Nicolas Pomarede

	* doc/hatari.1, doc/manual.html, src/options.c:
	Update manuals with new drive's options
	[b1f7b7409b05]

	* src/dmaSnd.c:
	If we get a bad command in microwire's data, check the remaining
	bits for a valid command
	[da8aa0fd76d1]

2014-06-05  Nicolas Pomarede

	* doc/release-notes.txt:
	Update release notes for LMC1992 decoding
	[c6deb6f0c2f5]

	* src/dmaSnd.c:
	Fix Microwire's decoding according to the LMC1992's datasheet
	(Atari's doc is wrong) Decoding should start with the first "1" bit
	received in the mask and ends when a "0" bit is received. Address
	should always be "10" and should be followed by at least 9 command
	bits (if more bits are received, only the last ones should be
	checked). (fix "Pacemaker" by Paradox, mask/data 0xc1ff/0x8000 is
	not a valid command and should be ignored instead of setting
	mixer=0)
	[81e4370ed4b5]

2014-06-05  Thomas Huth

	* src/configuration.c:
	Use SDL_keyboard.h instead of SDL_keysym.h since SDL_keysym.h will
	be gone with SDL2.
	[d0d7b3195235]

2014-06-03  Thomas Huth

	* src/CMakeLists.txt:
	Use XCode CONFIGURATION variable to determine location of the bundle
	[c3cbcdcad5d3]

	* src/CMakeLists.txt:
	Don't use wildcards for the docs
	[0a115441f885]

2014-06-02  Eero Tamminen

	* doc/release-notes.txt, src/includes/str.h:
	use INVALID_CHAR that is better for autostarted programs
	[03d5a4992d0b]

	* doc/release-notes.txt, tests/natfeats/natfeats.c,
	tests/natfeats/natfeats.h, tests/natfeats/nf_vbcc.tos,
	tests/natfeats/readme.txt:
	add examples on all NF APIs

	- move/add documentation to test header
	- add examples/tests for rest of NF APIs
	- doc update
	[c9a9a4ff68bf]

	* src/debug/natfeats.c:
	NF_FASTFORWARD: show & return old value
	[71e6892d6e3a]

	* doc/release-notes.txt, src/debug/debugui.c:
	quit debugger command: no confirmation dialog, exit code argument
	[0e3d00c8d979]

	* src/debug/debug_priv.h, src/debug/debugcpu.c, src/debug/debugdsp.c,
	src/debug/debugui.c, src/debug/history.c, src/debug/symbols.c:
	simplify debugger command help usage a bit

	after command help output, caller always exits with same return
	value, so that value can as well be returned by the command help
	function itself.
	[5bc528584cbd]

2014-06-02  Thomas Huth

	* src/CMakeLists.txt:
	Set source file properties for OS X bundle doc files
	[6c691dbc5852]

	* src/gui-osx/PrefsController.m:
	Main_RequestQuit() now takes a parameter
	[37c259194168]

	* src/paths.c:
	Use a better place for the Hatari home directory on Mac OS X
	[6a375a99f32d]

2014-06-02  Laurent Sallafranque

	* src/cpu/falcon_cycle030.h:
	fix: change 5007 removed 12 instructions that still were in the
	falcon cycle table. All the instructions cycles were shifted in the
	table.
	[41bf6248411f]

2014-06-01  Thomas Huth

	* src/gui-osx/PrefsController.m, src/gui-osx/Shared.h, src/gui-
	osx/Shared.m:
	More gui-osx updates from Jerome Vernet
	[05798b674176]

2014-06-01  Eero Tamminen

	* tests/tosboot/tos_tester.py:
	improve TOS tester

	- fix: 192k EmuTOS needs 1s longer boot time
	- adapt to hconsole Hatari command line option handling change
	[2cc3c760ad48]

	* tests/tosboot/disk/ahcc-gemdos, tests/tosboot/disk/ahcc-minimal:
	build needs longer wait
	[78e4c964d79f]

	* doc/release-notes.txt, tools/hconsole/example-commands,
	tools/hconsole/example.py, tools/hconsole/hconsole.py:
	improve hconsole re-usability

	- hconsole.Main() constructor takes Hatari command line options as
	argument, and another (optional) option for whether Hatari
	disappearing will terminate the process
	- run() method returns False if Hatari disappears (or given command
	was missing/unrecogized)
	[84f4434afd02]

	* tests/tosboot/disk/ahcc-gemdos, tests/tosboot/disk/ahcc-minimal:
	improve comments + speed up

	- more info on how to use hconsole input script
	- disabling statusbar can speed things slightly
	[551a2adb7464]

	* tests/natfeats/Makefile, tests/natfeats/natfeats.h,
	tests/natfeats/nf_ahcc.prj, tests/natfeats/nf_asma.s,
	tests/natfeats/readme.txt:
	add NF example for AHCC
	[3c8b906b6cc8]

	* tests/natfeats/Makefile, tests/natfeats/Makefile.gcc,
	tests/natfeats/Makefile.vbc, tests/natfeats/readme.txt:
	add makefile for gcc & update NF readme
	[bcf0831e931c]

	* tests/natfeats/nf_asm.s, tests/natfeats/nf_asmg.s:
	rename & fix NF bindings GCC assembly file

	- fix: GCC 2.x Gas doesn't like C++ comments
	- fix: exported symbol name
	[9c754dfc888d]

	* tests/natfeats/natfeats.c:
	fix test's compiler warnings
	[b0592e0252a6]

	* tests/natfeats/natfeats.h:
	add missing declaration
	[24eacb253637]

	* doc/release-notes.txt, src/debug/log.c, src/debug/log.h,
	src/debug/natfeats.c:
	add support for natfeats tracing
	[e3b7a3159288]

	* tests/natfeats/natfeats.c, tests/natfeats/nf_vbcc.tos:
	improve nf usage in test

	(gives nicer natfeats trace output)
	[8e2ff7fbe6c4]

	* doc/release-notes.txt, src/debug/natfeats.c:
	improve natfeats comments
	[0356144286b9]

	* doc/release-notes.txt, src/debug/natfeats.c, src/dialog.c,
	src/includes/main.h, src/main.c, src/shortcut.c:
	add Hatari support for NF_EXIT command
	[d87347bbf89c]

	* tests/natfeats/natfeats.c, tests/natfeats/nf_asmv.s,
	tests/natfeats/nf_vbcc.tos:
	add example code / test for NF_EXIT
	[4e0203287f42]

	* tests/natfeats/readme.txt:
	more info on NatFeats example
	[a00cbbaa55b2]

2014-06-01  Thomas Huth

	* doc/compatibility.html, doc/manual.html:
	Updates according to W3 validator and codespell
	[666c95f2267b]

	* src/CMakeLists.txt, src/gui-
	osx/English.lproj/AideHatari/compatibility.html, src/gui-
	osx/English.lproj/AideHatari/images/callgraph.png, src/gui-
	osx/English.lproj/AideHatari/images/callgraph.svg, src/gui-
	osx/English.lproj/AideHatari/images/devices.png, src/gui-
	osx/English.lproj/AideHatari/images/fileselector.png, src/gui-
	osx/English.lproj/AideHatari/images/floppydisks.png, src/gui-
	osx/English.lproj/AideHatari/images/harddisks.png, src/gui-
	osx/English.lproj/AideHatari/images/joystick.png, src/gui-
	osx/English.lproj/AideHatari/images/kcachegrind.png, src/gui-
	osx/English.lproj/AideHatari/images/keyboard.png, src/gui-
	osx/English.lproj/AideHatari/images/main.png, src/gui-
	osx/English.lproj/AideHatari/images/memory.png, src/gui-
	osx/English.lproj/AideHatari/images/monitor.png, src/gui-
	osx/English.lproj/AideHatari/images/newfloppy.png, src/gui-
	osx/English.lproj/AideHatari/images/screen.png, src/gui-
	osx/English.lproj/AideHatari/images/sound.png, src/gui-
	osx/English.lproj/AideHatari/images/system.png, src/gui-
	osx/English.lproj/AideHatari/images/tos.png, src/gui-
	osx/English.lproj/AideHatari/manual.html, src/gui-
	osx/French.lproj/AideHatari/compatibility.html, src/gui-
	osx/French.lproj/AideHatari/images/callgraph.png, src/gui-
	osx/French.lproj/AideHatari/images/callgraph.svg, src/gui-
	osx/French.lproj/AideHatari/images/devices.png, src/gui-
	osx/French.lproj/AideHatari/images/fileselector.png, src/gui-
	osx/French.lproj/AideHatari/images/floppydisks.png, src/gui-
	osx/French.lproj/AideHatari/images/harddisks.png, src/gui-
	osx/French.lproj/AideHatari/images/joystick.png, src/gui-
	osx/French.lproj/AideHatari/images/kcachegrind.png, src/gui-
	osx/French.lproj/AideHatari/images/keyboard.png, src/gui-
	osx/French.lproj/AideHatari/images/main.png, src/gui-
	osx/French.lproj/AideHatari/images/memory.png, src/gui-
	osx/French.lproj/AideHatari/images/monitor.png, src/gui-
	osx/French.lproj/AideHatari/images/newfloppy.png, src/gui-
	osx/French.lproj/AideHatari/images/screen.png, src/gui-
	osx/French.lproj/AideHatari/images/sound.png, src/gui-
	osx/French.lproj/AideHatari/images/system.png, src/gui-
	osx/French.lproj/AideHatari/images/tos.png, src/gui-
	osx/French.lproj/AideHatari/manual.html, src/gui-osx/SDLMain.m:
	Copy docs via build system into the OS X bundle
	[dbce7135ea8a]

	* src/gui-osx/AlertHooks.m, src/gui-osx/CreateFloppyController.h, src
	/gui-osx/CreateFloppyController.m, src/gui-
	osx/English.lproj/AideHatari/.DS_Store, src/gui-
	osx/English.lproj/Localizable.strings, src/gui-
	osx/English.lproj/SDLMain.nib/designable.nib, src/gui-
	osx/English.lproj/SDLMain.nib/keyedobjects.nib, src/gui-
	osx/English.lproj/SDLMain.xib, src/gui-
	osx/French.lproj/AideHatari/.DS_Store, src/gui-
	osx/French.lproj/Localizable.strings, src/gui-
	osx/French.lproj/SDLMain.nib/designable.nib, src/gui-
	osx/French.lproj/SDLMain.nib/keyedobjects.nib, src/gui-
	osx/French.lproj/SDLMain.xib, src/gui-osx/Info-Hatari Winuae.plist,
	src/gui-osx/Info-Hatari.plist, src/gui-osx/PrefsController.h, src
	/gui-osx/PrefsController.m, src/gui-osx/SDLMain.h, src/gui-
	osx/SDLMain.m, src/gui-osx/Shared.h, src/gui-osx/Shared.m:
	Updated the OS X GUI code to Jerome Vernet's latest version
	[92bb776c7198]

	* cmake/DistClean.cmake:
	Remove generated WinUAE CPU core files during distclean
	[9ee0a367d940]

	* .hgignore:
	Updated hgignore with WinUAE CPU core files
	[8ef4c93531d7]

	* src/configuration.c:
	Do not save the advanced ACSI configs, it's still experimental
	[620d88f339e8]

	* src/keymap.c:
	Simplified Keymap_DebounceAllKeys
	[6c002ece6705]

2014-05-31  Thomas Huth

	* src/includes/ikbd.h, src/includes/keymap.h, src/keymap.c,
	src/memorySnapShot.c:
	Track ST scancodes instead of host PC keycodes in KeyStates array.
	The size of the KeyStates array depended on SDLK_LAST which could
	differ between different SDL releases - and since the KeyStates
	array was saved along with the memory snapshots, this meant that the
	snapshots depended on the SDL version, too. Since SDLK_LAST will
	also be gone with SDL 2.0, let's track the ST scancodes instead to
	avoid these problems.
	[bc80267dc16c]

	* cmake/FindReadline.cmake:
	Fixed typo in new libreadline detection code
	[f7dcf5df7170]

2014-05-31  Eero Tamminen

	* doc/emutos.txt:
	tt info update to emutos
	[9ecb519c8c1b]

	* doc/release-notes.txt, src/debug/debugui.c, src/falcon/hostscreen.c,
	src/falcon/hostscreen.h, src/falcon/videl.c, src/gui-
	sdl/dlgScreen.c, src/includes/statusbar.h, src/main.c, src/screen.c,
	src/statusbar.c, src/video.c:
	do only 1 SDL_UpdateRect(s) call per screen update

	- change Statusbar_Update() to return SDL_Rect* for the area which
	need an update, and change all screen update functions (ST & Videl
	have separate ones) to add that rect to their own SDL_UpdateRects()
	calls, so that there's only one call per normal screen update

	- change Statusbar_Update() to do SDL_UpdateRects() by itself only
	if so requested by new do_update arg. That will be used when
	statusbar update is done outside of normal screen updates.

	This should fix Hatari's OSX performance issue.
	[bb571e6912ff]

	* src/blitter.c, src/debug/debugInfo.c, src/psg.c:
	improve info/lock command output

	make the descriptions & output more consistent

	if it's obvious what the values are, header for them is redundant
	and just wastes screen space (e.g. in YM case).
	[db74a9c791ac]

	* doc/release-notes.txt, src/debug/debugInfo.c, src/includes/psg.h,
	src/psg.c:
	add "ym" subcommand to "info" for showing YM-2149 register values

	Based on slightly modified patch from Matthias Arndt.
	[3dd80e99327d]

	* src/debug/debugInfo.c, src/falcon/crossbar.c, src/falcon/crossbar.h,
	src/falcon/videl.c, src/falcon/videl.h, src/includes/video.h,
	src/video.c:
	move crossbar/videl/video functions from debuginfo to their own
	files
	[19d2e20e6b88]

2014-05-31  Thomas Huth

	* CMakeLists.txt, cmake/FindReadline.cmake:
	Check whether libreadline has to be linked along with libtermcap or
	lib(n)curses
	[9e7dd5ebf9a5]

	* cmake/FindTermcap.cmake:
	Added cmake file for finding libtermcap
	[8ccbd14b6286]

2014-05-31  Nicolas Pomarede

	* doc/compatibility.html, doc/release-notes.txt, src/video.c:
	Ensure pVideoRaster always points into a 24 bit space region (fix
	"Leavin' Teramis" which sets video address to $ffe100 to display
	"loading please wait" ; in that case, we must display
	$ffe100-$ffffff then $0-$5e00)
	[8475b286c5d2]

2014-05-30  Thomas Huth

	* src/joy.c:
	Fix joystick axis mapping for recent Linux kernels The joystick axis
	mapping is kernel dependant and thus not always necessary. Until a
	rewrite of the joystick subsystem is done, this patch simply takes
	out the currently defined auto remap. (Patch by Matthias Arndt)
	[925683d7089c]

2014-05-30  Nicolas Pomarede

	* src/fdc.c, src/floppy_ipf.c, src/includes/floppy_ipf.h:
	For IPF, set a drive to single or double sided mode (need capslib >=
	5.1)
	[25a0ff6a9ada]

	* src/fdc.c:
	Fori type II commands 'read sector' and 'write sector', the ID field
	should also have a correct CRC
	[f7643bd42235]

	* src/mfp.c:
	Increase MFP jitter for Lethal Xcess
	[27af91f80131]

2014-05-29  Eero Tamminen

	* doc/emutos.txt:
	update emutos compatibility lists

	Add things that were fixed in Hatari, and ones that started working
	with EmuTOS memory usage reductions.

	As EmuTOS works now with most ST programs, started adding also lists
	of non-working ST color games.

	Update info for few other games.
	[2b50561c3bac]

	* src/fdc.c, src/includes/fdc.h, src/statusbar.c:
	optimize FDC updates

	FDC track information addition to statusbar changed statusbar
	updates to happen on every screen update. This made Hatari on OSX
	(at least with SDL 1.x) unbearably slow. Optimize by calling
	SDL_UpdateRect(s) only once per statusbar update.

	Additionally, avoid potential future memory overwrites by changing
	FDC statusbar string function to use C99 snprintf instead of
	sprintf.
	[2f1717590c94]

	* doc/release-notes.txt:
	re-organize release notes a bit

	+ add note about PC being added to OS call traces
	[5b2a9b316919]

	* tools/hmsa/hmsa.c:
	make sure both GUI wrappers output newline
	[6f9890d0d0cd]

	* src/debug/evaluate.c:
	correct comment
	[4fbd89d20463]

2014-05-29  Thomas Huth

	* src/cpu/cpummu030.c, src/cpu/gencpu.c, src/cpu/newcpu.c, src/mfp.c,
	src/video.c:
	Fixed more typos (discovered with codespell)
	[32ca06d7aa77]

2014-05-29  Nicolas Pomarede

	* src/cycInt.c:
	In CycInt_ModifyInterrupt, remove assert on CycleTime
	[153ae18226da]

	* src/debug/evaluate.c:
	Typos
	[2ecaf8e10259]

	* doc/release-notes.txt:
	Update release notes
	[73e7ac6af699]

	* doc/compatibility.html:
	Update games' compatibility list with some specific settings
	[2644645a86a4]

2014-05-28  Nicolas Pomarede

	* src/fdc.c, src/floppy_stx.c, src/includes/floppy_stx.h:
	Add FDC_NextSectorID_CRC_OK_ST / FDC_NextSectorID_CRC_OK_STX
	[78e8098e9712]

	* src/fdc.c:
	For 'write sector' check that track and sector registers match the
	current ID field
	[2d5e2c8fe28c]

	* src/fdc.c:
	Add comments for statusbar's messages
	[65d27e19437b]

	* src/mfp.c:
	Add a small jitter in the MFP's timers (Temporary fix for Lethal
	Xcess calibration routine to remove top border)
	[30883e3337e0]

2014-05-27  Nicolas Pomarede

	* src/cycInt.c:
	Fix compiler warning in 64 bit mode : remove unnecessary casts
	[0c7ff28c0d6a]

2014-05-28  Thomas Huth

	* src/debug/evaluate.c:
	Fixed format string - value is long long, so use llx
	[de81bc9b67e5]

	* src/cycInt.c:
	Silenced compiler warnings of clang. Now that the code uses the
	PRId64 format macro, it is not necessary to typecast the arguments
	to (long long) anymore.
	[3a0ed1bae556]

2014-05-27  Nicolas Pomarede

	* src/gui-sdl/dlgAbout.c:
	Fix compiler warning : comparison between signed and unsigned int
	[93567b8e8dce]

	* src/msa.c:
	Use our internal 'Uint16' type instead of 'short int'
	[a2ff2ee272c6]

	* src/msa.c:
	Remove warning in 64 bit mode : cast from pointer to integer of
	different size
	[9c563164cc28]

2014-05-27  Thomas Huth

	* src/floppy_ipf.c:
	Fixed build w/o capslibrary
	[d1e046fa38b9]

2014-05-27  Nicolas Pomarede

	* cmake/FindCapsImage.cmake:
	Default to capslib v4 (until v5 is released)
	[c06e112d7bff]

	* src/uae-cpu/newcpu.c:
	Disable DEBUG_PREFETCH by default
	[ebfcac89a977]

2014-05-26  Nicolas Pomarede

	* cmake/Toolchain-mingw32-win64_32.cmake, cmake/Toolchain-
	mingw32-win64_64.cmake, cmake/Toolchain-mingw32.cmake, configure:
	Remove old --cross-compile-win32 and add toolchain files for Windows
	32 and 64 bit We use 2 different toolchain files, because passing
	parameters with -D is causing problem in cmake when handling a
	toolchain file
	[9e5e60b02f0e]

2014-05-23  Nicolas Pomarede

	* src/cycInt.c:
	Fix compiler warning : return a pointer to a void function, instead
	of a void pointer
	[453202cd4a59]

	* src/uae-cpu/newcpu.c:
	Fix pointer's type
	[ecaab2ec026e]

	* src/debug/68kDisass.c, src/debug/history.h:
	Fix compiler warning : remove last ',' in enum
	[4841e2f6cb26]

	* src/debug/68kDisass.c:
	Fix compiler warning : don't use return in a 'void' function
	[64443d5ca57e]

2014-05-21  Nicolas Pomarede

	* src/fdc.c, src/floppy_ipf.c, src/includes/floppy_ipf.h:
	Print some FDC's informations in the statusbar also when using IPF
	mode
	[2f8c3bc50b6f]

	* src/statusbar.c:
	Move frameskip's info on the right of the statusbar
	[1eb6ca2170ec]

	* src/fdc.c, src/includes/fdc.h, src/statusbar.c:
	Print some FDC's informations in the statusbar (command, head,
	track, sector, side)
	[a626c2bb2586]

	* cmake/Toolchain-mingw32.cmake:
	Add debug message
	[bab8c2820516]

	* src/shortcut.c:
	Fix autoinsert in drive B when using shortcut alt+d Filename was
	changed for drive B, but Floppy_InsertDiskIntoDrive(1) was not
	called
	[00565af93d1a]

2014-05-19  Nicolas Pomarede

	* src/floppy_ipf.c:
	For IPF, correctly set drives ON or OFF in IPF_Init() when restoring
	a memory snapshot
	[2029ecf51aed]

	* src/fdc.c, src/floppy_ipf.c, src/includes/floppy_ipf.h:
	For IPF, allow to turn drive B ON or OFF to have only drive A
	enabled With current capslib, it's not possible to turn drive A OFF
	[88f78670ecfe]

	* src/bios.c, src/gemdos.c, src/xbios.c:
	Print PC in all gemdos/bios/xbios traces
	[db7d5f0149a4]

2014-05-18  Nicolas Pomarede

	* src/floppy_ipf.c:
	When inserting IPF/CTR images, invalidate track/side used for
	CAPSSetRevolution()
	[fa0766d3d0bf]

	* src/stMemory.c, src/tos.c:
	Don't force drive A and B at $4c2, keep the values detected by TOS
	FDC emulation will correctly detect if a drive is ON or OFF, so
	there's no need anymore to force $4c2, we keep the values at $4a6.w
	and $4c2.l, we only update $4c2.l with the harddrives.
	[04404dc1fbc0]

2014-05-12  Nicolas Pomarede

	* src/floppy_ipf.c, src/uae-cpu/newcpu.c:
	Update includes for capslib v5
	[6874cd63e9e0]

2014-05-11  Nicolas Pomarede

	* src/floppy_stx.c:
	Remove warning on 64bit architecture
	[8134e4391ed5]

2014-05-10  Nicolas Pomarede

	* src/fdc.c, src/floppy_ipf.c, src/includes/fdc.h:
	For CTR images, we must call CAPSSetRevolution() when track/side
	changed before accessing data For example, this is required for CTR
	version of "Turrican"
	[486c241f111a]

2014-05-08  Nicolas Pomarede

	* cmake/FindCapsImage.cmake:
	Correct search path for capsimg.dll.a for mingw
	[565388d903a1]

	* src/video.c:
	When 50Hz and 60Hz lines are mixed, we must update the position of
	the next VBL's interrupt (fix "ikbd no jitter" test program by Nyh
	in atari-forum.com, using a 160240 cycles VBL)
	[e9be9924618a]

	* src/cycInt.c, src/includes/cycInt.h:
	Add CycInt_ModifyInterrupt to modify the counter without restarting
	the interrupt
	[7d52fee555fc]

2014-05-07  Nicolas Pomarede

	* CMakeLists.txt:
	Print the version of caps library in ./configure
	[d167086412d5]

	* src/m68000.c:
	In M68000_WaitEClock, use CyclesGlobalClockCounter instead of
	CYCLES_COUNTER_VIDEO
	[c671abf267d5]

2014-05-01  Nicolas Pomarede

	* src/fdc.c:
	Fix wait states when accessing $ff8604/$ff8606 (verified on real
	STF)
	[8bd6daf483cf]

2014-04-29  Nicolas Pomarede

	* src/main.c:
	Add missing include for WIN32
	[acff11858e34]

	* src/includes/main.h:
	Don't redefine ARRAYSIZE if already defined (for mingw)
	[33ecc9c49c0b]

2014-04-28  Nicolas Pomarede

	* src/cycInt.c, src/debug/evaluate.c:
	Replace %lld by C99 macros
	[c3cd4a021ef3]

	* src/fdc.c:
	FDC params for drive 1 were not correctly saved
	[671444681612]

2014-04-27  Nicolas Pomarede

	* src/fdc.c:
	Force Int command should set the motor bit and clear spinup bit only
	when FDC is idle
	[3ae90c9a441c]

2014-04-25  Nicolas Pomarede

	* src/fdc.c:
	When reading FDC status register for a type I command, always unset
	bit 3 (fix "Macadam Bumper", "Crafton & Xunk", "L'Ange de Cristal")
	[eeadd203345b]

2014-04-23  Nicolas Pomarede

	* CMakeLists.txt:
	Update comment for caps library
	[c26a54c40ba3]

	* cmake/FindCapsImage.cmake, src/floppy_ipf.c, src/uae-cpu/newcpu.c:
	Allow compilation with caps library v4 or v5
	[660791f07e4c]

2014-04-22  Nicolas Pomarede

	* cmake/FindCapsImage.cmake, cmake/config-cmake.h, src/uae-
	cpu/newcpu.c:
	Define CAPSIMAGE_VERSION in FindCapsImage.cmake
	[fdf94bbd88ee]

	* src/floppy_ipf.c, src/includes/floppy_ipf.h, src/main.c:
	Don't call capslib functions directly in main.c
	[5302a199b98f]

2014-04-21  Nicolas Pomarede

	* src/floppy_ipf.c, src/uae-cpu/newcpu.c:
	Update includes to work with capslib 4 and 5
	[3efa2eb52910]

2014-04-19  Nicolas Pomarede

	* src/fdc.c:
	In FDC, starting a Force Int command should set the motor bit (fix
	the games "Saint Dragon" and "Knightmare")
	[5c3e6bdb1f90]

	* src/fdc.c, src/floppy.c, src/floppy_stx.c, src/includes/floppy.h,
	src/includes/floppy_stx.h:
	In Floppy_ReadSectors, return a pointer to the data instead of doing
	a memcpy
	[6e4bee7173b8]

2014-04-17  Nicolas Pomarede

	* src/options.c:
	Add options --drive-a-heads and --drive-b-heads to select
	single/double sided drive
	[89183bd3658c]

	* src/change.c, src/configuration.c, src/fdc.c, src/gui-
	sdl/dlgFloppy.c, src/includes/configuration.h, src/includes/fdc.h:
	For floppy drives, handle "Double Sided" option in the UI + config
	file
	[cb1ebd4444c6]

	* src/change.c, src/configuration.c, src/fdc.c, src/floppy_ipf.c,
	src/includes/fdc.h:
	Rename some FDC functions
	[1b2cc4fcdf34]

2014-04-16  Nicolas Pomarede

	* src/fdc.c, src/floppy_stx.c, src/includes/floppy_stx.h:
	Add support for single sided or double sided floppy drive Some
	games/demos could have a different behaviour depending on the
	drive's settings (F29 Retaliator, Captive, Union Demo, ...)
	[60371e2bd037]

2014-04-11  Nicolas Pomarede

	* src/uae-cpu/gencpu.c:
	Improve prefetch order for "move.l Dn,(An)" (fix the game
	"International 3D Tennis" protection : move.l d0,(a0))
	[e739810dec77]

2014-04-09  Nicolas Pomarede

	* src/uae-cpu/gencpu.c:
	Fix i_Scc to do a read before the write in 68000 mode (similar to
	i_CLR) (fix Chart Attack compilation by Gremlin)
	[49ecdaf93b59]

2014-04-07  Nicolas Pomarede

	* src/floppy_ipf.c:
	For IPF, set the write protect state depending on the UI
	[7c2dd342f3f0]

2014-04-06  Nicolas Pomarede

	* src/uae-cpu/newcpu.c:
	Add (disabled) code to trigger breakpoint in capsimg library for
	debug
	[8bc526312eb2]

	* src/uae-cpu/newcpu.c:
	In Exception(), add a special case for last_addr_for_exception_3
	(fix the game Batman The Movie)
	[b55a6581a4fc]

2014-04-05  Nicolas Pomarede

	* src/fdc.c:
	In FDC_GetEmulationMode(), default to the latest mode when no drive
	are selected (fix "Saint Dragon" in IPF, sending D0 command when no
	drive are selected)
	[05567c2b657b]

2014-03-28  Nicolas Pomarede

	* src/fdc.c:
	For FDC_NextSectorID_TR_ST() value should be the latest HeadTrack
	[3fb081402359]

2014-03-25  Nicolas Pomarede

	* src/floppy_ipf.c:
	Use CAPSGetImageTypeMemory() to check if the disk image is IPF,
	CTRAW, ...
	[7a370e33d50c]

	* cmake/FindCapsImage.cmake, cmake/Toolchain-mingw32.cmake:
	When compiling the Windows version, use capsimg.dll instead of
	capsimage.dll
	[8c0d9ed08ca2]

	* src/uae-cpu/newcpu.h:
	In refill_prefetch(), read 2 words instead of 1 long, for better bus
	error detection When reading only one long, the bus error is not
	detected if the address overlaps a valid region and a bus error
	region. (fix "Union Demo" and "To Be On Top" protections)
	[f82b1c8269a7]

2014-03-22  Nicolas Pomarede

	* src/floppy.c, src/floppy_ipf.c, src/zip.c:
	Associate .ctr extension to capsimage library for CT RAW dump
	[3667c1b168e8]

2014-03-20  Nicolas Pomarede

	* src/floppy.c, src/floppy_ipf.c, src/includes/floppy.h, src/zip.c:
	Also handle .raw files with capsimage library (CT RAW dump or
	Kryoflux RAw dump)
	[16b930cd89b3]

	* configure:
	Clear cmake's cache when running ./configure
	[06895af2bc4b]

	* cmake/Toolchain-mingw32.cmake:
	For Windows cross compilation, use newer i686-w64-mingw32-gcc
	instead of i586-pc-mingw32-gcc
	[fc4142341770]

2014-03-19  Nicolas Pomarede

	* src/uae-cpu/newcpu.c:
	During Bus Error when reading $ff8e21, add a specific case to
	restore the correct value of the dest part (fix Tymewarp by YM
	Rockerz)
	[12a7c1faf651]

	* src/cpu/table68k, src/uae-cpu/table68k:
	bset.b d0,8(pc) is not a valid 680xx instruction, but an illegal one
	(fix the game Dragon Flight)
	[7a4948830aee]

	* src/uae-cpu/newcpu.c:
	Temporarily enable report of self modified code combined with
	prefetch
	[2c1ad490970e]

	* src/uae-cpu/newcpu.c:
	During Bus Error, add a specific case to restore the correct value
	of the dest part (fix the game Dragon Flight)
	[e972ceaa0786]

	* src/zip.c:
	Update error message
	[9828918c7b64]

2014-03-15  Nicolas Pomarede

	* src/floppy_stx.c, src/includes/floppy_stx.h:
	Text formatting
	[8da553e4ceaf]

	* src/ikbd.c, src/includes/ikbd.h:
	Add support for the IKBD commands 0x11 and 0x13 (resume/pause
	output) (fix protection in the game "Warp")
	[5425c070b763]

	* src/ikbd.c, src/includes/ikbd.h:
	Add support for the IKBD command 0x17 (joystick monitoring) (fix
	protection in the game "Warp" (sectors decoding))
	[89dd316a9ef1]

2014-03-11  Nicolas Pomarede

	* src/fdc.c:
	For Read Sector, update next state after motor on
	[95ef0003f247]

	* src/fdc.c:
	If Read Address doesn't find any ID after 5 index pulses, return RNF
	[17c76ef317ec]

2014-03-08  Nicolas Pomarede

	* src/fdc.c, src/floppy_stx.c, src/includes/floppy_stx.h:
	For STX image, the number of cycles per revolution is variable and
	depends on drive/track/side
	[21973cdd8f4c]

	* src/fdc.c:
	Reset IndexPulse_Time when FDC motor stops, to get a new one when
	motor starts again
	[aaca67502d5e]

2014-03-07  Nicolas Pomarede

	* src/uae-cpu/gencpu.c:
	Improve prefetch order for "move" (only prefetch 1 word instead of
	2) (fix protections for "Union Demo", "Titan", "Xenon 2", "Darkman",
	"Parasol Stars")
	[58e6b63cf9ad]

	* src/uae-cpu/gencpu.c:
	Improve prefetch order for "eor.x Dn,xxx.L" (fix "Xenon 2"
	protection : eor.w d0,$40760)
	[177ca1e2fcb7]

2014-03-06  Nicolas Pomarede

	* src/fdc.c:
	Fix copy/paste error in FDC_NextSectorID_TR_ST
	[d3dbd0a69282]

2014-03-05  Nicolas Pomarede

	* src/floppy_stx.c:
	For STX, build a standard track if we do a Read Track on a non-
	imaged track The track is made of the available sectors and some
	standard GAP values
	[5c790bfe4afc]

	* src/fdc.c, src/includes/fdc.h:
	Add FDC_Buffer_Get_Size ()
	[97ca5c4c0ee8]

2014-03-04  Nicolas Pomarede

	* src/floppy_ipf.c:
	For IPF, invalidate previous track when ejecting/inserting a new
	floppy (fix floppy's change detection in some cases after
	eject/insert)
	[ecb1a36cad81]

2014-02-26  Nicolas Pomarede

	* src/floppy_ipf.c:
	Remove log in IPF_Emulate()
	[ba19661fee92]

	* src/fdc.c, src/floppy_stx.c, src/includes/fdc.h,
	src/includes/floppy_stx.h:
	Put some common constants in fdc.h
	[132deabd45a4]

	* src/floppy_stx.c, src/includes/floppy_stx.h:
	Build some default values for STX track with only sector data and no
	sector info
	[def1afe4ee56]

2014-02-25  Nicolas Pomarede

	* src/uae-cpu/gencpu.c:
	Improve prefetch order for "move.l #$xxxx,(An)" (fix the game
	"Titan" protection : move.l #$b0b0caca,(a4))
	[0894acf129cb]

2014-02-23  Nicolas Pomarede

	* src/acia.c:
	Add debug printf
	[f481195d4974]

2014-02-22  Nicolas Pomarede

	* src/cycles.c:
	In Cycles_GetInternalCycleOnReadAccess, don't read the opcode if PC
	is in the IO region This can create recursive calls of
	Video_Color0_ReadWord and a crash for the rare cases where code is
	run from the $ff8240-$ff8260 region (eg "Union Demo" protection)
	[e3c46824a512]

	* src/video.c:
	When reading color regs, set unused STF bits to rand() only if PC is
	in RAM (fix "Union Demo" protection code running at address $ff8240)
	[96d81e777962]

	* src/uae-cpu/gencpu.c:
	Improve prefetch order for "move.x Dn,xxx.L" (fix "Union Demo"
	protection : move.w d1,$4c)
	[69ecb2613426]

	* src/uae-cpu/newcpu.c, src/uae-cpu/newcpu.h:
	In refill_prefetch(), check for bus error when reading next
	word/long to prefetch (fix "Union Demo" protection)
	[89bbaf2a1c56]

	* src/uae-cpu/newcpu.c:
	In Exception(), call valid_address() before reading the opcode at
	BusErrorPC Doing get_word(BusErrorPC) directly could cause an
	unwanted double bus error if PC was in bus error region
	[7137389461e8]

2014-02-20  Nicolas Pomarede

	* src/fdc.c:
	When a new FDC command starts, we should stop generating IRQ on each
	IP (fix ReadTrack after a $D4 command in "Damocles", "Driving
	Force", "Lethal Xcess")
	[77d3694a8b48]

2014-02-17  Nicolas Pomarede

	* src/fdc.c:
	Add log for ReadSector with multi=on
	[7c33338d131b]

2014-02-15  Nicolas Pomarede

	* src/fdc.c, src/floppy_stx.c, src/includes/floppy_stx.h:
	For ReadSector, check that FDC.TR matches the track number in the ID
	Field
	[3cb68fa541dc]

	* src/floppy_stx.c, src/includes/floppy_stx.h:
	Complete STX emulation of ReadSector, ReadAddress and ReadTrack :
	some games are working Successfully tested games : Arkanoid, Bomb
	Jack, Gauntlet II, Rampage, Turrican
	[d7293faed987]

	* src/fdc.c:
	Call FDC_NextSectorID_SR_STX when the floppy is an STX image
	[02238d20fc65]

2014-02-08  Nicolas Pomarede

	* src/fdc.c:
	Call FDC_NextSectorID_FdcCycles_STX when the floppy is an STX image
	[26727e721a2e]

2014-02-07  Nicolas Pomarede

	* src/fdc.c, src/includes/fdc.h:
	Fix return value in FDC_NextIndexPulse_FdcCycles + declare some
	functions as extern
	[81bd7d9d34cb]

2014-02-06  Nicolas Pomarede

	* src/fdc.c:
	FDC_NextSectorID_FdcCycles_ST must return an int, not an Uint32
	[1189873bfd79]

	* src/fdc.c:
	Call STX functions for ReadSector, ReadAddress and ReadTrack
	[4466bf1bb269]

2014-01-30  Nicolas Pomarede

	* src/fdc.c:
	Check CRC error after reading a sector (for STX)
	[ff68321ffd70]

	* src/fdc.c:
	Return an error code in FDC_ReadAddress_ST and FDC_ReadTrack_ST,
	instead of a bool
	[473eda19bf2f]

2014-01-28  Nicolas Pomarede

	* src/fdc.c:
	Return an error code in FDC_ReadSector_ST, instead of a bool
	[4bade8cca27e]

	* src/fdc.c, src/includes/fdc.h:
	Use Uint16 for FDC_Buffer's Timing
	[326c568f903d]

2014-01-26  Nicolas Pomarede

	* src/fdc.c:
	Replace FDC_TransferByte_FdcCycles with FDC_TransferByte_FdcCycles
	[6af685392352]

2014-01-24  Nicolas Pomarede

	* src/floppy_stx.c, src/includes/floppy_stx.h:
	Correctly handle STX track with only a track image and O sector
	[855140cabc80]

2014-01-23  Nicolas Pomarede

	* src/fdc.c:
	Remove old code for ReadTrack
	[622322985b1e]

	* src/fdc.c:
	Remove unnecessary variable in FDC_BUFFER
	[c5eb340c5f52]

	* src/fdc.c:
	Rewrite ReadTrack to use FDC_ReadTrack_ST() and FDC_BUFFER
	[e221563412e9]

	* src/fdc.c:
	Rewrite ReadAddress to use FDC_ReadAddress_ST() and FDC_BUFFER
	[9eb6109a7101]

	* src/fdc.c:
	Removed unused FDC_ReadSectorFromFloppy()
	[067d73ae9da7]

	* src/fdc.c:
	Separate CRC and multi bit states for ReadSector/WriteSector
	[44e3e8b05b1a]

	* src/fdc.c, src/includes/fdc.h:
	Add FDC_BUFFER to associate a specific timing to each FDC byte to
	transfer ; use it for type II ReadSector
	[475833f68b17]

2014-01-20  Nicolas Pomarede

	* tools/hmsa/hmsa.c:
	Add an empty STX_FileNameIsSTX function to be able to build without
	linking all floppy related files
	[f6d64a8059f2]

	* src/floppy_stx.c:
	Add a debug flag to print the hexdump of the sector/fuzzy/timing
	data of STX files
	[bf45684d69ea]

	* src/includes/str.h, src/str.c:
	Add Str_Dump_Hex_Ascii()
	[189a42078727]

2014-01-15  Nicolas Pomarede

	* src/floppy_stx.c, src/includes/floppy_stx.h:
	For STX with revision=0, add default timings table
	[7bd44f62dd5d]

2014-01-14  Nicolas Pomarede

	* src/floppy_stx.c, src/includes/floppy_stx.h:
	In STX, parse the optional timings block for variable bitrate
	sectors
	[e7b82fba5832]

2014-01-12  Nicolas Pomarede

	* src/fdc.c:
	Add define FDC_SECTOR_SIZE_MASK
	[afa8c0c665cd]

	* src/floppy_stx.c, src/includes/floppy_stx.h:
	Parse the STX file, alloc buffers and init internal variables
	[805c07f60c83]

2014-01-03  Nicolas Pomarede

	* src/CMakeLists.txt, src/fdc.c, src/floppy.c, src/floppy_stx.c,
	src/includes/floppy.h, src/includes/floppy_stx.h,
	src/memorySnapShot.c, src/zip.c:
	Add default file operations to handle .STX disk images
	[386880c9cf66]

2014-05-24  Thomas Huth

	* src/gui-sdl/dlgAbout.c:
	Shorten program name in about dialog if necessary
	[d12be261e0c9]

2014-05-20  Eero Tamminen

	* doc/compatibility.html:
	add missing STE programs

	There are so few of them that they can be all listed in the
	compatibility list.
	[555afec40f4e]

2014-05-19  Eero Tamminen

	* doc/compatibility.html:
	better link to zip

	(link on HTML page didn't work)
	[c05d9c90b1d3]

	* doc/compatibility.html:
	fix/add STE links

	some of the linked sites have disappeared, link to Atarimania
	instead. Add some links.
	[d77806a6f147]

2014-05-11  Nicolas Pomarede

	* doc/compatibility.html, doc/release-notes.txt:
	Add note about disabling real time clock by default
	[71835e317152]

	* src/configuration.c:
	Don't enable MegaST's real time clock by default (at
	$fffc20-$fffc40) This can make some STF/STE programs fail as it will
	change some TOS variables (fix "Stax Compilation #65")
	[899afbd08e40]

2014-05-09  Eero Tamminen

	* doc/manual.html, src/debug/profile.c:
	fixes to profile command help text
	[48d5edfcc567]

2014-05-08  Eero Tamminen

	* doc/release-notes.txt:
	update release notes
	[068e8856917c]

	* tools/debugger/gst2ascii.1, tools/debugger/gst2ascii.c:
	gst2ascii: handle symbols both from fixed & buggy VBCC/vlink

	Improve also advice on what to do when symbol loading fails or when
	it succeeds.
	[43e30e0a6223]

	* src/debug/symbols.c:
	remove VBCC specific code, bail out if too many offset issues

	It seems that VBCC vlink was buggy and Frank will fix that, so
	removed VBCC checks.

	In case there's still binaries with old buggy symbol table offset,
	bail out after whole screen is spammed with them.
	[2261eb4503e9]

	* doc/manual.html:
	profiler documentation typo fixes & improvements
	[958d51ab1723]

	* doc/hatari.1, doc/manual.html:
	docs command and option categorization update
	[27a5a365843f]

2014-05-08  Nicolas Pomarede

	* src/configuration.c:
	Set default value of nSpec512Threshold to "1" instead of "16"
	[a7bdb4fcbe4d]

2014-05-07  Eero Tamminen

	* doc/emutos.txt:
	more emutos updates
	[82a5e822211b]

2014-05-06  Laurent Sallafranque

	* src/falcon/crossbar.c:
	Fix my previous crossbar patch: I forgot to remove the old zeroing
	[7de791745520]

	* src/falcon/crossbar.c:
	Little sound fix: zero the dac values only when the step is not 0
	[83a097320c9f]

2014-05-05  Laurent Sallafranque

	* CMakeLists.txt:
	old cpu by default.
	[edd1717f8566]

	* CMakeLists.txt, src/falcon/videl.c, src/falcon/videl.h,
	src/ioMemTabFalcon.c:
	Videl fix: the ST palette is now correctly masked.
	[de67aba99091]

2014-05-05  Eero Tamminen

	* doc/emutos.txt:
	added new games working with EmuTOS 2014-05-03

	Latest EmuTOS CVS snapshot fixed IKBD initilization (not to disable
	joy & mouse), this fixed several games. Some other games were also
	found to be working with latest version (maybe because it uses less
	memory and some line-A bugs were fixed).
	[10418f44834c]

2014-05-04  Eero Tamminen

	* src/gemdos.c:
	TOS filename 8+3 clipping must be done at first '.'

	While host filename matching is better done at last '.' so that file
	types are preserved for too long host filenames, TOS filenames
	coming through GEMDOS calls, *must* be clipped at first '.'.

	Fixes MAZE game.
	[e7c95390131f]

	* src/cpu/memory.c, src/uae-cpu/memory.c:
	include correct header (instead of using extra extern)
	[81b5df99e008]

2014-05-03  Thomas Huth

	* src/cpu/falcon_cycle030.h, src/cpu/memory.c, src/hdc.c:
	Fixed some more possible compiler warnings from GCC and Clang
	[cbbda4eec686]

2014-05-04  Eero Tamminen

	* doc/manual.html:
	improvements to debugger section
	[77fa694beed1]

2014-05-03  Thomas Huth

	* src/debug/symbols.c, tools/debugger/gst2ascii.c:
	Fixed compiler warning about ignored return value of fread
	[4127b89981f7]

2014-05-03  Eero Tamminen

	* src/debug/breakcond.c:
	fix build with DSP disabled
	[32664b5d98fe]

2014-05-02  Eero Tamminen

	* src/debug/debugui.c:
	fix valgrind warning
	[2f6293e82533]

2014-05-02  Nicolas Pomarede

	* src/includes/version.h:
	For devel version, add build date into version string
	[19a4fe9e1f2c]

2014-05-02  Eero Tamminen

	* src/includes/version.h:
	add CPU core type to devel version string

	and don't use release version string in development version...
	[1c4f565a7ba6]

	* src/joy.c, src/statusbar.c:
	add monitor, joystick and WinUAE specific info to statusbar

	Now that information is on separate line from indicators, there's
	space to add a bit more info statusbar messages.
	[482280d45147]

	* src/statusbar.c:
	split statusbar information to 2 lines
	[3b2da96211d0]

	* src/main.c:
	decrease startup help message timeout 6s -> 5s
	[b4db2b5e17d8]

	* doc/manual.html:
	section on debugger invocation + debugger documentation improvements
	[fd82387b7f3e]

	* doc/manual.html, doc/release-notes.txt, src/debug/debugui.c,
	src/debug/symbols.c, src/debug/symbols.h, src/gemdos.c,
	src/includes/gemdos.h:
	load debug symbols for current program when entering debugger

	- move last program (path) handling from gemdos.c to symbols.c (and
	do Last->Current rename)
	- move Atari program identification to its own function there
	- on entering debugger, load debug symbols for currently running
	program, if there's such thing and no CPU symbols are yet loaded
	- remove CPU symbols for a program when it terminates
	- update documentation
	[34e26ac54dbf]

2014-05-01  Eero Tamminen

	* doc/manual.html, src/debug/log.c, src/debug/log.h, src/tos.c:
	"autostart" flag for --debug-except option
	[2e04bebb1160]

	* src/xbios.c:
	clearer function return handling
	[8cad687cc185]

	* doc/hatari.1, doc/manual.html, doc/release-notes.txt, src/bios.c,
	src/cpu/newcpu.c, src/debug/log.c, src/includes/options.h,
	src/includes/xbios.h, src/options.c, src/uae-cpu/newcpu.c,
	src/xbios.c:
	remove need for --bios-intercept on Bios/XBios tracing

	Reason for bBiosIntercept variable usage in CPU core code was that
	in addition to tracing, it and --bios-intercept option were (still)
	used to enabled other XBios command interceptions, of which
	Xbios(255) has also some security implications.

	This commit fixes that by:

	* removing bBiosIntercept variable. CPU cores call now bios.c and
	xbios.c code unconditionally on relevant traps

	* xbios.c now deciding itself whether XBios(255) etc are enabled
	  - move --bios-intercept toggling code from options.c to xbios.c (to
	new XBios_ToggleCommands() function) and change it to affect only
	enabling of special XBios() features
	  - bios.c doesn't do anything besides tracing so it didn't need any
	functionality changes

	Documentation is also updated.
	[14ac4fe7418e]

	* doc/hatari.1, doc/manual.html, doc/release-notes.txt,
	src/includes/main.h, src/main.c, src/options.c:
	add --slowdown option
	[a7895426300e]

2014-04-30  Nicolas Pomarede

	* doc/release-notes.txt, src/debug/natfeats.c:
	Add NatFeats command NF_FASTFORWARD
	[81f661051d00]

	* doc/release-notes.txt:
	Update release notes
	[68711efbea2b]

	* src/dmaSnd.c:
	Remove whitespaces
	[1567bcf1ab11]

2014-04-30  Nicolas Pomarede

	* src/dmaSnd.c:
	Correct STE sound mixing using LMC1192 when mixer=0 Atari's docs are
	wrong, mixer=0 will not mix DMA with YM2149-12dB, it will only
	output DMA sound. Only mixer=1 allows to hear YM2149 sound.
	[c5661fed2d4f]

2014-04-30  Eero Tamminen

	* src/debug/symbols.c, tools/debugger/gst2ascii.c:
	special-case VBCC symbols

	it seems that VBCC may be an exception in giving offsets for all
	symbol types relative to TEXT section, so code now checks for VBCC
	compiled binary identification and special-cases them
	[10f3c2cc8640]

2014-04-25  Eero Tamminen

	* doc/release-notes.txt:
	update release notes
	[1955f8adcb1a]

	* tools/debugger/gst2ascii.1, tools/debugger/gst2ascii.c:
	update gst2ascii similarly, and recommend using 'nm' on problems

	(main purpose for gst2ascii is easier debugging of undocumented
	symbol table features by being able to do it outside of Hatari /
	emulation.)
	[61eb58b4a8e4]

2014-04-24  Eero Tamminen

	* src/debug/symbols.c:
	more info on binary symbols and issues, 2 different offset
	calculations

	It seems that GCC symbol offsets are from given section start (TEXT,
	DATA or BSS), but with VBCC, DATA and BSS symbols can be mixed also
	within TEXT section, so their offsets start from TEXT section start.

	Add also some extra information to symbol loading outputs.
	[dcb2cdcc0e05]

	* src/debug/symbols.c:
	separate helper function

	will in next commit use it from several places
	[c79b82180868]

	* src/debug/debugcpu.c, src/debug/symbols.c, src/debug/symbols.h:
	add TAB-completion for symbols command
	[9530e1bcd651]

2014-04-23  Eero Tamminen

	* doc/emutos.txt:
	major EmuTOS compat update in preparation to new Hatari release
	[e25751834176]

2014-04-22  Eero Tamminen

	* src/options.c:
	change run-time exception debugging mask if it's already enabled

	I.e. make "-D --debug-except bus" equal to "--debug-except bus -D".

	Run-time exception mask is changed only if it's non-zero, this way
	mask can be changed without enabling it (yet), to support use-case
	where mask is given on command line, but toggled later at run-time.
	[2b43a48622a1]

2014-04-17  Eero Tamminen

	* doc/release-notes.txt:
	update release notes
	[c6386064c587]

	* src/debug/breakcond.c, tests/debugger/test-breakcond.c:
	allocate conditional breakpoints and their conditions dynamically

	- This removes limits on how many of them user can use
	- Minor improvements to breakpoint debug output
	- Updated debugger breakpoint tests
	[eb27e0426f5a]

2014-04-15  Nicolas Pomarede

	* doc/compatibility.html:
	Treasure Trap loads correctly only with Hatari >= 1.8
	[937112472c43]

2014-04-08  Eero Tamminen

	* src/debug/debugcpu.c, src/debug/debugdsp.c:
	fix: use explicit base prefix in case user had changed number base
	[f8a3f7f657ee]

2014-04-07  Eero Tamminen

	* src/debug/debugInfo.c:
	by default, show next instruction when entering debugger
	[aa9c56e355c5]

	* doc/manual.html, src/debug/debugcpu.c, src/debug/debugdsp.c:
	support for "n return" (run until next subroutine/exception return)
	[40bb46adbf11]

2014-03-23  Nicolas Pomarede

	* doc/compatibility.html, doc/release-notes.txt:
	Update docs for HighResMode demo by Paradox
	[6378cc9d7d31]

	* src/video.c:
	Correctly align bitmap and colors for STE in med res overscan at 60
	Hz (fix 'HighResMode' by Paradox)
	[79a25dd40bec]

2014-03-05  Eero Tamminen

	* src/screen.c:
	(disabled) debug output for ST screen resolution debugging
	[d357cecf4a86]

2014-02-23  Eero Tamminen

	* doc/hatari.1, doc/images/screen.png, doc/manual.html, doc/release-
	notes.txt:
	update documentation to screen option changes
	[9488d40040dc]

	* src/options.c:
	-z 1 to allow border, max size is generic option, description
	improvements
	[a19fee326303]

	* src/falcon/hostscreen.c, src/gui-sdl/dlgScreen.c,
	src/includes/resolution.h, src/resolution.c:
	add KeepResolutionST option support to SDL GUI + code improvements
	[fc9325492709]

	* src/statusbar.c:
	fix indent
	[1df027b151d6]

2014-02-21  Thomas Huth

	* doc/manual.html:
	Initial text in Falcon/TT display options should not be bold
	[a444de3c124f]

2014-02-21  Eero Tamminen

	* doc/manual.html, doc/release-notes.txt:
	document "next" command update
	[97517b26e4e1]

	* src/debug/debugcpu.c, src/debug/debugdsp.c:
	improve next command to work like with other debuggers

	"next" skips subroutine/exception calls, for all other instructions
	it works like "step" command
	[2aa969814a5a]

2014-02-20  Eero Tamminen

	* src/debug/natfeats.c:
	add ifdeffed out "command" NF + NF debug output fine-tuning

	Use the correct (capitalized) native feature names in debug output.

	"command" NF can be used to replace XBios(255) feature. Disabling
	XBios(255) would make --bios-intercept safe to enable automatically
	when BIOS or XBIOS OS calls are traced.
	[41f045f853ef]

2014-02-18  Nicolas Pomarede

	* src/fdc.c:
	Change FDC_DMA.BytesInSector to signed int
	[922d26631521]

	* src/fdc.c:
	Fix FDC_DMA.SectorCount update in FDC_DMA_FIFO_Pull(), causing data
	loss when writing a sector FDC_DMA.SectorCount was set to 0 too
	early, which caused the last 15 bytes of a sector to be written as
	'0' and also set DMA error in bit 0 of DMA status
	[b05fda81592a]

2014-02-11  Eero Tamminen

	* doc/manual.html:
	fix typo
	[20f6b4914ce0]

2014-02-09  Eero Tamminen

	* doc/manual.html:
	separate section for stepping + next command instruction type option
	documentation
	[fa10ba478685]

2014-01-28  Eero Tamminen

	* doc/hatari.1, doc/manual.html, doc/release-notes.txt:
	update documentation

	- add --debug-trace option description
	- update --trace option description
	- wrap too long release notes lines to 80 cols
	[b5513f2448a7]

2014-01-27  Eero Tamminen

	* src/configuration.c, src/cpu/newcpu.c, src/debug/debugui.c,
	src/debug/debugui.h, src/debug/log.c, src/debug/log.h,
	src/falcon/dsp_cpu.c, src/includes/configuration.h, src/options.c,
	src/uae-cpu/newcpu.c:
	exception debugging support rewrite

	- log.c trace option handling generalization to support parsing of
	also exception flags
	- user can select which exceptions invoke debugger with --debug-except
	option and this selection is saved with configuration
	- --debug is still used to toggle exception debugging on/off, but it
	now sets mask instead of boolean
	- related API changes in old UAE newcpu.c & dsp_cpu.c
	- added preliminary support for exception debugging to WinUAE CPU core
	[cb711d0112c3]

2014-01-20  Eero Tamminen

	* doc/emutos.txt:
	add floppy-only games, remove duplicates
	[32fe6f0bf5c3]

	* doc/todo.txt:
	add bug about Videl screen address counter
	[0de6113c9f95]

2014-01-19  Thomas Huth

	* src/cpu/memory.c, src/uae-cpu/memory.c:
	Limit information about illegal memory accesses to avoid flooding of
	the console.
	[bc7f7a3ee890]

2014-01-12  Nicolas Pomarede

	* src/fdc.c:
	FDC DMA address must be word-aligned, always force bit 0 to 0
	[f87a9c7c9751]

2014-01-11  Thomas Huth

	* src/cpu/newcpu.c, src/uae-cpu/newcpu.c:
	Unused bits in CAAR register should not be tied to zero. Thanks to
	Douglas Little for the hint.
	[a6bde357021a]

2014-01-08  Eero Tamminen

	* tests/natfeats/nf_asm.s, tests/natfeats/readme.txt:
	add readme and preliminary GCC / Gas ASM version
	[baa7ca42b28c]

	* tests/natfeats/Makefile.vbc, tests/natfeats/natfeats.c,
	tests/natfeats/natfeats.h, tests/natfeats/nf_asmv.s,
	tests/natfeats/nf_vbcc.tos:
	add VBCC example on using Native Features from Atari code
	[685b1b4ea51a]

2014-01-02  Nicolas Pomarede

	* doc/compatibility.html, doc/release-notes.txt:
	Update doc/release notes
	[b8adae9deace]

	* src/spec512.c:
	Update write cycle's position when using 'add' to change a color
	register (fix 'add d1,(a0)' in '4-pixel plasma screen' by TOS Crew)
	[19bdb54f05bb]

2014-01-01  Nicolas Pomarede

	* src/cycles.c:
	Modify write timings for opcodes AND, OR and EOR (prefetch, then
	write)
	[c02c2cf9da2f]

	* src/cycles.c:
	Modify write timings for opcodes ADD and SUB (prefetch, then write)
	(Used in 4-pixel plasma screen by TOS Crew)
	[5aef63763463]

	* src/cycles.c:
	Opcodes NEG, NEGX and NOT have the same write timing as CLR
	[9c5c8eeb5345]

2013-12-28  Nicolas Pomarede

	* src/debug/68kDisass.c:
	Fix out of bounds memory access that could result in bad disassembly
	output
	[f1cd5433e51a]

	* doc/release-notes.txt:
	Update release notes
	[ea0b3001c01e]

	* src/video.c:
	Adjust 50 Hz max position for bottom border removal on a 60 Hz
	screen (fix "It's a girl 2" by Paradox)
	[7211814b4e3e]

	* src/fdc.c:
	Use PRIu64 to print Uint64 values 32/64 bits mode without gcc's
	warnings
	[92a723bcadfb]

2013-12-27  Laurent Sallafranque

	* src/cpu/falcon_cycle030.h:
	68030 timings fix: LEA instructions timings were wrong.
	[730a8d185629]

	* src/falcon/dsp_cpu.c:
	DSP fix: SR was not correctly restored at the end of a loop.
	[ff3a16527500]

2013-12-27  Thomas Huth

	* readme.txt:
	Clarified one sentence in the license statement, according to Eero's
	suggestion
	[4b38f9e34b8c]

2013-12-27  Nicolas Pomarede

	* src/fdc.c:
	Also update unused bits of $ff8604 when DMA sector count is 0
	[1e50c3b9b2bb]

2013-12-26  Nicolas Pomarede

	* src/fdc.c:
	On STF/STE machines, FDC DMA addresses are limited to 0x3fffff
	[7511460e8ba1]

	* src/fdc.c:
	Remove old define for DMA transfers
	[081c7e921408]

2013-12-25  Nicolas Pomarede

	* src/fdc.c:
	Typos
	[b74b3710fb21]

	* src/fdc.c:
	Report an error in DMA Status if DMA sector count is 0 when we get
	some DRQ to process
	[f84eb81fa309]

	* src/fdc.c:
	Improve the content of unused bits in DMA Status at $ff8606
	[7d3c0e127206]

	* src/video.c:
	Force unused "random" bits to 0 in STF color regs when building our
	conversion palette
	[b801f13a53d8]

	* src/fdc.c:
	For FDC tranfers, use the more accurate FDC_DMA_FIFO_Push() and
	FDC_DMA_FIFO_Pull()
	[6bb6bd3bae4f]

2013-12-24  Nicolas Pomarede

	* doc/compatibility.html, doc/release-notes.txt, src/video.c:
	Update docs about unused bits in STF's color registers
	[b3e255dcc424]

	* src/video.c:
	In STF mode, bits 4, 7 and 11 of color registers are not always 0
	when read The exact value of these 3 bits depends on the latest word
	access on the BUS, so we use random for now as a tradeoff (fix 'UMD
	8730' by PHF, as noted in Steem SSE 3.5.5)
	[c30a36557db7]

	* src/includes/video.h, src/ioMemTabST.c, src/ioMemTabSTE.c,
	src/video.c:
	Use a specific handler to intercept reads in the color registers
	$ff8240-$ff825e
	[e31a1e5bd3c9]

2013-12-22  Eero Tamminen

	* doc/release-notes.txt:
	update release notes
	[118f73f76602]

	* src/debug/natfeats.c:
	add debugger invocation native feature
	[c065da1168ab]

	* src/cart.c, src/gemdos.c:
	allow GEMDOS/VDI/AES to be traced without GEMDOS emu / VDI
	interception
	[daa503e19a71]

	* doc/compatibility.html:
	more links to listed SW
	[4f53ecf04802]

2013-12-22  Nicolas Pomarede

	* src/fdc.c:
	Fix typo in change #4835 affecting drives' led color
	[964347d84dbd]

2013-12-21  Thomas Huth

	* readme.txt:
	Added information about the IPF library to the readme.txt
	[36bc5c4cc8b0]

2013-12-21  Eero Tamminen

	* doc/emutos.txt:
	update emutos compat list
	[163d2e77e8de]

2013-12-18  Thomas Huth

	* src/gui-osx/PrefsController.m:
	Fixed the ACSI hard disk settings in OS X PrefsController
	[aed7d99deea1]

2013-12-17  Nicolas Pomarede

	* src/fdc.c, src/floppy_ipf.c, src/includes/fdc.h:
	Update drives' led color also when using IPF disks
	[0d05a6a79837]

	* src/floppy_ipf.c:
	Display a warning dialog for IPF disks not yet correctly emulated
	[9c9b2082868d]

2013-12-17  Thomas Huth

	* src/change.c, src/configuration.c, src/gui-sdl/dlgHardDisk.c,
	src/hdc.c, src/includes/configuration.h, src/options.c:
	Changed the configuration infrastructure for supporting multiple
	ACSI devices
	[8599264183e3]

2013-12-17  Nicolas Pomarede

	* src/fdc.c, src/hdc.c, src/includes/hdc.h:
	For FDC/HDC, improve DMA sector count (which can't be read) and DMA
	status As observed on a real STF, we set the unused bits depending
	on the latest access made at $ff8604
	[dff3a89fd82e]

2013-12-11  Nicolas Pomarede

	* CMakeLists.txt:
	Print a summary of the optional libraries detected with a short
	explanation
	[c6f8afe201db]

2013-12-06  Thomas Huth

	* src/hdc.c:
	Cleaned up the setting of DMA status and IRQ
	[39eb3b14f586]

2013-11-25  Thomas Huth

	* src/debug/log.c, src/debug/log.h, src/hdc.c:
	Added proper tracing support for SCSI/ACSI commands
	[3f33266cb872]

2013-03-17  Nicolas Pomarede

	* src/uae-cpu/gencpu.c:
	Add refill_prefetch for i_SUB, i_NEG, i_NEGX, i_NOT (similar to
	i_ADD/i_EOR)
	[a8415000a35a]

	* src/uae-cpu/newcpu.c, src/uae-cpu/newcpu.h:
	In refill_prefetch(), reload only one new word in regs.prefetch if
	low word is still valid (fix EOR/ADD self modified code in the
	protection for the game Damocles)
	[0f3958daef4b]

2012-09-24  Nicolas Pomarede

	* src/fdc.c:
	Use the IPF mode for an empty drive if the other drive contains an
	IPF image
	[269f6caa460d]

	* src/includes/fdc.h:
	Fix GPL text
	[0013a29520df]

2012-09-01  Nicolas Pomarede

	* src/uae-cpu/newcpu.c:
	Add a special case to correct the stacked PC when a bus error
	happens during a movem (fix the original protection in the IPF
	version of the game Blood Money)
	[895c71bd97bb]

	* src/floppy_ipf.c:
	When restoring snapshots with IPF data, some internal pointers must
	be recomputed
	[41fc480183f4]

2012-08-26  Nicolas Pomarede

	* src/floppy_ipf.c:
	Improve checks when restoring a memory snapshot with IPF data
	[216cd9e2bc03]

2012-08-25  Nicolas Pomarede

	* src/floppy_ipf.c:
	Use MemorySnapShot_Skip to skip unsupported IPF data instead of
	using a temp buffer
	[4bd542743135]

	* src/includes/memorySnapShot.h, src/memorySnapShot.c:
	Add MemorySnapShot_Skip to skip some parts of a snapshot when
	restoring it
	[78a2aa91f721]

	* src/floppy_ipf.c:
	Handle restoring snapshot with different IPF built options than
	Hatari
	[dcf6968e468d]

	* src/memorySnapShot.c:
	Correct order when saving/restoring snapshots with IPF
	[a15a0c75a60e]

2012-08-24  Nicolas Pomarede

	* tools/hmsa/hmsa.c:
	Add an empty IPF_FileNameIsIPF function to be able to build without
	IPF support
	[8696d2afcf2e]

	* src/fdc.c:
	Automatically choose the FDC mode depending on the selected drive
	and the image type
	[769e641e68ec]

	* src/floppy_ipf.c:
	Print ImageId when inserting an IPF image
	[35a5ba6d59a4]

	* src/floppy.c:
	More detailed comments for Floppy_SetDriveSide
	[54dcddbcc0d6]

2012-08-23  Nicolas Pomarede

	* src/floppy_ipf.c:
	Remove unnecessary include
	[a2997a678de6]

2012-08-20  Nicolas Pomarede

	* src/floppy_ipf.c:
	If compiling without capsimage support, IPF_STRUCT should be empty
	[b6990053baaa]

	* src/floppy_ipf.c, src/includes/floppy_ipf.h, src/memorySnapShot.c:
	Add support for saving IPF state in memory snapshots
	[ecd01e65bda5]

	* src/floppy_ipf.c:
	Store capsimage library's version into IPF_State structure
	[d0190f3ddfb9]

	* src/floppy_ipf.c:
	After changing drive/side, call IPF_Emulate to take the change into
	account immediatly
	[049ab355f462]

	* src/floppy_ipf.c:
	Add more infos in IPF logs
	[f5f0fcaa08bf]

	* src/floppy_ipf.c:
	Call IPF_Emulate before accessing an FDC's register
	[44860a1ed98d]

	* src/floppy_ipf.c, src/includes/floppy_ipf.h, src/video.c:
	In IPF_Emulate, use IPF_State.FdcClock to compute the requested
	number of cycles to emulate
	[d7f7ced27ff7]

	* src/reset.c:
	FDC_Reset should be called for cold and warm reset
	[802a0e03c0d9]

	* src/fdc.c, src/floppy_ipf.c, src/includes/floppy_ipf.h:
	Call IPF_Reset from FDC_Reset
	[b03a86b90ed2]

	* src/floppy_ipf.c:
	Add FdcCLock / CyclesGlobalClockCounter
	[0bdf74b05090]

	* src/reset.c:
	Reset master clock counter during a cold/warm reset
	[6ad92ca089d4]

2012-08-19  Nicolas Pomarede

	* src/cycles.c, src/includes/cycles.h:
	Add a global counter to count cpu cycles and give a master clock
	since last reset
	[c8043d7b3336]

	* src/cycles.c:
	Split code in Cycles_GetCounterOnReadAccess /
	Cycles_GetCounterOnWriteAccess
	[3343413cebf0]

2012-08-09  Nicolas Pomarede

	* src/floppy_ipf.c:
	Fix comment
	[8023fed82408]

	* src/floppy_ipf.c:
	IPF disk images are write protected (writing to IPF is not supported
	yet)
	[f08b4aacd7cf]

2012-08-08  Nicolas Pomarede

	* src/fdc.c:
	Add FDC_GetEmulationMode in FDC_DiskControllerStatus_ReadWord to use
	internal or ipf emulation
	[9c13166a9e12]

	* src/fdc.c:
	Add FDC_GetEmulationMode in FDC_DiskController_WriteWord to use
	internal or ipf emulation
	[8ac165f2de31]

2012-08-05  Nicolas Pomarede

	* src/floppy_ipf.c:
	Don't add IPF callback functions if capslibrary is not used
	[14cead05ca62]

	* src/zip.c:
	Add support for loading IPF images directly from ZIP files
	[7c18e9e67fe4]

	* src/floppy.c, src/includes/zip.h, src/zip.c:
	Return ImageType in ZIP_ReadDisk, also uses FLOPPY_IMAGE_TYPE_xxx
	instead of ZIP_FILE_xxx
	[4998ef631f6d]

2012-08-03  Nicolas Pomarede

	* src/fdc.c:
	Add some notes on the timings required for precise FDC's emulation
	[d5c9b9b4ea6b]

2012-08-02  Nicolas Pomarede

	* src/floppy_ipf.c:
	In IPF_Insert, call CAPSLoadImage to cache all tracks earlier
	[916055a44d1c]

	* src/fdc.c, src/floppy_ipf.c:
	In IPF_CallBack_Trk, call CAPSLockTrack to update the track data ->
	emulation is working First tests with Virus and The Pawn are good,
	games are working
	[56d8737cb303]

2012-07-31  Nicolas Pomarede

	* src/floppy_ipf.c:
	Add VBL number to IPF traces
	[91a732d5a84d]

	* src/floppy_ipf.c:
	Add more traces
	[f5de019b9d2c]

	* src/video.c:
	Temporary call IPF_Emulate on each HBL
	[da99f8f174c9]

	* src/floppy_ipf.c:
	Change CAPSDRIVE_DA_IN attribute when an IPF image is
	inserted/ejected
	[c7dc61257a4a]

	* src/fdc.c:
	Replace read / write to $ff8604 with call to IPF_FDC_ReadReg /
	IPF_FDC_WriteReg
	[8d8bc16c90d7]

	* src/floppy_ipf.c, src/includes/floppy_ipf.h:
	Add IPF_FDC_WriteReg and IPF_FDC_ReadReg
	[a9860453a064]

2012-07-29  Nicolas Pomarede

	* src/fdc.c:
	Typo
	[b7b20873aa27]

	* src/fdc.c:
	On DMA reset, reset sector count + add some notes about DMA
	[9a923296a884]

	* src/fdc.c, src/floppy_ipf.c, src/includes/fdc.h:
	Complete the DMA FIFO to be used by external fdc emulation libraries
	(IPF support)
	[e24072d32dcb]

	* src/fdc.c, src/floppy_ipf.c, src/includes/fdc.h:
	Add FDC_DMA_FIFO_Pull/FDC_DMA_FIFO_Push to IPF_CallBack_Drq
	[b31b7af68fcf]

	* src/fdc.c, src/includes/fdc.h:
	Add FDC_DMA_GetModeControl_R_WR
	[973b08a6d13b]

	* src/floppy_ipf.c:
	Indent spaces -> tabs
	[fafd38d655c2]

	* src/floppy_ipf.c:
	In IPF_Insert, returns false if CAPSLockImageMemory fails
	[e0eaf024e664]

	* src/fdc.c:
	Typo
	[03d24b9d234a]

	* src/floppy_ipf.c, src/includes/floppy_ipf.h:
	Add IPF_Emulate to run the FDC's emulation for a given number of
	cycles
	[4adde785550d]

	* src/floppy.c, src/floppy_ipf.c, src/includes/floppy.h,
	src/includes/floppy_ipf.h, src/psg.c:
	Call Floppy_SetDriveSide / IPF_SetDriveSide for each write to reg $E
	in $ff8802 (IO_PORTA)
	[137124191412]

2012-07-22  Nicolas Pomarede

	* src/floppy_ipf.c, src/includes/floppy_ipf.h:
	Add IPF_SetDriveSide
	[e28b91658024]

	* src/floppy.c, src/floppy_ipf.c, src/includes/floppy_ipf.h,
	src/main.c:
	Improve IPF_Init, IPF_Insert and IPF_Eject
	[18cb5adca07f]

	* src/fdc.c, src/includes/fdc.h:
	Add FDC_ClearIRQ
	[d02d972cacf0]

2012-07-18  Nicolas Pomarede

	* src/floppy.c, src/floppy_ipf.c, src/includes/floppy_ipf.h:
	Move some parts of IPF_ReadDisk into IPF_Insert
	[1955637efa2b]

2012-07-17  Nicolas Pomarede

	* src/dim.c, src/floppy.c, src/includes/floppy.h, src/msa.c, src/st.c:
	Don't set ImageType if the disk image can't be loaded
	[97f53814200a]

2012-07-15  Nicolas Pomarede

	* src/floppy_ipf.c, src/main.c:
	Init CAPS library and print some debug infos about the IPF file
	[c7a5c034c8cf]

	* src/floppy_ipf.c:
	If Hatari is built without capsimage lib, print an error message
	when opening IPF files
	[789d9957708c]

	* src/CMakeLists.txt, src/floppy.c, src/floppy_ipf.c,
	src/includes/floppy.h, src/includes/floppy_ipf.h:
	Add .ipf as a valid disk image extension and load data into a buffer
	[2249b57dbfec]

	* src/dim.c, src/floppy.c, src/includes/dim.h, src/includes/floppy.h,
	src/includes/msa.h, src/includes/st.h, src/msa.c, src/st.c,
	tools/hmsa/hmsa.c:
	Add ImageType (ST, MSA, DIM) to the floppy drive's emulation
	structure
	[7d33d795eacd]

2012-07-14  Nicolas Pomarede

	* CMakeLists.txt, cmake/FindCapsImage.cmake, cmake/config-cmake.h,
	src/CMakeLists.txt:
	Add support for the capsimage library in the build process
	[3153973a34e3]

2013-12-06  Nicolas Pomarede

	* doc/hatari.1, doc/manual.html, doc/release-notes.txt, src/options.c:
	Add --drive-a and --drive-b options to enable/disable a floppy drive
	(this is better than giving an empty file name to --disk-a and
	--disk-b)
	[38f7941cb87f]

2013-12-03  Nicolas Pomarede

	* doc/release-notes.txt:
	Update release note
	[8bd2066835b9]

	* src/video.c:
	When $ff8260 is set to 3 (which is not a valid resolution mode), use
	2 instead (high res) Cancel wrong change from 2008/07/19 and fix
	'The World Is My Oyster - Convention Report Part' by Aura
	[658807f42b3a]

2013-11-29  Nicolas Pomarede

	* src/configuration.c:
	Correctly calls FDC_EnableDrive() for each drive when the
	configuration is applied
	[70ece9b17fcf]

	* src/fdc.c:
	Don't use LOG_TRACE in FDC_EnableDrive for now as Log_Init was not
	called yet
	[e396188b8ddf]

	* doc/release-notes.txt:
	Update release notes with FDC's changes
	[dd8a758aa23b]

	* src/fdc.c:
	Regroup code for FDC's cycles per revolution and handle Falcon's 16
	MHz FDC case
	[17bd4b5f4574]

2013-11-28  Eero Tamminen

	* doc/emutos.txt:
	add few new demos to emutos compat list
	[454f7685ea92]

2013-11-27  Nicolas Pomarede

	* src/fdc.c:
	Fix CPU<->FDC cycles' conversion when x2 or x4 CPU speed is used
	[3d9ac7227e5d]

	* src/fdc.c:
	Use unsigned int to convert FDC/CPU cycles
	[53f94c7fad17]

	* src/fdc.c:
	For FDC's cycles per revolution, use cycles in FDC units instead of
	CPU units This gives the same results, it's just clearer to have as
	much values in FDC units as possible and convert them to CPU units
	when needed.
	[f844a3cbd64f]

2013-11-24  Thomas Huth

	* doc/compatibility.html, doc/manual.html:
	Switched docs to UTF-8 as recommended by the W3 validator
	[322ddc3c81b9]

2013-11-23  Thomas Huth

	* doc/images/system.png, doc/manual.html:
	Updated the system dialog in the manual
	[693d6f84250b]

2013-11-23  Nicolas Pomarede

	* doc/hatari.1, doc/manual.html:
	Update manuals about giving an empty string for a floppy/HD image to
	disable it
	[74ce1640aaf3]

	* src/hdc.c:
	Rename functions used to set FDC/HDC's IRQ
	[a67415932281]

2013-11-17  Thomas Huth

	* src/gui-sdl/dlgSystem.c:
	Merged the the system settings dialogs. The two different system
	settings dialogs, one for the UAE and one for the WinUAE CPU,
	already started to diverge (fast boot option was missing in the
	latter). I've merged the two now to avoid this problem in the
	future.
	[d85c6a0f8b4c]

2013-11-16  Thomas Huth

	* doc/manual.html:
	Replaced the wrong dashes in the manual with proper '-' characters.
	Thanks to David Savinkoff for the hint.
	[826fb2530bbe]

2013-11-16  Eero Tamminen

	* src/debug/debugui.c:
	release mouse when debugger is invoked

	Unfullscreening was also already handled at debugger invocation, but
	mouse grab was only released if user invoked debugger with a key
	shortcut.

	Now mouse is released regardless of where the debugger gets called
	from.

	Note: grab isn't automatically re-taken an exiting from debugger
	except when user invokes debugger with keyboard shortcut. Fullscreen
	isn't restored either, but as that hasn't been an issue, I assume
	this isn't either. User can always re-invoke grab & fullscreen after
	emulation continues.
	[1096f01e8ebf]

2013-11-03  Thomas Huth

	* src/hdc.c:
	ACSI/SCSI: Moved status variables into device and controller
	structures to get ready for supporting multiple devices and buses
	later.
	[ffd21fefd093]

	* src/main.c:
	Added now a proper fix for the problem when nDelay gets too big
	[60d552d65368]

2013-11-02  Thomas Huth

	* src/main.c:
	Coding style: Indent with tabs, not with spaces
	[a16df835c29a]

	* src/main.c:
	Fix time overflow problem when DestTicks overlowed to negative
	numbers. Thanks to David Savinkoff for the patch.
	[2575b119b058]

2013-11-23  Nicolas Pomarede

	* src/fdc.c:
	Fix error in FDC_GetCmdType
	[e4399fbf8667]

2013-11-18  Nicolas Pomarede

	* src/fdc.c:
	Update some comments
	[df4f7ae4d4bc]

	* src/fdc.c:
	Remove FDC_SIDE macro
	[35d70d033f7a]

	* src/fdc.c:
	Better code to simulate HD/ED floppies with higher density
	[28f763e56186]

2013-11-17  Nicolas Pomarede

	* src/fdc.c:
	Don't ignore FDC commands when no drive is selected
	[b937a2f98b14]

	* src/fdc.c:
	Remove macro FDC_DRIVE and FDC_FindFloppyDrive()
	[9ff2b55bcdd8]

2013-11-15  Nicolas Pomarede

	* src/fdc.c:
	Remove old FDC_DRIVE macro
	[6cbd2f41f37b]

	* src/fdc.c:
	Rewrite some FDC functions regarding drive/floppy geometry
	[0be5ae158dbb]

2013-11-14  Nicolas Pomarede

	* src/fdc.c:
	Add notes and update code about the replace command case in the FDC
	[ba9e20afe2dd]

2013-11-13  Nicolas Pomarede

	* src/fdc.c:
	Update the FDC's state machine to handle sub-states of 0 cycle
	[37fdd926b971]

2013-11-12  Nicolas Pomarede

	* src/fdc.c:
	Update the location to replace a running command in the FDC
	[8f74e3d53eea]

	* src/fdc.c:
	Remove old/unused parts of the FDC's emulation
	[d07953a01aac]

2013-11-11  Nicolas Pomarede

	* src/fdc.c:
	Rewrite the FDC 'force interrupt' type IV command using index pulses
	counter Also improve the IRQ behaviour when 'force interrupt
	immediate' is used.
	[f3cdc653ce84]

	* src/fdc.c, src/hdc.c, src/includes/fdc.h:
	Rename functions used to set/clear FDC's IRQ
	[40f4125a395c]

	* src/fdc.c:
	Adjust the duration of the FDC's index pulse signal
	[c86395f53e70]

	* src/ioMem.c:
	Put PC address at the end of IO read/write traces
	[7514383e69a9]

	* src/fdc.c:
	Rewrite the FDC 'read next address ID' sequence using index pulses
	counter This is used in the 'verify' sequence for type I commands,
	in type II commands when looking for the sector FDC.SR and in type
	III command 'read address'. We now also correctly handles the cases
	where the drive is not enabled or empty (wait for a valid
	drive/floppy instead of aborting the command)
	[7e1172a8bfef]

2013-11-09  Nicolas Pomarede

	* src/fdc.c:
	Remove old unused functions
	[911e4ff93129]

	* src/fdc.c:
	Improve the content of the FDC's status register for type I mode
	Some bits were not correctly updated in some cases when drive was
	off or empty
	[9bbbb1c05620]

2013-11-06  Nicolas Pomarede

	* src/fdc.c:
	Rewrite the FDC 'motor stop' sequence using index pulses counter
	[da40a0eaba0a]

2013-11-05  Nicolas Pomarede

	* src/fdc.c:
	Improve head settle delay sequence for FDC's type I commands
	[ff3cb1d245ef]

	* src/fdc.c:
	Move the head settle delay at the correct place for FDC's type II
	and III commands
	[f6e4457d81d9]

	* src/fdc.c:
	Rewrite the FDC spin up sequence using proper index pulses counter
	This now uses the same logic as the WD1772 to count floppy's
	rotation using index pulses, and will also give accurate behaviour
	when there's no drive or floppy available during the spin up
	sequence.
	[92935aced61a]

2013-11-01  Nicolas Pomarede

	* src/fdc.c:
	Improve FDC's accuracy when drive is switched off or no floppy is
	inserted
	[4fc90e3c9f7a]

2013-10-31  Eero Tamminen

	* src/debug/profilecpu.c:
	keep CPU profiles address indexes in order

	Previous code assumed that TOS is always before cartridge area.
	However, TOS can be mapped either before or after cartridge area.
	Take that into account when mapping addresses to indexes and back.
	This fixes profiler data post-processor assert.

	Use symbolic names for cartridge area start and end addresses.
	[fdbddd89d916]

2013-10-31  Nicolas Pomarede

	* doc/release-notes.txt, src/change.c, src/configuration.c, src/gui-
	sdl/dlgFloppy.c, src/includes/configuration.h, src/options.c:
	Update the UI and the configuration file to store if a drive is
	enabled/disabled
	[407c7e71ebd1]

2013-10-30  Nicolas Pomarede

	* doc/release-notes.txt, src/fdc.c, src/includes/fdc.h, src/options.c:
	Giving empty string as a disk's image disables the corresponding
	drive
	[a93f5feade35]

	* src/configuration.c:
	Use MAX_FLOPPYDRIVES instead of a constant
	[4eb5a3952f93]

2013-10-27  Nicolas Pomarede

	* src/fdc.c:
	Improve physical head accuracy for FDC type I commands We should
	update the head's position only if the selected drive is enabled
	[ff892bb490df]

	* src/main.c:
	Initialise emulation sooner for some hardware components For
	example, we must init FDC before inserting some floppy
	[6531c6be3f78]

	* src/fdc.c:
	Store head's position in the drive's structure
	[bcebef4f4eed]

	* src/fdc.c:
	When FDC's motor stops, spinup bit should not be cleared
	[28fc77bf6428]

2013-10-27  Thomas Huth

	* doc/release-notes.txt:
	Updated release notes with recent ACSI changes
	[00128c83c010]

	* src/hdc.c, src/includes/hdc.h:
	ACSI/SCSI: Changed wording from 'device' to 'LUN' to avoid
	confusions and fixed the handling of REQUEST SENSE for illegal LUNs.
	[11342f1d688a]

	* src/hdc.c:
	ACSI/SCSI: Fixed handling of unsupported commands
	[e463249b57b4]

2013-10-27  Nicolas Pomarede

	* src/cpu/hatari-glue.c, src/fdc.c, src/includes/fdc.h, src/reset.c,
	src/uae-cpu/hatari-glue.c:
	Don't reset TR and DR when the FDC is warm reset As verified on a
	real STF, these registers are not affected by a warm reset (if the
	RESET instruction is used for example). Only STR and SR are reset.
	[52c722346da6]

2013-10-27  Thomas Huth

	* src/hdc.c:
	ACSI/SCSI: Reject reads/writes with illegal sector numbers. Thanks
	to Uwe Seimet for the hint.
	[d92cf1c0bee8]

	* src/hdc.c:
	ACSI: Reset command counters when A1 pin is zero
	[bdace53e5a21]

	* src/hdc.c:
	ACSI: Get size of image via the size of the file instead of using
	the MBR. Thanks to Uwe Seimet for the hint.
	[8a7cab1466fd]

2013-10-26  Thomas Huth

	* src/hdc.c:
	Fixed the nLastBlockAddr mess, and use fseeko for ACSI hd images
	[50cc837fe038]

	* CMakeLists.txt, cmake/config-cmake.h, src/file.c, src/ide.c,
	src/includes/file.h:
	Use fseeko instead of fseek for IDE image files
	[2eccafefe46e]

2013-10-26  Nicolas Pomarede

	* src/sound.c:
	Update comment
	[078cc3391541]

2013-10-26  Thomas Huth

	* src/hdc.c:
	ACSI/SCSI: Fill INQUIRY buffer with more sane values. Thanks to Uwe
	Seimet for the hint.
	[2c93a1fd65bf]

2013-10-25  Nicolas Pomarede

	* src/fdc.c:
	Update drive's density each time a floppy is inserted
	[04408abd8aea]

2013-10-24  Nicolas Pomarede

	* src/fdc.c, src/floppy.c, src/includes/fdc.h:
	Update drives' state when a floppy is inserted/ejected from the UI
	[3402e429164b]

	* src/fdc.c:
	Don't directly access ff8802 to change the busy led of a drive
	[17d4a0a1693c]

	* src/fdc.c:
	Don't directly access ff8802 to check if a drive is selected
	[4d0c7bb1512c]

	* src/fdc.c:
	Don't directly access ff8802 to get the side used by the FDC
	[a3e477165f38]

	* src/fdc.c:
	Add FDC's drives to the memory snapshot
	[ecd7ec7e1c0b]

	* src/fdc.c:
	Store the density of the floppy inserted in each drive (DD/HD/ED)
	[677663677ab6]

	* src/fdc.c:
	Remove old variable in FDC's emulation
	[52192df634e9]

	* src/fdc.c, src/includes/fdc.h, src/psg.c:
	Report side/drive changes in porta register directly to the FDC's
	emulation
	[ed63b7394987]

2013-10-06  Thomas Huth

	* src/fdc.c, src/hdc.c, src/includes/hdc.h, src/reset.c:
	SCSI: First steps towards Falcon NCR5380 register handling
	[ca5439819515]

	* src/tos.c:
	Skip some delays during TOS 4.04 boot
	[519fb3b63eb0]

2013-10-22  Eero Tamminen

	* doc/compatibility.html, doc/emutos.txt:
	add note for couple of newish STE demos
	[fd77306de99c]

2013-10-21  Thomas Huth

	* src/hdc.c:
	Fix the handling of SCSI commands with opcode >= 0x40. Thanks to Uwe
	Seimet for the hint.
	[52b90cb51ad6]

	* src/hdc.c:
	READ CAPACITY updated the DMA counter to a wrong value. Thanks to
	Uwe Seimet for the patch.
	[488bceeea054]

	* src/hdc.c:
	According to the SCSI standard, INQUIRY must also be handled for
	unknown LUNs. Thanks to Uwe Seimet for the patch.
	[ac4f7a925ebd]

2013-10-13  Eero Tamminen

	* doc/release-notes.txt:
	update + fix typo
	[8a61bbeb6b39]

2013-10-12  Eero Tamminen

	* src/control.c:
	newline for errmsg
	[74a83f54e46c]

	* src/control.c, src/includes/control.h, src/xbios.c:
	fix: XBios(255) modified its argument
	[4a6e97653e32]

	* doc/manual.html:
	add ":once" option to breakpoint chaining examples

	While that option isn't needed in that specific example, people can
	use those examples for breakpoints where they could be hit several
	times, but shouldn't, so it's better to have ":once" in the
	examples.
	[7aba54c1dbd5]

2013-10-11  Eero Tamminen

	* doc/emutos.txt:
	more music apps work with EmuTOS
	[58c36336b070]

2013-10-07  Nicolas Pomarede

	* src/fdc.c:
	Remove old unused FDC code
	[558497b06d63]

2013-10-07  Laurent Sallafranque

	* doc/release-notes.txt:
	Added Reeking rumber as working game
	[1100567cbf16]

2013-10-06  Nicolas Pomarede

	* doc/release-notes.txt:
	Add changes about FDC (index pulses, RPM)
	[dc4f209a5d3d]

2013-10-01  Eero Tamminen

	* doc/emutos.txt:
	degas elite & spofl work
	[1b0e45e97718]

2013-09-29  Eero Tamminen

	* doc/emutos.txt:
	add few ste demos to emutos compat list
	[cfaae0aefe04]

2013-09-28  Eero Tamminen

	* src/fdc.c:
	fix compiler warning
	[adcecb6c42ba]

	* src/debug/profilecpu.c:
	improve comment, collect callgraphs also for exception calls
	[a613cf9864d4]

	* doc/emutos.txt:
	update EmuTOS notes for latest CVS version with line-A support
	[4f605eea0bb2]

	* doc/release-notes.txt:
	update release notes
	[a14fe758629a]

2013-09-27  Thomas Huth

	* src/hdc.c:
	Fixed READ CAPACITY command for ACSI hard disk images. Thanks to
	Roger Burrows for the detailed bug report.
	[a1ed85f1db31]

2013-10-06  Nicolas Pomarede

	* src/fdc.c:
	Also update the status register in $ff8604 when there's no busy
	command (this is required to correctly report the index bit after a
	force int command on index succeeded)
	[30a6ef27fea1]

	* src/fdc.c:
	Add support for the Force Int on Index Pulse command in the FDC
	(this command is often used by programs to measure the RPM speed of
	a floppy drive. For example, this will fix PANZER.PRG and
	FLRPMM.PRG)
	[a7cbb6cb0981]

	* src/fdc.c:
	Use the drives' RPM speed to get better accuracy for the index
	signal
	[56c7d5f41388]

2013-09-26  Nicolas Pomarede

	* configure:
	Add more options to build 32 or 64 bit Windows versions using
	mingw-w64
	[95e0fc177a8f]

2013-09-25  Nicolas Pomarede

	* cmake/Toolchain-mingw32.cmake:
	Allow the user to override mingw's default values This allows to use
	mingw32 or mingw-w64 by giving -D parameters to cmake
	[f2d61ea289d2]

2013-09-21  Nicolas Pomarede

	* cmake/Toolchain-mingw32.cmake:
	For cross compilation, ensure CMAKE_FIND_ROOT_PATH does not contain
	relative parts Having "/../" in the path seems to prevent SDL from
	being correctly detected with some mingw environments
	[8c2097f11fff]

2013-09-19  Nicolas Pomarede

	* src/fdc.c:
	Don't reset drives' head position when resetting the FDC Doing so
	will confuse TOS or others program (if the RESET instruction is used
	for example)
	[fb28bfa335b0]

2013-09-18  Nicolas Pomarede

	* src/fdc.c:
	Fix HD or ED disks for ST/MSA images (18 or 36 sectors per track)
	This was not correctly handled since the new fdc.c in Hatari 1.7.0.
	We need to simulate a x2 or x4 track buffer to compute the correct
	address field for each sector.
	[b7ba0c4b6739]

	* src/fdc.c:
	Fix typos
	[d8a680d64627]

2013-09-15  Eero Tamminen

	* src/gemdos.c:
	show Pterm*() value as signed
	[14f37d475326]

2013-09-11  Thomas Huth

	* src/cpu/compat.h, src/cpu/custom.h, src/cpu/newcpu.c:
	Removed some WinUAE specific stuff
	[5a26aba30bfe]

2013-09-09  Thomas Huth

	* src/cpu/cpummu030.c, src/cpu/newcpu.c:
	Silenced some debug messages by default
	[9beadacc5c4f]

	* .hgignore:
	Added gst2ascii to hgignore list
	[78c04b40c0ad]

	* doc/compatibility.html, src/falcon/videl.c, src/falcon/videl.h,
	src/ioMemTabFalcon.c:
	Fix for Reeking Rubber: Mask away unused bits in Falcon palette
	[c6432898db1e]

2013-09-09  Eero Tamminen

	* tests/debugger/test-dummies.c:
	update test dummies to reflect latest debugger code
	[267ba9719c95]

2013-09-08  Thomas Huth

	* tests/debugger/Makefile, tests/debugger/makefile,
	tests/tosboot/Makefile, tests/tosboot/makefile:
	Renamed Makefiles so that they do not get clobbered by the distclean
	target
	[b86444662804]

	* cmake/DistClean.cmake:
	Remove gst2ascii during distclean
	[64c79549c3f8]

	* CMakeLists.txt:
	Do not link against X11 libs when building an OS X application
	[581c7060a3eb]

	* src/cpu/newcpu.c:
	Fixed problem with MFP exceptions in MMU mode
	[304e10fe5bcc]

	* CMakeLists.txt, src/dim.c, src/file.c, src/memorySnapShot.c,
	src/zip.c:
	Allow Hatari to be compiled without libz
	[157d006c32c8]

	* src/screen.c:
	SDL_HWPALETTE should only be set when using a palette resolution
	[dda7920d786d]

	* src/cpu/build68k.c, src/cpu/gencpu.c:
	Silenced compiler warnings that occured with GCC 4.7.2
	[ae59e8ef33ad]

2013-09-03  Eero Tamminen

	* src/debug/profilecpu.c:
	fix comment typos
	[0041adb8aca1]

2013-08-28  Eero Tamminen

	* doc/release-notes.txt:
	update release notes
	[1d3a32fc00ff]

	* src/debug/debugui.c, src/debug/history.c, src/debug/history.h:
	number of instructions in history is now configurable
	[6138d03fc94e]

2013-08-24  Eero Tamminen

	* src/debug/symbols.c:
	fix corner case symbols command crash

	"pc = text" breakpoint gives false hits *during bootup*. While
	"symbols prg" guards against this, giving symbols command the file
	path to program crashed to NULL pointer check before trying to load
	the symbols from program (which would fail to TEXT section size
	mismatch).
	[3c018be03536]

2013-08-11  Eero Tamminen

	* tools/debugger/hatari_spinloop.py:
	initial spinloop information post-processor
	[d2092a842881]

	* src/debug/profile.c, src/debug/profile_priv.h,
	src/debug/profilecpu.c, src/debug/profiledsp.c:
	initial version of spinloop profiling
	[7339722615e2]

	* src/debug/debugui.c:
	add rename command to debugger

	this will be needed when doing worst frame profiling with spinloop
	profiling.
	[87f231f7321e]

	* src/debug/debugcpu.c, src/debug/debugdsp.c:
	update "next" and "dspnext" commands help
	[1eca538b4d78]

	* src/debug/breakcond.c, src/debug/debugdsp.c, src/debug/debugdsp.h:
	add instruction type argument to DSP "next" command
	[7ca23f8014ff]

2013-08-10  Eero Tamminen

	* src/ioMem.c:
	prefix IO read/write trace output with PC address

	It helps debugging to know where that access was done from...
	[086b2e645bd2]

2013-08-06  Eero Tamminen

	* doc/release-notes.txt:
	document "next" command change to release notes
	[3956db89e44b]

2013-09-18  Nicolas Pomarede

	* src/fdc.c:
	Remove old function to handle FDC delays in microsec
	[8e3e7dbe560a]

	* src/fdc.c:
	Use cycles instead of microsec for all internal delays used by the
	FDC
	[8d3c39da24a9]

2013-07-19  Nicolas Pomarede

	* src/fdc.c, src/includes/fdc.h, src/main.c:
	Add FDC_DRIVE_STRUCT to store the attributes of a physical floppy
	drive This allows to turn a floppy drive on/off or change its RPM
	speed.
	[9e549beea4f0]

2013-07-19  Eero Tamminen

	* src/debug/breakcond.c, src/debug/debugcpu.c, src/debug/debugcpu.h,
	src/debug/profile.h, src/debug/profile_priv.h:
	initial support for "n <instruction type>"
	[d49fac089c39]

2013-07-18  Eero Tamminen

	* src/debug/debug_priv.h, src/debug/debugcpu.c, src/debug/debugdsp.c,
	src/debug/debugui.c, src/debug/profile.c:
	use common code for readline matching

	There are places where matching is done differently, either by
	matching from several arrays, or from array of structures (used also
	for other things), but these use just simple string array and can
	therefore use a common helper function.

	Readline matcher needs also some static variables, but it seems
	enough that they're in the helper, instead of specific to each
	string list.
	[a06f827d3cf7]

2013-07-18  Laurent Sallafranque

	* src/falcon/dsp_disasm.c:
	dsp disasm fix : the opcode decoder must detect an illegal
	instruction if the decoded opcode doesn't exist. In this case, the
	disasm opcode must be displayed as "dc value"
	[2572fbd7ea47]

2013-07-18  Nicolas Pomarede

	* src/video.c:
	Handle a special case when writing only in lower byte of a color reg
	This case was forgotten in changeset #1546 from 16/1/2009
	[49c1585d0190]

2013-07-17  Laurent Sallafranque

	* src/falcon/dsp_cpu.c:
	dsp fix : the opcode decoder must return a illegal instruction if
	the decoded opcode doesn't exist.
	[3f61be7bb49e]

2013-07-13  Thomas Huth

	* src/debug/debugInfo.c, src/debug/debugcpu.c, src/debug/debugdsp.c,
	src/falcon/dsp.c, src/falcon/dsp_core.c, src/falcon/dsp_cpu.c,
	src/falcon/dsp_disasm.c, src/hd6301_cpu.c, src/spec512.c, src/str.c:
	Added necessary includes for compiling with emscripten
	[de23b5ea9505]

	* src/includes/scandir.h, src/scandir.c:
	Fixed the prototypes of alphasort and scandir
	[cccee916a8d8]

2013-07-08  Eero Tamminen

	* doc/release-notes.txt, src/debug/breakcond.c:
	also "<" and ">" breakpoint conditions can store checked value

	With previous commit, this allows me to automate e.g. detecting
	worst frames for Douglas' Doom port and take profiles of them.
	[465fdda57a9b]

	* doc/release-notes.txt, src/debug/breakcond.c, src/debug/debugcpu.c,
	src/debug/debugcpu.h, src/debug/debugdsp.c, src/debug/debugdsp.h,
	tests/debugger/test-dummies.c:
	Add "CpuInstr" and "DspInstr" debugger variables

	These can be used e.g. to check how many instructions emulation ran
	since a breakpoint / using "next".
	[bef7e9bc8cb3]

2013-07-05  Eero Tamminen

	* doc/release-notes.txt:
	update release notes
	[e8b182860a4a]

	* src/debug/debugdsp.c:
	support same syntax for 'dm' as what's in DSP disassembly

	requested by Laurent.
	[ca1624cf9896]

2013-07-05  Nicolas Pomarede

	* doc/release-notes.txt:
	Update release notes with fix for IACK
	[d40dad0cb2ee]

	* src/cpu/newcpu.c, src/uae-cpu/newcpu.c:
	During the HBL/VBL IACK, update MFP's state if needed An MFP's IRQ
	happening during the IACK for HBL/VBL was not processed immediately
	but delayed to the next time where PendingInterruptCount<=0 (fix
	regression in top border's removal in Sommarhack 2011 Invitro by
	DHS)
	[2c206ff96fed]

2013-07-04  Nicolas Pomarede

	* src/cpu/newcpu.c, src/uae-cpu/newcpu.c:
	Remove debug code
	[1053d9e84b86]

	* src/cpu/newcpu.c, src/uae-cpu/newcpu.c:
	Cancel change #4610, wrong description, extra cycles were not added
	[d7e3d88271cd]

	* src/cpu/newcpu.c, src/uae-cpu/newcpu.c:
	Remove IACK cycles that were wrongly added for all exceptions, not
	just interrupts This added 20 cycles to TRAP, CHK, Bus Error, ...
	[11af1b202cf8]

2013-07-02  Eero Tamminen

	* tests/debugger/test-dummies.c:
	fix debugger test dummy
	[e39b67886f17]

2013-07-02  Nicolas Pomarede

	* doc/release-notes.txt:
	Update release notes, clock speed was sometimes not updated in the
	status bar
	[1b829aac2897]

	* src/ioMemTabFalcon.c:
	In Falcon mode, update the clock's speed in the status bar when
	writing to $ff8007 During the boot, the TOS will set the clock speed
	to 16 MHz, even if Hatari was started in 32 MHz mode. We should
	update the status bar to show the new clock's speed.
	[38ff82b964fd]

2013-06-30  Nicolas Pomarede

	* CMakeLists.txt:
	Update compilation flags for the OSX version to use native alert
	windows
	[55f10ff1a0d3]

2013-06-27  Nicolas Pomarede

	* src/cpu/memory.c, src/uae-cpu/memory.c:
	Add a note about the values returned when reading a 'void' region of
	memory
	[4cea40de88f9]

2013-06-26  Nicolas Pomarede

	* doc/release-notes.txt:
	Update release notes
	[136440d53fbe]

	* src/video.c:
	Add blank line detection in STE mode when switching 60/50 Hz at
	cycles 40/52 (fix shforstv by Paulo Simoes when running in STE mode)
	[1b1314d4d21f]

2013-06-24 : *** Version 1.7.0 ***

2013-06-24  Nicolas Pomarede

	* doc/doxygen/Doxyfile, doc/emutos.txt, doc/release-notes.txt,
	doc/todo.txt, hatari.spec, readme.txt, src/gui-
	osx/English.lproj/InfoPlist.strings, src/gui-
	osx/French.lproj/InfoPlist.strings, src/gui-osx/Info-Hatari.plist,
	src/includes/version.h, src/memorySnapShot.c:
	New release 1.7.0, increase version in corresponding files
	[63c1d7c59d25] [tip]

	* src/gui-osx/English.lproj/AideHatari/compatibility.html, src/gui-
	osx/English.lproj/AideHatari/manual.html, src/gui-
	osx/French.lproj/AideHatari/compatibility.html, src/gui-
	osx/French.lproj/AideHatari/manual.html:
	Update help files in OSX build
	[9211d018684e]

2013-06-24  Eero Tamminen

	* doc/compatibility.html:
	1.6.2+ -> 1.7
	[88c0f2ef958a]

	* readme.txt:
	update readme version to 1.7 + add note about cmake
	[0d1e4d663d5f]

	* doc/manual.html:
	fix typo in manual and add space after "NOTE:"
	[b8286828eea5]

2013-06-23  Nicolas Pomarede

	* doc/manual.html:
	Remove extra </a> tag
	[b821841c45c6]

	* src/gui-osx/English.lproj/SDLMain.nib/designable.nib, src/gui-
	osx/English.lproj/SDLMain.nib/keyedobjects.nib, src/gui-
	osx/English.lproj/SDLMain.xib, src/gui-
	osx/French.lproj/SDLMain.nib/designable.nib, src/gui-
	osx/French.lproj/SDLMain.nib/keyedobjects.nib:
	Update xib/nib files for OSX
	[ab91ed70e773]

2013-06-22  Nicolas Pomarede

	* src/cpu/compat.h, src/cpu/newcpu.c:
	Don't define variables in .h files for WinUAE cpu core Variables
	should be defined only in .c, not in common .h files, else linker
	will complain about multiple definitions of the same variable.
	[3188b6c70ae4]

2013-06-21  Nicolas Pomarede

	* src/gui-osx/Hatari Help Folder/.DS_Store, src/gui-osx/Hatari Help
	Folder/clavier-exemple.txt, src/gui-osx/Hatari Help
	Folder/compatibility.html, src/gui-osx/Hatari Help
	Folder/images/devices.png, src/gui-osx/Hatari Help
	Folder/images/fileselector.png, src/gui-osx/Hatari Help
	Folder/images/floppydisks.png, src/gui-osx/Hatari Help
	Folder/images/harddisks.png, src/gui-osx/Hatari Help
	Folder/images/joystick.png, src/gui-osx/Hatari Help
	Folder/images/keyboard.png, src/gui-osx/Hatari Help
	Folder/images/main.png, src/gui-osx/Hatari Help
	Folder/images/memory.png, src/gui-osx/Hatari Help
	Folder/images/monitor.png, src/gui-osx/Hatari Help
	Folder/images/newfloppy.png, src/gui-osx/Hatari Help
	Folder/images/screen.png, src/gui-osx/Hatari Help
	Folder/images/sound.png, src/gui-osx/Hatari Help
	Folder/images/system.png, src/gui-osx/Hatari Help
	Folder/images/tos.png, src/gui-osx/Hatari Help Folder/manual.html:
	Remove unneeded OSX directory
	[2f16dc981108]

2013-06-20  Nicolas Pomarede

	* doc/compatibility.html, doc/manual.html:
	Remove link to W3 validator in html files
	[abc96cb92103]

	* src/gemdos.c:
	Change conflicting variable's name for mingw When compiling the
	Windows version with mingw, 'environ' is already used as a variable,
	which causes an error : /usr/i586-pc-mingw32/sys-
	root/mingw/include/stdlib.h:149: note: previous declaration of
	'__p__environ' was here
	[6711c061eede]

2013-06-19  Nicolas Pomarede

	* src/gui-osx/English.lproj/AideHatari/compatibility.html, src/gui-
	osx/English.lproj/AideHatari/manual.html, src/gui-
	osx/French.lproj/AideHatari/compatibility.html, src/gui-
	osx/French.lproj/AideHatari/manual.html, src/gui-osx/Hatari Help
	Folder/compatibility.html, src/gui-osx/Hatari Help
	Folder/manual.html:
	Update help files in OSX version
	[a1be6a9ceb38]

	* src/gui-osx/English.lproj/AideHatari/.DS_Store, src/gui-
	osx/English.lproj/AideHatari/compatibility.html, src/gui-
	osx/English.lproj/AideHatari/images/callgraph.png, src/gui-
	osx/English.lproj/AideHatari/images/callgraph.svg, src/gui-
	osx/English.lproj/AideHatari/images/devices.png, src/gui-
	osx/English.lproj/AideHatari/images/fileselector.png, src/gui-
	osx/English.lproj/AideHatari/images/floppydisks.png, src/gui-
	osx/English.lproj/AideHatari/images/harddisks.png, src/gui-
	osx/English.lproj/AideHatari/images/joystick.png, src/gui-
	osx/English.lproj/AideHatari/images/kcachegrind.png, src/gui-
	osx/English.lproj/AideHatari/images/keyboard.png, src/gui-
	osx/English.lproj/AideHatari/images/main.png, src/gui-
	osx/English.lproj/AideHatari/images/memory.png, src/gui-
	osx/English.lproj/AideHatari/images/monitor.png, src/gui-
	osx/English.lproj/AideHatari/images/newfloppy.png, src/gui-
	osx/English.lproj/AideHatari/images/screen.png, src/gui-
	osx/English.lproj/AideHatari/images/sound.png, src/gui-
	osx/English.lproj/AideHatari/images/system.png, src/gui-
	osx/English.lproj/AideHatari/images/tos.png, src/gui-
	osx/English.lproj/AideHatari/manual.html, src/gui-
	osx/English.lproj/SDLMain.nib/designable.nib, src/gui-
	osx/English.lproj/SDLMain.nib/keyedobjects.nib, src/gui-
	osx/English.lproj/SDLMain.xib, src/gui-
	osx/French.lproj/AideHatari/.DS_Store, src/gui-
	osx/French.lproj/AideHatari/compatibility.html, src/gui-
	osx/French.lproj/AideHatari/images/callgraph.png, src/gui-
	osx/French.lproj/AideHatari/images/callgraph.svg, src/gui-
	osx/French.lproj/AideHatari/images/devices.png, src/gui-
	osx/French.lproj/AideHatari/images/fileselector.png, src/gui-
	osx/French.lproj/AideHatari/images/floppydisks.png, src/gui-
	osx/French.lproj/AideHatari/images/harddisks.png, src/gui-
	osx/French.lproj/AideHatari/images/joystick.png, src/gui-
	osx/French.lproj/AideHatari/images/kcachegrind.png, src/gui-
	osx/French.lproj/AideHatari/images/keyboard.png, src/gui-
	osx/French.lproj/AideHatari/images/main.png, src/gui-
	osx/French.lproj/AideHatari/images/memory.png, src/gui-
	osx/French.lproj/AideHatari/images/monitor.png, src/gui-
	osx/French.lproj/AideHatari/images/newfloppy.png, src/gui-
	osx/French.lproj/AideHatari/images/screen.png, src/gui-
	osx/French.lproj/AideHatari/images/sound.png, src/gui-
	osx/French.lproj/AideHatari/images/system.png, src/gui-
	osx/French.lproj/AideHatari/images/tos.png, src/gui-
	osx/French.lproj/AideHatari/manual.html, src/gui-
	osx/French.lproj/InfoPlist.strings, src/gui-
	osx/French.lproj/Localizable.strings, src/gui-
	osx/French.lproj/SDLMain.nib/designable.nib, src/gui-
	osx/French.lproj/SDLMain.nib/keyedobjects.nib, src/gui-
	osx/French.lproj/SDLMain.xib, src/gui-osx/Hatari Help
	Folder/.DS_Store, src/gui-osx/Hatari Help Folder/clavier-
	exemple.txt, src/gui-osx/Hatari Help Folder/compatibility.html, src
	/gui-osx/Hatari Help Folder/images/devices.png, src/gui-osx/Hatari
	Help Folder/images/fileselector.png, src/gui-osx/Hatari Help
	Folder/images/floppydisks.png, src/gui-osx/Hatari Help
	Folder/images/harddisks.png, src/gui-osx/Hatari Help
	Folder/images/joystick.png, src/gui-osx/Hatari Help
	Folder/images/keyboard.png, src/gui-osx/Hatari Help
	Folder/images/main.png, src/gui-osx/Hatari Help
	Folder/images/memory.png, src/gui-osx/Hatari Help
	Folder/images/monitor.png, src/gui-osx/Hatari Help
	Folder/images/newfloppy.png, src/gui-osx/Hatari Help
	Folder/images/screen.png, src/gui-osx/Hatari Help
	Folder/images/sound.png, src/gui-osx/Hatari Help
	Folder/images/system.png, src/gui-osx/Hatari Help
	Folder/images/tos.png, src/gui-osx/Hatari Help Folder/manual.html,
	src/gui-osx/Info-Hatari.plist, src/gui-osx/PrefsController.m, src
	/gui-osx/SDLMain.h, src/gui-osx/SDLMain.m, src/gui-osx/disk.icns:
	Update OSX version with latest changes from Jerome Vernet
	[f3c14938bfc6]

	* src/mfp.c:
	MFP's int 0 was not taken into account, which broke printer's output
	[6a1a8966dba0]

	* src/mfp.c:
	Remove old debug printf's
	[48501858737f]

2013-06-18  Nicolas Pomarede

	* doc/compatibility.html, doc/release-notes.txt:
	Add 'Spidertronic' to the fixed games
	[2d1291155ba7]

	* doc/release-notes.txt:
	Update fixed game
	[c2e9be647df9]

2013-06-17  Nicolas Pomarede

	* doc/authors.txt:
	Update contributors' list
	[9253dbabe414]

2013-06-16  Eero Tamminen

	* tools/debugger/hatari_profile.py:
	rename "Calls" heading

	The first column is really about how many times given symbol is
	visited (e.g. by loop that starts from first instruction in a
	routine), it's not about subroutine calls, which can be confusing.

	Hopefully renaming it to "Visits/calls" reminds about this.
	[a261d955c2cd]

	* doc/manual.html:
	usage example on exception debugging + text improvements
	[6edd77f3857b]

	* doc/manual.html, doc/release-notes.txt, src/debug/debugcpu.c,
	src/debug/debugdsp.c, src/debug/debugui.c, src/debug/history.c,
	src/debug/history.h:
	user can specify whether CPU or DSP history is tracked

	On Falcon DSP runs much more instructions than CPU, so history can
	get totally swamped with DSP activity although typically it's CPU
	activity user's interested about.
	[ee9e5e296b63]

2013-06-16  Nicolas Pomarede

	* src/fdc.c:
	Fine tune prepare phase for FDC's type I commands This was measured
	on a 520 STF by doing a 'restore' + 'seek 0'
	[168537a625ed]

2013-06-15  Eero Tamminen

	* tools/debugger/hatari_profile.py:
	profiler postprocessor: fix div by zero when call count = 0
	[01487650e282]

	* doc/release-notes.txt:
	better MIDI error description
	[b4b83168c624]

	* doc/emutos.txt:
	update emutos panic debugging notes
	[19183ab522d6]

2013-06-14  Nicolas Pomarede

	* doc/release-notes.txt:
	Update notes about drives' led color
	[af5517558d48]

	* src/fdc.c, src/gemdos.c, src/hdc.c, src/includes/statusbar.h,
	src/psg.c, src/statusbar.c:
	Use a brighter green for the drive led when the FDC is executing a
	command
	[40b5822ecb5d]

	* src/fdc.c, src/gemdos.c, src/hdc.c, src/includes/statusbar.h,
	src/psg.c, src/statusbar.c:
	Use a brighter green for the drive led when the FDC is executing a
	command
	[cad8414ec370]

2013-06-13  Nicolas Pomarede

	* src/acia.c:
	Remove possible gcc warning about uninitialized variable
	[3d67ed3da52f]

	* src/includes/cfgopts.h, src/includes/configuration.h,
	src/includes/joy.h, src/includes/m68000.h:
	Remove extra ',' at the end of the enum definition (silence compiler
	warnings)
	[3e93cd424b75]

	* src/fdc.c:
	In the FDC's status register, correctly report the state of the
	index pulse signal (fix FLRPMM.PRG by P. Putnik and reports 300 RPM
	for the drive speed)
	[a6a58812be57]

2013-06-12  Nicolas Pomarede

	* src/acia.c:
	ACIA's RTS could be 0 after a master reset, instead of 1 (this is
	harmless, as RTS is not connected on ST anyway)
	[13fc5b1410fc]

	* src/acia.c, src/ikbd.c:
	When the IKBD reset on cold start, don't send bytes until the ACIA's
	serial line is initialized This should fixes problem with EmuTos <
	0.91 where a reset was sometimes needed to move the mouse
	[4e3319ec8aa2]

2013-06-10  Thomas Huth

	* src/dmaSnd.c, src/includes/dmaSnd.h, src/main.c:
	Fixed crash that occured when compiling with ENABLE_SMALL_MEM
	defined. DmaSnd_Init() called DmaSnd_Reset() which in turn accessed
	IoMem before it has been initialized. Since DmaSnd_Reset() is called
	during Reset_ST() anyways, the problem could easily be solved by
	removing DmaSnd_Init() completely.
	[669b0aa4c072]

2013-06-09  Nicolas Pomarede

	* src/acia.c:
	Default IKBD's ACIA to 9600 baud after a reset On real hardware, it
	seems tx/rx are working after a reset, but the ACIA's reference doc
	is not precise on this default behaviour. Some EmuTos versions
	tested on a real ST need this to work under Hatari
	[47e45c9937d3]

	* src/fdc.c:
	typo
	[1fcc83575127]

2013-06-09  Eero Tamminen

	* doc/release-notes.txt, src/options.c:
	Giving empty string as GEMDOS HD dir disables GEMDOS HD emulation
	[127879ca3b0b]

2013-06-09  Thomas Huth

	* src/bios.c, src/falcon/videl.c:
	Silenced compiler warnings that occured when ENABLE_TRACING was not
	defined
	[3262b3f3501a]

	* src/falcon/dsp.c:
	Silenced compiler warnings that occured when ENABLE_DSP_EMU was not
	defined
	[56b84ca73536]

2013-06-03  Eero Tamminen

	* src/debug/debugui.c:
	fix FD leak in debugger script parsing
	[a15b283f83fe]

	* doc/release-notes.txt:
	update release notes
	[28053da8a50c]

	* src/gemdos.c:
	fix args in Mshrink trace message

	- there's reserved zero word before args in C-bindings
	- optimize couple of other memory related trace messages slightly
	[6e11115a6199]

2013-06-02  Eero Tamminen

	* tools/debugger/hatari_profile.py:
	profile post-processor: error -> warning

	this case (caller net being boundable to any symbol) can be valid in
	the very beginning of a program run, not necessarily an error
	[0665979151a5]

2013-06-01  Eero Tamminen

	* src/debug/profilecpu.c:
	fix profiler PC access corner case

	On some rare cases (e.g. Hatari cartridge linea_init jump address)
	PC addresses have extra bits that are masked out when emulation uses
	them. Profiler needs to do same instead of complaining & asserting.
	[693fa4a2a49c]

	* src/gemdos.c:
	show args for rest of non-mint gemdos calls when tracing

	All (3) of these were memory allocation related functions, so now
	it's possible to track memory allocated from TOS.
	[42dfaec46d3f]

	* doc/release-notes.txt:
	update release notes
	[9649f256a4d0]

	* doc/manual.html:
	document "profile stack" subcommand and ":noinit" bt option
	[ac186ce8e3fe]

	* src/debug/breakcond.c, src/debug/debugInfo.c,
	src/debug/debug_priv.h, src/debug/debugui.c, src/debug/debugui.h:
	add "NextPC" variable and bt option that doesn't re-initialize
	debugging on hit

	These are needed for getting useful information from "profile stack"
	command:
	--- outside Hatari --- $ cat > profile-stack.ini << EOF profile stack
	b pc="NextPC" :once :quiet :noinit :file profile-d0.ini EOF $ cat >
	profile-d0.ini << EOF e d0 EOF
	--- in Hatari debugger --- > profile on > symbols prg > b
	GemdosOpcode = 0x3f :quiet :noinit :file profile-stack.ini
	--------------------------

	(shows backtraces to all Fread() calls and their return values.)
	[c8cc6daa7dfc]

	* src/debug/profile.c, src/debug/profile_priv.h,
	src/debug/profilecpu.c, src/debug/profiledsp.c:
	add profile "stack" subcommand

	This is useful for getting backtraces during profiling.
	[916df38ea409]

	* src/change.c, src/midi.c:
	MIDI change triggers emu reset, MIDI IRQ disable if MIDI not enabled

	This will hopefully fix Cubase not working after enabling MIDI
	during run-time.
	[1d25e2cff695]

2013-05-29  Eero Tamminen

	* readme.txt:
	recommend CMake version with which we build Hatari version

	Frank reported that Hatari build doesn't succeed with CMake v2.6,
	but it works with v2.8.
	[98383366f85d]

	* doc/todo.txt:
	add todo note about FPU precision
	[fc0c02a96e62]

2013-05-26  Eero Tamminen

	* src/gemdos.c:
	fix fread return value compiler warning
	[5eb9c15f48a0]

	* tests/debugger/Makefile, tests/debugger/makefile:
	rename makefile
	[2bd1ad275505]

	* src/debug/evaluate.c:
	fix LLVM warning
	[4d5b87077f7f]

2013-05-25  Eero Tamminen

	* doc/manual.html:
	document profile call stack showing and update debugger usage
	examples

	(also use in usage examples section consistently 2 spaces between
	command and its arguments, this will hopefully make examples
	slightly more readable.)
	[19b6b37b01d3]

2013-05-24  Eero Tamminen

	* src/gemdos.c:
	fix matching of host names with multiple '.' within first 8 chars

	When host names are read to DTA, extra dots before last dot are
	converted to "invalid" characters ("@") in str.c. However, when
	matching converted names back to host names, '*' in match glob
	pattern expanded only to first dot.

	Now '*' expansion stops only at last dot.
	[8c5e22f3b42e]

	* src/str.c:
	fix Fsnext() 8+3 GEMDOS name clipping

	This str.c function didn't clip 9+2 file name to 8+2 like is done in
	gemdos.c for other GEMDOS file functions.
	[55cfaac16cc8]

2013-05-21  Eero Tamminen

	* doc/release-notes.txt, src/gemdos.c:
	fix Dfree() success return value
	[3559fb7fb060]

2013-06-09  Nicolas Pomarede

	* src/fdc.c:
	Comment debug printf
	[2ed15aaffcb3]

	* doc/compatibility.html, doc/release-notes.txt:
	Update notes with FDC's changes
	[bc70e24e8098]

	* src/fdc.c:
	Add correct delay for FDC's type I commands when "verify" bit is set
	Although ST/MSA disk images can't have "verify" errors, we still
	need to emulate the delay it would take to settle the head and check
	the next address field, else some FDC commands will run faster than
	expected. (fix STNICCC by Oxygene, which was running slower than on
	real HW)
	[23e482740944]

2013-06-08  Nicolas Pomarede

	* src/fdc.c:
	Improve logs for FDC type I commands
	[33587d9db223]

	* src/fdc.c:
	Add debug printf and alternatives timings in FDC
	[1f1342909218]

2013-05-26  Nicolas Pomarede

	* doc/compatibility.html, doc/release-notes.txt:
	updates notes for mouse issues in Spectrum 512 and The Sentinel
	[9f28de798d0a]

	* src/ikbd.c:
	When mouse is in absolute mode in the IKBD, correctly apply scaling
	factor to deltaX/Y (fix slow mouse in the game 'The Sentinel' and in
	the painting program 'Spectrum 512')
	[a7b1c237cab9]

2013-05-24  Nicolas Pomarede

	* src/fdc.c:
	After reading/writing a sector, we must also transfer 2 CRC bytes
	for better timings
	[72901f621820]

	* src/fdc.c:
	FDC's internal timer was not correct, resulting in slower timings
	DMA transfers were accumulating some extra cycles, taking more than
	the expected 4096 cycles for 16 bytes (~141000 cycles to read a
	sector, instead of 131072)
	[98c3962a4793]

2013-05-21  Nicolas Pomarede

	* src/fdc.c:
	For Read Address and Read Track, correctly returns if no disk is
	inserted
	[a1106f3f4f4c]

	* src/fdc.c:
	For the FDC type III Read Address command, use
	FDC_NextSectorID_NbBytes() to get the correct delay Depending on the
	current position in the track, this will compute the number of bytes
	to skip to reach the next address field while the disk is spinning.
	[4ae931cfe766]

2013-05-20  Nicolas Pomarede

	* src/fdc.c:
	For the FDC type III Read Track command, add a delay to wait for the
	next index pulse
	[a59c49f72f27]

	* src/fdc.c:
	For the WD1772, head settling time is 15 ms, not 30 ms
	[35d01b6e69bb]

	* src/fdc.c:
	Add more traces for FDC's type II/III commands
	[c5f634e0e04b]

	* doc/compatibility.html, doc/release-notes.txt:
	Add notes for Microprose Golf
	[cfbb3c045ac5]

	* src/fdc.c:
	Don't do an extra test after the last DMA transfer with read/write
	sector When the last 16 bytes block was transferred, we didn't
	immediatly check that it was the last one, which added another 4096
	cycles loop before completing the read/write sector command ; the
	command was 3% slower than expected which could mess with some
	programs' timings. (fix crash during Microprose Golf's intro)
	[79be95d1aed8]

	* src/fdc.c:
	In the FDC, take the disk's spin into acccount to compute the
	angular position of a byte in a track Depending on the current
	position above the track and the next position we want to reach, we
	need to add a corresponding delay to skip the bytes inbetwen (for
	example, adding an extra spin if the next sector is not directly
	located after the current sector)
	[bdcbb40ca86f]

2013-05-19  Nicolas Pomarede

	* src/fdc.c:
	For FDC Read / Write Sector commands, add a delay to reach the data
	after the ID field was read With standard formatting, there're 41
	bytes to skip to get the right timings (else we were too fast) (fix
	garbage pixels after the countdown in the Decade Demo Intro)
	[2344225d674f]

	* src/fdc.c:
	Use some constants for the FDC's GAPs used in a track's layout
	[5a0f32b723d9]

2013-05-18  Eero Tamminen

	* tools/debugger/gst2ascii.c:
	Windows doesn't support endian.h either

	(left-over from BIG_ENDIAN tests)
	[fb8cb07bb6d4]

2013-05-16  Nicolas Pomarede

	* doc/compatibility.html:
	Fuzion CD 161's intro doesn't work on a real STF
	[04496807357c]

2013-05-16  Eero Tamminen

	* tools/debugger/gst2ascii.c:
	Windows doesn't support POSIX headers, revert part of previous
	commit

	Add dummy defines for MiNTlib builds instead (all machines on which
	they run, should be big-endian).
	[43cdd6471ec8]

2013-05-16  Nicolas Pomarede

	* src/includes/mfp.h, src/mfp.c:
	Remove old unused test code to improve MFP's interrupt processing
	[032e36117b46]

2013-05-15  Eero Tamminen

	* doc/release-notes.txt, src/debug/debugui.h, src/falcon/dsp_cpu.c:
	Also undefined/illegal DSP instructions & stack under/overflow
	invoke debugger with -D
	[9b76d896bef4]

2013-05-13  Eero Tamminen

	* doc/release-notes.txt, src/gemdos.c:
	if host returns invalid datetime, use default one instead of
	returning GEMDOS error

	- This is Windows specific problem. Its localtime() doesn't support
	all timestamps returned by stat() calls. Error return caused TOS
	to ignore files with such dates, and all the following files (e.g.
	Fsnext()).
	- 1980-01-01 is used as the default date, it's earliest one supported
	by TOS.
	[1a53619931fb]

2013-05-11  Eero Tamminen

	* doc/manual.html:
	improve profiler doc a bit
	[2a1d59da0849]

2013-05-10  Eero Tamminen

	* src/debug/profiledsp.c:
	profiler: one of the DSP JSSET instruction opcodes was incorrect

	Incorrect opcode matched JSET i.e. several things that were marked
	as subroutine calls were actually (conditional) branches.
	[d5ce6fd49b41]

2013-05-08  Nicolas Pomarede

	* src/mfp.c:
	More consistent naming for MFP's vector number
	[51b0f42111bd]

	* src/cpu/newcpu.c, src/includes/video.h, src/uae-cpu/newcpu.c,
	src/video.c:
	Remove old unused code to handle simultaneous HBL exceptions
	[75c38879ba4f]

2013-05-07  Eero Tamminen

	* src/debug/breakcond.c:
	fix: newline missing from breakpoint trace output
	[73176379c2f7]

2013-05-06  Eero Tamminen

	* doc/emutos.txt:
	emutos compat update
	[574114cab1ae]

2013-05-05  Eero Tamminen

	* doc/todo.txt:
	add todo for GST parsing

	(which I may not have time to fix before release)
	[76e50d3a9367]

	* doc/manual.html:
	manual updates

	- update version to 1.7 as manual mentions lot of things not in
	1.6.2 yet
	- add another note for gst2ascii
	- fix HTML validator issues
	[a60c12ea30d3]

	* doc/images/callgraph.png, doc/images/callgraph.svg,
	doc/images/kcachegrind.png, doc/manual.html,
	tools/debugger/hatari_profile.py:
	document callgrind generation + notes on profiler accuracy

	Also:
	- add some example images
	- remove some duplicate info from post-processor usage output
	[bee121a75114]

	* tools/debugger/hatari_profile.py:
	indicate costs with potentially missing symbols, reduce name lenght

	- if inclusive cost is < in-between-symbols cost, there may be
	symbols missing
	- don't give so much space for symbol names. DRI/GST limits name
	len to 22, use something similar
	[4904c232755b]

2013-05-04  Eero Tamminen

	* src/debug/profile.c, src/debug/profilecpu.c:
	fix corner case issue mentioned in previous commit
	[14b4574e222b]

	* tools/debugger/hatari_profile.py:
	fix couple of post-processing corner cases + better messages

	- owncounts can be zero although totalcounts aren't
	- it's easy to get error if symbols don't from some reason match
	(e.g. because you re-compiled binary without re-generating
	symbols), error message now comments about this.
	[12ce06b00b0e]

	* src/debug/profilecpu.c:
	improve debugging of wierd profile PC values

	For some reason profiling (BadMood) CPU & DSP while creating and
	removing breakpoints causes in one case IO address $ffffff accesses.
	They don't happen without profiling&breakpoints. Valgrind, mudflap
	& Duma don't find any problems, so this is still a mystery. :-/
	[fff12307d134]

	* src/debug/profile.c:
	fix CPU profiling corner case assert

	Case was with first (or second?) profiled instruction being tracked
	function entry point, which therefore gets undefined return address.
	Cost finalization at profile end asserts on unrecognized addresses.
	[96d1097307f7]

	* tools/debugger/gst2ascii.c:
	update also gst2ascii message
	[b99a15708773]

	* tools/debugger/gst2ascii.c:
	-o option ignores also useless GCC v2 symbols
	[62cfaa95ec53]

	* tools/debugger/gst2ascii.c:
	use standard C headers & types instead of SDL ones

	This way gst2ascii can be easily built also for Atari with MiNTlib.
	[b2e5f43589d1]

2013-05-03  Eero Tamminen

	* doc/compatibility.html:
	update zero-5 note
	[a28b0fef6beb]

2013-05-03  Nicolas Pomarede

	* doc/release-notes.txt:
	Update releases note for CPU's IACK
	[23d6a98e44fc]

	* src/cpu/hatari-glue.c, src/cpu/newcpu.c, src/includes/m68000.h, src
	/uae-cpu/hatari-glue.c, src/uae-cpu/newcpu.c, src/video.c:
	Handle IACK for simultaneous HBL/VBL exceptions This removes some
	previous uncomplete/wrong support for this and correctly handles
	Super Monaco GP, Super Hang On, Monster Business, European Demo's
	Intro, BBC Menu 52.
	[bc11f8639f03]

2013-04-30  Nicolas Pomarede

	* src/cpu/newcpu.c, src/includes/m68000.h, src/m68000.c, src/mfp.c,
	src/uae-cpu/newcpu.c:
	Use the more generic variable CPU_IACK instead of MFP_IACK
	[c1ed5f55f85a]

2013-04-28  Nicolas Pomarede

	* src/video.c:
	Change debug printf
	[2fdf9586b877]

2013-04-26  Nicolas Pomarede

	* doc/compatibility.html:
	Update notes for 'Musical Wonders 1990' demo
	[6fd24bc14db5]

	* src/video.c:
	Cancel changes #3902, 'Musical Wonders 1990' doesn't work correctly
	on a real STF
	[a95880358570]

2013-04-24  Nicolas Pomarede

	* src/acia.c, src/cycInt.c, src/includes/acia.h,
	src/includes/cycInt.h:
	Don't use an additional 4 cycle timer in the ACIA, this is now
	automatically handled in mfp.c
	[4c26e8526d44]

	* src/cpu/newcpu.c, src/uae-cpu/newcpu.c:
	Remove old/unused interrupt code
	[16cc224edc98]

2013-04-23  Nicolas Pomarede

	* src/uae-cpu/newcpu.c:
	RTE is $4e73, not $4e72
	[586d90231775]

2013-04-22  Eero Tamminen

	* tools/debugger/hatari_profile.py:
	10 digits for larger counts
	[e182fef31c33]

2013-04-21  Nicolas Pomarede

	* doc/release-notes.txt:
	Update notes with latest MFP changes
	[fd59ad8d46b7]

	* src/cpu/newcpu.c, src/includes/mfp.h, src/mfp.c, src/uae-
	cpu/newcpu.c:
	In the MFP, handle multiple interrupts in chronological order during
	a single CPU instruction
	[e882662b6c90]

2013-04-22  Eero Tamminen

	* tools/debugger/hatari_profile.py:
	more info on -i & -p profile post-processor options

	-i: show also total time for cycles and per call instructions & time
	-p: show both inclusive & exclusive costs, and both percentage &
	counts for them (only inclusive for calls, as for those
	exclusive values are always same as default counts)
	[3249112c7143]

2013-04-19  Eero Tamminen

	* src/debug/symbols.c, tools/debugger/gst2ascii.c:
	ignore global equated define types on GST symbol import
	[4ece37d8e8a4]

	* src/debug/symbols.c:
	it's enough to do fclose once (earlier)
	[2ee6667b05fc]

	* tools/debugger/CMakeLists.txt:
	build & install gst2acii
	[1f95b924d24c]

	* doc/release-notes.txt, tools/debugger/gst2ascii.1,
	tools/debugger/gst2ascii.c, tools/debugger/hatari_profile.1:
	add gst2ascii tool

	This can output DRI/GST format symbol table from Atari program in
	ASCII format which is understood by the profile data post-processor
	(and Hatari debugger 'symbols' command in case you want to modify
	the symbol information before giving it to the debugger).
	[8efb89d152f4]

2013-04-17  Eero Tamminen

	* src/xbios.c:
	trace support for vsetscreen

	i.e. same as setscreen, just with extra arg
	[9d3d518db356]

2013-04-16  Eero Tamminen

	* src/debug/symbols.c:
	improve messages + remove error msg about GCC _etext symbol (TEXT
	symbol which is just outside of TEXT section)
	[ef5a9eb1248e]

	* src/debug/symbols.c:
	ignore also symbols with normal object file names
	[9fcc967c3568]

	* src/debug/symbols.c:
	fix executable type messages on symbol loading
	[8c9fc52bed0c]

	* src/debug/symbols.c:
	ignore object file names with paths
	[8bf0cc6df06f]

	* src/debug/symbols.c:
	fix GST long name detection
	[d688f5ff0eae]

	* src/debug/symbols.c:
	ignore .L* local symbols in DRI/GST table as useless

	GCC can put tens of thousands of them into symbol table which can
	result in thousands of name conflicts..
	[6c5c2fe89d00]

2013-04-16  Thomas Huth

	* src/file.c:
	Fixed problem with latest zlib version (gzeof is only set when using
	gzread)
	[f6b563b9b44f]

2013-04-16  Eero Tamminen

	* tools/CMakeLists.txt, tools/debugger/CMakeLists.txt:
	CMake stuff to install profiler post-processor
	[b7fd854a9a04]

	* tools/debugger/hatari_profile.1:
	add basic manual page for profiler post-processor
	[a62022268410]

2013-04-15  Eero Tamminen

	* tools/ahcc-symbols-convert.sh, tools/debugger/ahcc-symbols-
	convert.sh:
	move also ahcc script
	[87ca47dfe841]

	* tools/debugger/devpac3-symbols-convert.sh, tools/debugger/dsp-lod-
	symbols-convert.sh, tools/debugger/hatari_profile.py, tools/debugger
	/nm-symbols-cleanup.sh, tools/devpac3-symbols-convert.sh, tools/dsp-
	lod-symbols-convert.sh, tools/hatari-profile.py, tools/nm-symbols-
	cleanup.sh:
	move debugger scripts to their own directory under tools/

	also rename hatari-profile.py to hatari_profile.py, pylink complains
	about that (as files with dashes in them cannot be imported).
	[60c50326f40e]

	* tools/hatari-profile.py:
	fix pylint warning for profile post-processor
	[694f5518e8cf]

	* doc/manual.html:
	manual: update profiler section + other minor updates
	[90d0aee12a64]

	* src/debug/profilecpu.c, src/debug/profiledsp.c:
	right align percentages in profile list outputs
	[1041944ccd9b]

	* doc/manual.html:
	update debugger section

	subsections:
	- symbols
	- breakpoints
	- tracing

	(profiling still needs to be updated.)
	[8697b194f679]

2013-04-14  Nicolas Pomarede

	* src/mfp.c:
	Update debug traces
	[3bdaa5bc0ce8]

2013-04-13  Nicolas Pomarede

	* doc/release-notes.txt:
	Add 'Atomix' to the list of fixed games
	[85fd918bbfb3]

2013-04-13  Thomas Huth

	* src/debug/profiledsp.c, src/falcon/dsp_disasm.c:
	Silenced compiler warnings about bad format strings for 64-bit
	values
	[ac1b3f50e777]

	* src/cpu/falcon_cycle030.h, src/debug/debugui.c, src/debug/profile.c,
	src/debug/symbols.c, src/falcon/dsp_core.c, src/falcon/dsp_core.h,
	src/falcon/dsp_cpu.c, src/falcon/microphone.c, src/falcon/nvram.c,
	src/gemdos.c, src/gui-sdl/dlgFileSelect.c, src/gui-sdl/dlgSystem.c,
	src/gui-sdl/sdlgui.c, src/includes/m68000.h, src/includes/unzip.h,
	src/uae-cpu/newcpu.c:
	Fixed more typos (discovered with the codespell utility)
	[fe1b43592c8f]

2013-04-12  Eero Tamminen

	* doc/release-notes.txt, src/blitter.c, src/debug/debugInfo.c,
	src/includes/blitter.h:
	add "blitter" subcommand to debugger "info" command
	[cd966a53283e]

	* doc/release-notes.txt, src/debug/breakcond.c:
	fix: tracking breakpoints didn't work with other conditions

	Earlier tracking breakpoint comparison value was updated only if
	whole breakpoint matched. This meant that they didn't work
	correctly (or at all) when coupled with other breakpoints.

	Now tracking breakpoint values are updated whenever the tracked
	value changes which means that they will now work also when coupled
	with other breakpoint conditions.

	HOWEVER: because breakpoint condition evaluation is optimized with
	short-circuiting (similarly to conditions in C with '&&', skipping
	rest of checks if something doesn't match), tracking condition needs
	to be given before other conditions and you can still have only one
	such condition per breakpoint.
	[40a67f5fa58b]

	* tests/debugger/makefile, tests/debugger/test-dummies.c:
	update debugger test dummies
	[bb6fcbd34d22]

	* doc/todo.txt:
	add note about VIDEL reg handling to todo.txt
	[c9d34bcfb572]

2013-04-12  Nicolas Pomarede

	* doc/compatibility.html, doc/release-notes.txt:
	Update notes
	[e80c0062adb2]

	* src/mfp.c:
	Typo
	[df87ba37393c]

2013-04-11  Nicolas Pomarede

	* src/cpu/newcpu.c, src/includes/mfp.h, src/mfp.c, src/uae-
	cpu/newcpu.c:
	Handle MFP's changes during an ongoing exception before the IACK
	(fix Anomaly Demo Menu by Oxygene and sample intro in the game The
	Final Conflict)
	[87276b828e07]

2013-04-10  Eero Tamminen

	* tools/hatari-profile.py:
	silence post-processor warning
	[0227a8a7dd35]

	* tools/hatari-profile.py:
	improve profiler data post-processor callgraph options

	These make the graph options behave in more expected way:
	* nodes connected to ones specified for --ignore option are relinked
	* emphasis limit isn't affected by count option
	* --only-subroutines option removes all nodes that aren't called as
	subroutines, regardless of their cost
	* improve --compact option documentation
	[563f336ae028]

	* src/debug/profile.c, src/debug/profile_priv.h,
	src/debug/profilecpu.c, src/debug/profiledsp.c:
	Fix caller address for symbol called right after subroutine call

	 foo: jsr -> <instructions> bar: <- rts

	Logically this should be indicated as "bar" symbol following the
	preceeding instruction, not "foo"s return instruction calling it,
	like was the case before.
	[6fe99fd4aeb9]

	* tools/hatari-profile.py:
	profile post-processor: handle PC_UNDEFINED, add --only-subroutines
	option

	* Use caller->callee call type to add some type identification for
	the called symbol/function. Use that info to:

	 - Handle PC_UNDEFINED introduced by previous patch, and mark such
	node(s) in callgraphs separately, as it implies it being the first
	symbol called during profiling.

	 - Add preliminary --only-subroutines option that leaves to
	callgraph only symbols that either are called as subroutines, or
	which costs exceed the given limit.
	[0ff09731c197]

	* src/debug/profile.c, src/debug/profile_priv.h,
	src/debug/profilecpu.c, src/debug/profiledsp.c:
	fix several corner case issues in caller info collecting

	* Use impossible PC value as default (PC_UNDEFINED), so that
	uninitialized PC values can be detected (previously they were
	initialized to zero).

	These caused warnings output by "profile callers" command and errors
	with profile post-processing script, for some very specific
	profiles:

	* Caller information was collected for current PC instruction,
	profiling data for previous PC instruction, this caused small
	mismatch in the data.
	  -> Change caller info also to be about the previous instruction.

	* Function's own costs were wrong (subroutine call instruction
	cost isn't assigned for the caller).
	  -> Total statistics used for calculating caller totals are now
	updated after caller info is processed, not before.

	* DSP code didn't check for new subroutine call if another call
	returned on that same address (unlike CPU side did).
	  -> This is now fixed.
	[8ef24f412a22]

2013-04-09  Eero Tamminen

	* src/debug/profiledsp.c:
	Fix DSP caller info call type for conditional subroutine calls

	This uses heuristic that if previous instruction was conditional
	subroutine call, condition failed and there was no subroutine call,
	just normal advancement to next PC address. It should be safe
	assumption for most of the cases.
	[82f8df0b1b54]

2013-04-07  Eero Tamminen

	* src/debug/profile.c, src/debug/profilecpu.c, src/debug/profiledsp.c:
	use C99 inttypes.h macros to fix printfs with Uint64 values
	[cfad9b1735c5]

	* src/debug/symbols.c, src/gemdos.c:
	get rid of "fread() return value ignored" warnings
	[e5b14c7d3f78]

	* tools/devpac3-symbols-convert.sh:
	fix: devpac listing symbol lines have different format for GST
	binaries
	[525e447db18a]

	* doc/emutos.txt:
	add new demo to emutos.txt
	[60b272f42895]

2013-04-06  Thomas Huth

	* src/gui-sdl/CMakeLists.txt:
	Use -Wno-write-strings for GCC only
	[979a828622f1]

	* src/debug/68kDisass.c, src/falcon/videl.c, src/hdc.c, src/xbios.c:
	Variables must be defined at the beginning of a block
	[cccc482cfce2]

2013-04-05  Nicolas Pomarede

	* src/cpu/newcpu.c:
	Process interrupts and STOP instruction in the same way as in uae-
	cpu/newcpu.c
	[8a2f641ef512]

2013-04-04  Eero Tamminen

	* src/debug/symbols.c:
	one more sanity check for making sure program in RAM & file match
	[95dd03950e60]

2013-04-04  Nicolas Pomarede

	* src/uae-cpu/newcpu.c:
	With new mfp.c and delayed IRQ, update interrupt processing during a
	STOP (fix stop 2500 in Sowatt - Sync screen)
	[f75e9f752397]

	* src/mfp.c:
	Update debug traces
	[1b8ecf003999]

2013-04-04  Eero Tamminen

	* doc/release-notes.txt:
	update release notes
	[deaba12c1406]

	* src/debug/symbols.c, src/gemdos.c, src/includes/gemdos.h:
	add debugger "symbols" "prg" subcommand to load symbols from last
	program

	This requires also GEMDOS HD emulation to be patched, to store what
	it thinks to be the last started program.
	[cc818b771cdc]

	* src/debug/symbols.c:
	minor fixes to error cases in previous 2 commits
	[e4254bcc7c50]

	* src/debug/symbols.c:
	check and ignore symbols that go outside of their sections
	[1046fcbc917e]

	* src/debug/symbols.c:
	add support for reading DRI/GST symbols from programs
	[b88fa69544c4]

2013-04-03  Eero Tamminen

	* doc/release-notes.txt, src/debug/68kDisass.c,
	src/debug/profilecpu.c:
	Profiler top instruction count/cycles/misses lists show the related
	instructions
	[5ed803739011]

	* tools/hatari-profile.py:
	change -p option to use Hatari provided total costs instead of
	estimating them

	Unlike the new Hatari provided subroutine call costs, the estimated
	costs were just estimates, and could be completely wrong, that's why
	this is changed.

	The patch is messier than I would like, besause besides:
	- adding support for actually using the new Hatari information (that
	was parsed already by previous commit(s))
	- removing code for estimated cost propagation
	- removing kcachegrind call info for nodes that don't have (anymore)
	total costs
	- documenting the new -p option
	- updating comments

	it also does some other changes:
	- class method and member name changes:
	  - propagate -> subcost
	  - total -> subtotal
	  - data/value -> cost
	  - add "str" postfix to local variable names that are in other
	methods used for integers/tuples instead of strings
	- add "bold" attribute to callgraph nodes & arrows for things that
	are over the given limit
	- couple of minor, unrelated doc updates

	(they were too intermixed with the other changes.)
	[defe703dab23]

2013-04-02  Eero Tamminen

	* src/debug/profile.c:
	improved profiler warning messages
	[f28325deae84]

	* src/debug/profilecpu.c, src/debug/profiledsp.c:
	fix to profiler subroutine call return address handling

	return address can be address for another function/symbol, so return
	addresses and entering a symbol address need to be checked
	separately.

	(or at least return address should be checked first if one doesn't
	care about missing "next" type of "call" to an address.)
	[432641afa5ac]

	* src/debug/68kDisass.c:
	profile data overrides asm comments

	parsing the profile data can fail if disassembly has "random"
	comment strings in it, so comments should appear only when there's
	no profile data
	[9bda2cb44e4a]

2013-04-01  Nicolas Pomarede

	* doc/release-notes.txt:
	Update notes on joystick's axes detection bug
	[cf9058ad4689]

	* src/joy.c:
	Use the correct index, fix bad bug in the joystick's
	detection/mapping code Joystick certainly failed for a lot of people
	before because of that ...
	[bbf8825e680f]

	* src/dmaSnd.c:
	Typo in comment
	[df235ab97bce]

2013-03-27  Eero Tamminen

	* doc/release-notes.txt, src/gemdos.c:
	Fix: cut file and dir names to 8+3 chars like all TOS versions do
	[caa6d6c99cb4]

2013-03-26  Eero Tamminen

	* python-ui/TODO:
	update python ui TODOs
	[da6a4fbb78f6]

	* python-ui/dialogs.py:
	update python ui trace list
	[b27043d2b1e3]

2013-03-20  Eero Tamminen

	* src/debug/profile.c:
	profile call counts were off by one / function, more info on call
	stack contents
	[23071411337b]

	* src/debug/profile.c, src/debug/profile_priv.h,
	src/debug/profilecpu.c, src/debug/profiledsp.c:
	call cost tracking fixes and improvements

	- calculate costs also for functions that hadn't returned yet at
	the end of the profiling
	- RTE on JSR return address means same as RTS, it's return from
	interrupt that happened during instruction at return address
	- add special hack for EmuTOS AES task switcher (it messes profiler
	call tracking with its stack return address manipulation)
	- better variable name: runcosts -> totalcost
	- add more documentation / comments
	[833b8c7dbe51]

	* src/debug/symbols.c, src/debug/symbols.h:
	use Uint32 both in CPU & DSP symbol functions so that their
	signatures are same

	I.e. pointers to them can be passed as args to common functions.
	[84cdc03d5bbe]

2013-03-20  Nicolas Pomarede

	* doc/compatibility.html:
	Small changes to compat list
	- Devpac, not DevPac (too much time spent coding with, name must be
	preserved :) )
	- Hextracker requires Hatari 1.5 for proper STE DMA sound
	[dba71bf49266]

2013-03-19  Eero Tamminen

	* src/debug/profile.c, src/debug/profile_priv.h,
	src/debug/profilecpu.c, src/debug/profiledsp.c:
	speed up subroutine cost calculations & checks

	By moving some of the checks from generic code to CPU/DSP code, some
	heavier operations need to be done less frequently.

	With this, frameskip went with DSP emulation caller profiling below
	max value on my machine (Intel i3).
	[cf9741d79062]

	* src/debug/profiledsp.c:
	clearer to re-calculate all counters when one of them needs to be
	anyway

	(in this part of code this isn't relevant for performance.)
	[de98338e94f6]

	* src/debug/profile.c:
	minor fixes to profile output

	- when call type info is missing, no letters are output
	- address can be zero at least for DSP, so check call count instead
	[7246fc9d7051]

	* src/debug/profiledsp.c:
	add initial DSP call type identification support
	[af2283311280]

2013-03-18  Eero Tamminen

	* src/debug/profilecpu.c, src/debug/profiledsp.c:
	3 small fixes to previous commit

	bugs introduced in refactoring...
	[c336876e19a1]

	* src/debug/profile.c, src/debug/profile_priv.h,
	src/debug/profilecpu.c, src/debug/profiledsp.c, tools/hatari-
	profile.py:
	initial profiler support for getting full costs for subroutine calls

	includes:
	- common code for collecting, processing and outputting the data
	about the full costs
	- full CPU side support
	- related structure changes in DSP code
	- some extra refactoring to improve code CPU/DSP profiling code
	- post-processor support for parsing the new data and storing it
	internally

	missing:
	- DSP side code (opcode classification) needed for getting the full
	costs
	- post-processor actually using the new data
	- testing the new data correctness
	[eac31396971b]

2013-03-18  Thomas Huth

	* src/cart.c:
	Do not use cartridge with TOS 0.00
	[ca7febbe6b72]

2013-03-18  Eero Tamminen

	* doc/compatibility.html:
	add puet.net links for trackers
	[0d3d1effa4f9]

	* doc/compatibility.html:
	add Devpac 3 and Hextracker notes to compatibility list
	[d274a54ebb37]

2013-03-17  Eero Tamminen

	* tools/hatari-profile.py:
	show different call types with different arrows in callgraphs
	[8d8ea115e4cf]

	* src/debug/profile.c, src/debug/profile_priv.h,
	src/debug/profilecpu.c, src/debug/profiledsp.c, src/debug/symbols.c,
	src/debug/symbols.h:
	remove unnecessary unsigned usage in profiler

	Some of the unsigned usage in profiler was redundant and required
	few extra casts.

	(Usage of signed in loop counters may also allow some extra
	optimizations by compiler.)
	[7f24d5e6e7f9]

	* src/debug/profile.c, src/debug/profile_priv.h,
	src/debug/profilecpu.c, src/debug/profiledsp.c:
	fix OpcodeFamily use + small optimization

	LastOpcodeFamily variable is set only by 68000 instruction pairing
	code and that isn't called by WinUE 030 core. OpcodeFamily variable
	already contains last instruction's family when profiler is called,
	so that can be used instead.

	Doing the symbol index checks direcly in profiler CPU/DSP update
	function avoids running some extra code for most instructions (as
	symbols should match only to relatively few instructions).
	[89266f5f9a98]

2013-03-17  Nicolas Pomarede

	* src/dmaSnd.c, src/sound.c:
	Avoid overflow when mixing STE DMA sound and YM2149 in some cases
	(patch by David Savinkoff)
	[b701e19484ce]

2013-03-16  Nicolas Pomarede

	* doc/release-notes.txt:
	Change wording on IKBD's clock
	[d65baa8a7686]

2013-03-15  Eero Tamminen

	* src/debug/profilecpu.c:
	Use OpcodeFamily(Last) in evaluating last instruction for profile

	(Now that also WinUAE CPU core updates it)

	Additionally this moves DEBUG checks to be after profile information
	is updated, so that the added disassembly call will show up to date
	information.
	[df9c46d6eeba]

	* src/cpu/gencpu.c:
	set OpcodeFamily also for the WinUAE CPU core
	[8b344d863ff3]

	* doc/emutos.txt:
	ramses will never work with emutos
	[07185874b9cb]

	* doc/emutos.txt:
	compatibility updates for latest EmuTOS snapshot
	[7c8501b67e68]

	* doc/manual.html, doc/release-notes.txt, src/gemdos.c:
	implement Fforce() and open file handle closing on Pterm*()

	Saving current program basepage address to opened file handles,
	removing handles that have current program basepage when the program
	exits, and checking that Fforced handle basepage either matches
	current program or one of its parents should make Fforce() safe
	enough.

	If process crashes without GEMDOS emu noticing and removing
	Fforcing, the basebase check should catch that, so that stale forced
	handle can be removed.

	Process crash can still leak internal handles, but that problem is
	now *much* smaller than it was with previous code.

	Patch has also few <define> -> ARRAYSIZE(array) changes for
	consistency reasons.
	[02a9995a2e57]

	* src/debug/profilecpu.c:
	correct cycles values & Disasm FILE* pointer

	According to Nicolas, cycles are 8Mhz based, so for higher machines
	they need to be scaled to give correct values.
	[4ee9ea5ccf51]

2013-03-14  Eero Tamminen

	* src/debug/CMakeLists.txt, src/debug/profile.c, src/debug/profile.h,
	src/debug/profile_priv.h, src/debug/profilecpu.c,
	src/debug/profiledsp.c:
	split CPU and DSP profiling code from profile.c

	CPU and DSP profiling code has diverged and grown so much that it's
	better to split them to separate files. Except for splitup, there
	are no other changes.
	[19ec8bd1f280]

	* doc/release-notes.txt:
	update release notes
	[8a94c074fc01]

	* doc/manual.html:
	note additional GEMDOS emu limitations in manual
	[93fe01d77a47]

	* src/gemdos.c:
	give warnings on GEMDOS emu unimplemented features

	Unlike in real TOS:
	- Fforce() isn't implemented (code comment explains why)
	- Files opened by a program aren't implicitly closed on program
	termination (as emu doesn't know which of the currently open files
	belong to which of the resident programs)
	[1c285132d2ac]

	* src/gemdos.c:
	GEMDOS handle validation changes to help Fforce() implementation

	Validation changes also slightly reduced code duplication.

	Couple of other (trivial) changes in patch:
	- more uniform white-space use
	- use TOS handle ID also in "info gemdos" output
	[e729944325e8]

2013-03-14  Nicolas Pomarede

	* src/mfp.c:
	When writing to the MFP's registers, take the write cycles into
	acccount (properly fix Super Hang On)
	[cc247cb8acf4]

	* src/cycles.c, src/includes/cycles.h:
	Move Read/Write access cycles in separate functions and use them
	with CyclesGlobalClockCounter too (backport from another 2012/08 dev
	branch)
	[9f57cdf8c0eb]

2013-03-13  Eero Tamminen

	* src/gemdos.c:
	whitespace fixes/consistency
	[30de442830c5]

	* src/gemdos.c:
	show TOS file handle on trace, not internal handle index

	+ some white space & comment location fixes
	[b9b746ca34c9]

	* src/includes/stMemory.h, src/stMemory.c:
	make STMemory_Clear() static as it's used only in stMemory.c
	[9c1e22f519ab]

	* tools/hatari-profile.py:
	propagated call costs are estimated too, if they had multiple
	callees
	[3081026c95c5]

	* tools/hatari-profile.py:
	initial callgrind/kcachegrind file format output support
	[d32951f4a4bf]

2013-03-12  Eero Tamminen

	* tools/hatari-profile.py:
	separate title line for --no-limited removed nodes
	[354266654003]

	* src/gemdos.c:
	flush gemdos writes

	(Assumed fix to Douglas Devpac compilation issue.)

	Real TOS is unlikely to buffer the writes, so opening the same file
	without closing earlier handle to it, may result getting data from
	the new file handle that is out of date (not written out yet by host
	C-library).
	[ec09c54fd25b]

2013-03-10  Thomas Huth

	* src/falcon/crossbar.c, src/falcon/crossbar.h, src/ioMemTabFalcon.c:
	Fixed FF893A (attenuation) register - its size is word, not byte
	[81bb536bac58]

	* src/uae-cpu/newcpu.c:
	Silenced compiler warning
	[1848e6b45e19]

	* src/stMemory.c:
	Fixed indentation
	[e4636ea7a925]

	* src/xbios.c:
	Fixed trace format string for Devconnect
	[d0738105d84c]

2013-03-10  Eero Tamminen

	* tools/hatari-profile.py:
	add --mark and --no-limited callgraph options

	These are helpers for really large graphs
	* With --mark one can specify substrings for node names which should
	be separately highhlighted in graph. This is useful when you're
	interested in something that's below normal highlight limit
	* With --no-limited, all nodes below limit are removed from graph.
	This is something one could try if using "--compact --no-leafs
	--no-intermediate" still leaves too many nodes to the graph for it
	to be readable
	[19ac64897554]

	* src/debug/profile.c, tools/hatari-profile.py:
	add some emulator info to profile data and show it by post-processor
	[17ae7390c3ff]

	* src/avi_record.c, src/debug/natfeats.c, src/gui-sdl/dlgAbout.c,
	src/includes/main.h, src/includes/version.h, src/main.c,
	src/options.c:
	fix PROG_NAME and move it to new version.h header
	[2ffdc3786b34]

	* tools/hatari-profile.py:
	callgraph fine-tuning

	- show also node's own cost if main one is estimated from cost-
	propagation
	- use red arrow only when called function has significant costs, not
	if only the caller has
	[0cbc9ee49dad]

2013-03-08  Eero Tamminen

	* tools/hatari-profile.py:
	fix typo
	[f4dd4b7c6496]

	* tools/hatari-profile.py:
	callgraph improvements:

	* --no-leafs removes now also nodes that don't have any
	connections (if they are below limit)
	* fix: show nodes that don't have any connections (unless --no-leafs
	is used)
	* --no-leafs and --no-intermediate check that node isn't referring
	to itself, such references are ignored when considering whether
	node should be removed
	* added (textual) information about limits and filtering to the
	callgraph
	[7a1e67e0c51b]

	* tools/hatari-profile.py:
	callgraph improvements:

	- remove nodes with --no-leafs & --no-intermediate options only if
	their percentage of total is below given limit
	- update documentation accordingly + hopefully make it slightly
	clearer
	- improve warnings & callgraph title
	[f78954043af6]

	* tools/hatari-profile.py:
	fix: show arrows for all calls from given location

	Even if the same instruction jumped to different addresses, only one
	of them was indicated with an arrow in the callgraph.
	[ba140c684341]

	* tools/hatari-profile.py:
	report profile line numbers as starting from 1
	[78eef1b65609]

2013-03-07  Eero Tamminen

	* src/debug/profile.c, tools/hatari-profile.py:
	move field names & regexps from post-processor to profiler

	Profiler code outputs the profile data and therefore knows better
	what are the fields and how to parse them from disassembly, than the
	post-processor.

	Moving them and removing the setup dict from post-processor required
	"hard-coding" remaining two things in that dict to appropriate
	classes:
	- name for program code memory area (PROGRAM_TEXT)
	- cycles field position (after instructions) (it didn't anymore make
	sense to keep the subclass/dict)
	[a7df48cae159]

	* tools/hatari-profile.py:
	improve profile post-processor documentation
	[056a18107821]

	* doc/todo.txt, src/includes/vdi.h, src/vdi.c:
	Fix: text size setting in VDI mode

	This was broken for ST/STE 2-plane mode by previous VDI code change.

	Now screen height is always aligned to 16 pixels (largest possible
	TOS font height) and screen related TOS variables are set based on
	font height calculated by TOS itself, on not font height forced by
	Hatari.
	[101056dea3d4]

	* tests/tosboot/readme.txt:
	update tos boot tester readme for the last changes
	[df02965f158f]

2013-03-05  Eero Tamminen

	* src/debug/profile.c:
	avoid profiler warning on save
	[47e8851e3b1c]

	* tools/hatari-profile.py:
	override parsed symbols with given symbols with caller info

	Hatari debugger and profiler post-processor parse symbols a bit
	differently. Post-processor has better rules for this, so if
	resolved caller name differs from one parsed from the file output by
	profiler, override it with post-processor one.
	[b0945df83c63]

2013-03-10  Nicolas Pomarede

	* doc/compatibility.html, doc/release-notes.txt, src/mfp.c:
	Update releases notes and comments
	[6e9e7bea1c86]

	* src/includes/mfp.h, src/mfp.c, src/video.c:
	Take PendingCycles into account when calling
	MFP_TimerB_EventCount_Interrupt (fix bottom border removal in Decade
	Demo - Reset part, flickering rasters in High Fidelity Dreams by
	Aura)
	[19d7efbbb8af]

	* src/mfp.c:
	Better sub-instruction's cycles handling in MFP_UpdateIRQ and
	MFP_ProcessIRQ
	[712875d548e8]

	* src/cycles.c, src/includes/cycles.h:
	CyclesGlobalClockCounter should be Uint64, not Sint64
	[c7fc5aafdb3f]

	* src/acia.c, src/blitter.c, src/dmaSnd.c, src/falcon/crossbar.c,
	src/fdc.c, src/ide.c, src/includes/mfp.h, src/mfp.c, src/midi.c,
	src/psg.c, src/rs232.c:
	Simplify MFP_InputOnChannel() to pass only the interrupt number and
	the delayed cyles The caller should not have to know which
	bits/registers are involved in the MFP when an MFP interrupt happens
	[e68b379022ff]

	* src/mfp.c:
	Add MFP_ConvertIntNumber() to avoid duplicating some code
	[bb358470c19d]

	* src/includes/mfp.h, src/mfp.c:
	Rename the MFP's interrupt sources from MFP_EXCEPT_xxx to
	MFP_INT_xxx
	[7d9d7c2250a5]

	* src/cycles.c, src/includes/cycles.h, src/includes/m68000.h:
	Add a global counter to count cpu cycles and act as a master clock
	[7e8da8bb4cac]

2013-03-06  Nicolas Pomarede

	* src/includes/video.h, src/video.c:
	Change TIMERB_VIDEO_CYCLE_OFFSET to 24 cycles (due to 4 cycle delay
	in MFP's IRQ)
	[3e1eb42dc599]

2013-03-05  Nicolas Pomarede

	* doc/compatibility.html, doc/release-notes.txt:
	Update release notes and compatibility with recent MFP changes
	[f1f2ad74b259]

2013-03-04  Eero Tamminen

	* tools/hatari-profile.py:
	change --ignore-to, add --compact & --no-calls, fix --no-
	leafs/-intermediate options

	* --ignore-to option acts now when internal callgraph information is
	constructed and it will remove calls to given nodes completely i.e.
	it affects function call counts and therefore cost propagation.
	This is to avoid mis-assigning interrupt handler costs (declaring
	them is the purpose of this option)

	* --no-calls <IDs> option allows specifying which *types* of calls
	are ignored. By default calls of unknown and exception return
	type are ignored as call when constructing callgraph information.
	This is based on the new flags profiler adds to the caller
	information, and intended to give more readable graphs by default,
	with less need for use of --ignore-to option.

	* --compact option will show just one arrow between same nodes,
	regarless of from how many places in the caller the callee is
	called from.

	* --no-leafs/-intermediate options were broken. Then didn't
	relink parents & children of the removed node. This should be now
	fixed.
	[44833374b2d5]

2013-03-03  Eero Tamminen

	* src/debug/profile.h:
	commit also header change
	[8db7c9893126]

	* src/debug/debugcpu.c, src/debug/debugdsp.c, src/debug/profile.c:
	profiler: make "addresses" behave like other disassembly commands,
	add "save" command

	- "addresses" disassembly argument is now address/range from where
	one want disassembly with profiling data.
	- by default configured number of dissassembly lines is shown, but
	user can give also a range, like for other disassembly commands.
	- "addresses" command is continued by pressing enter, like other
	disassembly commands.
	- profile saving isn't anymore done with "addresses" command, but
	separate "save" profiler subcommand.
	[1097366f8f9a]

	* src/gemdos.c, src/xbios.c:
	add missing TOS4 gemdos/xbios OS call names

	TOS4 does these calls at bootup.
	[374c2e6d3fbc]

	* doc/compatibility.html:
	add link to no-fragments
	[fed2e34d9099]

2013-03-01  Eero Tamminen

	* doc/emutos.txt:
	update emutos compatibility for v0.9.0
	[af5937e37037]

	* tests/tosboot/bootauto.st.gz, tests/tosboot/bootdesk.st.gz,
	tests/tosboot/disk/GEMDOS.PRG, tests/tosboot/disk/MINIMAL.PRG:
	boot test programs rebuilt with newer AHCC version
	[d51feee676da]

	* tests/tosboot/disk/ahcc-gemdos, tests/tosboot/disk/ahcc-minimal:
	increase AHCC script EmuTOS boot wait for EmuTOS v0.9.0
	[25cb788f1574]

	* tests/tosboot/tos_tester.py:
	bootup tester updates, mainly for new EmuTOS v0.9.0 features

	- add support for testing ACSI and IDE disks, but allow that only
	for EmuTOS as others require driver to be installed on HD image
	- add VDI testing for Falcon, but allow that only for EmuTOS as TOS
	4.x doesn't work with VDI screens. Increase VDI screen sizes used
	for testing slightly (to catch TOS 4.x type issues)
	- change EmuTOS feature checks to be based on image sizes as EmuTOS
	reported TOS version may increase when it gets new features, but
	EmuTOS compatibility to Hatari features (like IDE) differs from
	real TOS with similar TOS version
	- fix pylint complains, mainly with docstring updates
	[8cc612171c94]

	* doc/manual.html:
	update GEMDOS emu information in manual
	[12284fdc3f43]

2013-02-27  Eero Tamminen

	* src/debug/profile.c:
	sort caller info by calls + better comparison function names
	[0fa9f7d4d7f0]

	* src/debug/profile.c:
	fix DSP caller info and improve profiler warnings
	[604e08566a94]

2013-02-26  Eero Tamminen

	* src/debug/profile.c:
	fix DSP calltype info and add legend to profile disassembly output
	[bd5489c8d4b6]

	* src/debug/profile.c, tools/hatari-profile.py:
	add caller type to profile callers information

	- heuristics based on instruction type at previous PC address to
	decide what type of "call" is being done
	- output of that information, with legend explaining it
	- some warning check changes
	- post-processor changes to accept this new information and profile
	file comments (accept=ignore)
	[49416318c2ac]

2013-02-25  Eero Tamminen

	* tools/hatari-profile.py:
	several new profiler post-processor options and output changes

	- addresses and cycles time is shown only if new -i/--info option
	is specified. This way output fits to normal sized console and
	can be pasted easier to mails etc
	- add --no-leafs/--no-intermediate callgraph options to reduce
	callgraph nodes (done before --ignore-* option parsing)
	- add --emph-limit option for callgraph node highlighting
	- lists show now both normal and propagated values when
	  -p option is used, IMHO this makes it more readable
	- some changes to how verbosity is handled internally
	[77745da7466a]

2013-02-24  Eero Tamminen

	* src/debug/symbols.c:
	fix typos in DSP symbol lookup (cpu -> dsp)
	[ae633ffb9c8a]

	* src/debug/profile.c:
	fix typos in DSP symbol lookup (cpu -> dsp)
	[2eaa46770138]

	* src/debug/profile.c:
	fix: used CPU sites member for DSP sites
	[cb3e2a1394a5]

2013-02-23  Eero Tamminen

	* tools/hatari-profile.py:
	add --propagate options and arrow coloring in callgraphs

	Propagate option propagates estimated function costs based on call
	counts, upwards in the graph to callers. Output is visible both in
	callgraph and lists.

	Callgraph arrows to nodes which have high costs are red, so that
	it's easier to track them within other arrows.
	[67ea321dfd0e]

2013-02-22  Eero Tamminen

	* tools/hatari-profile.py:
	add & use parent/child info from function instances

	This is easier to use than separate callinfo and easier to extend.
	[76689d8f3841]

2013-02-21  Eero Tamminen

	* tools/hatari-profile.py:
	use line number info in totals output

	(line info was added with FunctionStats change.)
	[2e4f329a417b]

	* tools/hatari-profile.py:
	use better variable name ProfileStats
	[a599211362c4]

	* tools/hatari-profile.py:
	separate function statistics to its own class

	FunctionStats class was added in preparation for further callgraph
	processing and accounts for most changes. Additionally:
	- changed profile items to be indexed by address, not symbol
	- used also addresses for graphviz dot node names
	- hopefully clarified the profile parsing code more
	[4f8ecca20133]

	* src/debug/debugInfo.c:
	revert previous commit, it's redundant

	All calls (from conditional breakpoints and debugui.c) to this
	function already init session.
	[0f071c45b319]

	* src/debug/debugInfo.c:
	lock file subcommand needs to init CPU & DSP sessions too

	similarly to breakpoint file actions, CPU & DSP debug sessions need
	to be initialized before file is parsed, for things to be correctly
	setup for the parsed commands.
	[0fef0b07c15a]

2013-02-20  Eero Tamminen

	* tools/hatari-profile.py:
	remove dead code
	[84ce27eafc73]

	* tools/hatari-profile.py:
	symbol parsing improvements

	- instead of checking whether address is within TEXT section and
	making it relative before looking it up from symbols (on each
	parsed address), have separate option for giving relative symbols
	and relocate them once after memory areas have been parsed
	- fix for handling symbols parsed from profile which needed to be
	renamed because those symbols were already used for another
	address
	- fix couple of bugs in symbol resolving when switching from one
	memory area to another (i.e. corner cases)
	- give real addresses for RAM/TOS/etc area symbol (used when no
	normal symbol matches), not just address for first executed
	instruction in them

	Symbol handling is hopefully now bug free.
	[17781c5ee1a5]

	* src/debug/profile.c:
	allow profiler output file overwrites
	[78fbae9e06eb]

	* tools/hatari-profile.py:
	refactor, remove ugliest InstructionStats object innards poking
	[7c7dd827c5d8]

	* tools/hatari-profile.py:
	fix for "no functions" case, improve verbosity
	[ffbd88e8a2d0]

2013-02-19  Eero Tamminen

	* tools/hatari-profile.py:
	fix area offset return value
	[5de796942e20]

	* tools/hatari-profile.py:
	fixes to symbol processing and make profile parsing sequential

	Symbol processing has following improvements:
	- function could have changed between disassembly discontinuations,
	get the correct function name in those cases
	- resolve first address in profile to preceeding symbol (as profile
	file doesn't necessarily have name of that)
	- when adding symbols from profile file, they may need to be made
	relative [1]
	- symbols with same name but different address are renamed so that
	information for them gets assigned right
	- symbols with illegal chars for Graphviz node names are renamed
	(for now, later I will use separate node IDs)

	[1] For now. Profile file parsing was changed to parse each profile
	data part separately before moving to next data types. This was
	made so that memory area information can be guaranteed to be
	available when symbol resolving needs to be done.

	 With that change, text-relative symbols could be "relocated"
	at start of profile parsing, instead of needing to do that for
	all the addresses parsed from the profile itself (when checking
	whether there's a symbol corresponding to that address)
	[7606e17450c2]

	* src/debug/profile.c:
	support disassembly while profiling, with DEBUG show zero cycle
	instructions
	[096b44f1c1c4]

	* tools/hatari-profile.py:
	limits work similarly to both callgraphs & lists + usage update
	[7a69fdf6a9b7]

2013-02-18  Eero Tamminen

	* tools/hatari-profile.py:
	refactor callgraph code, create separate callgraph for each profile
	item
	[3fb64a6d9d56]

	* tools/hatari-profile.py:
	refactor statistics output, replace -c -e -i -m options with -t

	This refactoring cleaned out duplicate code and I think single
	options is nicer. There were also couple of unrelated argument
	changes elsewhere.
	[a810fe9e4894]

	* tools/hatari-profile.py:
	minor output improvements
	[dab21ae1b46e]

	* tools/hatari-profile.py:
	improve output handling and remove dead code
	[813c0e02087b]

	* tools/hatari-profile.py:
	refactor symbol & memory area handling to separate class
	[d96f9b5fc13b]

	* tools/hatari-profile.py:
	add second method for call address resolving

	- instruction count for first instruction in function can be used
	as a call count, with that one can provide call count lists also
	without caller profile information
	- fixed resolving address to a preceeding symbol (visible in stats
	and callgraphs)
	- continued item field handling generalization, dsp cycle
	differences field has now correct heading
	[0b16216700d8]

2013-02-17  Laurent Sallafranque

	* src/falcon/dsp_cpu.c:
	fix 2 DSP timings problems:
	- L access to external memory was taking 2 cycles too much
	- jmp with immediate adress in external memory too
	[b8a5a1f287d1]

2013-02-17  Eero Tamminen

	* src/debug/profile.c, src/falcon/dsp.c:
	profiling info is collected after instruction has been executed

	This is to be able to collect all relevant information. At that
	point PC is on next instruction and profiling code needs to store
	and deal with previous PC value.

	Change DSP update also to be called like that + do related profiling
	code changes.
	[0e39ef4c0f60]

	* doc/release-notes.txt, src/debug/breakcond.c, src/debug/profile.c:
	Fix profiler usage in debugger files invoked by breakpoints

	Allows profiling automation by chaining breakpoints.
	[c422aff63049]

2013-02-16  Eero Tamminen

	* doc/release-notes.txt:
	update release notes (and capitalize all items for consistency)
	[342be5cd19f4]

	* src/debug/profile.c, tools/hatari-profile.py:
	add processor speed to profile data & post-process it

	*INCOMPATIBLE PROFILE DATA CHANGE*
	-> profiler and post-processor need to be both either older or
	newer than this commit

	Post-processing:
	- generalize code for handling memory areas and move really Hatari
	specific options (disassembly format & memory areas) to a subclass
	- start generalizing profile item count handling
	- parse and store processor speed information
	- based on that, add time information to callgraph nodes and symbol
	lists

	Profile data saving:
	- output processor speed info
	- change memory area identifiers to such that they can be used as
	symbols (no spaces) and remove RAM area
	[80ce1e22bfd5]

	* src/debug/profile.c:
	fix profiler's suspicious cycles warnings:

	- give correct (=previous) PC address in message
	- STOP instruction can have arbitrary cycles values, don't report
	large values for that
	[15bfd1841794]

2013-02-15  Eero Tamminen

	* src/debug/profile.c:
	add time info to profile stats

	(and show the memory areas in the address order)
	[9a9c44adb88f]

	* src/debug/profile.c:
	Fix CPU cycle counting when DSP enabled + some code cleanup
	[f97aba0cd462]

	* src/debug/debugInfo.c, src/falcon/dsp.c, src/falcon/dsp.h:
	add "info dsp" command (shows e.g. stack content)
	[3ddc10dc970f]

2013-02-14  Eero Tamminen

	* tools/hatari-profile.py:
	major improvements to the profile data post-processor

	- add callgraph output and some filtering options to control it
	- add top function call count list
	- add --limit option to limit lists based on function percentages
	(and what gets emphatized in callgraphs)
	[03da50aaed18]

2013-02-12  Eero Tamminen

	* tools/hatari-profile.py:
	improve symbol handling and don't list empty values

	symbol handling:
	- GCC local symbols can be prefixed with [$.]
	- object file name symbols can have [.-] in them
	- more robust object file name test
	- don't show warnings when changing symbol:
	  - to a one with or without (short) prefix
	  - for object file name
	[0a61a075c21b]

	* src/debug/profile.c:
	fix compiler warnings / DSP value overflow check

	max_cycles needs to be 64-bit as cycles counter for DSP is 64-bit
	(it's 32-bit for CPU to save memory).

	Added ifdef as cache misses are stored only for WinUAE.
	[c50c2840640c]

2013-02-11  Eero Tamminen

	* tools/hatari-profile.py:
	pylint warning fixes & profile doc updates
	[520bf534286b]

	* src/debug/68kDisass.c:
	fix disassembly column changing function

	Not all of the new column values were initialized.

	Depending on stack content, this could cause disassembly to segfault
	with profile disassembly output (which is currently only thing
	changing the columns).
	[3aaa293359f0]

	* doc/release-notes.txt:
	update release notes
	[05cdba686ddd]

	* src/falcon/hostscreen.c, src/includes/resolution.h,
	src/resolution.c, src/screen.c:
	fix max resolution handling for ST mode
	[49221d1651bc]

	* doc/release-notes.txt:
	update release notes
	[672934113016]

	* src/falcon/nvram.c, src/reset.c, src/vdi.c:
	setup NVRAM video mode based on VDI mode, when in VDI mode

	Based on patch by Vincent Rivière which makes VDI mode work properly
	with EmuTOS under Falcon emulation.

	It doesn't change the situation for real TOS:
	- TOS v3 still doesn't work with monochrome VDI modes with height <
	480.
	- TOS v4 still doesn't work with VDI mode which sizes are >32kB.
	[285a171457c1]

	* tools/hatari-profile.py:
	make usage info also whole script doc
	[155a2f47cfa6]

	* tools/hatari-profile.py:
	prepare post-processor for callgraph addition

	- add callee/caller information parsing
	- move statistics to separate class
	- move totals summing to instructions class
	[8e219c54209b]

2013-02-06  Eero Tamminen

	* src/debug/profile.c, src/debug/symbols.c, src/debug/symbols.h:
	symbol address caller tracking for CPU & DSP profiler

	Callers to addresses which have symbols associated with them, are
	tracked and separate call counts are kept for each. This
	information is output if profiler 'addresses' command output goes to
	a file, and with the separate 'callers' command.

	Caller information is required for being able to get callgraphs for
	the executed code.
	[b0b3855641a0]

2013-02-05  Eero Tamminen

	* src/falcon/nvram.c:
	remove (now redundant) nvram.c Dprintf defines
	[d1a5fd7673d7]

2013-02-04  Eero Tamminen

	* src/includes/vdi.h, src/vdi.c:
	prevent bad ratio still giving too large values

	also, with VDI size alignment, smallest size can be ST-low.
	[568b370ceb03]

	* src/includes/vdi.h, src/screen.c, src/vdi.c:
	limit VDI screen size to 300kB

	This allows slightly larger resolutions while reducing Hatari memory
	usage and making sure that selected VDI resolution works e.g. in
	EmuTOS and older TOSes.
	[3d35685fbce3]

2013-02-03  Eero Tamminen

	* src/debug/log.c, src/debug/log.h, src/falcon/nvram.c:
	add run-time trace support for NVRAM reads & writes
	[187c3f4ba6fa]

	* src/vdi.c:
	fix comment
	[aa960e04a9aa]

2013-02-02  Laurent Sallafranque

	* src/falcon/dsp_cpu.c:
	fix: simultaneous access to external X and Y memory cycles was wrong
	(thanks to Doug For this)
	[f9b90a3c6529]

2013-02-01  Eero Tamminen

	* src/debug/profile.c:
	correct CPU area calculations

	(should have been updated when TOS data was moved before Cartridge
	data, several commits ago.)
	[76cf815555ee]

	* src/debug/profile.c, src/debug/profile.h, src/falcon/dsp_disasm.c:
	use 64-bit variables for DSP instruction & cycle counts

	because this needed adding separate DSP area function, I could add
	also the cycle diff sum information to statistics output.
	[e162c2712aca]

2013-02-01  Laurent Sallafranque

	* src/cpu/newcpu.c, src/includes/m68000.h:
	change: take into account the 68030 cycles in cache mode ON
	[5a63aa977dfb]

	* src/falcon/dsp_cpu.c:
	fix: extra access to external memory after the first one cost 2
	cycles instead of one (thanks to Doug Little for the TIP)
	[622e01afef0b]

2013-02-01  Eero Tamminen

	* doc/release-notes.txt, src/debug/breakcond.c, src/debug/debugcpu.c,
	src/debug/debugdsp.c:
	make breakpoints silent on 'n' command
	[71e0b614e44c]

	* tests/debugger/test-dummies.c:
	update debugger tests to recent changes
	[5e6e15d9c82b]

	* doc/release-notes.txt:
	update release notes, put profiler and windows changes under their
	own headings
	[50ab066f2872]

	* src/debug/profile.c:
	try at working around wrong cycles diff value
	[85e65361fd09]

	* src/gui-win/opencon.c:
	update includes also
	[0aef18a3c0cf]

	* src/configuration.c, src/gui-win/opencon.c,
	src/includes/configuration.h, src/options.c:
	add -W for opening log window on Windows, fixed(?) Windows stderr
	redirection
	[bc086ca89534]

	* src/debug/profile.c, src/debug/profile.h, src/falcon/dsp_disasm.c:
	instead of min/max DSP cycles, show diff of them

	post-processor can output DSP cycle diffs (use of different memory
	areas/registers) as "cache misses".
	[331dbec754bf]

2013-01-31  Eero Tamminen

	* src/debug/profile.c, src/debug/profile.h, src/falcon/dsp_disasm.c:
	separate CPU & DSP profile data structures, add min/max DSP cycles
	info

	using separate structures allows providing different info for CPU
	and DSP
	[cc810af306ca]

	* tools/hatari-profile.py:
	adapt to any number of items in profile

	(currently processes up to 3 of them, but doesn't throw exception if
	there are more)
	[7849c0f07658]

	* tools/nm-symbols-cleanup.sh:
	helper script to cleanup MiNT 'nm' output for symbols command
	[d9c87d1f668d]

	* tools/hatari-profile.py:
	fix memory area symbol assignment

	(depends on previous profile.c update)
	[46e0dc036194]

	* src/debug/profile.c:
	output profile addresses in memory order

	(previously cartridge area came before ROM TOS)
	[fc24052241c7]

	* tools/hatari-profile.py:
	fix post-processor exceptions
	[66ec14d4ad90]

	* src/debug/symbols.c:
	object file symbol names can contain '-' characters
	[8c3d7588c70a]

	* tools/hatari-profile.py:
	symbol check improvements

	- silently ignore duplicate symbol info
	- warn about consequences of having same symbol name for multiple
	addresses (= overriding symbol info)
	[c4a4ec506735]

	* tools/hatari-profile.py:
	skip memory area checks for DSP profiles
	[0f25b499decd]

	* tools/hatari-profile.py:
	profile file and output handling imporovements

	- automatically identify whether profile is for DSP or CPU based
	on new profile header
	  -> removed "-d" option
	- separate class for handling file & user output
	- exit on first error
	- if there's no other symbol, collect stats under generic memory
	area (RAM, text section, TOS ROM, Cartridge ROM) symbols
	[e675970e0a39]

	* src/debug/profile.c:
	add profile identifier to profile file
	[12a6da6a7d56]

2013-01-30  Eero Tamminen

	* doc/release-notes.txt:
	add recent changes to release notes
	[4668dded703c]

	* tools/hatari-profile.py:
	support DSP profile output, with -d option
	[618eb9d430d0]

	* tools/hatari-profile.py:
	improve symbol addresses handling

	- accept hex addresses with and without 0x prefix (EmuTOS .sym
	files have prefixes)
	- igore object file names if there's already symbol name for that
	address
	- take note which symbols were taken from symbols file, which ones
	from profile data
	- add function addresses to lists for functions which names were not
	in the profile data
	[273fb1e47588]

	* tools/hatari-profile.py:
	remove mins as useless and add max value address
	[e7d7ec1b0923]

	* tools/hatari-profile.py:
	add instruction statistics output
	[cadc03ee0983]

	* src/debug/profile.c:
	cycles information is for previous instruction, compensate
	[fc43c1919409]

	* tools/dsp-lod-symbols-convert.sh:
	preliminary DSP LOD -> symbols file convertor
	[391d95be4c57]

	* src/debug/profile.c:
	fix define check
	[4f7726c1cfaf]

	* src/debug/profile.c:
	cycles counter seems cumulative, compensate in profiler
	[9f32e52a9eff]

	* tools/hatari-profile.py:
	fix profiler exception + disable debug output
	[c673c9554622]

	* tools/hatari-profile.py:
	first version of Hatari profile data post-processor
	[91159729a47f]

	* src/debug/profile.c:
	output TOS/RAM/TEXT/Cartridge addresses to profile data

	profile data post-processing assume TOS addresses are absolute and
	program TEXT segment addresses are relative so it needs to know
	where those are.
	[841b62a4ec5c]

	* src/debug/breakcond.c, src/debug/debugInfo.c, src/debug/debugInfo.h:
	add TEXTEnd debugger variable (last address of program text segment)
	[91c34a9c6134]

2013-01-29  Eero Tamminen

	* src/debug/symbols.c:
	symbols command: offsets can be given for data and bss in addition
	to text
	[ae2a024e97aa]

2013-01-28  Eero Tamminen

	* src/debug/profile.c:
	assign DSP cycles cost to previous instruction

	this is because debugger is called before DSP instruction is
	executed i.e. cycles information is for the previously executed
	instruction
	[82fb7d79f349]

	* src/joy.c:
	fix const warning introduce by previous joy.c commit
	[801c9f81debd]

	* src/debug/68kDisass.c:
	minor improvements to disassembler text file reading

	- correct ftell() error checking
	- free buffer on error exit
	- remove redundant frees on file read function fail
	- ANSI-C variable declarations
	[a2f0dc4f1d12]

	* src/includes/joy.h, src/joy.c:
	fix mudflap warning in joy axis mapping code

	With some rewriting:
	- Moved the structs to joy.c as they aren't used by anything else
	- Used const char pointers for name string
	- Used array size as loop exit condition instead of string checking
	[49285266aa38]

	* src/debug/68kDisass.c:
	fix mudflap warning: stack buffer accessed from outer scope

	additionally, remove sp variable shadowing (which confused the issue
	how much up the stack buffer usage goes).
	[1db010f1f13e]

	* tools/devpac3-symbols-convert.sh:
	Devpac 3 listing symbol table -> Hatari debugger symbols convertor
	[a8658c94d48c]

2013-01-27  Eero Tamminen

	* src/debug/profile.c:
	use Cycles_GetCounter() to get CPU cycles

	It works for everything else except non-cycle exact WinUAE CPU core
	option. The main thing is getting this working for cycle exact CPU
	core...
	[6d8054f1cd9c]

2013-01-26  Eero Tamminen

	* src/debug/breakcond.c, src/debug/debugdsp.c, src/debug/history.c,
	src/debug/profile.c, src/falcon/dsp.c, src/falcon/dsp.h,
	src/falcon/dsp_cpu.c, src/falcon/dsp_cpu.h:
	support for specifying profile addresses output file

	This required adding FILE* option for DSP disassembly functions
	which caused updates in several places.
	[031e2313bd32]

	* src/cpu/newcpu.c, src/debug/68kDisass.c, src/debug/profile.c,
	src/debug/profile.h, src/includes/m68000.h, src/m68000.c:
	add CPU instruction cache miss profiling

	Note: CPU cache is supported only by WinUAE CPU core.
	[09178bc26b9d]

2013-01-26  Thomas Huth

	* src/acia.c, src/cart.c, src/cfgopts.c, src/cycInt.c, src/dmaSnd.c,
	src/fdc.c, src/gemdos.c, src/hd6301_cpu.c, src/hdc.c, src/ide.c,
	src/ikbd.c, src/ioMemTabFalcon.c, src/main.c, src/mfp.c, src/psg.c,
	src/screen.c, src/sound.c, src/unzip.c, src/video.c, src/xbios.c,
	src/zip.c:
	Fixed typos reported by codespell
	[5f752775d03e]

2013-03-05  Nicolas Pomarede

	* src/cpu/newcpu.c, src/cpu/newcpu.h, src/falcon/dsp.c,
	src/falcon/dsp.h, src/mfp.c, src/uae-cpu/newcpu.c, src/uae-
	cpu/newcpu.h:
	Remove DSP's IRQ from mfp.c and call DSP_ProcessIRQ() from the CPU
	emulation
	[8a53f5849c9b]

2013-03-04  Nicolas Pomarede

	* src/mfp.c:
	Clear IRQ in MFP_Reset()
	[b9e7a1f3b2b1]

	* src/includes/mfp.h, src/mfp.c:
	Remove MFP debug code and change VR description
	[12297107d383]

2013-03-03  Nicolas Pomarede

	* src/mfp.c:
	Add new interrupt related variables to the memory snapshot
	[df99d056cd97]

	* src/mfp.c:
	Remove old wrong/commented code
	[df216ace9fa0]

	* src/mfp.c:
	More compact versions of MFP_CheckPendingInterrupts() and
	MFP_InterruptRequest()
	[088c3385ad19]

	* src/uae-cpu/newcpu.c:
	Remove debug printfs
	[877d09d67cf2]

	* src/mfp.c:
	Indent comments
	[88b96b7c242f]

	* src/mfp.c:
	When an MFP interrupt happens, a delay of 4 cycles is needed before
	the CPU receives it (fix Audio Artistic Demo and the games Super
	Hang On, Super Monaco GP, Bolo)
	[aed047c66614]

	* src/uae-cpu/newcpu.c:
	Remove debug printf
	[e55dcee66530]

2013-02-25  Nicolas Pomarede

	* src/cpu/newcpu.c, src/includes/mfp.h, src/mfp.c, src/uae-
	cpu/newcpu.c:
	In the main CPU loop, use MFP_ProcessIRQ instead of
	MFP_CheckPendingInterrupts The MFP must only set IRQ to 0 or 1,
	without taking SR into account. That's up to the CPU emulation part
	to call MFP_Exception if MFP_IRQ=1 and SR allows it.
	[e4d838d59eb1]

2013-02-24  Nicolas Pomarede

	* src/m68000.c:
	Add comment about useless test to remove later
	[acbf9a5092fd]

	* src/mfp.c:
	Remove useless check for unused MFP bits
	[8b1f68189385]

	* src/mfp.c:
	MFP_UpdateIRQ should also be called when ISRx and IMRx are modified
	[c078b28a777b]

	* src/mfp.c:
	Rename MFP_UpdateFlags to MFP_UpdateIRQ and use
	MFP_CheckPendingInterrupts()
	[339d45cf4226]

	* src/cpu/newcpu.c, src/includes/mfp.h, src/mfp.c, src/uae-
	cpu/newcpu.c:
	In MFP_CheckPendingInterrupts, return the MFP interrupt number
	instead of true/false
	[4f0c947a8149]

	* src/uae-cpu/newcpu.c:
	Call do_specialties() only once per opcode, not for every expired
	internal timer
	[d2bc5a7d2362]

	* src/mfp.c:
	There can be only one MFP interrupt source at a time Only the
	highest priority pending interrupt should cause an exception The
	previous code was wrong as it would called several exceptions at the
	same time and stack them in the reverse order (lower prioriry first
	!)
	[cafa412936da]

2013-01-24  Eero Tamminen

	* src/debug/profile.c, src/debug/profile.h:
	fix typo, make functions static (as they aren't called outside of
	profile.c)
	[dffe52d0aef1]

2013-01-21  Eero Tamminen

	* doc/manual.html:
	LMC emu is stable, not experimental
	[ee1104daa49e]

	* src/debug/breakcond.c:
	fix copyright line
	[663a551f6e35]

2013-01-20  Nicolas Pomarede

	* doc/compatibility.html:
	Update notes for the demo 'V8 Music System'
	[25a5efed0eec]

	* src/acia.c:
	When ACIA's IRQ is set, the MFP IRQ should happen 4 cycles later
	This delay was measured on a real STF.
	[fa948c81a521]

2013-01-17  Thomas Huth

	* src/cpu/cpummu030.c:
	MMU030: Minor fixes (taken from upstream Previous emulator)
	[22b7347cd5d7]

2013-01-13  Thomas Huth

	* doc/compatibility.html, doc/manual.html:
	Final HTML clean-up: Documentation files are now valid HTML5.
	[bfd8c62a896a]

2013-01-13  Nicolas Pomarede

	* src/ikbd.c, src/includes/ikbd.h:
	Remove redundant variable KeyboardProcessor.bReset We always have
	bReset = !bDuringResetCriticalTime, so bDuringResetCriticalTime is
	enough
	[a32d1ace5c43]

	* doc/release-notes.txt:
	Update notes for ACIA/IKBD changes
	[5873a5709ead]

	* src/ikbd.c:
	Better timings for the $F1 byte returned by IKBD's reset command $80
	$01 This delay was accurately measured on a real STF with a custom
	program
	[b889b39f7d58]

2013-01-12  Thomas Huth

	* doc/compatibility.html, doc/manual.html:
	HTML cleanup: Replaced obsolete tags
	[2f70d2774044]

	* doc/compatibility.html, doc/manual.html:
	HTML cleanup: Now using proper table headers
	[fe5e9775d00a]

2013-01-13  Nicolas Pomarede

	* src/ikbd.c, src/includes/ikbd.h:
	For hardware and software reset, use the common code in
	IKBD_Boot_ROM()
	[801bd44a41ab]

2013-01-12  Nicolas Pomarede

	* src/cpu/hatari-glue.c, src/uae-cpu/hatari-glue.c:
	Call IKBD_Reset() when the RESET instruction is used
	[29e79b0f5c7b]

2013-01-08  Eero Tamminen

	* src/vdi.c:
	bugfix: show also appl_init() in AES traces
	[437a388e93e3]

2013-01-06  Nicolas Pomarede

	* src/ikbd.c:
	During IKBD reset, use the define IKBD_ROM_VERSION instead of 0xF1
	[7edf5a1632c6]

	* doc/compatibility.html:
	Add notes for the game "F29 Retaliator"
	[c3a2292fc972]

2013-01-05  Nicolas Pomarede

	* doc/compatibility.html:
	Add notes for the game "Warlock's Quest"
	[4e562d54ee91]

2013-01-04  Nicolas Pomarede

	* src/gui-sdl/dlgFileSelect.c:
	Fix a bug when remembering the fileselector scrollbar's position
	When using the fileselector in a large directory, then going to a
	small directory with <= 16 entries, the scrollbar was drawn at the
	wrong position.
	[b05f51174cd3]

2013-01-02  Nicolas Pomarede

	* src/ikbd.c:
	For the IKBD's output buffer, fix the check to send a new byte in
	TDR
	[f31979234f79]

	* src/ikbd.c:
	In the IKBD, don't ignore a new byte in RDR if the output buffer is
	not empty The IKBD can handle new byte asynchronously, even if the
	current command is not completed and still has some bytes to send
	(fix a regression in the game 'Zombi')
	[798aa5a0b334]

	* src/ikbd.c:
	Correctly check the IKBD's output buffer is not full when adding one
	byte
	[3fb423fda660]

	* src/ikbd.c:
	Remove old special case for the game 'Downfall' and update comments
	[982565195a9e]

	* src/ikbd.c, src/includes/ikbd.h:
	When the IKBD sends a packet, check there's enough room in the
	output buffer Some programs can crash or lock if the received packet
	is truncated or malformed due to the output buffer being full
	[0d37b6f36006]

2012-12-31  Nicolas Pomarede

	* src/ikbd.c:
	Prevent a possible buffer overflow when sending commands to the IKBD
	[38b507da21cb]

2012-12-30  Nicolas Pomarede

	* cmake/Toolchain-mingw32.cmake:
	Autodetect mingw's sysroot path
	[1d91985e1e45]

2012-12-30  Eero Tamminen

	* tools/zip2st.sh:
	zip2st: check that given zipfile exists
	[ed8fec2932c5]

2012-12-27  Nicolas Pomarede

	* src/dmaSnd.c:
	Add more traces when accessing dma sound / microwire
	[ba74a5ac5d5c]

2012-12-25  Nicolas Pomarede

	* src/ikbd.c:
	Update traces for IKBD's clock
	[01ff9c5f8a26]

	* src/ikbd.c:
	Add more traces for non supported IKBD commands
	[385ee0236e29]

	* src/ikbd.c:
	Return the correct number of bytes for IKBD's ReadMemory ($21), even
	if not implemented We can't return the real content of the IKBD's
	RAM, but at least we return the correct header + 6 empty bytes.
	[56a46f3b7eeb]

2012-12-24  Nicolas Pomarede

	* src/ikbd.c, src/includes/ikbd.h, src/video.c:
	Rewrite SetClock ($1B) and ReadClock ($1C) commands to behave like
	the real IKBD We don't use time()/locatime() anymore to update the
	clock ; it was not very portable on some OS and gave wrong results
	sometimes anyway. This new code is based on the HD6301 disassembly
	of the IKBD's ROM.
	[a5438d3f91c7]

2012-12-23  Thomas Huth

	* src/gui-sdl/dlgSystem.c:
	Fixed the length of dialog objects
	[06c7da4de001]

	* doc/compatibility.html:
	Added more Falcon demos that require an FPU. Thanks to Anders
	Eriksson for the hints!
	[8285e9fad0f6]

	* src/bios.c:
	Fixed format string (Clang compiler issued a warning)
	[be12eb28ae60]

2012-12-23  Nicolas Pomarede

	* src/ikbd.c:
	Better timings for the bytes returned by IKBD's commands $16, $1C,
	$87-$9A This delays were accurately measured on a real STF with a
	custom program
	[e0e2dd72877a]

2012-12-23  Thomas Huth

	* doc/compatibility.html:
	Added Captain Blood and Zombi to the compatibility list
	[fd71f9af7301]

	* doc/toc.js:
	Scroll to the right section in manual, second try
	[06b506a2bc1a]

2012-12-22  Thomas Huth

	* src/cpu/newcpu.c:
	MMU030: The MMU configuration exception must generate stackframe
	type 0x2. Thanks to Andreas Grabher for the hint!
	[3f7e214b3bf5]

	* src/cpu/cpummu030.c:
	MMU030: Reworked debugging messages
	[7cd019393a09]

2012-12-22  Nicolas Pomarede

	* src/midi.c:
	Also uses ACIA_AddWaitCycles when accessing MIDI, to take E Clock
	into account
	[8cbcceb56d6f]

	* src/acia.c, src/includes/acia.h:
	Use E Clock to correctly emulate the number of cycles when accessing
	ACIA This E Clock delay was accurately measured on a real STF with a
	custom program
	[e425ec2302fc]

	* src/includes/m68000.h, src/m68000.c:
	Add M68000_WaitEClock to count cycles needed to reach the next E
	Clock's edge When procesing HBL/VBL interrupts or ACIA accesses, the
	CPU needs to be synchronised with the E Clock, which is 1/10th of
	the CPU frequency.
	[80732d4a020e]

	* src/cycles.c:
	Add a comment for the case where MovepByteNbr==0
	[3b501f24cb5b]

	* src/cpu/gencpu.c, src/uae-cpu/gencpu.c:
	Also uses MovepByteNbr=0..4 for MOVEP M->R
	[8c723ae84390]

2012-12-22  Thomas Huth

	* doc/manual.html:
	Some more HTML fixes
	[4902c8ed0e69]

2012-12-22  Nicolas Pomarede

	* src/cpu/gencpu.c, src/uae-cpu/gencpu.c:
	For MOVEP R->M, set MovepByteNbr=0 after the last byte access This
	means that if MovepByteNbr=1..4, we're emulating a movep
	instruction. If MovepByteNbr=0 we're not emulating another opcode
	than movep.
	[347591bae8e9]

2012-12-22  Thomas Huth

	* doc/toc.js:
	Added a hack to force the browsers to show the right section when
	coming from an external link
	[dc5739a3e2b1]

	* doc/manual.html:
	Fixed bad HTML
	[c5381004050e]

2012-12-21  Eero Tamminen

	* doc/manual.html:
	test for external linkage to manual
	[c65baecb6a03]

2012-12-21  Nicolas Pomarede

	* src/acia.c, src/midi.c:
	Access to the ACIA's registers add a delay of 6 cycles per valid
	register This 6 cycles delay was accurately measured on a real STF
	with a custom program.
	[bc25b3804359]

2012-12-17  Eero Tamminen

	* doc/manual.html:
	update manual:

	- printer/RS-232/MIDI work fine, so remove experimental comment
	- finetune mouse and printer descriptions a bit
	[46a075ccf9fb]

2012-12-16  Eero Tamminen

	* doc/release-notes.txt:
	update release notes
	[3f0d182f1b20]

	* src/gui-sdl/dlgFileSelect.c:
	add CWD button to SDL fileselector
	[0becbbc32f54]

	* doc/hatari.1, doc/manual.html, src/options.c:
	fix -c option description and add more docs on Hatari configuration
	[d090fa137db8]

2012-12-13  Eero Tamminen

	* doc/emutos.txt:
	update doc to latest EmuTOS state (fsel_ex support/fix)
	[b061dd3b7905]

	* python-ui/CMakeLists.txt:
	only hatariui and debugui need to be installed executable

	(Debian Sid patch for Hatari set only conftypes as non-executable,
	but actually most of the python files don't need to be executable)
	[12fde5ca8a67]

	* doc/hatari.1:
	apply dash patch from debian sid

	(+ add blackslashes also to args added after that)
	[be69ef61b275]

2012-12-12  Nicolas Pomarede

	* src/ikbd.c:
	Fix an ACIA timing problem for IKBD commands returning more than one
	byte The 1st byte was returned immediatly, the delay was ignored.
	[e003f0053c3d]

2012-11-25  Thomas Huth

	* src/cpu/cpummu030.c:
	MMU030: Added MMU Configuration Exceptions. Sync'ed source code with
	Previous. Thanks to Andreas Grabher for the changes!
	[4fe8fcddbb63]

2012-11-20  Eero Tamminen

	* doc/release-notes.txt:
	release note about Pexec() fix, fit lines to 80 cols
	[577eaa8b1262]

2012-11-17  Eero Tamminen

	* doc/hatari.1, doc/manual.html:
	document new debugger commands and new disasm option
	[d965351b4ae6]

2012-11-16  Thomas Huth

	* src/cartData.c, src/cart_asm.s:
	Reworked pexec code in cartridge so that it does not destroys the
	command line
	[cb04d6e08831]

2012-11-16  Eero Tamminen

	* doc/release-notes.txt, src/debug/68kDisass.c:
	fix signedness issue in disassembler

	breaks disassembly output when compiled with PowerPC NetBSD using
	GCC 4.1.3
	[b7f62ef99f25]

2012-11-15  Thomas Huth

	* src/cpu/mmu_common.h:
	Disabled the THROW + CATCH debug messages
	[ef4abac4845f]

	* doc/compatibility.html:
	Bumped version number for X-Tasie in compatibility list
	[34e100dbd399]

2012-11-14  Thomas Huth

	* doc/compatibility.html:
	Updated X-Tasie in the compatibility list
	[e013fb5f16fd]

	* src/debug/log.h:
	TRACE_IOMEM_WR has to be declared as long-long to avoid bad sign
	extension
	[9b8489f75522]

	* src/falcon/videl.c:
	Make sure that Videl display height does not get negative
	[c53508439caf]

	* src/cpu/cpummu030.c:
	MMU030: The unaligned access functions must not destroy the fault
	address
	[402fa9c51afa]

	* src/cpu/cpummu030.c, src/cpu/cpummu030.h:
	MMU030: Improving try-catch in table search function. Patch taken
	from Previous (thanks to Andreas Grabher)
	[2ad6d8a9baee]

2012-11-13  Eero Tamminen

	* doc/release-notes.txt:
	update release notes
	[d389911ca1bb]

	* src/debug/debugcpu.c:
	better comment
	[b7ddf8c231b5]

	* src/debug/debugInfo.c:
	fix corner cases for "lock regaddr" command DSP handling
	[d261df121774]

	* src/debug/evaluate.c:
	handle 16-bit DSP register names correctly in evaluate command
	[badaf95300c7]

	* src/debug/debugui.c:
	fix: recognize DSP shortcut commands correctly

	otherwise expression evaluation can expand "PC" to CPU PC register
	instead of DSP one in DSP command.
	[4b5546684b5f]

2012-11-12  Nicolas Pomarede

	* src/includes/ym2149_fixed_vol.h:
	Add missing end of line at end of file (fix compiler warning)
	[ec535aca9caa]

2012-11-12  Eero Tamminen

	* src/debug/debugcpu.c:
	correct 'w' command info
	[71bb145bdcee]

	* src/debug/debugInfo.c:
	under MiNT, OS header differs from ROM one -> adapt info commands
	[e885fb6b6324]

	* src/gemdos.c:
	give info on GEMDOS vector

	(needed if one wants to re-enable GEMDOS redirection in debugger
	after MiNT overwrites it.)
	[15cfe34c3d3c]

2012-11-10  Nicolas Pomarede

	* doc/authors.txt:
	Add Paulo Simoes to list of contributors
	[7762f8c0116e]

	* doc/release-notes.txt, src/includes/ym2149_fixed_vol.h:
	Slightly better volume table for YM2149 emulation This table was
	measured by Paulo Simoes on a real ST, and converted to Hatari's
	format by David Savinkoff.
	[ca407fdf9e15]

	* doc/release-notes.txt:
	Add details for fixed games
	[84a21f5c8c06]

2012-11-09  Eero Tamminen

	* doc/release-notes.txt:
	add info no recent improvements to release notes

	(and rephrase some things better)
	[e5756e37b31c]

	* src/debug/68kDisass.c, src/debug/68kDisass.h, src/debug/debugui.c,
	src/options.c:
	add --disasm option

	Move flag parsing code from debugui.c to 68kDisass.c where the new,
	more extensive disassembly option parsing resides.
	[616b56695cb2]

	* src/configuration.c, src/debug/68kDisass.c, src/debug/68kDisass.h,
	src/includes/configuration.h:
	change nDisasmEngine to bDisasmUAE and add nDisasmOptions config
	options

	We're not going to have more disassembly engines, so bool is enough
	for engine selection and allows simplifying the checks.
	[d898bc092749]

	* src/debug/68kDisass.c, src/debug/68kDisass.h, src/debug/breakcond.c,
	src/debug/debugcpu.c, src/debug/history.c, src/debug/profile.c, src
	/uae-cpu/newcpu.c:
	simplify, check DisasmEngine option only in Disasm()
	[5f0f93c98eea]

2012-11-08  Eero Tamminen

	* src/configuration.c, src/debug/68kDisass.c, src/debug/breakcond.c,
	src/debug/debugcpu.c, src/debug/history.c, src/debug/profile.c,
	src/includes/configuration.h, src/uae-cpu/newcpu.c:
	add "nDisasmEngine" configuration option

	Markus' disassembly engine has nicer looking output than the UAE
	internal disassembler, and it's (now) also possible to configure its
	output to some extent within debugger.

	However, Markus' engine doesn't output all instructions correctly
	(MMU related ones, divul, maybe others), so it's better to leave the
	selection between them to user.
	[aff1f4f71ce3]

	* src/debug/debugcpu.c, src/debug/debugdsp.c:
	Fix: after breakpoint, debugger runs one step too few

	Breakpoints need to be checked before stepping count, so that it's
	breakpoint that hits on an address instead of first stepping
	dropping you to debugger and then breakpoint.

	However, when continuing from breakpoint, step count shouldn't be
	decreased before returning to emulation. Fix this by increasing
	count after breakpoint.

	When using "next" command to continue with a set breakpoint, zero
	any remaining step count.
	[a86d44425c89]

	* src/debug/breakcond.c:
	although breakpoint matches, rest of the breakpoints need to be
	checked too

	Breakpoint matching code returned after first breakpoint match. This
	had several problems:
	- if the first matching one was "trace" breakpoint, user wasn't
	dropped into debugger although other existing breakpoints would
	have done that
	- information for the other breakpoints that match at the same point
	wasn't updated (for counted breakpoints) or shown (for trace
	breakpoints)
	- "once" breakpoints wouldn't have been removed if something else
	was matched first

	This change will go check all breakpoints before returning (index
	for the last matched one).

	Logic for counted breakpoints was inverted, that's also fixed.
	[e1f7488a9601]

2012-11-07  Eero Tamminen

	* src/gemdos.c:
	output Pexec() args when tracing GEMDOS
	[08aa8ef2588b]

	* src/change.c:
	Also Blitter and CPU level changes require reset

	Otherwise things already using them and relying them can crash
	[e2fd8b15f0ce]

	* src/tos.c:
	fixes to TOS/machine/CPU type matching:
	- TOS 1.62 works only with 68000 (unlike TOS 1.06)
	- TOS v3(.06) doesn't work with 020, only 030/040
	- CPU level change requires call to M68000_CheckCpuSettings()
	[ffd5f66b87f8]

2012-11-06  Thomas Huth

	* src/cpu/cpummu.c:
	Fixed TRY-CATCH-THROW_AGAIN so that it now should work without try-
	stack underflow
	[148506c580a3]

	* src/debug/68kDisass.c:
	Fixed possible crash in disassembler (NULL pointer dereferenciation)
	[c83bf5ed8d98]

2012-11-05  Eero Tamminen

	* doc/release-notes.txt, doc/todo.txt:
	update release notes & todo for last debugger improvements
	[aba8fc7cb467]

	* src/debug/debugcpu.c, src/debug/debugdsp.c:
	"next" debugger command for CPU and DSP, using new CPU/DSP
	GetNextPC() functions

	This uses temporary conditional breakpoints so it's a bit verbose.
	[071fef422e96]

	* src/falcon/dsp.c, src/falcon/dsp.h:
	support for returning next DSP PC without disasm output
	[97d057207ac2]

	* src/debug/68kDisass.c, src/debug/68kDisass.h:
	support for returning next CPU PC without disasm output
	[4148340604fb]

	* src/debug/68kDisass.c, src/debug/profile.c, src/debug/profile.h,
	src/falcon/dsp_disasm.c:
	add percentage to profiling info in disassembly

	- this should make it more readable as numbers are aligned and
	smaller so they are easier to compare
	- counts and cycles are now shown in parenthesis
	[085e349a4e94]

	* src/debug/profile.c:
	remove hexdump column from profiler disassembly output (in an effort
	to try to fit it into normal console width)
	[535baf72ea6a]

	* src/debug/debugui.c:
	add 'setopt' command 'disasm' subcommand for setting output flags
	[cc0e2004a10d]

	* src/debug/68kDisass.c, src/debug/68kDisass.h:
	make disassembly output flags and columns internally configurable
	[f349cb3cae10]

2012-11-04  Nicolas Pomarede

	* src/acia.c:
	In ACIA's init, define Set_Timers callback only for IKBD, MIDI is
	not used yet
	[1dee6e90e31e]

2012-11-04  Thomas Huth

	* src/cpu/gencpu.c:
	Fixed bug in RTE: format must be unsigned to avoid that 'frame'
	value is calculated wrong.
	[47b8c4b79bca]

	* src/cpu/cpummu030.c, src/cpu/cpummu030.h, src/m68000.c:
	MMU030: Always use THROW for bus errors when MMU is enabled (patch
	mostly taken from Previous emulator - thanks to Andreas Grabher)
	[ee9e5ae15aa9]

2012-11-04  Eero Tamminen

	* src/debug/debugcpu.c, src/debug/debugdsp.c:
	add CPU and DSP single stepping commands 's' & 'ds'
	[9486bdbe2d63]

	* src/debug/debugui.c:
	improve debugger history handling:
	- don't duplicate entries taken from history
	- store also command continuing emulation
	[5f1f41ca5932]

2012-11-04  Thomas Huth

	* configure:
	Fixed bug in configure script
	[151a3e2a7c6d]

2012-11-03  Eero Tamminen

	* src/debug/debugInfo.c:
	fix array access in debug info command
	[3b84036044a3]

2012-11-04  Nicolas Pomarede

	* src/acia.c:
	For ACIA's timer, use a 8 MHz CPU reference clock and nCpuFreqShift
	We should not use MachineClocks.CPU_Freq, as Hatari currently relies
	on a fixed 8MHz CPU clock for all its timings.
	[f432a58f881e]

2012-11-02  Eero Tamminen

	* src/debug/profile.c:
	profiler improvements:

	- add "address" subcommand for CPU & DSP that shows all addresses
	and their instructions that were executed during profiling (in
	address-order, upto requested number of instructions)
	- remove max counts/cycles instruction stats info as (now) redundant
	- fix overflow detection for CPU cycles
	[7cb52df179dc]

2012-10-31  Nicolas Pomarede

	* doc/release-notes.txt:
	Add new ACIA to the release notes
	[3f6ab55cff74]

2012-10-30  Nicolas Pomarede

	* src/debug/log.c, src/debug/log.h, src/ikbd.c:
	Update trace levels for ACIA/IKBD
	[7c0ee75971d7]

	* src/acia.c, src/ikbd.c:
	Comment debug printf's
	[892f32e86d40]

	* src/acia.c, src/ikbd.c:
	Update acia/ikbd notes
	[b5720e34ccd8]

2012-10-29  Nicolas Pomarede

	* src/ikbd.c:
	Remove unused code
	[6ecba79f687a]

	* src/cycInt.c, src/ikbd.c, src/includes/cycInt.h,
	src/includes/ikbd.h:
	Remove old IKBD/ACIA's interrupt handlers
	[ee920a5f3d50]

	* src/ikbd.c:
	Remove old ACIA code included in ikbd.c, now we use acia.c
	[f48f1439c44c]

	* src/ikbd.c:
	Adapt IKBD's custom code for Froggies Over The Fence to the new
	acia/ikbd code
	[37e81c884d34]

	* src/acia.c:
	Change some ACIA's LOG
	[b2837526b8ad]

2012-10-27  Nicolas Pomarede

	* src/acia.c, src/includes/acia.h:
	In ACIA_Read_RDR, clear OVRN bit if SR was read
	[a8939fbca144]

	* src/acia.c:
	In ACIA_Write_CR, set new CR before updating IRQ
	[b01679329839]

2012-10-23  Nicolas Pomarede

	* src/acia.c, src/ikbd.c, src/includes/acia.h, src/includes/ikbd.h,
	src/reset.c:
	Restore ACIA's timer after a reset (fix Reset part in Dragonnels
	Demo)
	[1ae8dc236957]

2012-10-22  Nicolas Pomarede

	* src/ikbd.c:
	Fix IKBD's custom code for Dragonnels + add debug code to dump data
	sent with LoadMemory
	[740ea45b3d3a]

2012-10-21  Nicolas Pomarede

	* src/acia.c:
	Use the callback function instead of the direct call to start the
	ACIA's timer
	[086b8e72a092]

	* src/ikbd.c:
	Add the new IKBD's SCI part to the memory snapshot
	[b419cb82228f]

	* src/ikbd.c:
	In IKBD_SCI_Get_Line_RX, when an overrun happens try to process the
	current unread TDR
	[5288963622a0]

	* src/acia.c:
	In ACIA_Write_TDR, don't prepare a new transfer if we're in idle
	state, wait for next clock bit (fix the game USS John Young / FOF54)
	[7350e5200bf5]

	* src/acia.c, src/ikbd.c:
	In ACIA_Clock_RX, check for overrun after the last stop bit, not
	after the last data bit
	[ffa86562c108]

2012-10-19  Nicolas Pomarede

	* src/acia.c:
	Only prepare a new TX in ACIA if in idle state and TSR has not just
	been loaded
	[5a2ed5c116a5]

	* src/ikbd.c:
	Improve IKBD's SCI : send buffered TDR over TX line and init SCI
	during reset
	[e1b5023a456d]

	* src/acia.c:
	Fix IRQ bit after reading ACIA's RDR
	[9cebc4db8d2c]

2012-10-18  Nicolas Pomarede

	* src/acia.c:
	Fix IRQ bit in ACIA_UpdateIRQ
	[aaa7e52c10eb]

2012-10-14  Nicolas Pomarede

	* src/acia.c, src/includes/acia.h, src/memorySnapShot.c:
	Include ACIA data in the memory snapshot
	[95667e47c2a9]

2012-10-13  Nicolas Pomarede

	* src/acia.c, src/cycInt.c, src/includes/acia.h,
	src/includes/cycInt.h:
	In ACIA_Set_Line_IRQ_MFP, update MFP_GPIP and trigger an interrupt
	[358c39356777]

2012-10-12  Nicolas Pomarede

	* src/ikbd.c:
	Complete ACIA TX->IKBD RX and pass RDR to the commands' emulation
	layer
	[8ff71ecabdc8]

	* src/acia.c:
	Fix shifting in ACIA TSR and RSR
	[ece860b369e1]

2012-10-11  Nicolas Pomarede

	* src/ikbd.c:
	Add support for the IKBD's Serial Communication Interface and handle
	RX bit from the ACIA The SCI is similar to the ACIA, but with less
	parameters.
	[0c555439310e]

2012-10-09  Nicolas Pomarede

	* src/acia.c, src/ikbd.c, src/includes/ikbd.h, src/main.c:
	In IKBD_Init, connect the IKBD to the ACIA RX/TX lines
	[a9a7b0498895]

2012-10-08  Nicolas Pomarede

	* src/debug/log.c, src/debug/log.h:
	Add 'acia' and 'ikbd' keyword for the traces
	[e285f8c49158]

	* src/acia.c:
	Typo
	[85a6e5821e07]

2012-10-07  Nicolas Pomarede

	* src/ioMemTabFalcon.c, src/ioMemTabST.c, src/ioMemTabSTE.c,
	src/ioMemTabTT.c:
	Change ioMemTab* to use the new IKBD ACIA's handler for $fffc00/02
	[fe9b09c68ae1]

	* src/acia.c, src/includes/acia.h:
	Add read/write functions for the IKBD's ACIA at $fffc00/02
	[66c1af8c4b04]

	* src/main.c:
	Call ACIA_Init from Main_Init
	[207bdde675b9]

	* src/acia.c, src/includes/acia.h:
	Make ACIA_Array an extern variable
	[16cbcc30a30e]

	* src/acia.c:
	More traces for ACIA's RX
	[949b3e51e8e0]

	* src/acia.c, src/debug/log.h:
	Add traces for the ACIA
	[175ba1f68d47]

	* src/acia.c, src/includes/acia.h:
	Add Set_Timers callback function in ACIA_STRUCT
	[ffbdcb020150]

2012-10-06  Nicolas Pomarede

	* src/acia.c, src/cycInt.c, src/includes/acia.h,
	src/includes/cycInt.h:
	Add ACIA_Start_InterruptHandler_IKBD to start a timer at the
	expected baud rate
	[d6fdec366ea3]

	* src/acia.c:
	In ACIA_UpdateIRQ, complete the TX/RX conditions to set IRQ bit
	[143f72339ac5]

2012-10-04  Nicolas Pomarede

	* src/acia.c, src/includes/acia.h:
	In ACIA, improve RTS and CTS handling
	[0066fd64b356]

	* src/acia.c, src/includes/acia.h:
	ACIA : add Init, Master Reset, CR handling, default callback
	functions
	[6c07e390dc2e]

2012-09-29  Nicolas Pomarede

	* src/acia.c, src/includes/acia.h:
	Initial version of the ACIA's RX process
	[e1d52a7e8415]

2012-09-28  Nicolas Pomarede

	* src/acia.c, src/includes/acia.h:
	Initial version of the TX process
	[46fc27c94ce9]

	* src/CMakeLists.txt:
	Add acia.c
	[20dac429131f]

2012-10-29  Thomas Huth

	* src/cpu/cpummu030.c:
	MMU030: Flush ATC during cold reset
	[dab3dd4e3a38]

	* src/cpu/cpummu030.c, src/cpu/cpummu030.h, src/cpu/newcpu.c:
	Sync'ed the MMU030 reset function with Previous
	[79c2d80c6695]

2012-10-27  Eero Tamminen

	* src/vdi.c:
	fix debug output, AES intin/intout array sizes are in words
	[8cadaf4fa795]

2012-10-26  Eero Tamminen

	* doc/compatibility.html:
	add adebug reloaded. sort TT/falcon utilities by name
	[a4320ccb7ed2]

2012-10-23  Thomas Huth

	* src/cpu/cpummu030.c, src/cpu/cpummu030.h, src/cpu/newcpu.c,
	src/m68000.c:
	MMU030: Disable translation after reset. Address translation of the
	68030 is automatically disabled during reset. Now TOS can reboot
	again properly.
	[f21cce8515d9]

2012-10-23  Eero Tamminen

	* doc/release-notes.txt:
	update release notes
	[7bebc3a31f9d]

	* src/debug/profile.c:
	fix profiler assert

	One entry after profiler.size is allocated for counting invalid Pc
	entries, getting those shouldn't assert.
	[03e3437b8dac]

2012-10-22  Thomas Huth

	* doc/compatibility.html:
	Fixed the link for GEM-demo
	[339681bed8ec]

2012-10-22  Eero Tamminen

	* src/cpu/hatari-glue.c, src/debug/natfeats.c, src/debug/natfeats.h,
	src/uae-cpu/hatari-glue.c:
	bus error / priviledge exception when natfeats is used improperly
	[4ba39af76d46]

2012-10-21  Thomas Huth

	* doc/compatibility.html:
	Added some DHS demos that require an FPU
	[efba0c52654b]

2012-10-20  Eero Tamminen

	* doc/todo.txt:
	LMC1992/Microwire is done
	[1321d493b6f2]

	* src/cpu/hatari-glue.c:
	add VDI opcode check to WinUAE core similar to one in old UAE core
	[c3e35edaae93]

	* src/cpu/hatari-glue.c, src/cpu/hatari-glue.h:
	add natfeats support to WinUAE core (fixes its build)
	[00753ff2f8fd]

	* doc/todo.txt:
	update TODOs
	[ffaebb1838cd]

2012-10-20  Thomas Huth

	* src/hdc.c:
	Fixed ACSI debug print statement
	[8c66ab9ebad3]

	* doc/todo.txt:
	Removed the TT special shifter modes from the TODO list
	[15070741d6b1]

2012-10-20  Eero Tamminen

	* doc/hatari.1, doc/manual.html, doc/release-notes.txt,
	src/CMakeLists.txt, src/cart.c, src/configuration.c,
	src/debug/CMakeLists.txt, src/debug/natfeats.c,
	src/debug/natfeats.h, src/includes/configuration.h,
	src/includes/m68000.h, src/options.c, src/uae-cpu/hatari-glue.c, src
	/uae-cpu/hatari-glue.h:
	support for basic Native Features and config/option to
	enable/disable it
	[50958d336a1a]

2012-10-19  Eero Tamminen

	* doc/compatibility.html, doc/midi-linux.txt:
	add more links to docs
	[e43c5b34578d]

	* doc/release-notes.txt, src/vdi.c:
	show string arguments in AES traces
	[fe0320d25faa]

2012-10-14  Thomas Huth

	* src/cpu/cpummu030.c, src/cpu/cpummu030.h:
	MMU: Merged latest changes from Previous
	[b48c787ef1b0]

	* src/ikbd.c:
	Improved error checking in IKBD clock functions. localtime() and
	mktime() can return error codes which should be checked.
	[e91ff87020f5]

	* src/cpu/cpummu030.c:
	MMU: PTEST must return the physical address of the descriptor, not
	its content
	[06e1bdcd4dea]

	* src/cpu/newcpu.c:
	MMU: Fixed decoding of PLOAD and PFLUSH.
	[35659b714fe8]

2012-10-12  Thomas Huth

	* src/cpu/cpummu030.c, src/cpu/newcpu.c:
	Implemented bus error stack frame for 68030 MMU mode
	[07a1b76011a5]

2012-10-11  Thomas Huth

	* src/gui-sdl/sdlgui.c:
	Use unsigned char in text blitting function to avoid negative values
	for characters >= 128
	[4c45c5a1e52f]

2012-10-10  Thomas Huth

	* src/cpu/cpummu030.c:
	MMU: Another bugfix for PTEST. Cleaning debugging output. Thanks to
	Andreas Grabher for the patch.
	[a77ac3870fad]

2012-10-11  Eero Tamminen

	* python-ui/README:
	improve python ui readme
	[ffe4eb32057b]

	* doc/compatibility.html:
	add xmoon, ats works only with old core
	[fbdafca342e4]

2012-10-10  Eero Tamminen

	* src/cpu/newcpu.c:
	fix WinUAE CPU core write_log() debug output memory accesses

	use STMemory_Read* functions instead of get_long/get_byte functions
	because latter are subject to memory bank access restrictions and
	can trigger exceptions inside emulation.
	[6d3b55e1b0e5]

	* doc/release-notes.txt:
	add missing note for 1.6.2 release
	[a5f8e687fc55]

2012-10-05  Thomas Huth

	* src/cpu/cpummu030.c:
	MMU: Minor fix for PTEST and debugging messages. Thanks to Andreas
	Grabher for the patch.
	[13c4c9530359]

2012-10-04  Eero Tamminen

	* doc/compatibility.html:
	improve DSP comments, add comments about FPU, add Sweety Things
	[e9a1a4a887e7]

	* doc/emutos.txt:
	update EmuTOS compatiblity list
	[0700874bc3e4]

2012-10-03  Thomas Huth

	* doc/release-notes.txt:
	Added MMU030 to the release notes
	[199b1a9135e8]

	* src/cpu/cpummu030.c:
	Hack for using the MMU with our 'supervisor' SysMem. TOS places the
	MMU tables at address 0x700 - and for this address our
	implementation for SysMem currently always requires supervisor mode.
	Thus to get the MMU code working again, it now temporarily switches
	to supervisor mode. However, this is a hack and needs more
	investigation on a real Falcon to see what's happening there.
	[9d45b07de881]

	* src/cpu/cpummu030.c, src/cpu/cpummu030.h:
	Improved function code handling for 68030 MMU. Thanks to Andreas
	Grabher for the patch.
	[3699a903ccd5]

2012-09-27  Eero Tamminen

	* doc/manual.html:
	note about GEMDOS emulation dir sorting
	[3faa5ab1dfcf]

2012-10-03  Nicolas Pomarede

	* doc/release-notes.txt:
	Update release notes
	[1c66cb06f047]

2012-09-23  Eero Tamminen

	* doc/manual.html:
	update file selector usage info in manual
	[12c7adbc05d1]

2012-09-22  Nicolas Pomarede

	* src/sound.c:
	Use a 17 stage LFSR for the pseudo random noise generation (patch by
	David Savinkoff)
	[83ccf2853249]

2012-09-21  Nicolas Pomarede

	* doc/release-notes.txt:
	Update notes with fileselector's changes
	[9ed2e2241470]

	* src/gui-sdl/dlgFileSelect.c:
	In file selector, ensure scrollbar remains visible for large
	directory (this is a dirty fix, in that case the last files of a
	directory could still be difficult to reach using the mouse)
	[87155424986a]

	* src/gui-sdl/dlgFileSelect.c:
	Start from the previous Y position in the file selector when calling
	SDLGui_FileSelect()
	[fbb01995565e]

	* src/cpu/hatari-glue.c, src/uae-cpu/hatari-glue.c:
	When the RESET instruction is called, we must also reset the MFP and
	the FDC
	[35c8f4ef893f]

2012-09-20  Thomas Huth

	* doc/release-notes.txt, src/ikbd.c:
	Fixed IKBD set-clock function for Captain Blood. Apparently we've
	got to take care of the setting the "daylight saving time" field in
	the tm structure.
	[3d488c2a74b4]

2012-09-17  Thomas Huth

	* src/gui-sdl/dlgSystem.c:
	Removed the 040 from the MMU option
	[0a976075cf93]

	* src/cpu/newcpu.c:
	Use the right memory access functions in Exception_mmu
	[a797561062b0]

	* src/cpu/newcpu.c:
	Fixed the check for the MMU model. Thanks to Andreas Grabher for the
	hint!
	[4267d8f6063b]

2012-09-13  Eero Tamminen

	* doc/release-notes.txt:
	update release notes & fix typo
	[a9cbfa43e337]

	* doc/hatari.1, doc/manual.html, src/configuration.c, src/gemdos.c,
	src/includes/configuration.h, src/options.c:
	add --gemdos-case option for forcing file name case
	[242d3bdeada4]

	* doc/emutos.txt:
	update emutos compat list
	[a98c3ba0042b]

2012-09-10  Thomas Huth

	* src/cpu/cpummu030.c:
	Fixing limit check in MMU table search function. TOS 4.04 should now
	be bootable. Big thanks to Andreas Grabher for the patch!
	[07cd788b4fcb]

2012-09-10  Eero Tamminen

	* doc/release-notes.txt:
	update release notes
	[7737842efdfd]

	* src/gemdos.c:
	give warning if dir or pathname exceeds 8+3 chars
	[d1a2c4154d11]

2012-09-09  Thomas Huth

	* src/cpu/newcpu.c:
	Set BusErrorPC in new CPU core, too
	[9bf0bd25dbde]

	* src/cpu/cpummu030.c, src/cpu/cpummu030.h:
	Merged latest changes from Previous MMU branch
	[095995a024a2]

	* src/tos.c:
	Fixed the check for the MMU patch
	[db8551602eec]

2012-09-08  Thomas Huth

	* src/cpu/cpummu030.c:
	Fixed the copyright statement
	[2d79aa62d4a4]

	* src/cpu/newcpu.c:
	Use the right m68k_run function when MMU is enabled
	[b8c82046d4d4]

2012-09-07  Thomas Huth

	* doc/authors.txt, src/options.c, src/tos.c:
	Some more hacks needed for the 68030 MMU
	[e0c7c12b16b7]

	* src/cpu/CMakeLists.txt, src/cpu/cpummu.h, src/cpu/cpummu030.c,
	src/cpu/cpummu030.h, src/cpu/custom.c, src/cpu/gencpu.c,
	src/cpu/mmu_common.h, src/cpu/newcpu.c, src/cpu/newcpu.h,
	src/cpu/sysconfig.h:
	Integrated the 68030 MMU (unfortunately it is not working yet)
	[8521076211a3]

	* src/cpu/cpummu030.c, src/cpu/cpummu030.h:
	Added the basic code for the 68030 MMU emulation (not integrated
	yet). Thanks to Andreas Grabher for the code!
	[f4bf564cc1d9]

	* src/cpu/fpp.c:
	Silenced GCC 4.4 warnings about uninitialized variables
	[33ef4e7de43a]

2012-09-04  Eero Tamminen

	* doc/release-notes.txt:
	update release notes
	[917e036ddf4e]

	* doc/emutos.txt:
	update emutos debugging info
	[1fcf3b88fa75]

	* src/debug/console.c:
	xconout redirection handles characters with high bit set

	They seem to have high byte as 0xff, at least in Gulam, maybe due to
	sign extension.
	[264b71ac6c0c]

	* doc/emutos.txt:
	couple of extra demos compatible with emutos
	[15fe8e53e995]

	* doc/compatibility.html:
	couple of extra links to compatibility list
	[ab45e22f062b]

2012-09-01  Thomas Huth

	* .hgignore:
	Added conftypes.py to hgignore file
	[7af4dc590813]

	* Visual.Studio/VisualStudioFix.c, Visual.Studio/VisualStudioFix.h,
	src/audio.c, src/avi_record.c, src/bios.c, src/blitter.c,
	src/cart.c, src/cartData.c, src/change.c, src/clocks_timings.c,
	src/configuration.c, src/control.c, src/convert/high640x8.c,
	src/convert/low320x16.c, src/convert/low320x16_spec.c,
	src/convert/low320x32.c, src/convert/low320x32_spec.c,
	src/convert/low320x8.c, src/convert/low640x16.c,
	src/convert/low640x16_spec.c, src/convert/low640x32.c,
	src/convert/low640x32_spec.c, src/convert/low640x8.c,
	src/convert/macros.h, src/convert/med640x16.c,
	src/convert/med640x16_spec.c, src/convert/med640x32.c,
	src/convert/med640x32_spec.c, src/convert/med640x8.c,
	src/convert/routines.h, src/convert/vdi16.c, src/convert/vdi2.c,
	src/convert/vdi4.c, src/cpu/compat.h, src/cpu/hatari-glue.c, src/cpu
	/hatari-glue.h, src/cpu/maccess.h, src/cpu/memory.c,
	src/cpu/memory.h, src/cpu/options_cpu.h, src/cpu/sysconfig.h,
	src/createBlankImage.c, src/cycInt.c, src/cycles.c,
	src/debug/68kDisass.c, src/debug/68kDisass.h, src/debug/breakcond.c,
	src/debug/breakcond.h, src/debug/console.c, src/debug/console.h,
	src/debug/debugInfo.c, src/debug/debugInfo.h,
	src/debug/debug_priv.h, src/debug/debugcpu.c, src/debug/debugcpu.h,
	src/debug/debugdsp.c, src/debug/debugdsp.h, src/debug/debugui.c,
	src/debug/debugui.h, src/debug/evaluate.c, src/debug/evaluate.h,
	src/debug/history.c, src/debug/history.h, src/debug/log.c,
	src/debug/log.h, src/debug/profile.c, src/debug/profile.h,
	src/debug/symbols.c, src/debug/symbols.h, src/dialog.c, src/dim.c,
	src/dmaSnd.c, src/falcon/crossbar.c, src/falcon/crossbar.h,
	src/falcon/hostscreen.c, src/falcon/hostscreen.h,
	src/falcon/microphone.c, src/falcon/microphone.h,
	src/falcon/nvram.c, src/falcon/nvram.h, src/falcon/videl.c,
	src/falcon/videl.h, src/fdc.c, src/file.c, src/floppy.c,
	src/gemdos.c, src/gui-osx/AlertHooks.h, src/gui-osx/AlertHooks.m,
	src/gui-osx/CreateFloppyController.h, src/gui-
	osx/CreateFloppyController.m, src/gui-osx/PrefsController.h, src
	/gui-osx/PrefsController.m, src/gui-osx/Shared.h, src/gui-
	osx/Shared.m, src/gui-sdl/dlgAbout.c, src/gui-sdl/dlgDevice.c, src
	/gui-sdl/dlgFileSelect.c, src/gui-sdl/dlgFloppy.c, src/gui-
	sdl/dlgHardDisk.c, src/gui-sdl/dlgJoystick.c, src/gui-
	sdl/dlgKeyboard.c, src/gui-sdl/dlgMain.c, src/gui-sdl/dlgMemory.c,
	src/gui-sdl/dlgNewDisk.c, src/gui-sdl/dlgRom.c, src/gui-
	sdl/dlgScreen.c, src/gui-sdl/dlgSound.c, src/gui-sdl/dlgSystem.c,
	src/gui-sdl/sdlgui.c, src/gui-win/opencon.c, src/hd6301_cpu.c,
	src/hd6301_cpu.h, src/hdc.c, src/ide.c, src/ikbd.c,
	src/includes/audio.h, src/includes/avi_record.h,
	src/includes/blitter.h, src/includes/cart.h, src/includes/change.h,
	src/includes/clocks_timings.h, src/includes/configuration.h,
	src/includes/control.h, src/includes/createBlankImage.h,
	src/includes/cycInt.h, src/includes/cycles.h, src/includes/dialog.h,
	src/includes/dim.h, src/includes/dmaSnd.h, src/includes/fdc.h,
	src/includes/file.h, src/includes/floppy.h, src/includes/gemdos.h,
	src/includes/gemdos_defines.h, src/includes/hdc.h,
	src/includes/ide.h, src/includes/ikbd.h, src/includes/ioMem.h,
	src/includes/ioMemTables.h, src/includes/joy.h,
	src/includes/keymap.h, src/includes/m68000.h, src/includes/main.h,
	src/includes/memorySnapShot.h, src/includes/mfp.h,
	src/includes/midi.h, src/includes/msa.h, src/includes/options.h,
	src/includes/paths.h, src/includes/pixel_convert.h,
	src/includes/psg.h, src/includes/reset.h, src/includes/resolution.h,
	src/includes/rs232.h, src/includes/rtc.h, src/includes/scandir.h,
	src/includes/screen.h, src/includes/screenSnapShot.h,
	src/includes/sdlgui.h, src/includes/shortcut.h,
	src/includes/sound.h, src/includes/spec512.h, src/includes/st.h,
	src/includes/stMemory.h, src/includes/statusbar.h,
	src/includes/str.h, src/includes/tos.h, src/includes/utils.h,
	src/includes/vdi.h, src/includes/video.h, src/includes/wavFormat.h,
	src/includes/xbios.h, src/includes/ymFormat.h, src/includes/zip.h,
	src/ioMem.c, src/ioMemTabFalcon.c, src/ioMemTabST.c,
	src/ioMemTabSTE.c, src/ioMemTabTT.c, src/joy.c, src/keymap.c,
	src/m68000.c, src/main.c, src/memorySnapShot.c, src/mfp.c,
	src/midi.c, src/msa.c, src/options.c, src/paths.c, src/printer.c,
	src/psg.c, src/reset.c, src/resolution.c, src/rs232.c, src/rtc.c,
	src/scandir.c, src/screen.c, src/screenSnapShot.c, src/shortcut.c,
	src/sound.c, src/spec512.c, src/st.c, src/stMemory.c,
	src/statusbar.c, src/str.c, src/tos.c, src/uae-cpu/build68k.c, src
	/uae-cpu/fpp.c, src/uae-cpu/gencpu.c, src/uae-cpu/hatari-glue.c, src
	/uae-cpu/hatari-glue.h, src/uae-cpu/maccess.h, src/uae-cpu/memory.c,
	src/uae-cpu/memory.h, src/uae-cpu/newcpu.c, src/uae-cpu/newcpu.h,
	src/uae-cpu/options_cpu.h, src/uae-cpu/readcpu.c, src/uae-
	cpu/readcpu.h, src/uae-cpu/sysdeps.h, src/utils.c, src/vdi.c,
	src/video.c, src/wavFormat.c, src/xbios.c, src/ymFormat.c,
	src/zip.c, tests/tosboot/disk/common.c, tests/tosboot/disk/common.h,
	tests/tosboot/disk/gemdos.c, tests/tosboot/disk/minimal.c,
	tools/hmsa/floppy.c, tools/hmsa/floppy.h, tools/hmsa/hmsa.c,
	tools/hmsa/hmsa.h:
	Replaced 'GNU Public License' with the correct 'GNU General Public
	License'. Thanks to Teemu Hukkanen for the hint!
	[e39f2ac97eb5]

2012-08-18  Eero Tamminen

	* src/vdi.c:
	add intin array info to AES function traces
	[4a8eeaa12138]

2012-07-29  Eero Tamminen

	* tests/tosboot/disk/ahcc-gemdos, tests/tosboot/disk/ahcc-minimal,
	tools/hconsole/example-commands, tools/hconsole/hconsole.py:
	add "--conout 2" to Hatari remote API usage
	[9c996dcf4338]

	* doc/manual.html:
	add --conout to manual
	[7736a22fe593]

	* doc/hatari.1:
	fix typo
	[a5f84db3b84f]

	* doc/emutos.txt:
	emutos doc updates
	[fd70815b9f3d]

	* src/options.c, src/resolution.c:
	output what value was set by options if it's not otherwise shown by
	UI

	CPU level etc are shown in statusbar and window size is visible
	there too, but for several other options there's no feedback whether
	Hatari got correct values.

	This is important because their values are typically parsed with
	atoi(), but that stops parsing at first unrecognized value (e.g. 0x2
	is interpreted as 0).

	I noticed this when testing expression evaluation with debugger
	"setopt" command, "1+1" yields "$2" which is interpreted as 0...
	[82f318fac54d]

	* src/bios.c:
	fix Bios trace args parsing and be more verbose about Bios Setexe()
	args
	[cb56a1f6103e]

	* src/debug/debugui.c:
	fix illegal memory access in previous expression evaluation fix

	If none of given chars is found, strcspn() seems to return string
	len, not zero, this was undocumented in its the manual page.
	[ec2687b79c82]

2012-07-26  Eero Tamminen

	* tests/debugger/makefile, tests/debugger/test-dummies.c:
	fix broken debugger test building

	- add config.h and history.c for makefile
	- added needed extra fake stuff to test-dummies
	[afdfe859e066]

	* tests/debugger/test-breakcond.c, tests/debugger/test-evaluate.c:
	improved test comment
	[4ba906589f74]

2012-07-22  Eero Tamminen

	* doc/release-notes.txt:
	add --conout to release notes
	[cd248423871e]

	* src/debug/console.c, src/options.c:
	improved option descriptions
	[fe4db7ac4562]

	* doc/hatari.1, src/bios.c, src/debug/CMakeLists.txt,
	src/debug/console.c, src/debug/console.h, src/debug/debugcpu.c,
	src/includes/options.h, src/options.c:
	Much improved console output re-direction support

	- Instead of catching redirected bconout() BIOS function, catch
	calls to xcounout vector function directly as this will catch also
	EmuTOS panic and MiNT console messages, not just TOS Bios calls.

	- Add separate --conout Hatari command line option and internal
	(non-configurable) ConOutDevice variable for this.

	- Move VT52 emulation and other relevant functionality from bios.c
	to new console.[ch] file and enable/call this in/from debugcpu.c
	when a ConOutDevice is specified by user.
	[0388a39cc923]

	* doc/authors.txt, doc/release-notes.txt:
	update authors & release notes
	[0b5eabe36557]

	* src/control.c, src/debug/debugui.c, src/debug/debugui.h:
	Debugger expression evaluation improvements

	- Fix: expression expansion doesn't mess lines in command line
	history, expression evaluation always allocs new buffer

	- Rename DebugUI_RemoteParse() to more apt DebugUI_ParseLine(), as
	it can be used also internally in Hatari (mainly when temporarily
	asking Hatari C-code to output disassembly etc output with
	debugger at appropriate points)

	- Support expression expansion also in DebugUI_ParseLine().
	 -> means that they can be used also through the control socket,
	not just when using Hatari directly

	- Either single or double quotes can be used to mark expressions
	(as quoting double quotes from C-code is pain)
	[2de215cbb3af]

2012-07-22  Thomas Huth

	* doc/compatibility.html:
	Converted the compatibility list to HTML 4.01 Strict
	[7c42145da62c]

	* doc/manual.html:
	Sync'ed the parameter list with the manual, using the latest version
	of groff which generates somewhat better HTML than the version we
	used in the past (no more ugly HTML tables here). Also fixed some
	more transitional HTML so that the manual is now "HTML 4.01 Strict".
	[832fda8e31f7]

2012-07-21  Thomas Huth

	* doc/compatibility.html, doc/manual.html, doc/toc.js:
	Switched to a better TOC script and fixed internal links.
	[c2f5c1a30a07]

2012-07-20  Eero Tamminen

	* src/statusbar.c:
	fix titlebar max message len ("REC" text got overdrawn with low res
	no-borders)
	[4bf3634f7160]

	* src/CMakeLists.txt:
	fix comment typos
	[13e7758592b2]

2012-07-20  Thomas Huth

	* doc/compatibility.html, doc/manual.html, doc/toc.js, doc/update-
	index.sh:
	The index of the HTML documentation is now generated via a small
	JavaScript program. This way the index is always up-to-date, and we
	get rid of the old-fashioned named anchors in the HTML files.
	[72e48df295c7]

2012-07-17  Thomas Huth

	* src/video.c:
	Save new TT video settings to memory snapshots, too. Thanks to
	Cyprian Konador for the patch!
	[e7ac16e1aec0]

2012-07-14  Thomas Huth

	* src/falcon/videl.c, src/memorySnapShot.c:
	Fixed crash in Videl mode when loading memory snapshots. The
	videl_zoom structure must _not_ be saved, it contains malloc'ed
	pointers that became invalid when loading a snapshot. The
	information in this structure is regenerated during a resolution
	switch anyway, so we can simply omit it from the snapshots.
	[34c01e9910bc]

	* src/falcon/videl.c, src/includes/screen.h, src/video.c:
	Improved TT video emulation.
	- Extend the ST palette registers from 9bit to 12bit for ST modes
	- Duochrome mode instead monochrome for ST High;
	- Implementation of TT SampleHold i TT Hypermono video mode Thanks to
	Cyprian Konador for the patch!
	[5ae66837962d]

2012-06-24 : *** Version 1.6.2 ***

2012-06-24  Nicolas Pomarede

	* doc/compatibility.html, doc/doxygen/Doxyfile, doc/emutos.txt,
	doc/manual.html, doc/release-notes.txt, doc/todo.txt, hatari.spec,
	readme.txt, src/gui-osx/English.lproj/InfoPlist.strings, src/gui-
	osx/French.lproj/InfoPlist.strings, src/gui-osx/Info-Hatari.plist,
	src/includes/main.h:
	New release 1.6.2, increase version in corresponding files
	[84390a6f7417] [tip]

2012-06-23  Nicolas Pomarede

	* src/debug/breakcond.c, tests/debugger/test-dummies.c:
	typo AUE -> UAE
	[a7ec17bc2684]

2012-06-21  Eero Tamminen

	* doc/emutos.txt:
	update comments to v0.8.7 release
	[13f27005ff37]

2012-06-19  Eero Tamminen

	* src/gui-sdl/dlgFileSelect.c:
	fix potential double cursor on file selector errors

	(when it's called directly from keyboard shortcut, not from options
	dialog)
	[c36a1c3cbfe1]

	* doc/release-notes.txt, src/gui-sdl/dlgMain.c:
	fix double mouse pointer on snashot restore

	Thanks to Charlie Nolan for notifying about the issue and pointing
	out where the bug is!
	[e07eea78ad20]

2012-06-17  Nicolas Pomarede

	* src/sound.c:
	Improve YM2149's output with an anti-alias piecewise selective
	filter (patch by David Savinkoff)
	[65243a46bf4d]

2012-06-16  Eero Tamminen

	* readme.txt:
	add (build verification) note about TOS tester to readme
	[dffd611d2de7]

	* tests/tosboot/bootauto.st.gz, tests/tosboot/bootdesk.st.gz,
	tests/tosboot/disk/GEMDOS.PRG, tests/tosboot/disk/MINIMAL.PRG,
	tests/tosboot/disk/common.c, tests/tosboot/tos_tester.py:
	make sure all tester output gets to screen before screenshot
	[3859ba93e9f0]

2012-06-10  Nicolas Pomarede

	* doc/images/sound.png, doc/manual.html, doc/release-notes.txt:
	Update release notes and manual with --sound-sync option
	[426af0760de1]

	* doc/hatari.1, doc/manual.html, src/audio.c, src/configuration.c, src
	/gui-sdl/dlgSound.c, src/includes/audio.h,
	src/includes/configuration.h, src/main.c, src/options.c:
	Add --sound-sync option to synchronize video with OS audio if needed
	(patch by David Savinkoff) In case your OS audio's driver has some
	latency issues, this option can help keeping video and audio
	synchronized by speeding up or slowing down video emulation by very
	small amounts of microseconds.
	[0c0d05fc9480]

2012-06-09  Nicolas Pomarede

	* doc/todo.txt:
	For the todo : possible crashes with dma sound are only in Falcon
	mode, not STE.
	[ca7b99d807f7]

2012-06-09  Thomas Huth

	* src/cpu/newcpu.c, src/cpu/sysdeps.h:
	Fix cycle-exact counting in WinUAE CPU mode
	[77967f0f9102]

2012-06-09  Eero Tamminen

	* doc/manual.html:
	update features list
	[cf3679648104]

	* doc/todo.txt:
	todo note about DMA segfault
	[a7e8f429a978]

	* src/debug/symbols.c:
	accept "." in symbol names[1], tell addresses on multiple matches

	[1] useful when symbol list contains also object file names
	[74c4a402c2c3]

	* tests/tosboot/bootauto.st.gz, tests/tosboot/bootdesk.st.gz,
	tests/tosboot/disk/GEMDOS.PRG, tests/tosboot/disk/MINIMAL.PRG:
	update test binaries correspondingly
	[e893a3129213]

	* tests/tosboot/disk/common.c, tests/tosboot/disk/common.h,
	tests/tosboot/disk/gemdos.c, tests/tosboot/disk/minimal.c:
	wait for Enter, not any key

	Otherwise (space) keypress TOS tester uses to dismiss startup memory
	check can dismiss the test program when fast-forward is being used.
	[f32f0e185eec]

	* tests/tosboot/readme.txt:
	update TOS tester readme
	[0eb24ca73a50]

2012-06-06  Eero Tamminen

	* doc/compatibility.html, doc/release-notes.txt, doc/todo.txt:
	add misc missing items from mailing list to docs
	[6cb54e08e04e]

	* src/configuration.c:
	enable cycle exact by default for WinUAE

	user typically doesn't have this on his hatari config, and without
	this it would get eventually saved as false, which would be pretty
	bad for Falcon compatibility...
	[9649e5cea16f]

	* src/includes/unzip.h:
	remove the silly OF macros from unzip.h
	[c5da2828cefd]

2012-06-05  Eero Tamminen

	* doc/release-notes.txt:
	release notes update:

	- split DSP/WinUAE/oldCore changes
	- formatting improvements
	- add couple of new items
	[e66232c46ca7]

	* src/options.c, src/tos.c:
	WinUAE: when machine type changes, set FPU for TT, disable it for
	others

	Set also 24-bit addressing and disable 040 MMU when ST/STE/TT/Falcon
	machine type is set.
	[7336d2d8fb72]

	* src/change.c:
	reset emulation if FPU type changes
	[df7a2400f845]

	* src/configuration.c:
	default to Falcon with WinUAE, old CPU still defaults to ST
	[95f03eda407e]

2012-06-04  Eero Tamminen

	* tests/tosboot/tos_tester.py:
	test also (one) VDI mode
	[a312e1bc0937]

2012-05-31  Eero Tamminen

	* tests/tosboot/tos_tester.py:
	update tester checks as latest emutos snapshot fixed serial output
	[f8b7da6c61de]

2012-06-04  Thomas Huth

	* src/cpu/hatari-glue.c, src/cpu/newcpu.c, src/cpu/newcpu.h:
	Fixed Hatari's illegal opcodes in WinUAE mode
	[5b749a42805d]

2012-05-31  Thomas Huth

	* CMakeLists.txt:
	Abort build-configuration when zlib is missing
	[080d65ac4659]

2012-05-30  Eero Tamminen

	* tools/zip2st.1, tools/zip2st.sh:
	skip intermediate dirs in zip2st
	[00ff7f1f17b6]

	* tools/hmsa/hmsa.c:
	only last . in extension name should matter for hmsa
	[0644105db272]

2012-05-28  Eero Tamminen

	* src/includes/configuration.h:
	fix FPU type values (patch from Previous emulator)
	[6ccc4727441f]

	* src/gemdos.c:
	show drive mask with "info gemdos"
	[06bf8c690bed]

2012-05-28  Nicolas Pomarede

	* doc/release-notes.txt:
	Reorder changes into groups
	[b92c56fbca4e]

	* src/dmaSnd.c, src/sound.c:
	On STE, make DMA sound's volume louder compared to YM2149's volume
	(patch by David Savinkoff)
	[34b3666bd4c8]

2012-05-28  Thomas Huth

	* src/cpu/custom.c, src/cpu/newcpu.c:
	Hacked the plain 68000 modes of the WinUAE core to work with Hatari,
	too
	[a941332bd17b]

	* src/cpu/cpummu.c, src/cpu/gencpu.c, src/cpu/memory.h,
	src/cpu/newcpu.c:
	Fixed compiler warnings
	[fc374d482642]

	* src/m68000.c:
	Fix for GEMDOS HD not working anymore when changing WinUAE CPU
	level. The currprefs.cpu_level variable was not updated in WinUAE
	mode, causing GemDOS_OpCode() to read the wrong parameters from the
	stack.
	[4c9d176dbc37]

2012-05-28  Nicolas Pomarede

	* src/dmaSnd.c:
	Don't output any sound when LMC mixing is set to DMA, but DMA is OFF
	(patch by David Savinkoff)
	[f18ffd270c98]

2012-05-27  Nicolas Pomarede

	* doc/authors.txt:
	Add more items to David Savinkoff's list of contribution
	[08974ef4b727]

	* src/sound.c:
	Add comments describing the filtering at the output of the YM2149
	[75cfad140461]

2012-05-26  Nicolas Pomarede

	* src/sound.c:
	Better model when samples are played using "Quartet mode" (patch by
	David Savinkoff) In "Quartet Mode", samples are played by modulating
	the volume of the 3 YM2149 voices after setting the period to 0 and
	enabling tones on the 3 voices.
	[1ae3882984ca]

2012-05-25  Thomas Huth

	* src/cpu/cpu_prefetch.h, src/cpu/cpummu.c, src/cpu/cpummu.h,
	src/cpu/gencpu.c, src/cpu/m68k.h, src/cpu/newcpu.c,
	src/cpu/newcpu.h, src/cpu/sysconfig.h:
	Changed CR-LF line endings to normal LF mode
	[3340674305cb]

	* src/cpu/custom.c, src/cpu/custom.h, src/cpu/events.h,
	src/cpu/events_jit.h, src/cpu/events_normal.h, src/cpu/rpt.h:
	Removed/disabled some unused code
	[74f3e837b511]

2012-05-23  Eero Tamminen

	* tests/tosboot/disk/common.c:
	fix test variable name
	[5340f289e88c]

2012-05-22  Eero Tamminen

	* tests/tosboot/tos_tester.py:
	512kB isn't valid memsize to test for Falcon/TT
	[5962562d2f49]

	* python-ui/dialogs.py, python-ui/hatari.py, python-ui/release-
	notes.txt:
	python GUI support for --desktop-st and --force-max
	[90395a13fe6e]

	* python-ui/README:
	fix path comment
	[5ab09a1ca6a8]

2012-05-21  Eero Tamminen

	* python-ui/dialogs.py, src/gui-sdl/dlgScreen.c, src/gui-
	sdl/dlgSystem.c:
	update gui strings
	[8700e4f0a095]

	* tests/tosboot/tos_tester.py:
	add tester TODO
	[3dcb45c12e68]

	* doc/release-notes.txt:
	update release notes
	[8424fdd93df5]

	* tools/hatari-local-midi-ring.sh:
	fix script arg parsing
	[3f7d4a13b0ea]

2012-05-20  Eero Tamminen

	* tests/tosboot/disk/TEXT, tests/tosboot/disk/gemdos.c,
	tests/tosboot/tos_tester.py:
	check either serial or printer output depending on TOS version + add
	fast option

	Printer doesn't work for autostarted programs with some normal TOS
	version whereas serial works for all normal TOS versions, but not
	for EmuTOS. So added serial support and checking different device
	output based on TOS version.

	Added --fast option to run tests faster. If there are failures, one
	should check them without that (i.e. --fastfdc/--fast-forward).

	Fix to cleanup device output files before running next test. Old
	files were causing some fails.
	[e614612d5543]

	* tests/tosboot/bootauto.st.gz, tests/tosboot/bootdesk.st.gz,
	tests/tosboot/disk/GEMDOS.PRG, tests/tosboot/disk/MINIMAL.PRG:
	update test binaries accordingly
	[cd5254e62550]

	* tests/tosboot/disk/common.c, tests/tosboot/disk/common.h,
	tests/tosboot/disk/gemdos.c, tests/tosboot/disk/minimal.c:
	add console and serial output testing
	[6bb6a6d9d966]

	* tests/tosboot/readme.txt:
	minor tos-tester readme improvements
	[351618263bc9]

	* doc/todo.txt:
	add note about TOS startup printer issue + trivial text improvements
	[b4a5c8971302]

	* src/change.c, src/includes/rs232.h, src/rs232.c:
	allow just one of RS232 directions to be configured

	This is similar to the other devices and allows disabling device by
	giving empty path.

	With this, we need to create the RS232 input thread (which
	redundantly wakes up at 5Hz interval) only if RS232 input is
	actually configured in.

	Removed (now) redundant bConnectedRS232 variable.
	[7e01cbc6c2c9]

	* tools/hatari-local-rs232.sh:
	fix rs232 script arg passing and show hatari path
	[99fc2dacb6b5]

2012-05-19  Nicolas Pomarede

	* doc/compatibility.html, doc/release-notes.txt:
	Update docs with 'The Musical Wonders 1990' by Offbeat
	[63aabf41135a]

	* src/video.c:
	Allow bottom border to be removed when switch back to 50 Hz is made
	at cycle 504 (fix 'Musical Wonders 1990' by Offbeat)
	[941912e2e872]

	* src/video.c:
	Fix a potential wrong border removal when freq switch was at cycle
	512/0
	[a2b5d438fd4e]

2012-05-18  Eero Tamminen

	* src/xbios.c:
	fix Devconnect trace arg, add args for more DSP and palette XBios
	call traces
	[6d08a3d50c34]

	* doc/emutos.txt:
	more info on debugging + other doc improvements
	[0ca5bffa065b]

	* doc/emutos.txt:
	reason for Cubase crash from Vincent
	[424184e995c7]

	* doc/emutos.txt:
	update for latest emutos CVS snapshot state
	[aa64c85aa6be]

	* doc/compatibility.html:
	bragg256 doesn't anymore work with TT emu
	[6f1445443b19]

2012-05-17  Eero Tamminen

	* doc/release-notes.txt:
	add note about videl borders
	[9829f168f45b]

	* doc/midi-linux.txt:
	correct midi option name
	[f95069503e49]

2012-05-11  Thomas Huth

	* src/video.c:
	Removed the redundant VideoShifterByte variable
	[c6258e39d861]

	* doc/release-notes.txt, src/ikbd.c, src/memorySnapShot.c:
	Implemented IKBD set-clock function (fixes the game 'Zombi')
	[666085b99271]

2012-05-08  Nicolas Pomarede

	* doc/compatibility.html, doc/release-notes.txt:
	Update release notes for The Wave Of the Future by ICE and
	Electrocution I by Sphere
	[7b8d44ea6076]

	* src/cycles.c:
	For BCLR/BSET/BCHG, the write is effective at the end of the
	instruction, not 4 cycles before like MOVE (fix bclr/bset #1,$ff820a
	used for bottom border removal in Electrocution I by Sphere in Stax
	Menu 66 and top border removal in The Wave Of The Future by ICE)
	[ab6c12ce3253]

2012-05-05  Nicolas Pomarede

	* doc/release-notes.txt:
	Typo
	[e576d359ead0]

	* doc/release-notes.txt:
	Update release notes for JMP with illegal address exception
	[714d109e08d4]

	* src/uae-cpu/gencpu.c:
	Fix return PC when JMP generates an illegal address exception (fix
	Sherman Cracktro by The Ivisibles in No Extra V2 compilation)
	[c88d85808e2e]

2012-04-16  Eero Tamminen

	* doc/emutos.txt:
	update emutos compatilibity to latest CVS snapshot state
	[04da9da24462]

	* doc/compatibility.html:
	add gemdemo url
	[8501a44a9071]

2012-04-09  Nicolas Pomarede

	* src/includes/ym2149_fixed_vol.h, src/sound.c:
	For the volumes table [32][32][32] uses geometric mean interpolation
	(patch by David Savinkoff) Also fix a possible overflow when
	building the linear mixing table.
	[28e1fec33c79]

2012-04-07  Nicolas Pomarede

	* doc/compatibility.html, doc/release-notes.txt:
	Add 'Antiques' by Dune/Sector One to the docs
	[4b6cd4e92fdc]

2012-03-28  Nicolas Pomarede

	* doc/release-notes.txt:
	Update video changes for STE overscan
	[b50bd7f1194a]

2012-03-27  Thomas Huth

	* src/ioMemTabTT.c:
	0xff8783 should rather return 0 instead of 0xff. Thanks to Uwe
	Seimet for the hint.
	[55a80bd4b855]

2012-03-27  Laurent Sallafranque

	* src/falcon/videl.c:
	fix: videl borders can be negative. In this case, I fix them to 0
	[f1f5e40ef7dc]

2012-03-28  Nicolas Pomarede

	* src/video.c:
	On STE, hi/lo switch at cycles 508/4 is also adding 20 bytes to left
	border The switches at pos 504/4 and 508/4 are both giving 20 bytes
	more in the left border and a total of 224 bytes for an overscan
	line without stabilizer (instead of the usual 230 bytes with
	stabilizer on STF/STE)
	[cd9ff82e11a4]

2012-03-25  Eero Tamminen

	* doc/manual.html:
	improve manual's debugger & perf section texts a bit
	[b2305af6d946]

2012-03-17  Eero Tamminen

	* doc/release-notes.txt:
	update release notes
	[b57dd4f9eabb]

	* src/change.c, src/includes/printer.h, src/printer.c:
	remove double buffering from printer output

	simplified the code by removing the buffering code in Hatari and
	relying on C-library FILE buffering, which can easily be disabled
	with setvbuf(fp, NULL, _IONBF, 0);

	handle output file similarly to midi & rs232, allow disabling it by
	setting filename empty in Hatari command line.
	[4fdb81e989c8]

2012-03-15  Nicolas Pomarede

	* doc/release-notes.txt:
	Update release notes with Delirious Demos IV
	[d47f6ea98dea]

2012-03-13  Nicolas Pomarede

	* doc/compatibility.html:
	Update notes for the Delirious Demos IV
	[7b65acb88010]

	* src/video.c:
	On STE when writing to video address hi byte $ff8205, the value is
	masked with $3f (fix STE detection in the Delirious Demo IV)
	[73a4e06e5b7c]

2012-03-11  Eero Tamminen

	* src/bios.c, src/debug/log.c, src/xbios.c:
	fix warnings & errors when tracing is disabled
	[357c9f49ad7b]

	* src/debug/68kDisass.c:
	const offset variables to remove compiler warning from disassember

	(apparently then gcc can verify that array offsets are valid)
	[11e73a29f8fb]

2012-03-09  Laurent Sallafranque

	* src/falcon/videl.c:
	fix TT rendering.
	[e4412685ff0c]

2012-03-08  Eero Tamminen

	* src/statusbar.c:
	more debug/backtrace support to find out what things are telling
	statusbar conflicting info on screen size
	[8d28b0f3124c]

2012-03-07  Laurent Sallafranque

	* src/falcon/videl.c:
	fix a bug when displaying true color 40 colums and switching from
	borders to no borders.
	[1bf31f9f68e8]

2012-03-07  Thomas Huth

	* src/cpu/fpp.c, src/uae-cpu/fpp.c:
	Fixed format string for long doubles.
	[6c9f5bca4cae]

	* src/bios.c, src/xbios.c:
	Fixed compiler warnings. Clang complained about bad format
	parameters.
	[42931ca96f0c]

2012-03-07  Laurent Sallafranque

	* src/falcon/videl.c:
	fix left/right borders. This seems correct except for ST Low and med
	res.
	[9737e7bade6f]

	* src/falcon/videl.c, src/falcon/videl.h, src/ioMemTabFalcon.c,
	src/video.c:
	Move all IOmem Falcon registers into Videl + code cleaning.
	[22d3c9f30097]

2012-03-05  Laurent Sallafranque

	* src/cpu/falcon_cycle030.h, src/cpu/table68k:
	MMU patch for Motorola undocumented MMU instructions. Thanks to
	Andreas for the patch.
	[f96e0cfe4c43]

	* src/cpu/md-fpp.h:
	fix to_exten code. Thanks to Andreas for the patch.
	[e644515445ae]

2012-03-04  Eero Tamminen

	* doc/manual.html, doc/release-notes.txt:
	update release notes and manual in regards to debugging improvements
	[14ec78d97dd0]

	* src/falcon/dsp.c, src/falcon/dsp.h, src/falcon/dsp_cpu.c,
	src/falcon/dsp_cpu.h, src/falcon/dsp_disasm.c:
	DSP PC is 16-bit, propagate it and instruction len as such when
	disassembling
	[d9a5b4d00c64]

	* src/debug/debugdsp.c, src/falcon/dsp_disasm.c:
	move DSP profile output to end of disassembly instead of its own
	line

	This way it's more readable and dsp_symbols trace works ok with
	profiling data
	[f2fccbb456c9]

	* src/debug/68kDisass.c, src/debug/debugcpu.c:
	move profile output to end of disassembly instead of its own line

	The result is much more readable and with this dsp_symbols trace
	works correctly also when profiling is enabled.
	[f8cfd15f0bd9]

2012-03-04  Nicolas Pomarede

	* doc/release-notes.txt:
	Update release notes with FDC changes
	[0811192a2361]

2012-03-04  Eero Tamminen

	* src/bios.c, src/debug/debugInfo.c, src/includes/bios.h,
	src/includes/xbios.h, src/xbios.c:
	add "info" command opcode table otputs for BIOS & XBIOS too

	(gemdos, vdi & aes already had those.)
	[79c36bc180df]

	* src/gemdos.c:
	remove ifdeffed gemdos code and add hex opcodes to remaining trace
	output

	- the code has been ifdeffed out for years, it's time for it to go
	- all gemdos, bios and xbios calls traces show now hex opcodes,
	similarly to the "info" command opcode tables
	[8745c01c2717]

	* src/gemdos.c:
	show args for all gemdos calls with none, word or long arg, as hex
	[92c146e4b0fc]

	* src/xbios.c:
	show args for most XBIOS calls when tracing + refactoring:
	- do Params+=SIZE_WORD once in caller instead of everywhere
	- instead of build time XBIOS_DEBUG, do same with run-time tracing
	- show opcodes as hex

	Full call signature is shown for all XBios functions that take
	either:
	- no args
	- single word
	- single long/pointer
	- two words
	[8d35a4b59922]

	* src/bios.c:
	show args for all BIOS functions when tracing + refactoring:
	- +=SIZE_WORD is done in caller, once
	- everything returns false, so do it only in caller
	- show opcodes as hex
	[4cebf4f74d12]

	* doc/emutos.txt:
	update EmuTOS STE/Falcon compatibility for CVS version 20120301
	[1e213ce33af9]

2012-03-04  Nicolas Pomarede

	* src/psg.c:
	After a reset, there should be no drive selected FDC commands after
	a reset are supposed to be ignored until a drive is selected, for
	example we should ignore the 'step without update' command 0x20 in
	the middle of the 'Rising Force' demo (buggy loader) (fix 'Rising
	Force' by Holocaust)
	[93cf6e440bf9]

	* src/fdc.c:
	Print logical track and physical track in FDC traces
	[399b1457081e]

	* src/fdc.c:
	When no drive is selected, we should ignore FDC type I, II and III
	commands Hatari previously defaulted to drive A: in that case, which
	was wrong as seen with the 'Step without update' command used in
	Japtro's loader. (fix 'Japtro' by Holocaust)
	[f0dd0e53981a]

2012-03-03  Laurent Sallafranque

	* src/falcon/videl.c:
	add correct values for left/right borders.
	[51510dd89a00]

2012-03-03  Eero Tamminen

	* src/bios.c, src/xbios.c:
	show in traces arg for all bios & xbios calls taking WORD arg

	- Doing this generically allows removing the separate functions
	for that
	- I changed also args in Rwabs() output to be in the order they're
	in the that Bios() call, otherwise people don't know what the args
	are without looking into Hatari code
	- Add (visually aligned) call opcode to all bios&xbios trace outputs
	[b2f3384406d2]

	* doc/compatibility.html, doc/emutos.txt:
	update EmuTOS notes based on latest 20120301 CVS snapshot
	[db55a21ee3be]

	* doc/compatibility.html:
	fix notes on what falcon progs need
	[5c699eb0dfd8]

2012-02-28  Laurent Sallafranque

	* src/falcon/videl.c, src/falcon/videl.h, src/ioMemTabFalcon.c:
	added register $ff820a to Videl.
	[e31fccbd8947]

	* src/falcon/videl.c:
	fix VIDEL borders display bug when displaying in fullscreen + add no
	border with monochrome monitor.
	[b989bc1c9f87]

2012-02-27  Eero Tamminen

	* doc/manual.html, doc/release-notes.txt, doc/todo.txt,
	src/debug/debugcpu.c, src/debug/debugdsp.c, src/debug/log.c,
	src/debug/log.h:
	add tracing of debugger (CPU & DSP) symbol addresses

	If you have symbol output for your program, this can be used e.g. to
	get complete function trace for your program
	[823f998c121a]

	* doc/compatibility.html:
	typo
	[01baf1548ad9]

2012-02-26  Eero Tamminen

	* doc/compatibility.html:
	update compatiblity according mails on hatari-devel 2/2012
	[5bb19c725a99]

2012-02-26  Nicolas Pomarede

	* doc/release-notes.txt, src/ikbd.c:
	Update release notes with ACIA TX IRQ
	[0a241b3444e2]

	* src/ikbd.c:
	Handle TX interrupt in the ACIA (eg by sendding 0xb6 instead of 0x96
	after resetting the ACIA) (fix the game 'Hades Nebula')
	[accdc01d11b4]

2012-02-24  Laurent Sallafranque

	* src/falcon/videl.c:
	VIDEL: all borders are optimized now.
	[0d47e40bdf08]

	* src/falcon/videl.c:
	VIDEL: upper and lower borders optimisations in rendering zoom mode.
	Still to optimize: left/right borders
	[964ce681efcf]

2012-02-23  Laurent Sallafranque

	* src/falcon/videl.c:
	add left/right borders for the falcon + code optimized +
	ConfigureParams.Screen.bAllowOverscan
	[34160d3d5191]

2012-02-23  Eero Tamminen

	* doc/authors.txt, doc/release-notes.txt:
	update authors and release notes
	[b3e12d0149ce]

	* src/debug/profile.c:
	fix cycles profiling not to modify CPU state
	[3cc8936a504d]

2012-02-22  Laurent Sallafranque

	* src/falcon/videl.c:
	code cleaning, warnings removed.
	[faa81e9509f8]

2012-02-21  Laurent Sallafranque

	* src/falcon/videl.c:
	add upper and lower borders for VIDEL.
	[39c21bc81d17]

2012-02-20  Eero Tamminen

	* doc/compatibility.html:
	Fungle Beats needs WinUAE
	[b75097826a3c]

	* doc/emutos.txt:
	update EmuTOS falcon demo compatibility list + add notes for falcon
	games
	[29bdd07e0a68]

2012-02-19  Eero Tamminen

	* src/bios.c:
	interpret Bios VT52 clearscreen+home escape code as newline
	[05162b003e58]

	* src/xbios.c:
	add XBios VsetMode tracing and convert rest of XBios debug output to
	tracing
	[f8b620524b03]

2012-02-18  Eero Tamminen

	* doc/emutos.txt:
	update EmuTOS falcon games & apps compatibility list
	[b42f170e119b]

	* doc/compatibility.html:
	update falcon apps compatibility
	[dac5bcddc82f]

2012-02-17  Eero Tamminen

	* doc/compatibility.html:
	POV 136 comment
	[9a97c614746f]

2012-02-16  Eero Tamminen

	* doc/emutos.txt:
	update EmuTOS compat for ST, add note about EmuTOS version
	requirements

	For ST/STE emulation the 512kB version of EmuTOS shipped with Hatari
	isn't the best alternative. E.g. Checksum/Equinox Protracker 2 STE
	crashes with it while it works fine with 256kB version...
	[94d26c4b07ad]

	* doc/emutos.txt:
	update for latest EmuTOS CVS snapshot (with floppy fix) + more STE
	updates
	[c73797635c00]

2012-02-15  Eero Tamminen

	* doc/emutos.txt:
	update EmuTOS compat for STE
	[1db1470fc413]

2012-02-05  Laurent Sallafranque

	* src/reset.c:
	fix: DSP was not resetted after a Reset.
	[e9fa6df86f6a]

	* src/cpu/cpummu.c, src/cpu/cpummu.h, src/cpu/newcpu.c:
	Major add: 68040 MMU is now running like in WinUae or Aranym. Mega
	Thanks to Gilles Fetis for the patch.
	[20e3a5efb249]

2012-02-05  Nicolas Pomarede

	* src/includes/psg.h, src/psg.c:
	Rename NUM_PSG_REGISTERS (=16) to MAX_PSG_REGISTERS
	[80387355a06a]

2012-02-04  Laurent Sallafranque

	* src/cycInt.c, src/dmaSnd.c, src/falcon/crossbar.c,
	src/falcon/crossbar.h, src/includes/cycInt.h, src/ioMemTabFalcon.c:
	remove the new internal interrupt. I let dmaSnd.c multiplex the
	Microwire interrupt between dmasnd.c (Ste/TT emulation) and crossbar
	(Falcon emulation).
	[de0cefac4f14]

2012-02-03  Eero Tamminen

	* src/includes/psg.h:
	+ psg.h
	[be02d6922a06]

	* src/psg.c:
	replace PSG magic values with corresponding defines
	[2109a764bd07]

2012-02-03  Laurent Sallafranque

	* src/cycInt.c, src/falcon/crossbar.c, src/falcon/crossbar.h,
	src/includes/cycInt.h, src/ioMemTabFalcon.c:
	Correctly handle the Microwire emulation for Falcon.
	[2e9b38929fd2]

2012-02-03  Eero Tamminen

	* tests/tosboot/tos_tester.py:
	increase test startup timeouts to cover all boot configs
	[cde0ff986a65]

2012-02-02  Eero Tamminen

	* src/statusbar.c:
	fix statusbar assert + shorten machine names so they fit statusbar
	[a5696d38b5d7]

	* tests/tosboot/Makefile, tests/tosboot/bootauto.st.gz,
	tests/tosboot/bootdesk.st.gz, tests/tosboot/disk/TEST,
	tests/tosboot/disk/TEXT, tests/tosboot/disk/test,
	tests/tosboot/disk/text, tests/tosboot/floppy.st.gz,
	tests/tosboot/readme.txt, tests/tosboot/tos_tester.py:
	have separate floppy images for testing TOS <1.04 and newer

	floppy image for TOS <1.04 runs tester from autofolder, the one for
	newer TOS versions from DESKTOP.INF.

	To avoid potential issues with Mtools & FAT format, make the names
	of files copied to images upppercase.

	Minor Makefile improvements.
	[8098e3ad88c7]

	* tests/tosboot/disk/GEMDOS.PRG, tests/tosboot/disk/MINIMAL.PRG,
	tests/tosboot/disk/ahcc-gemdos:
	updated binaries
	[6bd3f1a7a964]

	* tests/tosboot/disk/ahcc-gemdos, tests/tosboot/readme.txt:
	update readme for previous TOS Tester changes
	[118411ec7034]

	* tests/tosboot/Makefile, tests/tosboot/disk/ahcc-build,
	tests/tosboot/disk/ahcc-gemdos, tests/tosboot/disk/ahcc-minimal,
	tests/tosboot/disk/common.c, tests/tosboot/disk/common.h,
	tests/tosboot/disk/gemdos.c, tests/tosboot/disk/gemdos.prj,
	tests/tosboot/disk/minimal.c, tests/tosboot/disk/minimal.prj,
	tests/tosboot/floppy/DESKTOP.INF, tests/tosboot/floppy/EMUDESK.INF:
	use separate program for non-gemdos testing to avoid modifying the
	floppy image:

	- the new test program name is MINIMAL.PRG
	- move code common to that and GEMDOS.PRG to common.[ch] files
	- adapt project files, hconsole scripts, *.INF files and Makefile
	accordingly
	- in Makefile check whether AHCC builds succeeded
	[308a2e0b60d9]

	* tests/tosboot/tos_tester.py:
	verify test program output files
	[f770347c18c2]

2012-02-01  Thomas Huth

	* doc/release-notes.txt:
	Updated release notes
	[b3e35352b8d7]

	* src/ioMemTabFalcon.c:
	Changed behavior of 0xff8924 - it's possible to write a value to
	this register
	[eed7d83c253a]

2012-01-31  Thomas Huth

	* src/ioMem.c:
	IO registers can only be read in supervisor mode. Thanks to Roger
	Burrows for the hint!
	[24e5558c93ee]

	* src/ioMemTabFalcon.c:
	The register ff8922 returns zeros on Falcon
	[810f251f3b79]

2012-01-31  Eero Tamminen

	* tests/tosboot/Makefile:
	don't update binaries when just the empty 'test' file timestamp
	updates
	[873560f8873b]

	* tests/tosboot/disk/GEMDOS.PRG, tests/tosboot/floppy.st.gz:
	update binaries
	[ed5117389a91]

	* tests/tosboot/disk/gemdos.c, tests/tosboot/tos_tester.py:
	fix midi fifo message handling, fix TOS tester outputs
	[e7fffd9b28ab]

	* tests/tosboot/disk/gemdos.c:
	add file copy, file access mode and truncate tests, update TODOs
	[14bddcaf3c7e]

	* tests/tosboot/Makefile, tests/tosboot/disk/test:
	add Makefile to generate test files and to run the tests

	(and empty "test" file used by test the test code)
	[dabbaa67db7c]

2012-01-30  Eero Tamminen

	* tests/tosboot/disk/ahcc-build, tests/tosboot/hdimage/DESKTOP.INF,
	tests/tosboot/hdimage/EMUDESK.INF:
	convert floppy ones when creating HD image
	[cdc91f004db2]

	* tests/tosboot/blank-a.st.gz, tests/tosboot/disk/GEMDOS.PRG,
	tests/tosboot/disk/ahcc-build, tests/tosboot/floppy.st.gz:
	update generated Atari binary content for the tester
	[64d3d9259e01]

	* tests/tosboot/disk/ahcc-build, tests/tosboot/readme.txt:
	add files section and otherwise update TOS tester readme
	[28a864b5e9fc]

	* tests/tosboot/disk/ahcc-build, tests/tosboot/tos_tester.py:
	support for floppy testing, save&output TOS test result report at
	end
	[549d95692b33]

	* tests/tosboot/disk/ahcc-build, tests/tosboot/disk/gemdos.c:
	output success only if everything done succeeds

	There's also some comments about what full program will do and some
	stubs that are ifdeffed out. For testing purposes it currently
	outputs failure.
	[a8dda2a555ff]

	* tests/tosboot/.hgignore, tests/tosboot/disk/.hgignore,
	tests/tosboot/disk/ahcc-build:
	ignore local/generated test files
	[6dd53157aaa2]

2012-01-29  Eero Tamminen

	* tests/tosboot/ahcc-build, tests/tosboot/disk/ahcc-build:
	move ahcc-build to disk/ where rest of build files are

	(additionally simplify it to AHCC being linked under disk/)
	[ce7c7a04877b]

	* tests/tosboot/hdimage/DESKTOP.INF,
	tests/tosboot/hdimage/EMUDESK.INF:
	add tester startup files for booting from HD image file
	[a394a97e087b]

	* tests/tosboot/floppy/DESKTOP.INF, tests/tosboot/floppy/EMUDESK.INF:
	add tester startup files for booting from floppy
	[df9a2c4857aa]

	* tests/tosboot/disk/text:
	add test text for future tester features
	[ce7e8564ea42]

2012-01-29  Nicolas Pomarede

	* doc/release-notes.txt:
	Update 'Operation Clean Streets' in the 'fixed games' list
	[ec839b480c06]

	* src/uae-cpu/gencpu.c:
	Add refill_prefetch for i_EOR to fix Operation Clean Streets self
	modified code This is an ugly hack, we need better prefetch
	emulation (switch to winuae gencpu.c)
	[9380ec22a5a3]

2012-01-29  Laurent Sallafranque

	* src/falcon/crossbar.c:
	add some more infos in crossbar traces.
	[b99c5536269e]

2012-01-29  Eero Tamminen

	* tests/tosboot/blank-a.st:
	sorry, didn't mean to add the uncompressed one, removing
	[6fdeb2366dd3]

	* tests/tosboot/blank-a.st:
	add blank floppy image needed by tos tester
	[9114dcb13ad3]

	* tests/tosboot/readme.txt, tests/tosboot/tos-tester.py,
	tests/tosboot/tos_tester.py:
	rewrite TOS tester:
	- what is tested is configurable with options and these sets are
	filtered through valid configs for given TOS versions
	- test success is checked based on test app succesfully writing to
	(MIDI) fifo, screenshot is just extra to verify the end results
	(e.g. error messages)
	[61c311cea94a]

	* tests/tosboot/ahcc-build, tests/tosboot/disk/GEMDOS.PRG,
	tests/tosboot/disk/gemdos.c, tests/tosboot/disk/gemdos.prj:
	add initial version of the Atari side of TOS tester
	[5cb89686fac5]

	* src/cfgopts.c:
	empty config option values: support for string types, warn for
	others

	With this improvement empty config string can be used to disable
	default midi input file setting and just set midi output file.

	It's also good to have warning for non-string config fields which
	are empty instead of just ignoring them like was done previously.
	[62ce5e32e03b]

	* tools/hconsole/hconsole.py:
	get rid of IOError exception also on hconsole's startup
	[aa7604915bc5]

2012-01-28  Laurent Sallafranque

	* src/gui-sdl/dlgSystem.c:
	MMU is only for the 68040 (added to the GUI)
	[3baf5edd0ac2]

	* src/cpu/newcpu.c:
	MMU=1 is only for the 68040 CPU. MMU is always active for the 68030.
	[62f69a0a4957]

2012-01-28  Eero Tamminen

	* src/change.c, src/configuration.c, src/includes/configuration.h:
	remove unused "bPrintToFile" config option
	[7a016a3a03c4]

	* doc/release-notes.txt:
	add some changes from hg shortlog to release notes
	[4d40621395cd]

2012-01-27  Eero Tamminen

	* python-ui/hatari.py:
	remove pipe close exception on Hatari UI startup

	On most distros Python handles that fine, it's just ugly output on
	console, but apparently on Fedora 16, it causes startup issues:
	http://www.atari-forum.com/viewtopic.php?f=51&t=22623
	[5c3e9eb201c7]

	* doc/release-notes.txt, python-ui/hatari.py, python-ui/release-
	notes.txt, src/change.c, src/control.c:
	hatari UI and hatari control socket support for file paths with
	spaces

	(UI code quotes spaces in filenames with '\' and Hatari option
	setting supports that now for control socket and debugger.)
	[a9d44fa21072]

2012-01-26  Eero Tamminen

	* doc/memory-usage.txt, doc/release-notes.txt, src/includes/vdi.h:
	Change max allowed VDI resolution from 1280x960 to 1920x1200
	[62fc48984d70]

	* doc/compatibility.html:
	update compat list
	[502031513c3f]

	* doc/release-notes.txt:
	update compat list
	[c6e22ccdcfee]

	* src/gemdos.c:
	handle special device names (CON:, AUX:, PRN:) in GEMDOS HD emu

	- pass them to TOS
	- add trace output for this
	- remove redundant parenthesis & slightly simplify drive check code
	[171fab783c00]

	* src/configuration.c:
	revert to v1.4 zoomed Videl window size preference which is close to
	ST window size
	[e2fbeb4c60df]

2012-01-24  Laurent Sallafranque

	* src/falcon/dsp_cpu.c:
	fix: Stack pointer is reitialized when a stack error occurs. This
	fix : Build in obsolescence, Llamazap cracked version, Yephya demo
	(which bugs later), Moktar Demo (which bugs later too).
	[5610e571f350]

2012-01-24  Eero Tamminen

	* tools/hconsole/hconsole.py:
	reduce 100ms wait between successive keypresses to 50ms
	[506f37c96501]

2012-01-24  Laurent Sallafranque

	* src/falcon/dsp_core.c:
	fix: DSP SSI was not completly reinitialized after a reset.
	[dd50700dc1b8]

2012-01-23  Nicolas Pomarede

	* doc/release-notes.txt:
	Update release notes for Hammerfist
	[924abb3aee3e]

2012-01-23  Eero Tamminen

	* tools/hconsole/example-commands, tools/hconsole/example-debugger:
	example script fixes for current Hatari
	[9550d7532e99]

2012-01-23  Nicolas Pomarede

	* src/ikbd.c:
	Enable mouse+joystick when commands 0x12 and 0x14 are received
	during IKBD's reset (fix fire button in the game Hammerfist)
	[49ba623cd264]

2012-01-22  Nicolas Pomarede

	* src/ikbd.c:
	Add some traces when bytes are sent to the IKBD during its reset
	phase
	[bd9256d2524d]

2012-01-22  Thomas Huth

	* src/gui-osx/CreateFloppyController.m, src/gui-
	osx/English.lproj/SDLMain.nib/designable.nib, src/gui-
	osx/French.lproj/SDLMain.nib/designable.nib, src/gui-osx/Info-
	Hatari.plist, src/gui-osx/PrefsController.h, src/gui-
	osx/PrefsController.m, src/gui-osx/SDLMain.h, src/gui-osx/SDLMain.m:
	Updating the OS X GUI to Jerome Vernet's latest level
	[0b930e4c32b8]

2012-01-22  Eero Tamminen

	* src/control.c, tools/hconsole/hconsole.py:
	improve hconsole / hatari control socket keypress handling for non-
	alphanumeric characters
	[eccfa00052c8]

2012-01-22  Nicolas Pomarede

	* src/ikbd.c:
	Add more traces for the IKBD reset command
	[09d1d98811e6]

2012-01-20  Eero Tamminen

	* src/cpu/md-fpp.h, src/cpu/newcpu.c:
	fix missing WinUAE prototype warning
	[27c02b434166]

	* src/cpu/cpummu.c:
	fix cpummu.c compiler warnings not related to format strings
	[b8c3d3800050]

	* doc/compatibility.html:
	more WinUAE/old UAE test results
	[038948d2a5e9]

2012-01-18  Eero Tamminen

	* doc/compatibility.html:
	updated compatibility list falcon programs list
	[80a23bb670f6]

	* src/cpu/md-fpp.h:
	fix compiler's variable aliasing warning in double conversion

	(can produce wrong code, especially with -O3)
	[97b34cd8c6df]

	* src/cpu/custom.c, src/cpu/custom.h, src/cpu/memory.h:
	move custom.c function declarations to custom.h, make things not
	used outside it static

	Added also TODO/info about moving also custom.c variable
	declarations to custom.h and for checking is_cycle_ce()
	[e4ea3e6c9ff7]

	* src/cpu/memory.c:
	remove redundant SDL_Quit() prototype from C-file
	[6767180b19f6]

	* tests/debugger/makefile:
	update mudflap comment in tests
	[efb1e75268d8]

	* src/gui-sdl/sdlgui.c:
	fix potential wrong memory access in GUI code

	(I think this is hard to trigger issue reported by mudflap.)
	[2acda29da368]

2012-01-17  Laurent Sallafranque

	* src/cpu/newcpu.c, src/m68000.c:
	fix : changing of CPU or computer via the GUI is now possible with
	WINUAE core
	[a2cf942c5ebd]

2012-01-15  Nicolas Pomarede

	* src/video.c:
	Remove another possible read above array's limit (see rev 3741)
	[f23414c121ab]

	* doc/release-notes.txt:
	Set release notes to 'development' version
	[893fc641cba4]

	* src/debug/debugui.c:
	Remove explicit variables initialization (bug was fixed in rev 3741)
	The out of array accesses in Video_StoreResolution were corrupting
	some variables in debugui.
	[2fe619ef95f2]

	* src/includes/screen.h, src/video.c:
	Remove a potential buffer overflow when storing resolution for each
	HBL When Hatari runs in color mode but switches to hi res for more
	than 1 VBL, Video_StoreResolution() would access memory outside
	HBLPaletteMasks[] and possibly overwrite other variables, eventually
	leading to some crashes (this is the case with the protection code
	used in the 'European Demos' and the 'Transbeauce 2' demo)
	[0b77816c4a8d]

2012-01-15  Eero Tamminen

	* src/includes/video.h, src/video.c:
	specify jitter array sizes in header to avoid mudflap warnings

	(unlike couple of UAE specific and ioMemST/STE/TT/Falcon arrays of
	which muflap also complains about, they have clear fixed size.)
	[6b8902d95711]

	* CMakeLists.txt:
	update mudflap package names in comments
	[1676d6c57da4]

	* src/main.c:
	fix mudflap warning by cast
	[9eecdd9c3c6b]

2012-01-14  Nicolas Pomarede

	* src/statusbar.c:
	When using 512 KB, prints 0.5MB instead of 1/2MB in the status bar
	"8MHz/0.5MB" is much more readable than the double slashes
	"8MHz/1/2MB"
	[bc2a87c53230]

	* doc/release-notes.txt:
	Typo
	[1f70e33b7c26]

2012-01-14  Laurent Sallafranque

	* src/falcon/crossbar.c:
	simplify the code like in dmasnd.c by using Sint64.
	[9835809e904b]

	* src/falcon/dsp_core.c:
	Host interface registers are all taken into account after a reset or
	first init.
	[9b176b322ed3]

2012-01-13 : *** Version 1.6.1 ***

2012-01-13  Nicolas Pomarede

	* doc/compatibility.html, doc/manual.html, readme.txt:
	New release 1.6.1, increase version in corresponding files
	[da2ba745065a] [tip]

	* doc/compatibility.html:
	Add 'Vodka Demo' by Equinox to the compatibility list
	[a37994f79290]

	* doc/doxygen/Doxyfile, doc/release-notes.txt, hatari.spec, src/gui-
	osx/English.lproj/InfoPlist.strings, src/gui-
	osx/French.lproj/InfoPlist.strings, src/includes/main.h:
	New release 1.6.1, increase version in corresponding files
	[ccf66d5e509e]

	* doc/release-notes.txt:
	Update release notes for 1.6.1
	[135479058419]

2012-01-12  Nicolas Pomarede

	* src/debug/debugui.c:
	Ensure debugger is not called by default when a cpu exception
	happens When not explicitly set to 'false', some programs'
	protection cause the debugger to be called, which can confuse the
	user (eg The Transbeauce Demos and The European Demos)
	[5651a4bfdf0e]

	* src/video.c:
	Don't remove left border when the hi/lo switch is made after cycle
	12 (fix 'Kill The Beast 2' in the Vodka Demo by Equinox)
	[58c6879369f5]

	* src/debug/debugui.c:
	Set default debugOutput to NULL (fix segfault) When DebugUI is
	called from Exception(), debugOutput was not initialized and
	DebugUI_SetLogDefault would call File_Close with an invalid (FILE *)
	[b9e92dc09385]

2012-01-10  Laurent Sallafranque

	* src/cpu/gencpu.c:
	added DIVU.L, DIVS.L, MOVEC and DBcc cycles (falcon mode only)
	[69c937803d82]

2012-01-09  Eero Tamminen

	* tests/tosboot/readme.txt, tests/tosboot/tos-tester.py:
	add tos-tester readme, change memory amounts to cover more, tt uses
	vga
	[878ee4a29373]

	* python-ui/CMakeLists.txt:
	Fix conftypes.py to be generated where the other python files are so
	that Hatari UI can be tested without installation (as stated in the
	readme). Depend on the generator.
	[816df9843667]

2012-01-09  Thomas Huth

	* python-ui/CMakeLists.txt, python-ui/Makefile, python-
	ui/conftypes.py:
	Added proper CMake rule to generate conftypes.py
	[ec17f4642694]

2012-01-09  Eero Tamminen

	* doc/release-notes.txt:
	update release notes
	[8aec7bfc3e49]

	* python-ui/hatari.py:
	patch from David: fix HZ order
	[be49fa9e4b72]

	* tests/tosboot/screenshot-report.sh:
	more typos
	[06ddf47ce60d]

2012-01-08  Nicolas Pomarede

	* tests/tosboot/screenshot-report.sh:
	Typo
	[e5db4cc9690a]

2012-01-09  Eero Tamminen

	* tests/tosboot/tos-tester.py:
	limit screen (shot) sizes to reasonable ones, improve comments
	[f6c285de94f0]

	* tests/tosboot/screenshot-report.sh:
	disable "compare" as it seems to get stuck with larger screenshots
	[20f4774f6c96]

2012-01-08  Eero Tamminen

	* python-ui/conftypes.py:
	forgot to add the new, generated conftypes.py
	[0b650f38e106]

	* python-ui/README, python-ui/release-notes.txt, python-
	ui/uihelpers.py:
	update UI version to v1.1 + docs on recent changes
	[f80e19acc065]

	* python-ui/dialogs.py, python-ui/hatari.py:
	add YM voice mixing & microphone options, simplify sound HZ option
	handling
	[5a524be7aafa]

	* python-ui/config.py:
	one more assert to config handling
	[2ec1907c02d6]

	* python-ui/dialogs.py, python-ui/hatari.py:
	fix minor Hatari UI issues:
	- use correct upper limit on max preferred size (=desktop size)
	- fix harmless exception on first tracepoints load
	- note that keep desktop option concerns only Falcon/TT
	- fix typo
	[b2fdb97e94c9]

2012-01-08  Thomas Huth

	* src/video.c:
	Fix for Falcon monochrome mode, second try
	[4049a3986f83]

2012-01-08  Eero Tamminen

	* python-ui/CMakeLists.txt, python-ui/config.py:
	Fix assert and resulting empty hatari config file:

	* This was caused by Hatari v1.6 config variable name changes and
	those new variable names missing type prefixes.

	* Fix is using variable type mapping (conftypes.py) generated from
	Hatari configuration.c file instead of inferring the types from
	the (missing) name prefixes.
	[b77642db06b7]

	* python-ui/Makefile, python-ui/gentypes.py:
	add code for generating conftypes.py from configuration.c
	[8a332bf2e195]

2012-01-08  Thomas Huth

	* src/gui-osx/Shared.h, src/gui-osx/Shared.m:
	Updated wrong file header comments
	[03d39c13e9a5]

	* src/gui-osx/Shared.h:
	A little modification to allow to build Hatari on Xcode 3.1.3/OS X
	10.5.8 PPC. Patch by Andreas Grabher
	[d513d264f450]

	* src/video.c:
	Fix for Falcon monochrome mode. TOS 4.04 temporarily switches to low
	resolution in its early boot sequence. For this we only should look
	at ff8260 and not at bUseHighRes.
	[ecafd650bb9e]

	* src/video.c:
	Source code beautification (indentation with tabs)
	[22eac7640d7b]

	* src/video.c:
	Fixed the problem with version 1.6.0 not booting in monochrome mode
	anymore. bUseHighRes, VideoShifterByte and IoMem[0xff8260] were out
	of sync, causing the monochrome screen mode to fail.
	[3944430235ef]

2012-01-08  Eero Tamminen

	* python-ui/hatari.py, tools/hconsole/hconsole.py:
	less console warnings on Hatari restart in hconsole & hatariui
	[36d8922fba7f]

2012-01-07  Laurent Sallafranque

	* src/cpu/newcpu.c:
	revert last patch as it's not relevant.
	[3fbb1188bd4f]

2012-01-07  Eero Tamminen

	* tests/tosboot/tos-tester.py:
	tos-tester: document how to test un-installed Hatari version
	[e5917358e2df]

	* doc/authors.txt, python-ui/README, python-ui/config.py, python-
	ui/debugui.py, python-ui/dialogs.py, python-ui/hatari.py, python-
	ui/hatariui.1, python-ui/hatariui.py, python-ui/uihelpers.py, tools
	/atari-hd-image.1, tools/hconsole/hconsole.1,
	tools/hconsole/hconsole.py, tools/hmsa/hmsa.1:
	remove / replace remaining berlios references
	[dac7d5a7c1e5]

	* readme.txt:
	readme: known problems -> known distro problems

	(add also a link to David's Python UI patches)
	[dc407f1f2001]

	* tests/tosboot/tos-tester.py:
	find hconsole if this is run within Hatari sources

	(and add the standard hconsole install locations to module import
	path as a fallback)
	[e1357631b384]

	* doc/keymap-sample.txt:
	add note about keymap test programs to keymap example too
	[672d88983485]

	* doc/todo.txt:
	update todo list:
	- 32Mhz issue was fixed already for v1.6
	- add more info to the Kronos bug (before BerliOS goes down)
	- add note about VDI/TOS4
	- fix typo
	[2f2598bdccc3]

	* doc/release-notes.txt, tests/readme.txt:
	add notes of new test programs to other docs
	[62019825e4c5]

	* tests/keymap/checkkeys.c, tests/keymap/keytest.c,
	tests/keymap/keytest.mak, tests/keymap/keytest.prg,
	tests/keymap/keytest.prj, tests/keymap/keytest.rsc,
	tests/keymap/keytest.rso, tests/keymap/listkeys.c,
	tests/keymap/readme.txt:
	add test programs for finding out Atari & SDL keycodes needed in
	Hatari keymap files
	[650e47fc2f0a]

	* tests/tosboot/blank-a.st.gz, tests/tosboot/screenshot-report.sh,
	tests/tosboot/tos-tester.py:
	add TOS bootup tester and screenshot comparison script + intended to
	be used before new Hatari release + there's also blank disk image
	used by tester
	[f1586c166aed]

	* tools/hconsole/hconsole.py:
	close control socket when Hatari is killed to avoid warning when
	hconsole object is destroyed
	[1293353ddcc7]

2012-01-06  Laurent Sallafranque

	* src/cpu/newcpu.c:
	add: split 68030 instructions bigger than 20 cycles to allow the
	"internal interrupts" and the DSP to execute.
	[b86fbed6e0a8]

	* src/falcon/dsp_cpu.c:
	dsp fix+add : externel memory access taken into account I've
	refactored the cycle counting by taking into account the multi
	external memory access. I've also removed a few if here and there.
	I've also reorganized the Ea if to optimise a little (change may not
	be noticeable).
	[3279d337e8a1]

2012-01-06  Eero Tamminen

	* src/tos.c:
	fix comment typos
	[2cc236c511bd]

	* tools/hconsole/hconsole.py:
	update Hatari options & debugger commands list for hconsole
	[636019d9c454]

	* python-ui/README, python-ui/release-notes.txt:
	fix python & gtk version numbers in docs
	[7ff82325804b]

2012-01-04  Laurent Sallafranque

	* src/falcon/dsp.c:
	added the addresses mnemonics in the X peripheral memory. When one
	disasm the x peripheral memory (dm x $ffc0 to dm x $ffff), the
	address mnemonic is added at the end of the disasm.
	[2d9daa1bb182]

	* CMakeLists.txt:
	New CPU musn't be the default CPU yet.
	[5b61a5a23a75]

	* CMakeLists.txt, src/cpu/gencpu.c:
	add: LSR, LSL ADR Dx,Dy 68030 cycles.
	[96fbfe482ec9]

2012-01-03  Laurent Sallafranque

	* src/falcon/dsp_cpu.c:
	code refactoring + DSP memory map comment.

	I've rewritten some parts of the DSP code. It's more readable like
	this. I've optimised a little some A and B registers access (this
	optimisation shouldn't be noticeable) I've added a DSP memory map in
	comments at the beginning of the file.
	[26c2ac01a10b]

2012-01-01 : *** Version 1.6.0 ***

2012-01-01  Nicolas Pomarede

	* doc/doxygen/Doxyfile, doc/release-notes.txt, hatari.spec, src/gui-
	osx/English.lproj/InfoPlist.strings, src/gui-
	osx/French.lproj/InfoPlist.strings, src/gui-osx/Info-Hatari.plist,
	src/includes/main.h, src/memorySnapShot.c:
	New release 1.6, increase version in corresponding files
	[12780dca66b3] [tip]

2012-01-01  Eero Tamminen

	* doc/compatibility.html, doc/release-notes.txt:
	update 32Mhz clock and MMU notes
	[4f6c6b3402b6]

2011-12-30  Nicolas Pomarede

	* src/debug/68kDisass.c:
	Use FILENAME_MAX instead of PATH_MAX (not POSIX compliant) (Clang
	error)
	[2b435d434331]

	* src/unzip.c:
	Remove extraneous parentheses (Clang warning)
	[f42762ce7f7c]

2011-12-30  Thomas Huth

	* doc/hatari.1, doc/manual.html:
	Documented the --patch-tos option
	[30e111d3f6d3]

2011-12-28  Eero Tamminen

	* doc/todo.txt:
	typo
	[fdd332ee69a1]

	* doc/release-notes.txt:
	release note about TT/mono double click fix
	[e020d24a1c78]

2011-12-28  Thomas Huth

	* src/video.c:
	Always set nCyclesPerLine = CYCLES_PER_LINE_71HZ in monochrome mode
	[ce618cc0d7f5]

2011-12-27  Nicolas Pomarede

	* src/ikbd.c:
	Handle a special case when sending bytes to the ikbd while a byte is
	already in transfer In that case, we should replace the byte
	currently being transfered, but we should not restart the TX
	interrupt, nor change the TX_BUFFER_EMPTY bit (fix 'Pandemonium
	Demos' Intro by Chaos)
	[3a9a73e114d2]

	* src/fdc.c:
	Allow an FDC command to be replaced by another command during the
	prepare+spinup delay This feature is not described in the original
	WD1772 documentation, it would need to be correctly measured on a
	real ST. (fix buggy loader in Overdrive Demos by Phalanx)
	[c284aa5611e8]

2011-12-26  Eero Tamminen

	* readme.txt:
	update readme for v1.6 & notes on WinUAE vs. old UAE core
	[dcef12a6ca3f]

	* doc/release-notes.txt, src/debug/log.h:
	flush trace output so that it's not buffered (and therefore
	potentially misleading)
	[1b1af950067c]

2011-12-26  Nicolas Pomarede

	* src/fdc.c:
	For The FDC Restore command, set track=255 after the spinup
	sequence, not before (fix buggy loader in Overdrive Demos by
	Phalanx)
	[666341f96bec]

	* doc/release-notes.txt, src/cycInt.c, src/ikbd.c,
	src/includes/cycInt.h, src/includes/ikbd.h, src/memorySnapShot.c:
	For ACIA transfers, split internal RX/TX interrupt handler in 2
	separate handlers (fix the game 'Alien Storm')
	[b71fc05b3e31]

	* src/fdc.c:
	Fix typo in comment
	[d97cede2f9f1]

	* src/fdc.c:
	Fix FDC delays on Falcon, they were 2 times bigger than expected (16
	Mhz clock instead of 8)
	[89b2158446eb]

2011-12-25  Nicolas Pomarede

	* doc/emutos.txt:
	Latest EmuTOS version is now 0.8.6
	[1c6e2b4f4447]

	* doc/compatibility.html:
	Add notes about Whitewater Madness video issues on STE
	[4d27a1702fb4]

	* doc/compatibility.html, doc/todo.txt:
	Update docs for sound in RBI Baseball 2 and joystick in Warlock's
	Quest
	[0c59db5fb37a]

2011-12-25  Thomas Huth

	* doc/todo.txt, src/video.c:
	Fixed VBL timing problem in monochrom TT mode. VBL timings were
	wrong because we used nScanlinesPerFrame from monochrome mode but
	nCyclesPerLine from color mode. This caused mouse double click
	problems and some other oddities.
	[073804e4887e]

	* src/configuration.c, src/includes/configuration.h, src/options.c,
	src/tos.c:
	Added a new (expert) option to skip TOS patches completely. As seen
	in the game "Yolanda" (when we skipped the memory test of TOS),
	bypassing parts of TOS can cause incompatibilites. To be able to
	switch of some more "patching" by Hatari, I added now a new option
	--patch-tos to be able to disable the TOS ROM patches, too.
	[13054082085f]

	* doc/compatibility.html:
	Updated information about RS232 settings in some games
	[2c123aa7ccab]

	* doc/compatibility.html, doc/todo.txt, src/configuration.c,
	src/stMemory.c:
	Enabled the "memvalid" system variables patching by default again.
	There were too many new problems when this was disabled by default.
	[7857da6acbc7]

2011-12-24  Nicolas Pomarede

	* src/fdc.c:
	In FDC traces, add current track for type I commands
	[70799cf90538]

2011-12-23  Nicolas Pomarede

	* src/cpu/gencpu.c, src/cycles.c, src/includes/cycles.h, src/uae-
	cpu/gencpu.c:
	Improve cycle accuracy for each byte access in movep R->M (fix
	Moving Earth part in E605 by Light, uses movep.l d0,$ffc3(a1) to
	change video counter)
	[ed0a93e92d17]

2011-12-22  Thomas Huth

	* python-ui/hatariui.py, python-ui/uihelpers.py:
	Replaced remaining URLs that still pointed to berlios.de
	[c1047c7e3c87]

	* doc/release-notes.txt:
	Updated release notes
	[8c887fc2aa75]

	* doc/todo.txt:
	Added some bug reports
	[2f24a844609f]

2011-12-22  Laurent Sallafranque

	* src/falcon/crossbar.c:
	fix: hanshake mode transfers. One variable was not correctly
	initialized when running crossbar in handshake mode. This patch
	fixes wait demo (it now runs with sound) on both old and new cpu.
	[c80c19152ced]

2011-12-22  Nicolas Pomarede

	* src/gui-sdl/dlgScreen.c:
	Radio button 'none' was never checked in Screen dialog
	[99716d346b1b]

	* src/gui-sdl/dlgSound.c:
	Reduce Sound dialog's height to work when Atari screen's borders are
	not shown
	[269f66c7453c]

	* doc/authors.txt, doc/hatari.1, doc/manual.html, doc/release-
	notes.txt, src/configuration.c, src/gui-sdl/dlgSound.c,
	src/includes/sound.h, src/options.c, src/sound.c:
	Add a new mixing method for the YM2149 using a mathematical model
	(patch by David Savinkoff) Use --ym-mixing model to use this method.
	Unlike the "table" method which is based on many measures on a real
	STF, this method aims to create a correct mixing table using an
	accurate model of the 3 YM2149 voices. The result should be similar
	or better when compared to "table" mixing.
	[47e6d95ffb79]

2011-12-21  Nicolas Pomarede

	* src/audio.c:
	Turns on low pass filter in STF mode for 44.1 and 48 kHz replay
	frequencies See sound.c for more details on the low pass filter
	characteristics used in the STF
	[2fa859d3a7c1]

	* src/sound.c:
	Improve the low pass filter to better mimic the STF's one (patch by
	David Savinkoff)
	[459fe6c8a77f]

2011-12-20  Nicolas Pomarede

	* doc/todo.txt:
	Add some examples of programs not working correctly for now
	[3aaa8701ec32]

	* doc/release-notes.txt:
	Update release notes with a list of working programs since previous
	release
	[63b14cd56c91]

	* doc/emutos.txt:
	Add note about EmuTOS before 0.8.6 requiring the FastBoot option
	[95f3524966a3]

2011-12-14  Nicolas Pomarede

	* src/joy.c:
	Correct joystick axis mapping patch by Matthias Arndt
	 - use 'false' instead of 'NULL' for bool
	 - use #define for max numbers of joysticks instead of '6'
	[5a85ee82b748]

2011-12-14  Laurent Sallafranque

	* src/cpu/newcpu.c:
	fix: take all 68030 cycles into account for better 68030 <-> DSP
	synchro.
	[be37bc3851b5]

	* src/falcon/dsp.c:
	fix: DSP access to host port are made in Bytes. I add 4 cycles for
	each word access or 3*4 cycles for a long access.
	[df60a705cf0e]

	* src/uae-cpu/newcpu.c:
	fix oldcpu : fixed ratio between 68030 and DSP speed. As to simulate
	a 16Mhz CPU, all cycles are divided by 2, we have to mul them back
	by 2 while calling run_dsp to have the DSP runnning at 32 Mhz.
	[a896dbbe512b]

2011-12-13  Nicolas Pomarede

	* src/includes/joy.h, src/joy.c:
	Add patch by Matthias Arndt to specify axis mapping for different
	joysticks' model
	[d64a2a131720]

2011-12-11  Nicolas Pomarede

	* src/m68000.c:
	Add pairing for MUL/JSR (Lemmings Compilation 40's Intro)
	[4f072f87472f]

2011-12-10  Nicolas Pomarede

	* src/cpu/hatari-glue.c, src/uae-cpu/hatari-glue.c:
	When using the RESET instruction, we should call PSG_Reset() to stop
	any sound
	[03cb4ea7445f]

	* src/psg.c:
	In PSG_Reset, also clear sound's emulation registers
	[0a69612b8028]

	* src/ikbd.c:
	If a byte is written to $fffc02 it cancels the current transfer from
	ACIA to IKBD Some buggy programs send several bytes to $fffc02
	without checking TX bit is ready ; in that case the most recent byte
	written to $fffc02 cancels any transfer in progress. (fix the games
	'Yogi Bear' and 'Platoon')
	[ba1cf5f0573f]

	* src/includes/ikbd.h:
	ACIA's RX overrun is bit 5, not 6
	[78292ff0323b]

2011-12-09  Laurent Sallafranque

	* src/cpu/gencpu.c:
	more instruction cycles completes. Added : movem, Bcc, CHK, CHK2,
	CAS.
	[05c247a0b2e6]

2011-12-07  Thomas Huth

	* src/keymap.c:
	The special hack for sending a second caps lock key press is now not
	required anymore.
	[4e880042ff90]

	* src/main.c:
	Set SDL_DISABLE_LOCK_KEYS for correct behavior of the Caps Lock key
	[23f03cb0da3f]

2011-12-06  Nicolas Pomarede

	* src/rs232.c:
	When reading $fffa2d and RS232 is not enabled, return 0x80 (empty
	buffer) This allow some games to work when they don't require
	complete send/receive support on the RS232 port (eg : 'Treasure
	Trap' and 'The Deep' write some debug informations to RS232)
	[7c486c7f7d01]

2011-12-04  Laurent Sallafranque

	* src/cpu/newcpu.c:
	cosmetic change
	[f7d6209fd12d]

	* src/cpu/falcon_cycle030.h, src/cpu/gencpu.c, src/cpu/newcpu.c:
	Movem is complete. RTE is complete but simplified. Code is now
	complete to add all other cycles that are not in the generic table.
	[0425f878b6cc]

2011-12-04  Thomas Huth

	* src/falcon/nvram.c, src/falcon/nvram.h:
	Fixed inital monitor settings in the NVRAM (the VGA bit was wrong).
	Thanks to Vincent Riviere for the hint!
	[71606731ce9c]

	* src/convert/med640x16_spec.c, src/convert/med640x32_spec.c,
	src/file.c, src/ide.c, src/uae-cpu/build68k.c, src/uae-cpu/fpp.c:
	Fixed some compiler warnings about set but not used variables. These
	warnings only occured with GCC 4.6 which now also checks for these
	set-but-not-used variables.
	[08ac98ddea8a]

2011-12-04  Nicolas Pomarede

	* doc/compatibility.html:
	Add notes about games that need RS232 to be enabled Some games write
	debug informations to the RS232 port ('Treasure Trap' and 'The
	Deep') They will loop forever until bytes can be sent to the RS232.
	[665e2d76c821]

	* src/video.c:
	Check for 4 pixel hardware scrolling on STF/STE only during the
	first 40 cycles
	[2805f848aeeb]

	* src/video.c:
	Timer B's position could be wrong with overscan lines stopping at
	cycle 160 (fix 'Bye bye Lester' in the 'O-Demo' by Oxygene)
	[8cfe13db1d53]

2011-12-02  Laurent Sallafranque

	* src/cpu/custom.c, src/cpu/events.h, src/cpu/events_normal.h,
	src/cpu/falcon_cycle030.h, src/cpu/gencpu.c, src/cpu/newcpu.c,
	src/cpu/newcpu.h:
	add: first 68030 version with the cycle exact table. There's still a
	lot of work to do :
	- include all special cycles like movem, Bcc, ...
	- finish to compute the MMU and FPU cycles
	[e5cf006c1b7d]

2011-12-01  Thomas Huth

	* doc/authors.txt, doc/compatibility.html, doc/fr/hatari.1,
	doc/hatari.1, doc/manual.html, etc/README, hatari.spec, python-
	ui/README, python-ui/dialogs.py, readme.txt, src/gui-osx/SDLMain.m,
	tools/hmsa/hmsa.1, tools/hmsa/readme-hmsa.txt, tools/zip2st.1:
	Updated the URLs to point to tuxfamily.org instead of berlios.de.
	[0f070880f088]

	* website/backgnd.png, website/contact.html, website/docs.html,
	website/download.html, website/favicon.ico, website/hatari-
	small.png, website/hatari.css, website/hatari.png,
	website/index.html, website/links.html, website/news.shtml,
	website/scrshots.html, website/scrshots1.html,
	website/scrshots2.html, website/scrshots3.html,
	website/scrshots4.html, website/scrshots5.html,
	website/scrshots6.html:
	Removed website from main repository (it's tracked in a new
	repository instead)
	[31893f13f668]

2011-12-01  Nicolas Pomarede

	* src/fdc.c:
	Add drive number in FDC's traces
	[7d196104f18b]

2011-11-30  Laurent Sallafranque

	* src/cpu/falcon_cycle030.h:
	more cycles added. Only FPU/MMU cycles are not yet in the table.
	[7c30b0cd111c]

2011-11-29  Nicolas Pomarede

	* doc/authors.txt:
	Update contributors' list
	[43e4d22bef3d]

2011-11-27  Laurent Sallafranque

	* src/cpu/falcon_cycle030.h:
	added more cycles. 92% completed.
	[6d6cf05d9763]

2011-11-27  Nicolas Pomarede

	* src/stMemory.c:
	Allow to bypass TOS' memory tests only for EmuTOS or if more than 4
	MB of ram are used Some programs rely on those (unofficial) values
	written to RAM when the memory tests were run. We should not bypass
	those tests in the common STF/STE cases with < 4MB (fix the game
	Yolanda on Pompey Pirates 46, which expects $100 to contain a value
	!= 0)
	[4721f2381c07]

	* src/configuration.c:
	Set system/fastboot to false by default as it can be less accurate
	emulation-wise
	[a44926c1f69b]

2011-11-26  Nicolas Pomarede

	* src/fdc.c:
	For FDC type I commands, set RNF error in SR when verify is set and
	TR != physical track Some programs change the head's position before
	returning to TOS. In that case, the logical track stored in the TOS
	will not be the same as the physical one. The TOS uses the verify
	bit to detect this situation and corrects it using a 'restore'. (fix
	the game Demon Blue on Adrenaline CD 24b, where the game's
	protection seeks to track 0x4f and returns to TOS without restoring
	head's position)
	[c45ba921c4ee]

2011-11-25  Laurent Sallafranque

	* src/cpu/falcon_cycle030.h:
	add some MUL and DIV cycles. 83% completed
	[9c3ae9c6ec9c]

	* src/cpu/falcon_cycle030.h:
	add more falcon cycles. 80% completed
	[1e5a8f93497a]

2011-11-24  Nicolas Pomarede

	* src/dmaSnd.c, src/includes/sound.h, src/sound.c:
	Improve YM/DMA sound by using IIR filter instead of FIR (patch by
	David Savinkoff)
	[38717dc41991]

2011-11-23  Nicolas Pomarede

	* doc/compatibility.html, doc/release-notes.txt:
	Updates docs with FDC and shifter changes
	[7a107455d23b]

2011-11-24  Eero Tamminen

	* src/uae-cpu/hatari-glue.c:
	fix typo in previous commit
	[4f9596596a83]

2011-11-23  Nicolas Pomarede

	* src/fdc.c:
	Allow modifying Sector Register and Track Register while the FDC is
	busy Contrary to what is written in the WD1772 doc, it's possible to
	modify these registers while a command is running (but it could have
	no effect depending on when it's done) (fix Delirious Demo IV's
	loader routines that change SR just after the Read Sector command)
	[a8a68c625e17]

	* src/fdc.c:
	For FDC Read / Write Sector commands, add a minimum delay to find
	the sector's header Depending on the spinning speed, finding the
	expected sector's header will never be immediate and will always
	require at least 6 bytes to be read by the FDC. During that time,
	Sector Register can still be modified. (fix Delirious Demo IV's
	loader routines)
	[96451d1d3585]

2011-11-23  Eero Tamminen

	* src/includes/vdi.h, src/reset.c, src/uae-cpu/hatari-glue.c,
	src/vdi.c:
	handle illegal opcode matching one used by Hatari internally during
	VDI emulation

	Fixes: Union demo from POV disk 112 causing Hatari abort with EmuTOS
	0.8.6.
	[d0cd30767492]

2011-11-21  Laurent Sallafranque

	* src/cpu/falcon_cycle030.h:
	added: some more falcon cycles. 75% completed.
	[5d27277dde7a]

2011-11-20  Nicolas Pomarede

	* src/fdc.c:
	Bit 6 of FDC's SR should be 0 after a read command when the disk is
	not write protected In the case of a type II/III command doing a
	read, the WPRT bit of the Status Register should not be kept
	unchanged but should be set to 0. (fix Madness by Cream, the loader
	would not work when disk was write protected)
	[7cc9290540d4]

2011-11-20  Eero Tamminen

	* doc/hatari.1, doc/manual.html, doc/release-notes.txt:
	document --force-max option. update --desktop* options. remove some
	trailing whitespaces from hatari.1
	[16854e348d64]

2011-11-20  Nicolas Pomarede

	* src/video.c:
	Correct screen's alignment with 4 pixel hardware scrolling
	[7de6a128dc82]

2011-11-19  Nicolas Pomarede

	* src/video.c:
	Adjust borders' removal when empty lines with no signal are used
	(fix NGC screen in Delirious Demo IV)
	[76e88fba127c]

2011-11-18  Laurent Sallafranque

	* src/cpu/falcon_cycle030.h:
	add: more falcon instructions cycles. 70% completed.
	[7075240efea8]

2011-11-18  Nicolas Pomarede

	* src/video.c:
	Add support for another method to do 4 pixel hardware scrolling on
	STF/STE (fix NGC screen in Delirious Demo IV)
	[51c2c0d6e00a]

2011-11-17  Nicolas Pomarede

	* src/video.c:
	Improve timings used for the 0 byte line when switching hi/lo at the
	end of the line (fix NGC screen in Delirious Demo IV)
	[5aac202026f4]

2011-11-16  Laurent Sallafranque

	* src/cpu/falcon_cycle030.h:
	fix: add.l Ea,Dn was shifted.
	[a5d3992cb542]

	* src/cpu/falcon_cycle030.h:
	fix: all LONG instruction cycles recomputed.
	[9f5195037d6e]

2011-11-14  Nicolas Pomarede

	* src/cycles.c:
	For CLR, the write is effective at the end of the instruction, not 4
	cycles before like MOVE (fix clr.b $ff820a used for bottom border
	removal in Delirious Demo IV / No Scroll)
	[3812f0e1e8c7]

2011-11-14  Laurent Sallafranque

	* doc/compatibility.html:
	added DownFall game (Falcon) into the compatibility list.
	[95adcd60a4e6]

	* src/cpu/falcon_cycle030.h:
	added more instructions cycles : 59% completed.
	[a858d6516037]

2011-11-13  Laurent Sallafranque

	* src/cpu/falcon_cycle030.h:
	added more instruction cycles : 49% completed
	[90a23eb577a1]

2011-11-13  Nicolas Pomarede

	* src/floppy.c:
	Recognize ST disk images with 83 or 84 tracks
	[ba4e13a4e194]

2011-11-12  Laurent Sallafranque

	* src/cpu/falcon_cycle030.h:
	add more instructions cycles. 40% done.
	[7fbbba6274cf]

	* src/cpu/falcon_cycle030.h:
	add all simple MOVE instruction's cycles.
	[615da1b85b5a]

2011-11-12  Nicolas Pomarede

	* src/video.c:
	When reading $ff820f in STE mode, returns the last value written
	there, not LineWidth
	[cc761ddcda16]

2011-11-11  Thomas Huth

	* doc/manual.html:
	Updated OS list in manual
	[5a5c057a9494]

2011-11-11  Laurent Sallafranque

	* src/cpu/falcon_cycle030.h:
	add new file for falcon030 cycles.
	[252da25d0565]

2011-11-10  Eero Tamminen

	* src/configuration.c, src/includes/configuration.h, src/options.c,
	src/resolution.c:
	add option to force resolution to be fixed to given max resolution:
	- like --desktop option, affects only Falcon/TT (as ST/STE modes
	aren't scalable, they can be only doubled)
	- useful e.g. when recording video of Falcon demos that switch
	resolution
	[1a19e303f3b2]

	* doc/emutos.txt:
	more things work with EmuTOS 0.8.6, update compat list
	[415959b04874]

2011-11-08  Nicolas Pomarede

	* doc/todo.txt:
	Remove FDC from the todo list, all commands/timings are now emulated
	[d6d56d753405]

2011-11-02  Laurent Sallafranque

	* src/cpu/gencpu.c, src/cpu/newcpu.c, src/cpu/newcpu.h:
	Code preparation for 68030 cycle exact.
	[2fe9ab72f13c]

2011-10-31  Laurent Sallafranque

	* src/cpu/custom.c, src/cpu/events.h, src/cpu/events_normal.h,
	src/cpu/newcpu.c:
	fix new core to allow 68030 cycle exact run. It's less accurante
	than the generic 68030 emulation for now, but it runs.
	[83307e177bdb]

2011-11-06  Nicolas Pomarede

	* doc/release-notes.txt:
	Update changes in FDC's emulation
	[6f6644b91e56]

	* src/fdc.c, src/floppy.c, src/includes/floppy.h,
	src/memorySnapShot.c, src/reset.c:
	Add correct emulation of the WPRT bit when a disk is inserted or
	ejected As the ST doesn't use the Disk Change signal available on
	the floppy drive, the TOS uses a different method to detect changes
	by monitoring the WPRT bit in the FDC's Status Register. When a disk
	is inserted or ejected, this bit should be updated to 0 or 1 during
	a minimum number of VBLs.
	[274895220444]

2011-10-30  Nicolas Pomarede

	* src/includes/psg.h, src/psg.c:
	Handle the case when reading $ff8800 just after a write to $ff8802
	There's a special case when reading a register from $ff8800 : if the
	register number was not changed since the last write (by writing to
	$ff8800), then we must return the value that was written to $ff8802
	without masking the unused bit. Else, unused bits should be set to 0
	when reading a register. (fix the game Murders In Venice, which
	expects to read $10 from reg 3).
	[d3f6185dcbd3]

	* src/memorySnapShot.c:
	Change version in memory snapshot ('devel' versions are not always
	compatible with each other)
	[4b4070102351]

	* src/configuration.c:
	In the memory snapshot, include the name of the disk image and zip
	path for each floppy drive
	[ff0ec8e9f809]

2011-10-17  Nicolas Pomarede

	* src/fdc.c:
	Set the WPRT bit in FDC Status Register when there's no disk
	inserted
	[67ca42a71612]

2011-10-15  Eero Tamminen

	* doc/release-notes.txt:
	add missing items to release notes
	[d8dc72a4d858]

	* doc/compatibility.html:
	note Spectrum 512 & Hextracter mouse issues
	[5224e8e7365e]

	* doc/authors.txt:
	add Markus Heiden to contributors
	[ac2437441bb6]

2011-10-16  Nicolas Pomarede

	* src/video.c:
	Fix medres overscan detection (line was rendered in low res) (fix
	Greeting screen in the 'No Cooper' demo : because of the freq switch
	to remove the bottom border, switch to medres was made 16 cycles
	later and line 263 was in low res)
	[980585cb4037]

2011-10-13  Nicolas Pomarede

	* doc/compatibility.html:
	Update comments for the demo Illusion by Dune
	[9f321f0f6b17]

2011-10-12  Laurent Sallafranque

	* src/cpu/custom.c, src/cpu/gencpu.c, src/cpu/newcpu.c:
	3 major changes in newcpu.c (new core)

	This patch concerns 3 important changes in the WinUAE new core :

	1) I've reintroduced the nCurInstrCycPos variable to allow the
	pairing detection with the 68000 core 2) I've patched the cycle
	exact cores to let them run (of course, cycle exact is not yet
	implemented into each componant for now), but the cores are running
	now 3) The most important : I've found and corrected the problem
	with all the falcon demos that needed to run at 32 Mhz only
	(EkoSystem, are you experienced, lostBlubb, ...)
	[632d356ebd40]

2011-10-12  Nicolas Pomarede

	* src/fdc.c:
	Correct the FDC step rates, they were not the correct ones for
	WD1772 The 1989 book I used from Data Becker / Micro Application
	gave the values 2, 3, 5 and 6 ms, which are wrong, the correct ones
	are 6, 12, 2 and 3 ms. (fix Knightmare (on DBUG #24), the loader
	waits 41000 cycles before 2 Step In commands without testing
	$fffa01, with 6 ms delay instead of 3 ms, some commands were ignored
	because the FDC stayed in busy state for too long)
	[a9ae22f1c449]

	* src/fdc.c:
	When Force Int is called, set Motor ON if FDC was idle or busy with
	a type I command (fix Knightmare (on DBUG #24), an extra delay was
	added to start the motor when doing a Step In, which prevented
	following FDC comamnds to be executed)
	[93d450978e0b]

2011-10-10  Laurent Sallafranque

	* src/cpu/cpummu.c:
	cosmetic issue Reformatted source code to be closer to the original
	WinUae's code
	[420388d34b87]

2011-10-09  Thomas Huth

	* src/tos.c:
	Switch to ST mode when using TOS <= 1.04
	[ada1ca9cea15]

2011-10-09  Nicolas Pomarede

	* src/fdc.c:
	In the FDC, clear Spin Up bit during the time needed to start the
	motor
	[fd968928f2c4]

2011-10-07  Markus Heiden

	* src/fdc.c, src/hdc.c, src/includes/hdc.h:
	API-only access to hdc.c
	[3d5607cf69b2]

	* src/hdc.c:
	Used macros for reading words
	[c5554b424b4b]

2011-10-08  Nicolas Pomarede

	* doc/images/floppydisks.png, doc/manual.html:
	Update the Floppy Disk Dialog section in the manual with "Fast
	floppy" mode
	[b679d73bad89]

2011-10-06  Thomas Huth

	* src/hdc.c, src/includes/hdc.h:
	SCSI class 1 command support for drives > 1 GB. Thanks to Markus
	Heiden for the patch.
	[d33662b5c5c1]

2011-10-06  Nicolas Pomarede

	* doc/fr/hatari.1, doc/hatari.1, doc/manual.html, etc/n810.cfg,
	etc/wiz.cfg, python-ui/dialogs.py, python-ui/hatari.py, python-ui
	/release-notes.txt, src/configuration.c, src/fdc.c, src/gui-
	osx/English.lproj/SDLMain.nib/designable.nib, src/gui-
	osx/French.lproj/SDLMain.nib/designable.nib, src/gui-
	osx/PrefsController.h, src/gui-osx/PrefsController.m, src/gui-
	sdl/dlgFloppy.c, src/includes/configuration.h, src/options.c,
	tools/hconsole/hconsole.py:
	Replace --slowfdc by --fastfdc (speed up FDC delays by x10) For
	maximum compatibility, the default mode for Hatari is now to run the
	FDC at the same speed as a real ST. The option --fastfdc can be used
	to speed up most FDC delays (this should works with most of the
	games/demos, but can lead sometimes to incompatibilities when the
	programis expect some precise timings)
	[ccd6752560e3]

	* src/fdc.c:
	Remove debugging printf's
	[dbc85c253d94]

2011-10-03  Eero Tamminen

	* src/includes/configuration.h:
	allow GEMDOS drives up to Z: not Y:
	[3552d1f414af]

2011-09-28  Thomas Huth

	* doc/manual.html:
	Fixed bad HTML
	[6c89f9913bad]

	* src/gui-osx/SDLMain.m:
	Fixed compile error for OSX by adding missing parameter to DebugUI
	call. Thanks to Mikael Degerfalt for the patch!
	[b740701a441c]

2011-09-18  Eero Tamminen

	* src/debug/symbols.c:
	fix some cosmetic issues in AHCC SYM symbols format compatibility
	[e75d74de4671]

2011-09-07  Laurent Sallafranque

	* doc/release-notes.txt:
	added microwire clock better accuracy to the emulator release notes
	[dec600e761b6]

	* src/dmaSnd.c:
	better accuracy for microwire emulation : remove a specific test for
	xmas2004 (no more useful with the latest microwire code) and cycles
	consumed by the 68000 are taken into account in a better way to
	generate a more precise 8 cycles clock.
	[c2a659c51883]

2011-09-04  Eero Tamminen

	* python-ui/hatari.py, python-ui/hatariui.py:
	hatariui: hatari max window size defaults now to desktop size

	(affects initial window size i.e. avoids resize at beginning)
	[679aca45fb45]

	* src/main.c:
	fix bug 18340: check window embedding before creating window
	[a99c28bacadd]

	* doc/emutos.txt, readme.txt:
	add links to EmuTOS versions used in different Hatari version,
	correct DATADIR note
	[7f173c0891c1]

2011-08-31  Eero Tamminen

	* doc/release-notes.txt, doc/todo.txt:
	update release notes & todo
	[deffe87f548f]

	* doc/hatari.1, doc/manual.html:
	update hd emu docs, minor cleanup
	[a041f4d2ae8c]

	* CMakeLists.txt, cmake/config-cmake.h, src/gemdos.c:
	return real free space for GEMDOS HD emulated partion:
	- limited to a partition size that used TOS version supports
	- supported only if statvfs() function is found
	[92bf5e6df087]

	* src/gemdos.c:
	return unique name for each HD emulated partition
	[94784b65464a]

	* src/gemdos.c:
	fix bug 18310: use fake HD Dfree() only for emulated drives +
	related refactoring

	refactoring:
	- remove commented out GEMDOS_IsHDDPresent()
	- refactor similar GemDOS_IsDriveEmulated() functionality to its own
	function from GemDOS_IsFileNameAHardDrive()
	- Fix: Use GemDOS_IsDriveEmulated() function in Dfree() & Dgetpath()
	instead of their current half-broken code
	- Rename GemDOS_IsFileNameAHardDrive() to a more correct
	GemDOS_FileName2HardDriveID() as it returns drive ID, not bool
	[9977e0152019]

	* src/gemdos.c:
	fix: HD emu multipartition support didn't handled mixed case
	partition names

	Multipartition directory name counting function expected scandir()
	to return directory entries in alphabetical order, but it does that
	only if they're of same case. When upper and lower case drive
	identifies are mixed, counting didn't work.

	Instead of adding case insensitive alphasort, I decided just to
	correct the maximum drive counting.
	[5bf4e8f4c2b6]

2011-08-29  Eero Tamminen

	* tools/atari-hd-image.sh:
	Latest sfdisk is broken. Write suitable MBR with inlined Python
	code
	[6dd08c14968a]

2011-08-28  Eero Tamminen

	* src/debug/breakcond.c:
	reorder breakpoint hit output order to:
	- info about there being a hit
	- "lock"ed information, if any (e.g. history)
	- parsed debugger "file" output, if any
	- info about breakpoint itself
	- new value for traced item, if something traced
	- info about breakpoint removal, if it's removed
	[f0b8c2b8e2dc]

	* src/debug/breakcond.c, src/debug/debugui.h, src/debug/history.c:
	improvements/fixes to how instruction execution history is shown
	with breakpoints
	[4e2ab4a67ac2]

2011-08-22  Eero Tamminen

	* src/paths.c:
	fix bug 18297: Windows needs also HOMEDRIVE for full home path
	[a67dcb6ad345]

2011-08-21  Eero Tamminen

	* tools/atari-hd-image.sh:
	show suitable error message at exit, force Bash as echo escape
	sequence interpretation differs between shells
	[9dd8749a5d8b]

	* src/debug/breakcond.c, src/debug/history.c, src/debug/history.h:
	remove new prevCpu/DspPC history variable as useless
	[55d820210133]

	* tools/atari-hd-image.sh, tools/hatari-local-midi-ring.sh:
	fix: handle case when string is given instead of numeric argument in
	helper scripts
	[a85204f3b546]

2011-08-17  Thomas Huth

	* src/stMemory.c:
	Disabled memvalid patching for EmuTOS
	[c8a06df9ca70]

2011-08-16  Thomas Huth

	* src/screen.c:
	Improved color convertion table so that colors are a little bit
	brighter now
	[b1e5be1dda12]

2011-08-14  Eero Tamminen

	* doc/manual.html:
	add history info to Manual's Debugger "Usage examples" section
	[96f13af8e511]

	* src/debug/history.c:
	history fix: use 32-bit PC for CPU, show breaking reason after
	instruction
	[2e844ec44581]

	* src/debug/debugInfo.c, src/debug/history.c, src/debug/history.h:
	support history also for the lock command
	[bd92e46c8cf0]

	* src/debug/breakcond.c, src/debug/debugcpu.c, src/debug/debugdsp.c,
	src/debug/debugui.c, src/debug/history.c, src/debug/history.h:
	history 3/3: integrate history functionality to debugger
	[f1f3b514592a]

	* src/debug/CMakeLists.txt, src/debug/history.c, src/debug/history.h:
	history 2/3: add new history functionality source code files
	[f78832aa167a]

	* src/debug/debugcpu.c, src/debug/debugdsp.c, src/debug/debugui.c,
	src/debug/debugui.h, src/shortcut.c, src/uae-cpu/newcpu.c:
	history 1/3: add reason why debugger was invoked

	Is needed by debugger history functionality, but can be useful also
	for debugger UI later on.
	[5c966dad28ef]

	* src/falcon/videl.c:
	fix: crash with a Videl resolution of 2460x200

	(NVDI 2.5 set that after it failed to load a sys file)
	[8253ac221f06]

2011-08-13  Thomas Huth

	* doc/hatari.1, doc/manual.html:
	Added the fast-boot option to the manual
	[b677e1cfcb36]

	* doc/hatari.1, doc/manual.html, src/options.c:
	Moved sound options to a separate section
	[2fa15fc14bb6]

2011-08-13  Eero Tamminen

	* doc/hatari.1, src/options.c:
	add option for controlling desktop option for ST/E
	[c0d0f7e7d1af]

	* src/configuration.c, src/includes/configuration.h, src/screen.c:
	add bKeepResolutionST configuration option
	[ff951f2b4a67]

2011-08-12  Thomas Huth

	* src/configuration.c, src/gui-sdl/dlgSystem.c,
	src/includes/configuration.h, src/options.c, src/stMemory.c,
	src/tos.c:
	Added fast-boot option
	[19442ce2ea1f]

2011-10-06  Nicolas Pomarede

	* src/fdc.c:
	When using Read Track on a side that doesn't exist, return random
	bytes instead of Record Not Found
	[4805fbc91418]

	* src/fdc.c:
	Improve the 3 possible cases in FDC's Force Int command
	[a4b17799b472]

	* src/fdc.c:
	Set ID_FieldLastSector to 0 to simulate an index pulse + improve
	timings for Read Address Some copy / disk analyzer programs require
	very precise timings when combining Read Track and Read Address to
	analyze the layout of a track. Read Address needs to return ID
	fields at the same time interval/position they're returned by Read
	Track to allow this program to work. This implementation should be
	precise enough for ST/MSA disk images. (fix ProCopy 1.50 in Analyze
	mode)
	[727368dd7dbf]

2011-09-30  Nicolas Pomarede

	* src/fdc.c:
	Fix delay error for FDC Read Address (bad macro expansion)
	[5abe5ea82767]

	* src/fdc.c:
	Update ID_FieldLastSector during the Read Track command When a Read
	Track command is followed by some Read Address commands, we must
	return each ID Fields in the same order they appeared during the
	Read Track command (fix Terminators Copy in Analyze mode)
	[08da7a4a7cbc]

	* src/fdc.c:
	Correctly reset FDC_DMA.BytesToTransfer in case the revious DMA
	transfer did not finish (fix X-Out on Pompey Pirates 27, does a read
	address after an interrupted read sector command)
	[faac32aa681f]

2011-09-29  Nicolas Pomarede

	* src/fdc.c:
	Improve timing for FDC's Read Address by adding a delay to find the
	next sector Before the FDC can read the ID Field, it must first let
	the disk spin until it reaches the start of the next sector. We can
	approximate this delay to an average 600 bytes (512 bytes per sector
	+ GAPs) (fix "analyze disk" in Terminators Copy 1.68 which expects
	Read Address to take several 1/200 sec)
	[d977f5941bf6]

2011-09-26  Nicolas Pomarede

	* src/fdc.c:
	Update FDC's Write Protect bit after a Type I command
	[0e609cfbd51c]

	* src/fdc.c:
	Include call to FDC_AcknowledgeInterrupt into FDC_CmdCompleteCommon
	[847db30c7ceb]

2011-09-25  Nicolas Pomarede

	* src/fdc.c:
	More comments' updates in the FDC code
	[0da3393fe674]

	* src/fdc.c, src/hdc.c, src/includes/fdc.h:
	Reorder FDC functions and add prototypes, update comments
	[76a6c9e94cfc]

	* src/fdc.c:
	Replace FDC_SetReadWriteParameters with FDC_GetSectorsPerTrack Also
	remove useless calls to FDC_SetDiskControllerStatus and to
	FDC_UpdateDiskDrive
	[99b5bb872666]

2011-09-23  Nicolas Pomarede

	* src/fdc.c:
	Update comments
	[3162ca399613]

	* src/fdc.c, src/includes/fdc.h, src/mfp.c:
	Remove old fast floppy mode triggered when reading bit 5 of MFP_GPIP
	register
	[ff64688e23e4]

	* src/fdc.c:
	Success/failure in FDC commands should not change DMA status' bit 0
	(DMA error)
	[32e4c45ad897]

2011-09-22  Nicolas Pomarede

	* src/fdc.c:
	Rename FDC DMA Status/Mode variables + FDC_ResetDMA should only
	reset DMA buffer, not sectors count Bit 0 (DMA error) in
	FDC_DMA.Status ($ff8606) seems to be always 1 on ST (no DMA error),
	so we always set it to 1 on reset and don't update it later anymore.
	[cafae3b0677d]

2011-09-21  Nicolas Pomarede

	* src/fdc.c:
	Remove old variable DiskControllerStatus_ff8604rd, use FDC.STR
	instead
	[4f30b21b2c43]

	* src/fdc.c, src/hdc.c, src/includes/fdc.h, src/ioMemTabFalcon.c,
	src/ioMemTabST.c, src/ioMemTabSTE.c, src/ioMemTabTT.c:
	Intercept read/write of hi/med/low DMA address bytes at
	$ff8609/0b/0d (add traces)
	[8b523edc2722]

	* src/fdc.c:
	FDC 'Write Protect' bit should only be updated after a write command
	[f6c97ffeba1c]

2011-09-20  Nicolas Pomarede

	* src/fdc.c:
	Remove old case for read/write sectors with multi bit=1
	[31bd713e1ba8]

	* src/fdc.c:
	FDC_VerifyTrack should be called when the Verify bit in type I
	commands is 0
	[1f108ef7f21f]

	* src/fdc.c:
	Not all commands set RNF bit when no disk is inserted, don't set it
	in all cases
	[d67296474659]

	* src/fdc.c:
	In FDC, merge Step, Step In and Step Out into one common Step
	function (with a direction)
	[044eb8fe2bcb]

2011-09-19  Nicolas Pomarede

	* src/memorySnapShot.c:
	Change snapshot version, new FDC structure is no more compatible
	with Hatari 1.5
	[725106d8ea5a]

	* src/fdc.c:
	In FDC_VerifyTrack, set RNF if not disk is inserted
	[1e767edad856]

	* src/fdc.c, src/hdc.c, src/includes/fdc.h:
	Clean up FDC code, reorder, rename variables
	 - Use names from the datasheet for the WD1772 registers
	 - Group FDC and DMA variables into some structures
	 - Remove useless intermediate variables from old FDC code
	 - Update memory snapshot to correctly restore FDC/DMA states
	[c3f731b9247c]

2011-09-17  Nicolas Pomarede

	* src/fdc.c:
	Remove unnecessary intermediate variables and old DMA transfer
	function
	[10cf8366c12e]

	* src/fdc.c, src/floppy.c, src/includes/floppy.h:
	In FDC, add accurate DMA transfer for Write Sector (512 bytes per
	sector for ST/MSA)
	[0e61679c440e]

2011-09-15  Nicolas Pomarede

	* src/fdc.c:
	Improve DMA transfer function to never write outside of the
	DMADiskWorkSpace buffer
	[4212862c8982]

2011-09-14  Nicolas Pomarede

	* src/fdc.c:
	In FDC, add accurate DMA transfer for Read Track This will fix a lot
	of cracked games in ST/MSA where the protection that uses Read Track
	was not disabled, only the result of the test is ignored by the
	crack. In that case, we need a correct Read Track, even if the
	content of the track is ignored later.
	[360f6e46908f]

	* src/fdc.c, src/floppy.c, src/includes/floppy.h:
	Return the sector's size in Floppy_ReadSectors (512 bytes for ST/MSA
	images)
	[580ecaa3c572]

	* doc/compatibility.html:
	Remove FDC issues for 'ST-NICCC 2000' by Oxygene
	[bce0608352db]

	* src/fdc.c:
	In FDC, add accurate DMA transfer for Read Address + correct DMA
	transfer routine
	[3c469d058484]

2011-09-11  Nicolas Pomarede

	* src/fdc.c:
	For FDC 'Read Sector' command, transfer data between DMA and RAM by
	blocks of 16 bytes The DMA has an internal 16 bytes buffer which is
	transfered to RAM once 16 bytes have been received from the FDC. DMA
	address at $ff8609/0b/0d is updated each time 16 bytes are
	transfered while reading a sector.
	[a055899d2cc7]

2011-09-06  Nicolas Pomarede

	* src/fdc.c:
	In FDC, correct CRC in the Read Address command and add support for
	the Read Track command. Read Track will return 6250 bytes containing
	the sectors data, as well as all the GAPs, Index fields and Sync
	bytes present in a track. Those 6250 bytes are built by reading the
	sectors of an ST/MSA disk image and adding some standard GAPs. This
	should fix a lot of games were protection code is run, but the
	result is ignored by the crack.
	[65faad71a2a4]

2011-08-30  Nicolas Pomarede

	* src/fdc.c:
	Add support for the FDC Type III command Read Address The returned
	ID Fields are built from the ST/MSA disk image (512 bytes per
	sector, 9 or 10 sectors for all tracks).
	[0ee5e33c3a2a]

	* src/includes/utils.h, src/utils.c:
	Add functions to compute a CCITT CRC16 (used by the FDC)
	[07a6c305af6a]

2011-08-28  Nicolas Pomarede

	* src/fdc.c:
	Rewrite FDC Type II command Write Sector, with correct support for
	multi sectors bit and DMA transfer Fix bug in
	FDC_ReadSectorFromFloppy / FDC_WriteSectorToFloppy : they should not
	increase track/sector themselves
	[42c7f2da845d]

	* src/fdc.c:
	Update TR00 bit in the FDC's Status Register after a type I command
	[e0bd9c4cf8d4]

	* doc/compatibility.html:
	Remove FDC issues for 'Just Buggin' by ACF and 'Super Monaco GP'
	[fd52d4d9726c]

	* src/fdc.c:
	Rewrite FDC Type II command Read Sector, with correct support for
	multi sectors bit and DMA transfer The Read Sector command with
	multiple sectors mode is used in many games and the previous wrong
	version prevented a lot of them to work. DMA transfer was not
	correctly handled too. (fix 'Just Buggin' by ACF, 'Super Monaco GP'
	on Superior 65, 'Pang' on Fuzion 32, 'The Simpsons' on Fuzion 108)
	[9435f0c056d1]

2011-08-27  Nicolas Pomarede

	* src/fdc.c:
	Rewrite FDC Type I commands to be closer to the behaviour described
	in the official documentation This takes into account bit 4 (Update
	Track) for Step/Step In/Step Out, as well as bit 2 (Verify Track).
	The physical track of the head (which can be different from the
	Track Register) is also emulated now and used to read/write sectors
	from the disk image.
	[94e36f1c363d]

	* src/fdc.c:
	When FDC is busy, Track Register and Sector register can't be
	modified
	[c19b865a739d]

	* src/fdc.c:
	When FDC receives 'Force Interrupt', remove busy bit and stop the
	motor
	[808786d9cf4d]

2011-08-26  Nicolas Pomarede

	* src/fdc.c:
	When FDC is busy, the only possible command is 'Force Interrupt'
	[d8ddbe092005]

	* src/fdc.c:
	Split some FDC define's between type I and II/III
	[4b74ad7887c3]

2011-08-25  Nicolas Pomarede

	* src/fdc.c:
	Add correct delay for starting/stopping the motor before/after each
	fdc command The motor can take 6 spins to start if it was not
	already ON, and it will stop 2 seconds after the last command is
	completed.
	[b80d83522015]

2011-08-10  Nicolas Pomarede

	* src/fdc.c:
	Improve FDC by adding more accurate timings for each commands (seek,
	read sector, ...) Not all timings are completly correct for now, but
	this should greatly improve many cracked games that still perform
	the FDC operations to check the protection and expect the result to
	take a certain amount of time. Also temporarily disable "fast fdc"
	mode. (fix Knightmare / DBUG 24)
	[87b873bf5ab0]

2011-08-07  Eero Tamminen

	* src/change.c:
	trigger emulation reset if user changes WinUAE address mode
	[ba1a54c9cda2]

	* src/convert/high640x8.c:
	fix: take SDL buffer pitch (full width) into account

	(Mono conversion was the only one missing this. Even if code gets
	requested resolution, pitch could in theory be larger than the
	requested width.)
	[d71e42ccfdb6]

2011-08-07  Nicolas Pomarede

	* src/gui-sdl/sdlgui.c, src/includes/sdlgui.h:
	Variables should not be defined in the header file, else the linker
	will complain As 2 variables were defined in the header, this
	created multiple copies of these 2 variables in each file that
	included sdlgui.h and this gave warnings when using "ld --warn-
	common" Those variables should be declared as extern in the header
	and defined only once in sdlgui.c
	[8fd078a49e75]

2011-08-04  Eero Tamminen

	* src/tos.c:
	improve the gemdos HD emu message
	[3606bc6391d0]

	* src/tos.c:
	warn if using HD emu with TOS <1.04, fix typos in other messages
	[501b88f0e1c9]

2011-07-30  Eero Tamminen

	* src/statusbar.c:
	more debug to statusbar code

	(was needed to find out why keepDesktopResolution for ST/E triggered
	statusbar assert on reboot.)
	[5872d98814da]

2011-07-31  Nicolas Pomarede

	* src/ikbd.c:
	Don't clear bytes in transit in the ACIA when the IKBD is reset This
	was a regression introduced since rev 3315. (fix Overdrive by
	Phalanx, could lock when returning to the menu)
	[421d25ee4214]

2011-07-30  Nicolas Pomarede

	* src/video.c:
	Add blank line detection in STF mode when switching 60/50 Hz at
	cycle 28 (fix/improve Spectrum 512 scrolling in Overscan Demos and
	shforstv by Paulo Simoes)
	[cb105e3f19f3]

2011-07-19 : *** Version 1.5.0 ***

2011-07-19  Nicolas Pomarede

	* doc/doxygen/Doxyfile, doc/release-notes.txt, hatari.spec, src/gui-
	osx/English.lproj/InfoPlist.strings, src/gui-
	osx/French.lproj/InfoPlist.strings, src/gui-osx/Info-Hatari.plist,
	src/includes/main.h, src/memorySnapShot.c:
	New release 1.5, increase version in corresponding files
	[d03e4a887e3a] [tip]

	* src/avi_record.c:
	Use 65536 for Fps_Scale instead of 16777216, as some video players
	don't support values above 100000 For example, this fixes some
	warnings/errors ("timebase is very high") when using ffmpeg to
	convert the .avi file to a .mov quicktime file.
	[62353df26531]

2011-07-18  Laurent Sallafranque

	* doc/compatibility.html:
	Rainbow2 and moai96 comments changed
	[05c21ae0c497]

	* src/falcon/videl.c, src/falcon/videl.h, src/ioMemTabFalcon.c,
	src/video.c:
	fix: added VFC counter in video.c. This allows rainbow2 multimedia
	to work. This patch will be removed when Videl emulation is ready.
	[100e3be38f40]

2011-07-18  Nicolas Pomarede

	* src/memorySnapShot.c:
	Typo
	[f5841e11232b]

	* src/memorySnapShot.c:
	Remove conflicting mkdir declaration when building Windows binary
	with WinUAE cpu
	[3fd84456e225]

	* src/ide.c:
	Remove possible conflicting TCHAR declaration when building Windows
	binary
	[21624f2f76c9]

2011-07-17  Nicolas Pomarede

	* src/video.c:
	Temporary fix for simultaneous HBL case not completly handled in rev
	1624 (fix European Demos Intro screen)
	[d6e419fb0f47]

	* src/dmaSnd.c:
	Don't reset LCM1992 on warm reset (the chip has no reset pin)
	[a11ea38fd26b]

	* src/dmaSnd.c:
	Add more traces when changing microwire's values
	[7ee1f7b47b3e]

2011-07-16  Nicolas Pomarede

	* src/dmaSnd.c:
	If DMA audio is enabled with frame start = frame end, stop it if
	loop mode is off
	[6c12214cddfb]

	* src/dmaSnd.c:
	When pulling a byte from the FIFO, check DmaSnd_FIFO_Refill() really
	added some new byte In the case where DMA is disabled or frame start
	= frame end, no new bytes will be added to the FIFO, so we must play
	empty samples. (fix 'Brace' by Diamond Design)
	[98e6f156a2e3]

	* src/dmaSnd.c:
	Clear DMA audio registers even on warm reset + clear frame start/end
	addresses When started in STE mode, the demo 'Brace' by Diamond
	Design starts the DMA audio without setting frame start/end
	addresses, which can result in bad samples if those registers are
	not cleared during the reset (this looks like a bug in the demo
	anyway).
	[dc39860bc47a]

	* src/sound.c:
	Remove old code previously used to compute number of samples per VBL
	[92bc52e0fe2e]

	* src/change.c:
	Remove redundant call, init function is already called in
	Configuration_Apply()
	[d52b7742dba4]

	* src/gui-sdl/dlgSystem.c:
	Clocks' init function should not be called from the dialog, it's
	done when new config is applied
	[5f05f0779940]

	* src/change.c:
	Remove redundant call, init function is already called in
	Configuration_Apply()
	[51913c0eeded]

	* doc/release-notes.txt:
	Add note about more precise frame per sec values
	[071c7867a542]

	* doc/todo.txt:
	Remove STE's DMA sound from the todo list, sound should be correct
	now
	[0bf7ced4269f]

	* src/gui-sdl/dlgScreen.c:
	Use a define instead of a direct value
	[8700e730d3fb]

	* src/cycInt.c, src/dmaSnd.c, src/includes/cycInt.h,
	src/includes/dmaSnd.h:
	Remove INTERRUPT_DMASOUND, this is not needed as DMA sound is
	updated on each HBL
	[8110561b47a9]

	* src/dmaSnd.c:
	Add more info in some traces
	[3dca683da1b5]

	* src/dmaSnd.c:
	Remove unnecessary mask
	[e30e78e2ae02]

	* src/dmaSnd.c:
	Remove old DMA code, add new variables to the memory snapshot
	[458ae0b8c3db]

	* src/dmaSnd.c:
	Removed unused FIFO functions
	[e63d06f680dc]

2011-07-15  Nicolas Pomarede

	* src/ikbd.c:
	Include ACIATxDataRegister in memory snapshot
	[19b7369a62fb]

	* src/clocks_timings.c, src/gui-osx/SDLMain.m,
	src/includes/clocks_timings.h, src/main.c, src/shortcut.c:
	Use a more explicit define to shift number of VBL per sec
	[ab7ac15839ec]

	* src/avi_record.c, src/gui-osx/SDLMain.m, src/gui-sdl/dlgScreen.c,
	src/includes/avi_record.h, src/main.c, src/shortcut.c:
	Add support for non integer frame rate when recording video A real
	STF/STE/... doesn't produce video at exactly 50 or 60 HZ, the avi
	recording functions now support such non integer rate (eg 50.053 FPS
	for STE PAL) This should give the most accurate way to record
	video/audio output at the exact timing it was played on a real
	machine.
	[ef43fd8cd5b1]

2011-07-15  Laurent Sallafranque

	* src/cpu/newcpu.c:
	fix: take into account do_cycle cycles in do_specialties. This allow
	STOP instruction to work with the new cpu and this let some demos
	work again with the new cpu
	[644b422a7c2f]

2011-07-14  Nicolas Pomarede

	* src/includes/ioMem.h:
	Add function for IO regs that return $OO instead of $ff
	[60ff3344f1a8]

	* src/ioMem.c, src/ioMemTabFalcon.c, src/ioMemTabSTE.c,
	src/ioMemTabTT.c:
	Some unused video registers return $00 instead of $ff when read For
	STE and Falcon, this was verified on real machine. For TT, use the
	same behaviour as Falcon for now (not verified)
	[41f4bfcbf897]

	* src/main.c:
	Correct multiplication overflow due to bad cast, this could cause
	Hatari to freeze after an hour or so
	[6b0218bf0e52]

	* src/sound.c:
	Don't print warnings about slow sound if audio's output is disabled
	[390e1e4a4de3]

	* src/ikbd.c:
	Don't clear bytes in transit when ACIA_Reset is called Since rev
	3315, this is needed by Froggies Over The Fence's menu to exit
	properly, but official 6850 datasheet is not very clear about this,
	could be something wrong somewhere else in the acia's emulation.
	[3969372e9ebb]

2011-07-12  Nicolas Pomarede

	* src/ioMemTabSTE.c:
	Add 'todo' note about some STE's video registers that should return
	0 when read
	[4b1dfb03b2cb]

	* src/video.c:
	Update comments about bits 2-7 when reading $ff8260
	[7d36e14be668]

2011-07-11  Nicolas Pomarede

	* src/gui-osx/SDLMain.m, src/gui-osx/Shared.h, src/gui-osx/Shared.m:
	Patch by Deniz Turkoglu to remove some warnings when compiling under
	OS X
	[cc422de3973a]

	* src/video.c:
	Only set unused bits of $ff8260 to 1 in STF mode, not in STE mode
	(fix running BITS intro #54 in STE mode)
	[92dbad2b1772]

	* src/dmaSnd.c:
	For DMA sound, remove anti-aliasing from the low pass filter (patch
	dy D. Savinkoff)
	[7c9f63c03fcf]

2011-07-10  Nicolas Pomarede

	* doc/compatibility.html:
	Fix html typo
	[b0f5bb5b8b5a]

	* src/dmaSnd.c:
	Correct STE's DMA sound when user chooses a low frequency for the
	sound's output
	[c49f7bdf11ee]

2011-07-09  Nicolas Pomarede

	* doc/compatibility.html, src/sound.c:
	Better handling of internal audio's buffer when fast forward or
	slowdown happen In fast forward mode, the audio's indexes were
	incorrectly reset, which could cause some errors in the number of
	generated samples per VBL, and could cause some programs to crash
	(especially those using STE's DMA audio counters) (fix Music Dreams
	II by Electronic Images and Songs Of The Unexpected by OUCH)
	[a9c736a221ca]

2011-07-05  Nicolas Pomarede

	* doc/release-notes.txt:
	typo
	[627f18ae3eb3]

2011-07-05  Nicolas Pomarede

	* doc/release-notes.txt:
	Add some notes about sound/dma audio improvements
	[d2a689f19190]

	* src/main.c:
	Fix problem when Hatari would not react if paused for more than 2147
	seconds.
	[375fcc611859]

2011-07-04  Nicolas Pomarede

	* src/clocks_timings.c:
	Add more explicit TODO in the comments regarding Mega STE/TT/Falcon
	[3b62e5d277c9]

2011-07-05  Eero Tamminen

	* doc/emutos.txt:
	more demos compatible with EmuTOS
	[c2f327699ace]

2011-07-04  Nicolas Pomarede

	* src/clocks_timings.c:
	Fix comment
	[3a569a5e50e0]

	* doc/compatibility.html:
	spec512 mode is now working in med res too
	[2e625b262b00]

	* doc/compatibility.html:
	The issues where combining STE's 224 bytes overscan with horizontal
	scrolling are gone
	[a60cc4ce3ca4]

2011-07-02  Nicolas Pomarede

	* src/sound.c:
	For YM2149 clock's frequency, use the value defined in
	clocks_timings
	[c73fce901308]

	* src/includes/clocks_timings.h:
	MachineClocks structure should be declared as 'extern'
	[753e433dcf17]

	* src/dmaSnd.c, src/video.c:
	Mega STE's DMA sound and video shifter are working like the STE's
	ones
	[b8f966115ddd]

	* src/statusbar.c:
	Handle Mega STE in status bar
	[ab42f051b090]

2011-07-01  Nicolas Pomarede

	* src/dmaSnd.c:
	On STE, Sound Mode Control for DMA audio should be 0 after a reset
	[7609d8d1711e]

2011-06-26  Thomas Huth

	* cmake/DistClean.cmake:
	Remove install_manifest.txt during distclean
	[f097454f15cb]

	* CMakeLists.txt, cmake/Uninstall.cmake:
	Added 'uninstall' target
	[d9963ef43aee]

	* .hgignore:
	Ignore all packed manual pages
	[acff8c137c33]

2011-06-20  Eero Tamminen

	* doc/manual.html:
	fixes for debugger variables documentation
	[da8e4993c8a5]

	* doc/manual.html:
	fix manual w3c validator errors and internal links
	[aa09199892bd]

	* readme.txt:
	add some notes to readme.txt on packaging Hatari for Linux
	[92878536a690]

2011-06-20  Thomas Huth

	* tests/debugger/Makefile, tests/debugger/makefile:
	Renamed Makefile to makefile so that this file does not get removed
	anymore during 'make distclean' from the main directory
	[e10b50045a1a]

	* src/configuration.c:
	A non-existing configuration file is not fatal, so down-graded the
	message level to debug
	[4c6217e63292]

2011-06-19  Thomas Huth

	* CMakeLists.txt:
	Introduced ETCDIR so that the path for the global configuration file
	can be set by the user
	[e14ce1d98bb1]

2011-06-19  Eero Tamminen

	* doc/todo.txt:
	update winuae/debugger todos

	(reorder a bit to more likely implementation order)
	[d5b64161ac84]

	* src/debug/debug_priv.h, src/debug/debugcpu.h, src/debug/debugdsp.h,
	src/reset.c:
	re-set CPU&DSP debugger flags after reset if there are breakpoints
	etc
	[687830a03e51]

	* doc/manual.html:
	add debugger Usage examples section, update build instructions for
	CMake (+ some misc changes)
	[946df9d55e44]

2011-06-18  Eero Tamminen

	* doc/emutos.txt:
	more items to emutos compat list
	[b64303176318]

	* doc/manual.html, src/debug/breakcond.c:
	rewrite/update/reorder/expand debugger documentation, especially for
	breakpoints
	[9a915e6c05bf]

	* src/debug/breakcond.c:
	update & improve breakpoint help texts, remove overlapping info
	[ced7137d31db]

	* doc/manual.html, doc/release-notes.txt, doc/todo.txt,
	src/debug/debugcpu.c, src/debug/debugdsp.c, src/debug/evaluate.c,
	src/debug/evaluate.h:
	accept register/symbol/variable names for ranges to allow them for
	memdump & disasm commands
	[b59a4d2d5017]

	* tests/debugger/test-dummies.c:
	add new test dummies for the new debugInfo.c functions
	[ac144e6cbbc4]

2011-06-15  Laurent Sallafranque

	* doc/compatibility.html:
	change mouse trap game compatibility with new winuae core.
	[327ceee69cd3]

2011-06-15  Eero Tamminen

	* doc/manual.html:
	polish debugger section, remove now redundant LEDs info
	[d251bad249ec]

2011-06-14  Eero Tamminen

	* doc/todo.txt:
	add list of missing debugger features from Steem + update other
	todos
	[c7e0b38c1058]

2011-06-13  Nicolas Pomarede

	* doc/compatibility.html, src/ikbd.c:
	Add custom IKBD routine for Chaos A.D. by DNT Crew (used to decode
	the protection)
	[c6d92e5087e6]

2011-07-01  Nicolas Pomarede

	* src/dmaSnd.c:
	New STE's DMA audio engine with much improved accuracy and sound
	quality This new version emulates the DMA's 8 bytes FIFO and gives
	results nearly identical to a real STE when comparing the DMA audio
	address counter, resulting in an almost perfect sound emulation with
	no more noise/clicks sounds. (fix Hextracker by Paulo Simoee)
	[12cc0d539ef8]

2011-06-24  Nicolas Pomarede

	* src/main.c:
	Use ClocksTimings_GetVBLDuration_micro to accurately compute the
	duration of the emulated VBL
	[4a810e2dbaa4]

2011-06-23  Nicolas Pomarede

	* src/dmaSnd.c:
	Remove unnecessary '|1', both values are even
	[c0b498085f4d]

	* src/dmaSnd.c:
	Use 64 bits counter to increase the precision of the emulated DMA
	audio's frequency Upper 32 bits are used for the integer part ; this
	also simplifies the code
	[94fd2ffdae6a]

2011-06-21  Nicolas Pomarede

	* src/sound.c:
	Major accuracy improvements for STE DMA sound
	- In Sound_Update_VBL(), use the functions from clocks_timings.c to
	precisely determine the number of samples needed to emulate one
	VBL of audio data (a real PAL STE doesn't have a fixed video freq
	of 50 Hz, but of 50.053 Hz) We take into account the CPU clock as
	well as the number of cycles per VBL for each type of emulated
	machine to compute SamplesPerFrame.
	- In Sound_SetSamplesPassed, the returned number of samples to
	generate for the current call of Sound_Update_VBL could sometimes
	create more than SamplesPerFrame samples per emulated VBL, which
	could create a very noisy sound output. This results in a much
	better sound quality, as well as nearly perfect CPU/video/audio dma
	synchronisation under STE. Hatari's DMA frame counter should now be
	identical to the one measured on a real STE (except the 8 bytes DMA
	FIFO which is not emulated yet) (fix Audio/Video sync issues in
	'More Or Less Zero' by DHS, 'Hextracker' by Paulo Simoes)
	[e136600b88ce]

	* src/clocks_timings.c:
	Add example in comment
	[f225c5697540]

	* src/dmaSnd.c:
	Add debugging trace
	[d89332839af2]

2011-06-19  Nicolas Pomarede

	* src/dmaSnd.c:
	Always call Sound_Update() when changing DMA sound control register
	$ff8900 Previous versions were calling Sound_Update() only when DMA
	audio was stopped but not when it was started, which means that if
	DMA was started at the middle of a VBL, we would generate DMA
	samples for the whole VBL instead of first generating no sound for
	0.5 VBL followed by 0.5 VBL of sound where DMA is enabled. This
	would play more DMA samples than expected and create bad sound
	because current DMA address would be beyond its expected value at
	the end of the VBL (end of DMA frame would happens sooner than
	expected)
	[950e18dc2295]

2011-06-13  Nicolas Pomarede

	* src/clocks_timings.c:
	Remove debug printf
	[21429ca2bc2d]

2011-06-12  Nicolas Pomarede

	* src/clocks_timings.c:
	Remove useless #include
	[4a4d5ea043fc]

	* src/change.c, src/configuration.c, src/gui-sdl/dlgSystem.c,
	src/main.c, src/tos.c:
	Call ClocksTimings_InitMachine() when the emulated machine type is
	changed (STF, STE, Falcon, ...)
	[df8c0a09d846]

	* src/CMakeLists.txt, src/clocks_timings.c,
	src/includes/clocks_timings.h:
	Add clocks_timings.c to the source tree
	[065cb494bb3f]

2011-06-12  Eero Tamminen

	* src/debug/evaluate.c:
	match order = variables, registers, symbols order like for
	breakpoints
	[7a63ea3ae030]

2011-06-11  Eero Tamminen

	* etc/README, etc/n810.cfg, etc/win-ce.cfg, etc/wiz.cfg:
	update example etc/ files for latest configuration state
	[7dbae8189806]

	* doc/todo.txt, readme.txt:
	slightly more info on missing WinUAE stuff
	[27cc2b0d685e]

	* doc/manual.html, doc/release-notes.txt, src/debug/breakcond.c,
	src/debug/debugInfo.c, src/debug/debugInfo.h:
	Add DATA & BSS debugger variables and rename BasepageTextSegment to
	TEXT
	[3bd5e0430cf7]

2011-06-09  Eero Tamminen

	* doc/release-notes.txt:
	update release notes
	[93382453133e]

	* src/debug/debugInfo.c:
	countrycode: cz->cs, see http://en.wikipedia.org/wiki/.cs

	(and the language code is "cs" too.)
	[f71818912d5b]

2011-06-07  Eero Tamminen

	* src/debug/debugInfo.c:
	move cookiejar address to cookiejar subcommand
	[38ab3cd89828]

	* src/debug/debugInfo.c:
	add cookiejar & language info to debugger OS information
	[a93f5734577e]

	* doc/manual.html, doc/release-notes.txt:
	document BasepageTextSegment debugger variable
	[a1642b4315ff]

	* src/debug/breakcond.c, src/debug/debugInfo.c, src/debug/debugInfo.h:
	add BasepageTextSegment debugger/breakpoint variable
	[39d322def718]

2011-06-05  Nicolas Pomarede

	* doc/compatibility.html:
	Update status for Pandemonium Demos by Chaos
	[f78b37f28b2e]

2011-06-01  Eero Tamminen

	* doc/compatibility.html:
	explain WinAUE issue slightly better in compat list

	(There are actually quite a lot of DSP programs that happened to
	work in v1.4 with the old AUE core that aren't anymore working with
	it and which need WinAUE core.)
	[10c8205b6d35]

	* doc/compatibility.html:
	Ultimate Arena works now:

	It crashed occasionally with earlier Hatari versions, assumably
	because DMA register $ff8901 wasn't handled correctly in Crossbar
	[6187d1f6a629]

2011-06-01  Laurent Sallafranque

	* src/falcon/crossbar.c:
	fix bus error ($ff8901) in falcon mode. (this let voice.prg,
	conquest of elysium and some other programs to work now).
	[72087e7307f8]

2011-05-31  Nicolas Pomarede

	* src/includes/configuration.h:
	Add a specific machine type for 'Mega STe' Although mostly similar
	to the STe, the Mega STe has a few differences : 8/16 MHz 68000 cpu,
	CPU cache, optional FPU, HD floppy, ...
	[c05696155ecc]

2011-05-25  Nicolas Pomarede

	* src/main.c:
	Rename Clock_GetTicks/Clock_Delay to Time_GetTicks/Time_Delay It's
	better to keep "clock" to refer to the MHz frequencies of the
	different components of an Atari computer
	[cc8f153cbbe3]

2011-05-24  Laurent Sallafranque

	* doc/todo.txt:
	Update todo list.
	[cf52ae8a1f1c]

2011-05-23  Eero Tamminen

	* src/includes/stMemory.h, src/stMemory.c:
	fix printf warning from newer gcc (hopefully, I have only older gcc)
	[0d575f03c4a6]

	* src/debug/debugui.c, src/includes/options.h, src/main.c,
	src/options.c:
	more option parsing arg consting to get rid of gcc 4.6 const
	warnings
	[3f1abe99f26e]

2011-05-22  Eero Tamminen

	* src/debug/debugInfo.c:
	overscan mode has ORed flags, fix
	[d34fdaa2442e]

	* src/cfgopts.c:
	cleanup / fix configuration file handling:

	* fgets() returns NULL both on errors & EOF and that NULL is passed
	through by Str_Trim(), so check Str_Trim() return value instead of
	relying on feof() to fix error handling.

	* use string returned from Str_Trim() instead of string that's given
	to it as argument (both work as Str_Trim() modifies the arg, but
	the idiom is to use its return value and that fixes Clang warning)

	* as fgets() reads only a single line and string trimming removes
	white space at both ends of the string, there's no point in giving
	\n & \r as delimeters for strtok(), so use just "="
	  - supporting multiple delimeters would also be confusing

	* check "next" validity returned by further strtok()s calls to
	avoid potential segfaults when checking token types and values.
	  - don't anymore accept "key" as equivalent of "key=" (which the
	previous code did, but only for string types)

	* Remove redundant & broken strtok() call and resulting redundant
	"next" variable from update_config()
	  - Fixes Clang & GCC 4.6 warning
	[0b10ee3dd607]

	* src/debug/breakcond.c:
	show also locked info after breakpoint info (same change as for
	"file" option)
	[50e2938d85d2]

	* doc/release-notes.txt, src/debug/debugInfo.c:
	"video" subcommand for the debugger "info" command (for showing
	video related Hatari variable values/info)
	[2bdb8e92e050]

2011-05-22  Nicolas Pomarede

	* src/video.c:
	Remove unused variable bScreenChanged
	[29578450ae82]

2011-05-22  Eero Tamminen

	* src/video.c:
	set global variables that aren't used outside of video.c as static
	[4512065d5a03]

	* src/gemdos.c:
	fix Clang reported uninitialized variable and potential NULL pointer
	use in gemdos.c
	[1f7cb302c349]

	* src/floppy.c:
	move unused debug variables inside ifdef

	(Clang complainment)
	[616e3e78a36d]

	* src/hdc.c:
	fix undefined hdc.c variable value use reported by Clang
	[c6556b8be41c]

	* src/xbios.c:
	update xbios debug stuff (complained by Clang)
	[2a4a2def2908]

	* src/debug/profile.c, src/falcon/videl.c:
	remove redundant assignments reported by Clang
	[247607093b75]

	* src/gui-sdl/dlgFileSelect.c, src/gui-sdl/sdlgui.c:
	remove redundant variables from SDL GUI code reported by Clang
	[0352da822910]

	* src/ioMem.c:
	silence (theoretical) NULL pointer access warning from Clang for
	ioMem
	[55e5664e5560]

	* src/screenSnapShot.c:
	remove Clang reported redundant variable from screenshot code
	[434c5a11fb91]

	* tools/hmsa/hmsa.c:
	fix clang reported hmsa warning output bug
	[45dbe40fb4a2]

	* doc/compatibility.html, doc/release-notes.txt, doc/todo.txt:
	minor doc updates/fixes in preparation to release
	[cea57563a4ef]

2011-05-21  Eero Tamminen

	* doc/manual.html:
	add documentation on chaining breakpoints & other debugger actions
	[fa3ef1b2976b]

	* src/debug/breakcond.c:
	show :file action output last on breakpoint hit

	(otherwise it's confusing, first you get note about hit, them file
	action output, then breakpoint name etc)
	[8d310c58db96]

	* tests/debugger/test-evaluate.c:
	add test for evaluting internal variables
	[d8f472afed09]

	* src/debug/breakcond.c, src/debug/breakcond.h, src/debug/evaluate.c:
	allow use of Hatari internal variables in debugger expressions (e.g.
	"VBL+4" in breakpoints)
	[16a02567b5f1]

2011-05-20  Nicolas Pomarede

	* src/ikbd.c:
	Fix a weird bug in tos 1.02/1.04 when ACIA's TX delay is too big
	Although theorical value should be above 7000 cpu cycles, such value
	is causing some memory being overwritten by the stack for tos
	1.02/1.04, which can prevent restoring the correct resolution from
	desktop.inf (and certainly mess with other things in the memory) !
	Lower the value to 1000 cycles for now, this needs better tests on a
	real ST.
	[2a7f3d1f3052]

2011-05-15  Nicolas Pomarede

	* src/dmaSnd.c:
	Improved LMC1992 filtering for DMA sound by David Savinkoff
	- The IIR filters for bass/treble now control the volume
	- Anti-alias filtering is not performed at the 50066 Hz sampling rate
	; better sound and performance
	[3947643d642a]

	* src/sound.c:
	Remove debug printf
	[7ec7998ade7a]

2011-05-14  Eero Tamminen

	* src/falcon/hostscreen.c, src/resolution.c:
	ignore user configured max resolution when --desktop yes is set

	Fixes case where Falcon monochrome isn't zoomed on fullscreen with
	the default configuration max window size.

	Add more debug statements to resolution handling + fix one
	hostscreen.c one.
	[f1e11759798a]

2011-05-14  Nicolas Pomarede

	* doc/compatibility.html:
	'BBS Intro 3' is now working
	[134df05ab3fd]

	* src/uae-cpu/gencpu.c:
	Correctly handle address error in UAE's cpu core for JSR and JMP
	(fix 'BBS Intro 3' by Lynx which uses this in the 3D routines)
	[59d01aea8b52]

	* doc/compatibility.html:
	Add note for 'BBS Intro 3' by Lynx not working for now
	[a38e173a6574]

	* configure:
	Remove previous CmakeCache.txt before running cmake If we run for
	example './configure --enable-winuae-cpu' then './configure', the
	build will still use winuae's cpu instead of the default uae's one,
	which is not the intended behaviour. Removing CMake's cache fixes
	the problem
	[1329ce80c86f]

2011-05-13  Eero Tamminen

	* src/resolution.c:
	fix: do not force default bitdepth for fullscreen with --desktop
	option

	(This breaks ST monochrome mode and isn't needed to get rid of LCD
	resolution switch delay for which the --desktop option helps.)
	[18e8754365b8]

2011-05-13  Nicolas Pomarede

	* readme.txt:
	Add note about "./configure --enable-winuae-cpu" to use the new
	WinUAE's cpu core
	[ef39f174a08d]

2011-05-11  Laurent Sallafranque

	* src/debug/debugInfo.c:
	add some video registers to debuginfo videl. Also add size of
	registers for videl and crossbar.
	[25fe689e6055]

2011-05-11  Nicolas Pomarede

	* src/ikbd.c:
	Better support of bit 1 (TX buffer empty) in ACIA's status register
	when writing to $fffc02 When a byte is written in $fffc02 (to be
	sent to the ikbd), bit 1 of SR is set to 0 to indicate a serial
	transfer is happening. Once the byte has been completly transfered
	to the ikbd, bit 1 of SR should be turn back to 1. We use an
	internal timer of ACIA_CYCLES to emulate this transfer's delay and
	correctly emulate the behaviour of bit 1. (fix 'Pandemonium Demo' by
	Chaos)
	[ce7891104e5b]

2011-05-10  Nicolas Pomarede

	* src/debug/log.h:
	Trace ikbd_all should not include VDI calls
	[1cba95fa459f]

2011-05-09  Nicolas Pomarede

	* doc/compatibility.html:
	Add note for DNT screen in Snork Demo
	[e5ba3424a692]

2011-05-09  Eero Tamminen

	* tests/readme.txt:
	add readme for tests
	[338a65fc1cb5]

	* doc/compatibility.html, doc/hatari.1, doc/manual.html, doc/release-
	notes.txt, readme.txt:
	update docs for coming v1.5 release and add notes about WinUAE
	[0b6c3f872bb9]

	* doc/midi-linux.txt:
	update linux midi notes
	[4e53915d0f43]

2011-05-09  Nicolas Pomarede

	* doc/compatibility.html, doc/release-notes.txt:
	Typo : AUE -> UAE
	[c81447ad3d45]

2011-05-08  Nicolas Pomarede

	* doc/compatibility.html:
	Add note for 'Tyme Warp' not working yet
	[271e7e19215b]

	* doc/compatibility.html:
	Add note for 'Music Dream II' on STE
	[9e71213555e5]

	* src/includes/sound.h, src/main.c, src/shortcut.c, src/sound.c:
	Sound_ResetBufferIndex() should only be called just after the sound
	was generated for the whole VBL Calling Sound_ResetBufferIndex()
	will set CurrentSamplesNb=0, which can interfere with the way we
	compute current dma sound address ($ff8909/0b/0d). To avoid problems
	in that case, the call to Sound_ResetBufferIndex() should be defered
	just after Sound_Update(true) was called to complete the sound
	buffer for the VBL. (fix 'Music Dream II' crashing on a red screen
	when exiting pause or fast forward)
	[4607b3227e3a]

2011-05-08  Thomas Huth

	* src/CMakeLists.txt:
	Use the right variable for linking the variables from the FindX11
	CMake module
	[d5cabe4adc87]

2011-05-01  Eero Tamminen

	* src/fdc.c, src/includes/fdc.h:
	cleanup: move things that can be static and aren't needed in fdc.h
	to fdc.c
	[75b86c628507]

	* src/gemdos.c:
	fix to gemdos emu DST handling (bug reported by Uwe on hatari-devel)
	[2a595cb7f677]

2011-04-30  Eero Tamminen

	* src/fdc.c, src/hdc.c, src/includes/fdc.h:
	validate fdc.c & hdc.c memory copy address validities

	(fdc.c one fixes Hatari crash with Mental Hangover demo)
	[64062150d486]

	* src/includes/stMemory.h, src/stMemory.c:
	add stMemory_SafeCopy()
	[cf281e76c391]

	* doc/release-notes.txt:
	add release notes about Laurent's DSP changes
	[45f36c071227]

2011-04-22  Eero Tamminen

	* src/ikbd.c:
	revert IKBD date change, TOS v2 requires BCD with overflow (to show
	this century dates correctly)
	[3fb2bdaf0487]

2011-04-30  Nicolas Pomarede

	* doc/compatibility.html:
	Fix url on pouet.net
	[764788ceaab4]

	* doc/compatibility.html:
	'Bird Mad Girl Show' requires Hatari 1.5
	[4e6e92a24e1b]

2011-04-29  Nicolas Pomarede

	* doc/compatibility.html:
	Add Gen4 demo by Overlanders to compatibility list
	[299232266a02]

	* src/uae-cpu/newcpu.c:
	While processing an exception, raise an address error exception if
	the new PC is not even (fix Gen 4 Demo by Ziggy Stardust / OVR)
	[e177e0529b24]

2011-04-23  Thomas Huth

	* CMakeLists.txt, cmake/config-cmake.h, src/includes/scandir.h,
	src/scandir.c:
	Added proper CMake tests for alphasort() and scandir()
	[fa6f8f180d0e]

2011-04-22  Thomas Huth

	* src/ikbd.c:
	Reverted Eero's bad BCD calculation change
	[672bac9e16df]

	* src/ioMemTabTT.c:
	TT does not have an Mega-ST(E) compatible RTC chip
	[e0bca488de6f]

2011-04-21  Eero Tamminen

	* python-ui/TODO, python-ui/dialogs.py, python-ui/hatari.py, python-ui
	/release-notes.txt:
	add --desktop support to Python UI + update TODO
	[a705fa981aa4]

	* python-ui/README, python-ui/config.py, python-ui/debugui.py, python-
	ui/hatariui.py, python-ui/uihelpers.py:
	update python UI copyrights & doc
	[ffb75703039f]

	* python-ui/dialogs.py, python-ui/hatari.py, python-ui/release-
	notes.txt:
	add RTC support to python UI
	[5fad5d46a324]

	* doc/hatari.1, doc/manual.html, src/options.c:
	add option for enabling/disabling RTC
	[f6e55ff31842]

2011-04-20  Eero Tamminen

	* src/ikbd.c:
	fix BCD calculation for IKBD date
	[41c79174127b]

2011-04-14  Eero Tamminen

	* tools/hconsole/hconsole.py:
	fix one more python v2 vs. v3 issue in hconsole
	[ca8cfadca146]

2011-04-13  Eero Tamminen

	* doc/emutos.txt, doc/manual.html, doc/release-notes.txt:
	minor doc updates
	[0217e51b257c]

2011-04-12  Nicolas Pomarede

	* src/sound.c:
	Set default YM Mixing method to 'STF table' instead of 'linear' 'STF
	table' is giving much better results when the 3 voices of the YM2149
	are used to play samples.
	[fc530888f2b2]

	* src/configuration.c, src/includes/sound.h, src/sound.c:
	Call Sound_SetYmVolumeMixing when YM Mixing is changed (rebuild
	conversion table)
	[0747ee3412a3]

2011-04-11  Eero Tamminen

	* doc/hatari.1, doc/images/sound.png, doc/manual.html, src/options.c:
	add documentation for YM mixing option
	[51d2f4cafd46]

	* src/gui-sdl/dlgSound.c:
	add YM mixing options to SDL GUI sound dialog
	[38649699b323]

2011-04-10  Nicolas Pomarede

	* src/dmaSnd.c:
	Remove unused variable
	[c1688c3a9ec8]

	* src/dmaSnd.c, src/includes/dmaSnd.h, src/video.c:
	Rename DmaSnd_HBL_Update to DmaSnd_STE_HBL_Update and update DMA
	sound on every HBL only for STE (not Falcon)
	[377809d1b3f3]

2011-04-07  Eero Tamminen

	* src/options.c:
	add --ym-mixing option
	[b0101f140f87]

2011-04-06  Nicolas Pomarede

	* src/configuration.c, src/includes/configuration.h:
	Add YmVolumeMixing to the [sound] section of the config file
	[7333e43ffef0]

2011-04-05  Eero Tamminen

	* etc/README:
	add links to info about device mentioned in README
	[8e1eabd3d313]

	* etc/README:
	update comments for CMake
	[a7d993c1b04f]

2011-04-05  Matthias Arndt

	* etc/GP2X_Wiz/crossdefs.wiz, etc/GP2X_Wiz/hatari-wrapper.gpe,
	etc/wiz.cfg:
	- initial support for crosscompiling for GP2X Wiz target
	(Crossdefs for CMake, config and target wrapper script)
	[f0d5387b765c]

2011-04-03  Eero Tamminen

	* doc/images/screen.png, doc/manual.html, src/gui-sdl/dlgScreen.c:
	add "keep desktop resolution" and "drive led" options to screen
	dialog
	[369f3a3e22eb]

	* doc/manual.html:
	split & re-order options in manual similarly to man page
	[f536a0a48a56]

2011-04-02  Eero Tamminen

	* doc/compatibility.html, doc/emutos.txt:
	correct Octalyser info from Anders
	[8df9f4c43181]

	* doc/compatibility.html, doc/emutos.txt:
	update emutos compat list
	[6e3652cf0596]

	* doc/compatibility.html:
	Protracker STE OK according to Matthias, Octalyzer still flickers
	[7c92d1fea7f9]

2011-04-07  Nicolas Pomarede

	* doc/compatibility.html:
	Update DMA sound status for 'Power Up Plus' and 'Mental Hangover'
	[18ef05fc8a91]

	* src/dmaSnd.c:
	Since DMA sound is updated on each HBL, we don't need an internal
	timer anymore to detect the end of frame
	[0ac9d5f616ad]

2011-04-04  Nicolas Pomarede

	* src/dmaSnd.c:
	Remove Hatari's internal interrupt when DMA sound is stopped
	[4c5ac7bd582c]

	* src/dmaSnd.c:
	Create a common function to apply bass/treble filters
	[d9ef79bfd0a9]

2011-04-03  Nicolas Pomarede

	* src/dmaSnd.c, src/includes/dmaSnd.h, src/video.c:
	Reorder code, more log, missing include
	[9713bc7c2581]

	* src/dmaSnd.c, src/video.c:
	On STE, call Sound_Update on each HBL to handle programs that modify
	the samples data while DMA sound is ON Some programs are using
	single buffer method to build the next sample to be played in the
	same buffer used to play the current sample. We need to update the
	DMA output on each HBL to be sure to take the correct bytes into
	account (generating the whole output only once per VBL would not
	work) (fix the game 'Power Up Plus' and the demo 'Mental Hangover'
	by The Pixel Twins)
	[8f208db51825]

	* src/dmaSnd.c:
	Use constant values, DMA sound frequencies are not related to the
	CPU's clock
	[6e8cbaf128e4]

2011-04-01  Nicolas Pomarede

	* doc/compatibility.html:
	Add comment for 'Bad Taste' not working yet
	[4803f9b9c55a]

2011-04-01  Laurent Sallafranque

	* src/falcon/dsp_disasm.c:
	remplace "0x" by $ in all DSP addresses and values when debugging.
	[dcaebf6c99d4]

2011-03-31  Nicolas Pomarede

	* doc/compatibility.html:
	Add comment for 'Mental Hangover' by Pixel Twins
	[3a9230cb56fc]

2011-03-29  Eero Tamminen

	* src/debug/log.h:
	use GCC "unlikely" feature for the other trace log level check too
	[f5a30d4d2d03]

2011-03-29  Laurent Sallafranque

	* src/falcon/dsp_cpu.c, src/falcon/dsp_disasm.c:
	change LogTraceFlags by log.h macro LOG_TRACE_LEVEL(). Made
	write_memory inline. Better readability for a and b registers in
	disasm mode.
	[40fc47accfba]

	* src/falcon/dsp_cpu.c:
	remove 2 unuseful defines
	[c8d83e1589f7]

	* src/debug/log.c, src/debug/log.h, src/falcon/dsp_cpu.c,
	src/falcon/dsp_disasm.c:
	add: dsp_disasm_reg and dsp_disasm_mem trace. Now, you can trace DSP
	instructions + see the modified registers and the modified memory
	fields. To allow dsp_disasm_reg and/or dsp_disasm_mem, dsp_disasm
	must be enabled.
	[356d537374d5]

2011-03-27  Nicolas Pomarede

	* src/debug/68kDisass.c, src/sound.c:
	Cancel unwanted commit
	[9786a1d21efc]

	* doc/authors.txt, src/debug/68kDisass.c, src/sound.c:
	StSound's routines for tone/noise are not used anymore
	[32325dbe6ab0]

2011-03-27  Thomas Huth

	* doc/authors.txt:
	Updated the authors.txt file.
	- Added Deniz Turkoglu
	- Added WinUAE
	- Make sure that all lines fit the 80 columns limit
	[b1170dc78d62]

	* src/gui-osx/English.lproj/SDLMain.nib/designable.nib, src/gui-
	osx/English.lproj/SDLMain.nib/keyedobjects.nib, src/gui-
	osx/PrefsController.m, src/gui-osx/SDLMain.h, src/gui-osx/SDLMain.m:
	Changes to the OS X GUI so that it hopefully compiles again... ...
	thanks to Deniz Turkoglu for the patch.
	[20b46807e5d6]

2011-03-26  Nicolas Pomarede

	* src/dmaSnd.c:
	When reading DMA sound address at $ff8909/0b/0d, call SoundUpdate
	first to update current address (fix 'Music Dream II' by Electronic
	Images)
	[6aea892b11b1]

	* src/cycles.c, src/uae-cpu/newcpu.c:
	Correct video timing for 'move.b $ffff8209.w,xxx.w' (fix 'Bird Mad
	Girl Show' loader/protection)
	[903c21c349ae]

2011-03-25  Nicolas Pomarede

	* doc/compatibility.html:
	Add note for RGB Plasma by Omega (wrong boot sector caused bus
	error)
	[a45a874a4040]

	* src/floppy.c:
	Fix wrong SectorsPerTrack value when boot sector doesn't match
	ST/MSA disk image's size In the case where the boot sector doesn't
	contain the correct values for side, sector per track or total
	number of sectors, the number of tracks was not taken into account
	to guess the correct parameters, which could lead to some errors.
	For example, if the BS reported 1600 sectors/10 sectors per track
	but the real number of sectors was 1440, then corrected number of
	sectors was set to 10 instead of 9 (which means an unlikely 72
	tracks/10 sectors disk was prefered instead of 80 tracks/9 sectors)
	This could cause some disk loaders to crash. (fix RGB Plasma by
	Omega)
	[4afa0450587f]

2011-03-24  Eero Tamminen

	* src/resolution.c:
	check "*width && *height", not "*width && *width"
	[4acf972755f9]

2011-03-23  Eero Tamminen

	* doc/hatari.1, doc/release-notes.txt, src/configuration.c,
	src/includes/configuration.h, src/options.c, src/resolution.c:
	keep desktop resolution is now enabled by default and a bool option
	[1d6e2110addb]

2011-03-22  Eero Tamminen

	* doc/compatibility.html:
	updated compat list according to Nicolas' & Matthias' comments,
	tested Mgif DSP functionality
	[574d08ce7ed0]

2011-03-21  Eero Tamminen

	* doc/manual.html:
	update manual breakpoint options information
	[b5d42e6778f0]

	* doc/release-notes.txt, tests/debugger/Makefile,
	tests/debugger/data/test.ini, tests/debugger/test-breakcond.c,
	tests/debugger/test-dummies.c:
	update breakpoint tests & release notes for new breakpoint options
	(+ fix minor issue in test Makefile automation)
	[7273375b2a70]

	* src/debug/breakcond.c:
	allow multiple options / breakpoint, add ":file" option, rename
	":info" to ":lock"
	[818533555b43]

2011-03-20  Eero Tamminen

	* doc/manual.html:
	improve manual debugger texts
	[3a9349360a2a]

	* src/debug/debugui.c:
	better "lock" debugger command explanation
	[2662c2dca1dc]

	* src/falcon/hostscreen.c, src/falcon/hostscreen.h,
	src/falcon/videl.c:
	fix videl palette[1] on OSX resolution switch by remapping colors:
	- I'm not sure whether the updatePalette() call is (still) needed
	- patch tries also to speed up videl 32-bit updates by removing an
	intermediate function and calling SDL_MapRGB directly
	  - added HostScreen_getFormat() method for that
	- correct some of the used variable types

	[1] It appears that OSX uses different data format for fullscreen
	and windowed surfaces. Remapping native color values on resolution
	switch was reported to fix the handling for Falcon modes with
	palette, but apparently HiColor -> 32-bit conversion has still
	some problem.

	(The patch also tries to speed up videl updates a bit by removing
	one intermediate hostscreen function call per pixel.)
	[1de05185b8ab]

	* doc/hatari.1:
	better manual page explanation for window size options
	[b93a50f6d0d3]

	* src/debug/debugui.c:
	better trace command debugger help
	[e55940b3cab8]

2011-03-20  Laurent Sallafranque

	* src/falcon/dsp_cpu.c:
	fix: dsp56k_disasm must be called before instruction execution
	because some instructions like jmp, jsr, ... change the stack value.
	Then, it must be called after instruction execution to get the
	number of cycles taken by the instruction.
	[79262e80799e]

2011-03-19  Laurent Sallafranque

	* src/falcon/dsp.c, src/falcon/dsp_cpu.c, src/falcon/dsp_cpu.h:
	renamed one function for better understanding
	[fc537719c47b]

	* src/falcon/dsp.c, src/falcon/dsp_cpu.c, src/falcon/dsp_cpu.h,
	src/falcon/dsp_disasm.c, src/falcon/dsp_disasm.h:
	fix and improve DSP trace and DSP disams mode.
	[c579c7be51e1]

2011-03-16  Laurent Sallafranque

	* src/falcon/dsp_cpu.c:
	add: dsp disasm trace
	[1ccac6897d8f]

2011-03-09  Eero Tamminen

	* src/falcon/hostscreen.c, src/falcon/hostscreen.h:
	hostscreen fix/optimization, SDL color channel values are Uint8, not
	Uint32
	[59a80cc1f617]

2011-03-09  Laurent Sallafranque

	* src/falcon/dsp_cpu.c:
	fix: when dsp encounters an unknown instruction, it loops forever,
	and there's no way to stop it but killing the cession. I've added
	100 cycles to allow the user to be able to quit hatari normally.
	[f1c25744b93b]

2011-03-08  Laurent Sallafranque

	* src/cpu/cpummu.c:
	fix: change D(bug( ... messages by fprintf messages. This generates
	a lot warnings.
	[394a26c5da86]

	* src/cpu/newcpu.c:
	fix: Hatari now boots in MMU emulation mode (68040 only + MMU). MMU
	itself still doesn't work for now.
	[8db37b9a0cc5]

2011-03-05  Thomas Huth

	* doc/manual.html:
	Fixed invalid HTML
	[36a4450a376d]

2011-03-04  Eero Tamminen

	* src/options.c:
	typo: WinAUE -> WinUAE
	[73bb9d7d4ba9]

	* doc/hatari.1, src/options.c:
	move WinAUE options under their own heading, improve option
	descriptions & order

	WinAUE options being under their own heading (and the options
	themselves) may be temporary, we don't know yet which ones they will
	be or will we in next release have one or two CPU cores.
	[5b84a830651b]

2011-03-03  Eero Tamminen

	* doc/compatibility.html:
	mark keff demo as broken, add (back) info which demos use DSP
	Mp2-playback
	[22b20535f062]

2011-03-02  Eero Tamminen

	* doc/hatari.1, doc/release-notes.txt, src/options.c:
	add --desktop option + split display options to common, ST/E and
	Falcon/TT options
	[aec78c031aee]

	* src/configuration.c, src/falcon/hostscreen.c,
	src/includes/configuration.h, src/resolution.c:
	Add option for using Desktop resolution in fullscreen

	This way one can avoid the long delay LCDs have in resolution
	switching and problems it causes with multihead etc. setups.

	This is Falcon/TT (hostscreen/videl) specific because only those
	support arbitrary integer scaling values unlike the ST/STE screen
	code.
	[68abf6896aaa]

2011-02-23  Laurent Sallafranque

	* src/cpu/custom.c, src/cpu/fpp.c, src/cpu/gencpu.c:
	fix: some more likely and unlikely warnings removed
	[0e633492235c]

	* doc/compatibility.html:
	Update compatibility list : MP2 sound is now OK (except for wait
	demo). (I've tagged hatari's version as 1.4+)
	[ab36922aed27]

	* src/falcon/videl.c:
	fix Videl monochrome monitor from Eero.
	[87461cda72e5]

	* src/cpu/cpummu.c, src/cpu/cpummu.h, src/cpu/gencpu.c,
	src/cpu/newcpu.c:
	fix: remove likely and unlikely warnings
	[0734213b4d0b]

2011-02-21  Eero Tamminen

	* doc/coding.txt:
	add coding guideline for "magic" value, update notes on coding style
	[32a0384b59bf]

2011-02-20  Laurent Sallafranque

	* CMakeLists.txt:
	return back to old CPU for now
	[879e8d126262]

	* CMakeLists.txt, src/ioMem.c:
	Changed variable to enum
	[0d5edb7c6ea7]

2011-02-20  Eero Tamminen

	* src/cpu/newcpu.c, src/cpu/newcpu.h:
	remove redundant code related to wide-char buf_out() function

	WinUAE has several new functions which use wide-char. buf_out()
	buffers the output before it's printed, but it's not used nor
	implemented in Hatari port of WinAUE code. As Hatari code prints
	information just with printf, buf_out() usage related local
	variables, allocations etc can be removed.

	Additionally this fixes the disassembly functions so that they write
	the disassembly to correct FILE* given by debugger and it makes
	m68k_disasm_2() static as it's not used outside of newcpu.c.
	[885a607022eb]

2011-02-20  Laurent Sallafranque

	* src/ioMem.c:
	added a comment
	[b87fc4bb6601]

	* src/ioMem.c:
	rename variable
	[26cb69744a4a]

	* src/includes/ioMem.h, src/ioMem.c, src/ioMemTabFalcon.c,
	src/memorySnapShot.c:
	add: saving isFalconInSteBusMode variable in snapshots. I've also
	renamed it and the function called to change it.
	[4a91c73cd3e3]

	* src/ioMemTabFalcon.c:
	remove: obsolete comment
	[b91c9476ee01]

2011-02-19  Laurent Sallafranque

	* src/includes/ioMem.h, src/ioMem.c, src/ioMemTabFalcon.c:
	code cleaning: only one function for STe compatible bus or Falcon
	only bus emulation (relative to register $ff8007.b)
	[1c1d95173487]

	* src/ioMemTabFalcon.c:
	fix: use correct value for nCpuFreqShift when register $ff8007.b is
	changed.
	[faa2dc624bb7]

2011-02-19  Eero Tamminen

	* doc/release-notes.txt, python-ui/release-notes.txt, tools/hconsole
	/release-notes.txt:
	update release notes
	[0c6b32289aa3]

	* python-ui/dialogs.py:
	hatari UI: support also AES, Videl, Crossbar & DSP tracing
	[1e5891d9d700]

	* python-ui/debugui.py:
	debug UI: disassembly is now prefixed with '$', adapt
	[a84b3df6ffc3]

	* python-ui/config.py, python-ui/debugui.py, python-ui/dialogs.py,
	python-ui/hatari.py, python-ui/hatariui.py, python-ui/uihelpers.py:
	hatari UI: partial/preliminary Python v3 support
	[aa318a50e4d5]

	* tools/hconsole/hconsole.py:
	hconsole: support both python v2 & v3
	[6ec63dd08c0d]

	* src/falcon/videl.c:
	videl fix: ST shifter is byte, not word register. Fix typos in
	comments
	[1c17e5953630]

	* src/falcon/videl.c:
	add videl trace point on video mode changes
	[cf0c1f7a96ea]

2011-02-19  Laurent Sallafranque

	* src/ioMemTabFalcon.c:
	add : switch from 8Mhz to 16 Mhz or from 169 Mhz to 8 Mhz
	($ff8007.b)
	[ef2322597285]

	* src/includes/ioMem.h, src/ioMem.c, src/ioMemTabFalcon.c,
	src/stMemory.c:
	add: STE bus control compatibility for Falcon. All registers are now
	set / unset according to Thomas's tests on Bus error.
	[7becc35a0e80]

2011-02-18  Laurent Sallafranque

	* src/debug/log.c, src/debug/log.h, src/falcon/dsp_core.c,
	src/falcon/dsp_cpu.c:
	add trace for DSP. Already implemented : dsp host interface
	(transmit, receive and host commands), SSI (transmit, receive,
	handshake mode), dsp state and dsp_interrupts. Still to do : dsp
	instructions, dsp memory and dsp register changes.
	[4d1078fb574c]

2011-02-15  Nicolas Pomarede

	* src/dmaSnd.c:
	Fix from David Savinkoff : allows low sample rates to work with the
	treble step filter
	[99cb3cf237d1]

2011-02-15  Laurent Sallafranque

	* src/cpu/compat.h, src/cpu/custom.c, src/cpu/newcpu.c,
	src/cpu/newcpu.h, src/cpu/sysdeps.h:
	fix f_out to allow disasm register with new CPU. Thanks to Eero to
	the tip.
	[c1aa6b34077b]

	* src/stMemory.c:
	Add all memory size allowed by tos 4.04. As register $ff8006 is not
	well documented, I believe in TOS code.
	[2158985d7c9e]

	* src/audio.c, src/falcon/crossbar.c, src/falcon/crossbar.h:
	fix: DMA filters is only for STE/TT. Add for Falcon mode: take into
	account the new sound frequency while sound plays. Rendering is OK
	now if one change the sound frequency while hatari runs.
	[92a98c558c21]

2011-02-15  Nicolas Pomarede

	* src/audio.c:
	Rebuild STE's bass/treble filters when output sound freq is changed
	while Hatari is running Previously, the tables were not changed and
	remained relative to the old sound freq
	[70aa55493b4d]

2011-02-14  Laurent Sallafranque

	* src/falcon/crossbar.c:
	add: test is DSP Play is not tristated before doing a tranfer
	between DSP_PLAY and crossbar.
	[1783abb0373f]

	* src/stMemory.c:
	Added comment about $ffff8006.b register. returned back to Thomas's
	original code
	[e888217e90b3]

2011-02-13  Nicolas Pomarede

	* src/dmaSnd.c:
	Fix from David Savinkoff : better Bass/Treble filter for output
	audio freq < 22 kHz With previous version, there was no audible
	sound when Hatari's output freq was < 22 kHz
	[68216516bda8]

2011-02-13  Laurent Sallafranque

	* src/video.c:
	fix: call VIDEL function to set correctly bUseSTShifter value.
	[e71e0eeeab08]

	* src/falcon/crossbar.c:
	rollback to previous code : my patch breaks mouse.prg (conquest of
	elysium doesn't work anymore now).
	[c5f107e0a777]

2011-02-12  Nicolas Pomarede

	* src/dmaSnd.c:
	Fix typo
	[0a3c5c9e763e]

	* src/dmaSnd.c, src/includes/dmaSnd.h, src/ioMemTabSTE.c,
	src/ioMemTabTT.c:
	Add write logs for all DMA sound registers
	[ac6bd12ae9d0]

2011-02-11  Laurent Sallafranque

	* src/falcon/crossbar.c:
	temporary fix: remove bad test in 8 bits mono DMA sound transfer.
	This allow Conquest of Elysium to work (without sound for now)
	[766657968771]

2011-02-09  Laurent Sallafranque

	* src/falcon/videl.c, src/falcon/videl.h, src/ioMemTabFalcon.c:
	add screen base write to Videl.
	[6a7ab1af01fc]

2011-02-06  Nicolas Pomarede

	* src/ioMemTabFalcon.c, src/uae-cpu/newcpu.c:
	merge
	[3d4f3f2d8a6f]

	* CMakeLists.txt, cmake/config-cmake.h, src/main.c:
	Add detection of gettimeofday() and nanosleep() into cmake. Enable
	microsec precise delays in Main_WaitOnVbl This improves VBL
	synchronisation with sound when 1/nScreenRefreshRate is not an
	integer (eg 60 Hz)
	[d003c9e2c365]

	* src/main.c:
	In Main_WaitOnVbl, use micro sec instead of milli sec to measure all
	delays (Clock_GetTicks and Clock_Delay) If the OS is precise enough,
	we use native micro sec precision to get the current clock tick,
	else we default to SDL_Delay*1000.
	[d482b9b49307]

2011-02-06  Laurent Sallafranque

	* src/uae-cpu/newcpu.c:
	fix typo error.
	[a6ea5411b20d]

2011-02-04  Laurent Sallafranque

	* src/ioMemTabFalcon.c:
	Restore old paramter as long as Videl code is not complete.
	[f13f9c8bf524]

	* src/ioMemTabFalcon.c:
	fix: addresses in videl memory that are not mapped musn't generate
	bus errors.
	[823b34dea930]

2011-02-02  Laurent Sallafranque

	* src/falcon/videl.c, src/falcon/videl.h, src/ioMemTabFalcon.c:
	add monitor and memory register + some more comments about Videl
	registers (this time, I think all registers are referenced)
	[352b356e2531]

	* src/stMemory.c:
	fix: no need to copy monitor info ($ff8006 bits 6 and 7) into
	$ff82c0 register (bits 1-0), because the TOS does it on startup.
	[75985302390e]

2011-02-01  Laurent Sallafranque

	* src/falcon/videl.c, src/falcon/videl.h, src/ioMemTabFalcon.c:
	Some more changes for Videl emulation : added all "vertical"
	registers
	[0a11c3813bc3]

	* src/debug/log.c, src/debug/log.h, src/falcon/videl.c,
	src/falcon/videl.h, src/includes/configuration.h,
	src/ioMemTabFalcon.c, src/memorySnapShot.c, src/stMemory.c:
	more changes to videl code.
	[e5264a0c1688]

2011-01-31  Laurent Sallafranque

	* src/falcon/videl.c, src/falcon/videl.h, src/includes/video.h,
	src/ioMemTabFalcon.c, src/memorySnapShot.c, src/video.c:
	First changes to videl emulation : prepared some code, removed
	bUseSTShifter variable from video.c as this is a Falcon specific
	variable. Added snapshot save/restore to videl.
	[9c1811f935b7]

2011-01-31  Eero Tamminen

	* doc/todo.txt:
	add some TODOs
	[4be4b4316e1c]

2011-01-30  Laurent Sallafranque

	* src/falcon/crossbar.c:
	fix: clear dac (left/right) value when read. Else, some programs
	stop feeding this buffer, but it loops with the last datas. This
	also solve the "diesel engine" sound generated by some programs or
	when one reset hatari.
	[734bd666377b]

2011-01-30  Eero Tamminen

	* python-ui/dialogs.py, python-ui/hatari.py, python-ui/release-
	notes.txt:
	add capture crop support to python UI + finetune other options
	[17583c685208]

	* src/configuration.c, src/includes/m68000.h, src/m68000.c, src/tos.c:
	CPU frequency shift setting needs to be in M68000_CheckCpu*() that
	it's applied on TOS switch too

	- this way there isn't different results when using --machine st
	--tos tos4
	- as also other things than CPU Level are set, renamed function to
	Settings
	- reordered lines in tos.c so that it's clearer which are affected by
	call to M68000_CheckCpuSettings()
	[c7bcd788727c]

	* python-ui/hatariui, python-ui/hatariui.1:
	fastforward -> forward
	[978e5914d7c5]

	* python-ui/hatariui.py:
	simplify tooltips more
	[0675efd19ddf]

	* python-ui/hatariui:
	fix hatariui examples
	[3605e1842e28]

	* python-ui/README, python-ui/dialogs.py, python-ui/hatariui.py,
	python-ui/release-notes.txt:
	switch to new Gtk v2.12 tooltips API (as older one is deprecated)
	[578551bd102b]

2011-01-30  Laurent Sallafranque

	* src/falcon/videl.c:
	some comments added in videl.c (just not to forget them)
	[13bfdc16b95b]

	* src/dmaSnd.c:
	fix from David : apply volume and tone filters also when there's
	only Yamaha sound.
	[de80b70874d9]

2011-01-30  Eero Tamminen

	* src/falcon/hostscreen.c:
	fix: crash & updates stopping when switching from same size VDI to
	TT hostscreen rez

	- the redundant hostscreen.c SDL surface variable aliases weren't
	in sync with sdlscrn, so removed them and used sdlscrn everywhere
	- doUpdate flag needs to be updated even if resolution is same (the
	surface could have been created by screen.c for VDI rez)
	- remove redundant HostScreen_update5() for partial screen updates
	[c0d6a3ecdf31]

2011-01-29  Nicolas Pomarede

	* src/sound.c:
	Remove global variable and reorder code accordingly
	[12457bf85ec2]

2011-01-29  Laurent Sallafranque

	* src/falcon/crossbar.c:
	Little change in comments
	[b01e8707a1c7]

2011-01-28  Laurent Sallafranque

	* src/falcon/crossbar.c:
	fix DMA_Play -> DSP_Record in handshake mode synchronization. MP2
	musics are now playing correctly, music is synchro, sound is clean.
	This fix at least 5 demos (revert, Amanita, Dont break the oath,
	beam, MP2 player and probably some more.
	[0fac8290581a]

2011-01-28  Eero Tamminen

	* doc/release-notes.txt:
	update release notes
	[0908146515e9]

	* src/options.c:
	enable DSP for --machine falcon option

	(One can still disable it using "--dsp none" after that option)
	[cd9474f4cbf8]

	* src/change.c:
	add optional debug prints to config change code
	[1baee7eb9b6f]

2011-01-26  Eero Tamminen

	* doc/compatibility.html:
	cebit93 works fine with v1.4 release when using --cpuclock 32
	[c860aa763033]

	* src/memorySnapShot.c:
	memory snapshots: increase version for Crossbar addition + minor
	improvements:
	- ask user before overwriting an existing memory snapshot
	- slightly improved error message on snapshot version mismatches
	- use sizeof() instead of define for version string
	[cc19392df219]

	* src/debug/breakcond.c:
	breakpoints: remove redundant error + clarify output on memory
	snapshot re/store
	[9688717c8a59]

2011-01-26  Laurent Sallafranque

	* src/memorySnapShot.c:
	fix: crossbar was not saved/restored in memory snapshot
	[d475461f19b2]

	* src/falcon/crossbar.c:
	add: special undocumented transfer between DMA play and DSP Record
	in handshake mode added. In this special mode, datas are shifted 2
	bits on the left after the transfer. Now, demos using the Mpeg2
	player from nocrew (amanita, ...)) are playing the good datas.
	There's still a big problem : for now, the music plays really too
	fast (it should plays for 3 minutes, but it plays for 20 secondes
	for now).
	[13e8c031bbc3]

2011-01-25  Laurent Sallafranque

	* src/debug/debugInfo.c:
	fixed HandShack mode detection for DAC + added sound frequency for
	STE compatible mode, 25 Mhz mode and 32 Mhz mode.
	[b593829bee85]

	* src/falcon/dsp.c:
	DSP must run at exactly 2 times CPU speed. I upload this patch as a
	basis to improve DSP <-> CPU synchro
	[a27531db9db0]

2011-01-24  Nicolas Pomarede

	* src/sound.c:
	Fix new tone step introduced in rev 2934, it was wrong for Per=0
	When tone per=0, the produced square wave should be a constant '1',
	not '0'. Some recent replays are setting per=0 when playing samples
	or when doing sid effect (it gives better results), a constant
	output of '0' gave no audible sound (fix Blubber Sound Demo by
	Paradox)
	[c68bb85c3c63]

	* src/sound.c:
	Typo in comment
	[52a04b03aefe]

	* src/sound.c:
	Disable debug printf
	[20f4e72b26c2]

	* src/dmaSnd.c, src/falcon/crossbar.c, src/includes/sound.h,
	src/psg.c, src/sound.c:
	Take care of rounding errors when computing SamplesPerFrame, much
	higher precision now Depending on the output sound freq and the
	emulated video freq (VBL rate), the number of samples to generate
	for each VBL will not always be an integer. This new code simulates
	a floating point number of samples per VBL and adjusts the number of
	generated samples per VBL to obtain an exact number of samples per
	second, precisely matching the chosen output sound frequency.
	[d7b19dc20219]

2011-01-23  Nicolas Pomarede

	* src/sound.c:
	Don't use SamplePerVbl save an avi audio frame, it can gives
	rounding error Instead, we use the difference between the 2 indexes,
	which allows to have audio frames of different sizes when handling
	rounding errors.
	[833c96a8fa82]

2011-01-20  Eero Tamminen

	* src/ikbd.c:
	fix: remove AUTOSEND interrupt only after UI events have been
	processed
	[484ae01c9e29]

2011-01-19  Laurent Sallafranque

	* src/falcon/crossbar.c:
	fix: ADC memset was wrong
	[d914bd472a7d]

	* src/change.c:
	fix: changing to prefetch mode (with the new core) needs to reset
	the computer
	[8ca496ebcd5b]

	* src/cpu/newcpu.c:
	added DSP in prefetch mode. Both "simple" and prefetch emulation are
	now working
	[982801288ef4]

2011-01-17  Laurent Sallafranque

	* src/cpu/newcpu.c:
	DSP added to newcpu
	[79a95c89e722]

2011-01-16  Eero Tamminen

	* src/tos.c:
	on switch to TOS4, DSP needs to be initialized too
	[d264f083bc0a]

	* src/falcon/dsp.c, src/falcon/dsp_core.c, src/falcon/dsp_core.h,
	src/falcon/dsp_cpu.c, src/falcon/dsp_cpu.h, src/falcon/dsp_disasm.c,
	src/falcon/dsp_disasm.h:
	converted dsp_core to a directly accessible struct instead of
	pointer on Laurent's request
	[216fa5b71acb]

	* src/dialog.c, src/memorySnapShot.c, src/statusbar.c:
	update statusbar info also when memory snapshot loaded with
	--memstate
	[319fb2bbf5e4]

2011-01-15  Eero Tamminen

	* src/falcon/videl.c:
	do Videl resolution change immediately, not 3 VBLs late (and don't
	skip drawing frames during those 3 VBLs either)
	[997e6d747e3a]

	* readme.txt, src/configuration.c, src/falcon/hostscreen.c, src/gui-
	sdl/dlgScreen.c, src/includes/resolution.h, src/main.c,
	src/resolution.c:
	User's desktop size as max limit for Videl resolution:
	- add Resolution_Init() & Resolution_GetDesktopSize() functions to
	get and query desktop size
	- call the Resolution_Init from appropriate place in main.c
	- set the Videl max zoom limit from desktop size there, if it's not
	yet set
	- change SDL GUI to use that also as max zoom limit
	- change hostscreen.c to limit max SDL resolution to desktop size
	  - videl.c should then be clipping the output to that...
	  - resolution limit may prevent crashes with buggy video drivers
	- fix resolution.c debug prints This requires at least SDL v1.2.10.
	[43bae6606a2e]

	* src/falcon/dsp_disasm.c:
	const non-modified DSP disasm arrays too
	[d303f1028b57]

	* src/tos.c:
	TOS4 should enable DSP emulation
	[d3f9975a8932]

	* src/options.c:
	fix WinAUE option error option ID
	[583c68ba1511]

2011-01-14  Laurent Sallafranque

	* src/falcon/dsp_cpu.c:
	fix: SR U bit was still wrong (the test occurs on bits 23-24 not
	12-13)
	[fa0d0b619185]

	* src/falcon/dsp_cpu.c:
	fix: After 6 instructions, interrupts are allowed again, and we must
	test immediatly if there's a pending interrupt to process.
	[e0701509f4ee]

	* src/falcon/dsp_cpu.c:
	fix: SR U bit was inverted
	[2c9f3708b3e5]

2011-01-12  Eero Tamminen

	* src/change.c, src/dialog.c:
	enabling DSP needs reboot. Verify reboot from user unless only
	fatal alerts shown
	[9502c8049edf]

	* src/falcon/dsp_cpu.h:
	really add BITMASK to header
	[7070c1f6068f]

	* src/falcon/dsp.c, src/falcon/dsp_cpu.c, src/falcon/dsp_disasm.c:
	move identical BITMASK macros from dsp*.c files to commonly used
	dsp_cpu.h
	[040e305d4d3b]

	* src/falcon/dsp_cpu.c:
	DSP CPU arrays values aren't modified so they can be const
	[5eeb1ba00bff]

	* doc/compatibility.html:
	super hang-on issue still in v1.4
	[187fa7010c44]

	* doc/emutos.txt:
	more info on EmuTOS issue with RG Falcon games
	[95b1f88c525a]

	* src/falcon/dsp.c:
	fix: allow DSP to be disabled
	[ec71583f8331]

2011-01-11  Laurent Sallafranque

	* src/falcon/dsp_cpu.c:
	fix: DSP external memory timings were wrong. DSP external memory is
	0 waitstate, not 1. This fix at least the music in "illusion" demo.
	[1ea504dede73]

2011-01-04  Nicolas Pomarede

	* src/CMakeLists.txt:
	When building a Windows .exe, set the subsystem to "windows GUI"
	instead of "console"
	[365c5443c708]

2011-01-04  Laurent Sallafranque

	* src/falcon/dsp_cpu.c:
	update_e_u_n_z function optimization.
	[4e2e6759fa21]

2011-01-04  Eero Tamminen

	* src/falcon/dsp.c:
	simplify DSP main loop (use one variable less)
	[b348e15c5724]

2010-12-31  Eero Tamminen

	* src/cpu/build68k.c, src/cpu/cpu_prefetch.h, src/cpu/cpummu.c,
	src/cpu/cpummu.h, src/cpu/custom.h, src/cpu/events.h,
	src/cpu/events_jit.h, src/cpu/events_normal.h, src/cpu/fpp-ieee-
	be.h, src/cpu/fpp-unknown.h, src/cpu/fpp.c, src/cpu/gencpu.c,
	src/cpu/jit/codegen_x86.c, src/cpu/jit/codegen_x86.h,
	src/cpu/jit/compemu.h, src/cpu/jit/compemu_codegen.h,
	src/cpu/jit/compemu_fpp.c, src/cpu/jit/compemu_optimizer_x86.c,
	src/cpu/jit/compemu_raw_x86.c, src/cpu/jit/compemu_support.c,
	src/cpu/jit/compemu_support_codegen.c, src/cpu/jit/comptbl.h,
	src/cpu/jit/gencomp.c, src/cpu/m68k.h, src/cpu/maccess.h,
	src/cpu/memory.c, src/cpu/memory.h, src/cpu/newcpu.h,
	src/cpu/readcpu.c, src/cpu/readcpu.h, src/cpu/savestate.h,
	src/cpu/sysdeps.h, src/cpu/table68k:
	fix winuae cpu/ dir files access rights (644, same as for uae-cpu/
	files)
	[fab687e10ec7]

	* doc/emutos.txt:
	typo in prev commit
	[5aed5f9bded3]

	* doc/emutos.txt:
	more things working with EmuTOS, more info on RG Falcon games EmuTOS
	freeze
	[8aa40c7ba412]

	* doc/compatibility.html:
	vircity needs >4MB
	[80803111d796]

	* doc/hatari.1, doc/manual.html:
	add note about autostarting failing if there's floppy disk with .inf
	file
	[16108604a28a]

2010-12-28  Thomas Huth

	* CMakeLists.txt:
	Hatari only needs a C compiler, there is no need for testing for
	C++, too
	[5c48ae424012]

2010-12-28  Eero Tamminen

	* python-ui/uihelpers.py:
	make class declaration python 2.4 compatible (fix from David
	Savinkoff)
	[0312d68fa824]

	* src/ikbd.c, src/includes/ikbd.h:
	stuff used only in ikbd.c can/should be static
	[554f69ffb668]

	* src/rs232.c:
	rs232: saner thread delays, move if inside RS232_OpenCOMPort(),
	better comments
	[ef3346b2c059]

2010-12-24  Thomas Huth

	* src/ikbd.c:
	Print error message when IKBD buffer is full
	[9c055064c9ef]

	* src/ikbd.c:
	Fixed the JOYSTICK INTERROGATE IKBD command for the game "Downfall".
	This game continually issues this IKBD command during the title
	screen, faster than processing the 3 bytes from the ACIA, so it
	floods our Keyboard.Buffer ... in the end, we were not able not put
	the whole packet into the buffer anymore, and the game hang due to
	these incomplete answers. To avoid this situation, only execute this
	command if there is enough space left in our Keyboard.Buffer!
	[a6aa1cc75949]

2010-12-22  Eero Tamminen

	* doc/authors.txt, doc/emutos.txt, doc/release-notes.txt:
	update release notes and other docs
	[ac3f150400e1]

2010-12-22  Laurent Sallafranque

	* src/falcon/dsp_disasm.c:
	fix+little optim : fixed some wrong opcode texts + little optim in
	registers changes tracing
	[2f855c8ed625]

2010-12-20  Eero Tamminen

	* src/avi_record.c, src/includes/main.h, src/main.c, src/screen.c:
	show AVI recording time in the titlebar
	[471fa4eb4bd5]

2010-12-18  Laurent Sallafranque

	* src/falcon/dsp_cpu.c:
	Rewrite of all parallel decoding part (hardcoding of each 256
	instructions) + full rewrite and simplification of parallel move
	decoder.
	[f783a9abe4e1]

	* src/falcon/dsp_disasm.c:
	major optim: removed all 256 parallel instructions decoding and
	hardcoded all of them in a table.
	[f97c8da3372f]

2010-12-13  Thomas Huth

	* src/CMakeLists.txt:
	Fixed link_directories for newer versions of CMake
	[454bfe8bb953]

2010-12-13  Nicolas Pomarede

	* src/video.c:
	More generic way to handle the last 16 pixels of the line for STE's
	horizontal scrolling (works for any line's length) Previously, when
	using STE's 224 bytes overscan and hscroll, the last 16 pixels were
	not correctly displayed (fix More Or Less Zero and Cernit Trandafir
	by DHS, Save The Earth by Defence Force)
	[463a4198b55f]

2010-12-12  Laurent Sallafranque

	* src/falcon/dsp_disasm.c:
	fix : 2 bugs fixed in dsp_lua and dsp_tcc disasm code
	[feff3d5cda04]

2010-12-05  Nicolas Pomarede

	* doc/compatibility.html, doc/release-notes.txt:
	Update release note and compatibility list
	[927e055352fe]

2010-12-04  Nicolas Pomarede

	* src/video.c:
	In med res overscan, correctly shift the screen 4 pixels to the left
	This was not correctly handled in rev 2334 and worked only for low
	res (fix regression in 'Best Part Of The World' by Delta Force and
	'No Cooper Greetings screen' by 1984)
	[39e80ad361c0]

	* src/convert/low320x16_spec.c, src/convert/low320x32_spec.c,
	src/convert/low640x16_spec.c, src/convert/low640x32_spec.c,
	src/convert/spec320x16.c, src/convert/spec320x32.c,
	src/convert/spec640x16.c, src/convert/spec640x32.c, src/screen.c:
	Rename conversion files for low res spec512 to explicitly contain
	'low'
	[ee9561787699]

2010-12-03  Nicolas Pomarede

	* src/convert/med640x16_spec.c, src/convert/med640x32_spec.c,
	src/convert/routines.h, src/convert/spec320x16.c,
	src/convert/spec320x32.c, src/convert/spec640x16.c,
	src/convert/spec640x32.c, src/screen.c:
	Explicitly add LowRes into functions' names since spec512 mode is
	now available in low res and med res
	[c986a85c6009]

	* src/convert/macros.h, src/convert/med640x16_spec.c,
	src/convert/routines.h, src/screen.c:
	Add support for spec512 mode in med res for 16 bit screen
	[0211d900e8ac]

2010-12-01  Nicolas Pomarede

	* src/convert/routines.h, src/convert/spec640x16.c:
	Split ConvertSpec512_640x16Bit() in 2 parts to allow low/med lines
	mixing in spec512 mode
	[4869ec3eacf0]

	* src/convert/med640x32_spec.c:
	In spec512 mode, don't call AdjustLinePaletteRemap() to test for
	low/med res on each line. Doing so would override the colors changed
	by Spec512_UpdatePaletteSpan and give wrong/flickering palette.
	[701bd4b0ad0c]

	* src/spec512.c:
	Add debug printf
	[383e4b60dd2b]

2010-11-28  Nicolas Pomarede

	* src/convert/med640x32_spec.c, src/convert/routines.h,
	src/convert/spec640x32.c:
	Split ConvertSpec512_640x32Bit() in 2 parts to allow low/med lines
	mixing in spec512 mode
	[3dc2c6f9e8c3]

	* src/convert/macros.h, src/convert/med640x32_spec.c,
	src/convert/routines.h, src/screen.c, src/spec512.c:
	Add support for spec512 mode in med res for 32 bit screen (fixes
	'Best Part Of The Creation' by Delta Force in 'Punish Your Machine'
	and 'HighResMode' demo for STE by Paradox)
	[b27039df718b]

	* src/convert/med640x32.c:
	Reorder functions (main loop first)
	[98eb75095d86]

	* src/convert/macros.h:
	PLOT_SPEC512_MID_320_16BIT should be PLOT_LOW_640_16BIT not
	PLOT_MED_640_16BIT (harmless because both macros do the same)
	[62265417b077]

	* src/convert/spec320x16.c, src/convert/spec320x32.c,
	src/convert/spec640x16.c, src/convert/spec640x32.c:
	Correct comment about plotting order in spec512 mode
	[8ad268e6c9b3]

	* src/convert/high640x8.c, src/convert/low320x16.c,
	src/convert/low320x32.c, src/convert/low320x8.c,
	src/convert/low640x16.c, src/convert/low640x32.c,
	src/convert/low640x8.c, src/convert/med640x16.c,
	src/convert/med640x32.c, src/convert/med640x8.c,
	src/convert/spec320x16.c, src/convert/spec320x32.c,
	src/convert/spec640x16.c, src/convert/spec640x32.c,
	src/convert/vdi16.c, src/convert/vdi2.c, src/convert/vdi4.c:
	Correct wrong/misleading comments about pixels' order in
	SDL_BIG_ENDIAN mode
	[8548dc8868c3]

	* src/convert/spec320x16.c, src/convert/spec320x32.c,
	src/convert/spec640x16.c, src/convert/spec640x32.c:
	Use the same order/logic as in other convert routines (compare with
	SDL_BIG_ENDIAN first)
	[f19602329319]

2010-11-26  Nicolas Pomarede

	* src/convert/macros.h:
	PLOT_SPEC512_MID_320_32BIT should be PLOT_LOW_320_32BIT not
	PLOT_MED_640_32BIT (harmless because both macros do the same)
	[c18de3976685]

2010-12-01  Laurent Sallafranque

	* src/falcon/dsp_cpu.c:
	last fix: external memories extra cycles returned back to 1.
	[d4006369e18f]

	* src/falcon/dsp_cpu.c:
	fix again: x: or y: memory are always in internal RAM (immediate
	value is between 0 and $3f). So cycles = 4.
	[7379a7cec69d]

2010-11-30  Laurent Sallafranque

	* src/falcon/dsp_cpu.c:
	fix: correct wrong cycles computing for BCLR_aa, BCHG_aa, BSET_aa.
	According to the doc, cycles = 4 + ea + 2*X_YWaitState (Ea = 0)
	[f5ed4f860c10]

2010-11-24  Eero Tamminen

	* doc/hatari.1, doc/manual.html, src/configuration.c, src/gui-
	sdl/dlgScreen.c, src/includes/configuration.h, src/main.c,
	src/options.c, src/screenSnapShot.c, src/shortcut.c:
	Add GUI crop option, apply it both to screenshots & AVI recording

	This adds Screen.bCrop / --crop option, removes the --avi-crop
	option and removes also previously redundant Screen.bCaptureChange
	config option.
	[295f069d3644]

2010-11-23  Laurent Sallafranque

	* src/cpu/compat.h, src/cpu/hatari-glue.c, src/cpu/options_cpu.h,
	src/m68000.c:
	fix: configuration allows to choose all cpus. Falcon 68030 is
	running (at least to the desktop)
	[f64cbf057a16]

	* src/options.c:
	added bLoadAutoSave = false to the 6 new optional parameters added
	for the new WinUae CPU
	[0185e4ef3c24]

	* src/gui-sdl/dlgMain.c, src/gui-sdl/dlgSystem.c:
	fixed wrong upload last time (I swapped 2 files)
	[7d82ad1d1ee8]

2010-11-22  Laurent Sallafranque

	* src/change.c:
	fix: forgot to add the ENABLE_WINUAE_CPU compilation test (the 2
	tests are only for new WinUae CPU)
	[b95015554020]

	* src/change.c, src/configuration.c, src/cpu/hatari-glue.c, src/gui-
	sdl/dlgMain.c, src/includes/configuration.h, src/m68000.c,
	src/options.c:
	add: new system panel for WinUae cpu, new hatari options, changed
	preference's saving and memory snapshot saving and restoring
	[3590c879ba21]

2010-11-21  Nicolas Pomarede

	* src/debug/68kDisass.c:
	Use doptNoBrackets by default to remove "()" around absolute
	addresses in the new disassembler
	[a20648f2ce4e]

2010-11-21  Eero Tamminen

	* src/avi_record.c:
	fix avi recording compiler warning + simplify its error handling
	[6b3cc63fa29f]

	* src/tos.c:
	comments to 80 cols, fix Uwe's compiler warning, remove ifdeffed
	debug code
	[62f215d63e7e]

	* src/debug/profile.c:
	fix compiler printf %d / sizeof() mismatch warnings for 64-bit OSes
	[bf3986953b56]

	* doc/hatari.1, python-ui/hatariui.1, tools/CMakeLists.txt, tools
	/atari-hd-image.1, tools/hconsole/hconsole.1, tools/hmsa/hmsa.1,
	tools/zip2st.1:
	remove script extension on install, add manual pages for all
	installed tools

	This was requested by Hatari Fedora maintainer, new manual pages
	could be mostly taken from Debian. Mentioned other tools in "SEE
	ALSO" sections.
	[81326134540c]

	* src/debug/68kDisass.c:
	fix compiler warnings and improved[1] previous fixes

	[1] global function protos belong to headers whereas local functions
	should be static & things should be of correct type instead of
	casted.
	[64704aa3bf80]

2010-11-20  Nicolas Pomarede

	* src/debug/68kDisass.c, src/debug/68kDisass.h, src/debug/breakcond.c,
	src/debug/debugcpu.c, src/uae-cpu/newcpu.c:
	Add new wrapper function Disasm() to choose between UAE or new
	disassembler
	 - create 68kDisass.h, reorder includes for consistency
	 - replace calls to m68k_disasm() by Disasm() (except in
	m68k_dumpstate() )
	[a0c9f2c7bb17]

2010-11-19  Nicolas Pomarede

	* src/debug/68kDisass.c:
	Remove more warnings : suggest parenthesis at line 72 + set same
	'const' qualifier for target and dest when assigning 'sp'
	[030b6ed2cb51]

	* src/debug/68kDisass.c:
	Cast variables to remove warning about signed/unsigned comparisons
	[369a112a5b43]

2010-11-18  Nicolas Pomarede

	* src/debug/68kDisass.c:
	Add missing prototypes to prevent warnings from gcc
	[ed6908775368]

	* src/debug/68kDisass.c:
	Remove variables' declaration in 'for' loop : this is C99 only
	syntax and doesn't compile with our flags
	[8350d9b5ee3d]

	* src/debug/68kDisass.c, src/debug/CMakeLists.txt:
	Add new 68k disassembler by Markus Fritze
	[65462ed13440]

2010-11-19  Laurent Sallafranque

	* src/cpu/memory.c, src/cpu/memory.h:
	added infos to bank memories to let hatari run in compatible = 1
	mode. This will have to be reworked a little to take care of lgeti
	and wgeti.
	[d639f4ca2320]

	* src/cpu/newcpu.c:
	fix: quit hatari is now available
	[dee4f47e7052]

2010-11-18  Laurent Sallafranque

	* src/cpu/cpu_prefetch.h:
	add newline at end of file
	[772303b02250]

2010-11-18  Thomas Huth

	* src/cpu/newcpu.c:
	Disable some Amiga-specific code in exception function and make sure
	that MFP interrupts are handled.
	[ab01e980a47a]

	* src/cpu/custom.c, src/cpu/custom.h, src/cpu/newcpu.c,
	src/cpu/newcpu.h:
	Fixed compiler warnings
	[be977402a9d6]

2010-11-14  Nicolas Pomarede

	* src/avi_record.c, src/configuration.c, src/gui-sdl/dlgScreen.c,
	src/includes/configuration.h, src/main.c, src/options.c,
	src/shortcut.c:
	Store AVI recording parameters into hatari.cfg under [Video] section
	[79c34f4689cb]

2010-11-13  Matthias Arndt

	* src/includes/joy.h, src/joy.c:
	initial patch to allow variable SDL joystick axis IDs instead of
	hardcoded axis values
	[9e2869935d52]

2010-11-12  Laurent Sallafranque

	* src/cpu/fpp.c, src/cpu/gencpu.c, src/cpu/newcpu.c, src/cpu/newcpu.h,
	src/m68000.c:
	reintroduced interrupts and MFP to newcpu
	[0afc21af98cb]

2010-11-11  Eero Tamminen

	* CMakeLists.txt:
	correct name: -DFORTIFY_SOURCE -> -D_FORTIFY_SOURCE

	(enables extra Glibc function checks)
	[eefec2ba436b]

2010-11-08  Thomas Huth

	* src/cpu/compat.h:
	Replaced bad '#define bool' by stdbool.h - that should hopefully fix
	the address_space_24 problem in the currprefs structure.
	[8c6b545d99de]

2010-11-08  Laurent Sallafranque

	* src/cpu/custom.c, src/cpu/custom.h, src/cpu/newcpu.c:
	reintegrated trace CPU disasm
	[ffb54014718c]

2010-11-07  Nicolas Pomarede

	* doc/compatibility.html:
	Update some non fully working demos on STF/STE
	[2c0c314e10cf]

	* src/m68000.c:
	Add pairing for LSL/JMP (and all variants) (Fullparts demo by
	Hemoroids)
	[07ede30deb3e]

2010-11-07  Laurent Sallafranque

	* src/cpu/compat.h, src/cpu/newcpu.c:
	reintroduced do_specialties code from old uae core and CPU_TRACE
	[44efc8180b6c]

2010-11-06  Thomas Huth

	* src/cpu/newcpu.c:
	Supervisor mode must be switched on before accessing low memory
	[bb21af6a6bd2]

	* src/cpu/CMakeLists.txt:
	Simplified build rules
	[c86dec2ced94]

2010-11-06  Laurent Sallafranque

	* src/cpu/custom.c, src/cpu/events.h, src/cpu/gencpu.c,
	src/cpu/newcpu.c, src/cpu/newcpu.h:
	everything compiles and links.
	[6c79f7df4c85]

	* src/cpu/CMakeLists.txt, src/cpu/gencpu.c:
	major fix : nearly everything is fixed now (thanks Thomas)
	[28b2c10b3ac8]

	* src/cpu/compat.h, src/cpu/custom.c, src/cpu/custom.h,
	src/cpu/memory.c, src/cpu/newcpu.c, src/cpu/sysconfig.h:
	fixed some more warnings and linking problems
	[7677b5764ae8]

	* src/cpu/cpummu.c, src/cpu/custom.c, src/cpu/fpp.c, src/cpu/newcpu.h:
	some more fixes (warnings + linking problems)
	[052812f53ef7]

2010-11-06  Eero Tamminen

	* src/debug/debugui.c:
	debugger: fix chdir compile warning, don't mess input line when
	parsing it.

	(Last one is needed because of the earlier change which saves the
	previous line to history only when next line is input.)
	[5ec17068c226]

2010-11-05  Eero Tamminen

	* src/includes/main.h, src/main.c, src/options.c:
	allow use of --run-vbls also after bootup

	(i.e. zero also VBL count when VBL limit is set)
	[6d76ec449aaa]

2010-11-05  Laurent Sallafranque

	* src/cpu/build68k.c, src/cpu/cpummu.c, src/cpu/custom.c,
	src/cpu/events.h, src/cpu/gencpu.c, src/cpu/hatari-glue.c,
	src/cpu/readcpu.c:
	Winuae core : some more compiling warning and linking errors fixed
	[a5b8ed064879]

	* src/cpu/custom.c, src/cpu/newcpu.c, src/cpu/newcpu.h:
	2 more linking problems fixed
	[118dccc92d31]

	* src/cpu/CMakeLists.txt, src/cpu/compat.h, src/cpu/custom.c,
	src/cpu/custom.h, src/cpu/events.h, src/cpu/hatari-glue.h,
	src/cpu/memory.c, src/cpu/memory.h, src/cpu/newcpu.c,
	src/cpu/options_cpu.h, src/cpu/sysconfig.h, src/m68000.c:
	Many fixes to let WinUae core link. Still some work to do.
	[b3e885ebd08d]

2010-11-05  Eero Tamminen

	* CMakeLists.txt:
	comment -Wextra stuff out, -Wno-empty-body isn't supported on GCC
	v<4.3
	[7e02e97c6c22]

2010-11-04  Thomas Huth

	* tools/hmsa/CMakeLists.txt:
	Fixed zlib include path for hmsa tool
	[77c28685083e]

2010-11-02  Eero Tamminen

	* tests/Makefile, tests/debugui/console.ini,
	tests/debugui/debugger.ini, tests/debugui/dsp-test.sym,
	tests/debugui/etos512.sym, tests/os-header.sym, tests/test-
	breakcond.c, tests/test-dummies.c, tests/test-evaluate.c, tests
	/test-scripting.sh, tests/test-symbols.c:
	remove the moved files

	(seems that both destination & source files need to be commited
	separately)
	[9f6d5d8814e5]

	* tests/debugger/Makefile, tests/debugger/data/console.ini,
	tests/debugger/data/debugger.ini, tests/debugger/data/dsp-test.sym,
	tests/debugger/data/etos512.sym, tests/debugger/data/os-header.sym,
	tests/debugger/test-breakcond.c, tests/debugger/test-dummies.c,
	tests/debugger/test-evaluate.c, tests/debugger/test-scripting.sh,
	tests/debugger/test-symbols.c:
	Move all debugger tests to a tests/debugger subdirectory
	[99889a63402e]

	* tools/hconsole/hconsole.py:
	tab-complete also hconsole internal commands
	[d00ed8c1751d]

	* tests/debugui/console.ini, tests/test-scripting.sh:
	update scripting tests for hconsole changes
	[50130e1f7bf0]

	* tests/Makefile:
	add test target and comments on how to run tests to tests/Makefile
	[c01b09f8620c]

	* tests/test-dummies.c, tests/test-evaluate.c:
	update test code for debugger changes
	[352055a6482b]

	* src/debug/debugui.c, src/debug/evaluate.c:
	update debugger evaluate command help (parenthesis = RAM fetch)
	[2aaf4d591fd6]

2010-11-02  Laurent Sallafranque

	* src/cpu/savestate.h:
	savestate compiles now. Everything compiles but doesn't link yet
	[f0bc85ccc2cd]

	* src/m68000.c:
	fixed compilation warning in WINUAE mode
	[584eca106c24]

	* cmake/config-cmake.h, src/m68000.c:
	m68000.c now compiles
	[b2028acb9bee]

	* src/cpu/fpp.c, src/cpu/md-fpp.h, src/cpu/sysconfig.h:
	fpp.c compiles
	[7e34c70797d2]

2010-11-01  Laurent Sallafranque

	* src/cpu/compat.h, src/cpu/cpummu.c, src/cpu/memory.h,
	src/cpu/newcpu.c, src/cpu/newcpu.h, src/cpu/options_cpu.h,
	src/cpu/sysconfig.h:
	newcpu.c is now compiling
	[29f756017ae4]

2010-11-01  Nicolas Pomarede

	* doc/release-notes.txt:
	Update changes for YM sound and STE's 224 bytes overscan
	[7a3454f1504b]

	* src/video.c:
	On STE, correctly align pixels 8 pixels to the left when doing a 224
	bytes overscan. The hi/lo switch at position 504/4 will make the
	display starts 8 pixels earlier. For 230 bytes overscan on STE, the
	next value for pVideoRaster depends on whether scrolling's
	prefetching is used or not. (fix various pixels alignment when
	compared with a real STE)
	[c41f86ceacf4]

2010-10-22  Laurent Sallafranque

	* src/cpu/events.h:
	returned to original STATIC_INLINE
	[5b8cee333670]

	* src/includes/m68000.h:
	Comment fixed
	[0718b543b46a]

	* src/cpu/custom.h:
	This file contains nothing needed by WinUae Cpu. We keep it empty
	here to reduce changes in WinUae cpu code
	[1f4386c8ca97]

2010-10-22  Eero Tamminen

	* src/debug/breakcond.c:
	show breakpoint variable values in help as hex instead of decimal

	Tracing breakpoints already show memory & variable values as hex so
	this was inconsistent.
	[6b025442121d]

	* src/debug/debugui.c:
	prevent duplicate readline history entries, make input buffer
	free()s closer to their malloc()s

	Former is a fix (needed to use previous_history(), not
	current_history()).

	Latter change implies also that command that exits debugger isn't
	stored into command history and that non-readline/history command
	editing needs to do less allocs.
	[0dcb55af21ef]

2010-10-21  Laurent Sallafranque

	* src/cpu/CMakeLists.txt, src/cpu/build68k.c, src/cpu/compat.h,
	src/cpu/cpummu.c, src/cpu/cpummu.h, src/cpu/custom.h,
	src/cpu/events.h, src/cpu/gencpu.c, src/cpu/maccess.h,
	src/cpu/memory.c, src/cpu/memory.h, src/cpu/newcpu.c,
	src/cpu/newcpu.h, src/cpu/options_cpu.h, src/cpu/readcpu.c,
	src/cpu/readcpu.h, src/cpu/rpt.h, src/cpu/sysconfig.h,
	src/cpu/sysdeps.h, src/includes/m68000.h:
	Temporary save : this version compiles until newcpu.c
	[6eeb9583fed9]

2010-10-21  Eero Tamminen

	* doc/manual.html:
	manual/debugger: update for indirect addressing + re-
	org/improvements
	[8bf49591ca4f]

	* src/debug/evaluate.c:
	support indirect addressing in evaluate debugger command
	[abb759b5c038]

2010-10-20  Eero Tamminen

	* src/debug/breakcond.c:
	breakpoints: bios & xbios trap number were swapped, fix
	[7661f5c8e5ec]

2010-10-16  Eero Tamminen

	* doc/manual.html:
	add debugger profile command documentation to the manual
	[7efba68d58a5]

	* doc/manual.html:
	update manual for tracing, breakpoint and info/lock command
	improvements, fix typos
	[f2abeb494acd]

	* doc/hatari.1:
	mention in man page what docs /usr/share/doc/ contains
	[39185c4b79d6]

	* doc/release-notes.txt:
	update release notes
	[1d7521e91b74]

	* src/debug/debugui.c:
	remove the ifdeffed out debugger "exec" command support

	This was already ifdeffed out in previous release, didn't have a
	CMake config option to enable it and is AFAIK unused. hconsole can
	be used to achieve something similar from outside the Hatari and
	more specific commands can be added to debugger if really needed.
	[839c6abc24c4]

	* src/debug/debugInfo.c:
	add "lock file" command, tune lock/info help texts

	The given file will them be parsed by debugger and commands in it
	executed whenever the locked commands are normally done (i.e.
	entering debugger or hitting ":info" breakpoint).
	[e60f8be20cd7]

	* src/debug/debugui.c, src/debug/debugui.h:
	export DebugUI_ParseFile(), chdir() back to previous dir after
	parsing

	chdir() to file's dir before parsing is needed so that relative file
	references in that file work. chdir() back to previous dir are
	needed so that other things depending on (other) file paths work.
	[9b0d4320f9e3]

	* src/ide.c, src/includes/m68000.h, src/ioMem.c, src/m68000.c, src
	/uae-cpu/memory.c:
	Use correct defines for bus error, show the error type, more
	sensible bool arg name

	- Half of M68000_BusError callers were using defines on the calls,
	half just magic numbers. Changed magic numbers to defines.
	- bReadWrite doesn't make sense as bool arg. Bool's name is supposed
	to indicated what "true" value stands for!
	- Showing of the BusError read/write type is one-liner improvement
	from Markus.
	[8a62f551ad7b]

	* src/vdi.c:
	fix AES/VDI info command output spacing
	[9973b37a4329]

2010-10-15  Eero Tamminen

	* src/gemdos.c:
	remove pattern matching debug output from GEMDOS tracing
	[5d77dde29cc5]

	* src/debug/debugInfo.c:
	add "aes", "gemdos" and "vdi" subcommands to debugger info command
	[6846fd7615b2]

	* src/gemdos.c, src/includes/gemdos.h:
	add GEMDOS info & opcode function

	(and remove non-existing functions from gemdos.h)
	[b6d0d9175b0f]

2010-10-14  Eero Tamminen

	* src/configuration.c, src/debug/log.c, src/debug/log.h,
	src/includes/vdi.h, src/tos.c, src/uae-cpu/newcpu.c, src/vdi.c:
	add AES tracing and AES & VDI info+opcode functions

	This required:
	- 32 -> 64-bit trace flag change and adding aes to trace flags in
	log.c/h
	- adding flag for Trap#2 AES/VDI interception for newcpu.c
	  -> this is enabled automatically when either aes or vdi tracing
	is enabled (in log.c) or user selects extended VDI resolution
	(in configuration.c)
	- function for AES opcode/name mappings (vdi.c)
	- functions for listing AES & VDI opcodes and listing the last
	parameter block values (vdi.c)
	- storing the parameter block values in the intercept function (vdi.c)

	The VDI_OpCode stuff is now called only when things are needed to be
	done at VDI_Complete() in Trap exit i.e. for VDI workstation open.
	[419c41200c8d]

	* src/debug/breakcond.c:
	VDI breakpoints: -2 = 0xFFFE, not 0xFFFD
	[1e0bbbc5f0c8]

2010-10-13  Eero Tamminen

	* src/gemdos.c, src/tos.c:
	minor improvements to TOS autostart feature
	[9fbb5504ae25]

2010-10-12  Thomas Huth

	* src/CMakeLists.txt:
	Fixed include and library path problem when WinUAE CPU is enabled
	[f0699d2dc876]

2010-10-12  Eero Tamminen

	* tools/hconsole/example-commands, tools/hconsole/example.py:
	hconsole examples output finetuning
	[b925c317e86c]

	* src/debug/debugui.c:
	fix comment handling in debugger input files
	[95f3e17d9fbd]

	* tools/hconsole/release-notes.txt:
	update hconsole notes
	[dc3b30f1519f]

	* tools/hconsole/CMakeLists.txt, tools/hconsole/hconsole.1:
	install hconsole under /usr/share + add new example

	example.py needs hconsole.py to be in same directory (or in Python
	module path) to be able to import it.

	Hconsole also isn't that useful in itself, it's more of something on
	top of which one can build things (or test Hatari remote API), so it
	doesn't need to be installed to binary directory. The Hatari data
	directory is enough.
	[9e1672780bbb]

	* tools/hconsole/example-debugger, tools/hconsole/example.py:
	example.py can/loads commands from the separate hconsole input file

	Therefore removed the duplication functionality from this. Added
	also debugger input file example calling for this.
	[9b65e79733d0]

	* tools/hconsole/example-commands:
	add useful scancode numbers to hconsole example + other updates
	[c942a1275270]

	* tools/hconsole/hconsole.py:
	hconsole: add symbolic scancodes, script command and speed key
	inserting

	Did also some small refactoring, command name changes and help text
	modifications.
	[fc63d979565d]

	* src/debug/breakcond.c:
	":info" flag for giving info specified with "lock" command also
	while tracing breakpoints

	(previously they were shown only when breakpoint causes entering
	into debugger)
	[fe1528adace5]

2010-10-11  Thomas Huth

	* CMakeLists.txt, configure, src/CMakeLists.txt:
	Added CMake switch to enable WinUAE CPU core
	[48ae28c0f7ac]

	* src/gui-osx/SDLMain.m:
	Fixed compiliation problem on OS X. Thanks to Christer Solskogen for
	the patch!
	[2b05780e256c]

2010-10-11  Eero Tamminen

	* python-ui/CMakeLists.txt, tools/CMakeLists.txt,
	tools/hconsole/CMakeLists.txt:
	add hconsole to build scripts
	[67a40404e966]

	* python-ui/FILES, python-ui/README, python-ui/hatariui.1, python-ui
	/release-notes.txt, tools/hconsole/hconsole.1, tools/hconsole
	/release-notes.txt:
	add hconsole documentation and update hatariui docs accordingly
	[dce2fd55e0ca]

	* tools/hconsole/example-commands, tools/hconsole/example.py:
	add hconsole scripting examples
	[d25c1c76a2f8]

	* python-ui/hatari-console.py, tools/hconsole/hconsole.py:
	rename hatari-console.py to hconsole.py and move it under tools

	- python scripts included by others cannot have dashes in names
	- it's better to have it in its own file as I'm going to add quite a
	bit of stuff to this. It might even be used for automatic some of
	hatari testing...
	[6e78faa70d74]

2010-10-10  Eero Tamminen

	* src/gui-sdl/dlgAlert.c:
	fix struct member initialization for Notice Alert
	[42dc90087cae]

	* CMakeLists.txt:
	remove -Wfloat-equal, we're not going to change FPU emulation code
	to avoid float == 0 comparisons
	[a2417b16afa8]

	* src/gemdos.c:
	show the converted result in GEMDOS trace, not host one for GetDir

	(also, leave out the hatari's internal function name like elsewhere)
	[bd360f8a6dc6]

	* python-ui/hatari-console.py:
	re-fix hatari-console hatari arg handling, helper for hatari-console
	importers
	[e44b84900111]

2010-10-09  Eero Tamminen

	* python-ui/hatari-console.py:
	hatari-console: add verbose & text insert commands, fix Hatari
	argument handling
	[af0427325bf9]

	* python-ui/dialogs.py, python-ui/hatariui.py, python-ui/uihelpers.py:
	fix/improve hatari UI button/key press simulation

	- update to event name change, use press instead of down&up where
	appropriate
	- special case space key on text insert, it needs scancode
	- add button for Enter key simulation
	[45ef37c6bd4b]

	* src/control.c:
	improve remote API key & mouse button press/release handling

	- have separate "keypress" event that does both press & release
	- rename button & key press & release to *down & *up
	- update help and tell key code is actually ST key scancode...
	[427f6432277d]

	* python-ui/hatariui.1, python-ui/hatariui.py:
	update hatari UI docs for new hatari argument handling
	[d2cde1d711f3]

	* doc/hatari.1, doc/manual.html, doc/release-notes.txt:
	update --bios-intercept info in docs
	[e56e0cd83dec]

	* src/options.c:
	allow --bios-intercept to be toggled (from debugger), not just
	enabled
	[89a531b5f297]

	* src/bios.c:
	Sensible Bios CON: output also when line is being edited under
	emulation
	[38e0f1adc231]

2010-10-09  Laurent Sallafranque

	* src/cpu/CMakeLists.txt, src/cpu/build68k.c, src/cpu/cpu_prefetch.h,
	src/cpu/cpummu.c, src/cpu/cpummu.h, src/cpu/custom.h,
	src/cpu/events.h, src/cpu/events_jit.h, src/cpu/events_normal.h,
	src/cpu/fpp-ieee-be.h, src/cpu/fpp-unknown.h, src/cpu/fpp.c,
	src/cpu/gencpu.c, src/cpu/hatari-glue.c, src/cpu/hatari-glue.h,
	src/cpu/jit/codegen_x86.c, src/cpu/jit/codegen_x86.h,
	src/cpu/jit/compemu.h, src/cpu/jit/compemu_codegen.h,
	src/cpu/jit/compemu_fpp.c, src/cpu/jit/compemu_optimizer_x86.c,
	src/cpu/jit/compemu_raw_x86.c, src/cpu/jit/compemu_support.c,
	src/cpu/jit/compemu_support_codegen.c, src/cpu/jit/comptbl.h,
	src/cpu/jit/gencomp.c, src/cpu/m68k.h, src/cpu/maccess.h,
	src/cpu/memory.c, src/cpu/memory.h, src/cpu/newcpu.c,
	src/cpu/newcpu.h, src/cpu/readcpu.c, src/cpu/readcpu.h,
	src/cpu/savestate.h, src/cpu/sysdeps.h, src/cpu/table68k:
	add : first version of WinUae cpu for Hatari. WinUae source is
	v2.3.0. I've just renamed .cpp to .c
	[026e498bd040]

2010-10-09  Eero Tamminen

	* doc/hatari.1, doc/manual.html, doc/release-notes.txt, tools/hatari-
	tos-register.sh:
	document autostarting, script to register Hatari as TOS program
	runner

	Script uses Linux binfmt_misc feature.
	[52a4548b896a]

	* src/gemdos.c, src/includes/str.h, src/includes/tos.h, src/options.c,
	src/str.c, src/tos.c:
	Add Atari program autostart support to Hatari

	- Move TOS filename conversion from gemdos.c to str.c and use it
	from tos.c
	- Hatari argument can be an atari program or a directory in addition
	to a disk image
	- In atari program case, create a temporary/virtual desktop.inf file
	to which TOS is redirected when it first accesses desktop.inf
	after boot (with separate files for emutos and normal tos)
	[01dfa7471e21]

2010-10-08  Eero Tamminen

	* src/file.c, src/gemdos.c, src/includes/file.h, src/paths.c:
	remove duplicate directory existence check function
	[93577018e105]

	* doc/emutos.txt:
	Kruse's early demo works with EmuTOS except for some issues with
	fonts
	[4caa32b7e92e]

	* CMakeLists.txt:
	add more GCC warning options

	Added -Wextra minus options that cause spurious warnings and some
	security & float options recommended on Debian source code fortify
	page.
	[91a6d1226c77]

	* CMakeLists.txt:
	apply GCC warning flags in order they're given

	(otherwise one gets confusing results when one sets a generic
	warning option and then tries to disable parts of those warning.)
	[106bbe51b8a8]

	* src/gemdos.c:
	simplify GemDOS_OpCode() code, convert if's to assignments

	(object file .text size decreases 40 bytes)
	[9b44adc2ac28]

	* src/gemdos.c:
	move GemDOS_Opcode2Name() closer to function where it's called
	[bf5470b86796]

2010-10-07  Eero Tamminen

	* doc/hatari.1, doc/manual.html, doc/release-notes.txt, src/options.c:
	update/improve --bios-intercept documentation
	[bd4583ff1455]

	* src/bios.c:
	--bios-intercept prints CON: output on host console
	[45df55c03900]

2010-10-06  Eero Tamminen

	* src/gemdos.c:
	add missing address range validity checks, change their debug level
	to warnings
	[a5d05ca2bb86]

2010-10-05  Thomas Huth

	* doc/authors.txt:
	Added remark about Qemu
	[4076e47cb17d]

2010-09-26  Thomas Huth

	* doc/coding.txt:
	Added coding guideline document.
	[3e0a64efb750]

2010-09-23  Eero Tamminen

	* src/gui-sdl/dlgNewDisk.c:
	fix segfault on disk create/insert

	First creating new disk then canceling creating another new disk and
	doing insert crashed to accessing freed memory.
	[bd2a7ed713e2]

	* src/uae-cpu/CMakeLists.txt:
	fix: check for GCC when adding GCC options

	and ignore only relevant "unused" warnings
	[994a0949b1c2]

	* src/main.c:
	fix: float comparisons shouldn't use equality checks

	(floats are inaccurate and those can fail due to rounding issues.)
	[391a4bdb8118]

2010-09-22  Laurent Sallafranque

	* src/gui-sdl/dlgFileSelect.c, src/gui-sdl/sdlgui.c,
	src/includes/sdlgui.h:
	scrollbar code cleaning
	[6aa7ea1f3428]

2010-09-18  Eero Tamminen

	* src/debug/breakcond.c:
	fix -Wextra compiler warning, show help for dsp/address command with
	no args
	[c6451a06698c]

	* tools/hmsa/hmsa.c:
	fix -Wformat-security compiler warning
	[97f3e909547c]

2010-09-14  Laurent Sallafranque

	* src/gui-sdl/dlgFileSelect.c, src/gui-sdl/sdlgui.c:
	fix : mouse and scrollbar are completly synchronized in all
	situations
	[dae63f06a9cc]

	* src/gui-sdl/dlgFileSelect.c, src/gui-sdl/sdlgui.c,
	src/includes/sdlgui.h:
	Add : scrollbar can be moved with the mouse Removed : return to
	previous scrollbar look and feel TODO: there's still a bug with the
	mouse grabbing, if you use the mousewheel before grabbing the
	scrollbar
	[f0e07ee4d964]

2010-09-10  Laurent Sallafranque

	* src/gui-sdl/dlgFileSelect.c, src/gui-sdl/sdlgui.c,
	src/includes/sdlgui.h:
	Reworked fileselector : add a 1 pixel precise scrollbar, applied GEM
	look and feel
	[54083f8c95cd]

2010-09-08  Eero Tamminen

	* python-ui/dialogs.py, python-ui/uihelpers.py:
	refactor HD & floppy file selection code to common class in
	uihelpers
	[d60b74fd9e73]

	* python-ui/dialogs.py:
	fix floppy protection setting to use correct Hatari option
	[4390c33dcfbf]

	* python-ui/uihelpers.py:
	simplify uihelper win/nix path splitting
	[db4bcf307d47]

2010-09-04  Nicolas Pomarede

	* src/sound.c:
	- Correct case where a noise per < 3 produced no noise output at all
	- Rewrite tone and noise step compute to use the same logic as env's
	step
	[4b5f4b81ab6f]

2010-08-30  Nicolas Pomarede

	* src/sound.c:
	On a real STF, when envper==0, envelope's frequency is the same as
	when envper==1, not half of it
	[eaf1bc14fa6f]

2010-08-08  Nicolas Pomarede

	* src/cycInt.c:
	When adding a new internal interrupt, call CycInt_UpdateInterrupt
	also if PendingInterruptCount < 0 In some rare cases (mostly when
	using dma sound), CycInt_AddxxxxInterrupt functions can be called at
	the exact same time when another interrupt is already elapsed (ie
	PendingInterruptCount < 0). In that case, content of
	PendingInterruptCount was reset without calling the handler for this
	available interrupt first, which could result in lost hbl/timer
	interrupt and possible crash. Calling CycInt_UpdateInterrupt in all
	case when ActiveInterrupt>0 fixes the problem, as the available
	interrupt will keep a negative value in InterruptHandlers[].Cycles
	(fix possible crash in TalkTalk 2 readme.prg).
	[a169698b4670]

2010-07-26  Nicolas Pomarede

	* src/mfp.c:
	When timers A or B are in pulse width mode, clear bit 3 of the ctrl
	reg to emulate it as in delay mode. This is not completly correct as
	we should also emulate GPIO 3/4, but it helps running some programs
	(fix the game Erik)
	[7b887fce4315]

2010-07-13  Eero Tamminen

	* doc/manual.html:
	document OS-call opcode breakpoint variables (and move continue
	explanation under tracing)
	[32b8a993ec4c]

	* doc/manual.html:
	add comment about --parse option to manual debugger section
	[3bf824840ae8]

2010-07-12  Eero Tamminen

	* doc/manual.html:
	restructure performance section and add OSX notes to manual
	[71ee6366f6d1]

	* tools/hatari-local-rs232.sh:
	add helper script for joining two hatari instances with serial
	(rs232)
	[97ed0b557530]

2010-07-05  Nicolas Pomarede

	* src/video.c:
	When removing left border, allow up to 32 cycles between hi and low
	res switching (fix Megabeer by Invizibles)
	[4f7824267536]

2010-06-29  Eero Tamminen

	* doc/release-notes.txt:
	update release notes
	[29b3be7312f3]

	* src/debug/debugcpu.c, src/debug/debugdsp.c, src/debug/profile.c,
	src/debug/profile.h:
	add collected profiling information also to CPU & DSP disassembly
	output
	[1ffa3c7ac592]

	* src/debug/debugInfo.c:
	add GEMDOS memory pool address for TOS 1.0 (from Gerhard Stoll)
	[16e9204f916e]

2010-06-25  Eero Tamminen

	* src/debug/breakcond.c:
	fix breakpoint opcode variables for appl_yield & vq_gdos. make
	line-A/F variable code clearer.
	[4174ef707bf2]

	* CMakeLists.txt, doc/hatari.1:
	document --mic option
	[82f24fbae97b]

	* src/configuration.c, src/falcon/microphone.c,
	src/includes/configuration.h, src/options.c:
	add config & command line option for enabling/disabling mic
	[28100d5e19f6]

	* src/falcon/microphone.c, src/falcon/microphone.h:
	microphone.[ch]: int/0/1 -> bool/true/false for functions return
	values
	[514660bb2511]

	* src/CMakeLists.txt:
	createBlankImage.c is already in Floppy lib, remove duplicate
	[e90ea57be5c7]

2010-06-16  Eero Tamminen

	* doc/release-notes.txt, doc/todo.txt:
	update todo/notes to last changes
	[8c59af69a7ac]

	* src/debug/breakcond.c:
	add BIOS/XBIOS/GEMDOS/VDI/AES/Line-A/Line-F opcode breakpoint
	support
	[e31b534184f5]

	* CMakeLists.txt:
	add GCC Mudflap (pointer debugging) support for CMake build
	[dc37dc8db847]

	* doc/compatibility.html:
	fix previous Hatari compat update
	[165dd8feb0d4]

	* doc/emutos.txt:
	update emutos compatibility list (after testing new line-A
	breakpoints features)
	[f945bae498bb]

2010-06-15  Eero Tamminen

	* doc/compatibility.html:
	add couple of missing STE games to compat list
	[1a5599dcc352]

	* src/debug/debugui.c:
	leave duplicate entries out of debugger readline history
	[240767936317]

	* tests/test-dummies.c, tests/test-symbols.c:
	update test sources for profiler addition & cleanup
	[edb374413751]

	* tests/Makefile:
	update tests Makefile for the profiler addition and clean up a bit
	[c7f3cb19b26b]

2010-06-14  Thomas Huth

	* tests/Makefile:
	Added the Makefile for the tests again (deleted it a little bit
	overhasty)
	[c6bf86c60f22]

2010-06-13  Thomas Huth

	* src/tos.c:
	Allow the early TOS 0.00, too.
	[72de08464b29]

	* cmake/DistClean.cmake:
	Improved distclean target
	[273e4064d494]

	* .hgignore:
	Updated hg ignore file
	[8bd5f224e167]

	* Makefile, Makefile-MinGW.cnf, Makefile-default.cnf, config-
	default.h, python-ui/Makefile, src/Makefile, src/debug/Makefile,
	src/falcon/Makefile, src/gui-sdl/Makefile, src/gui-win/Makefile, src
	/uae-cpu/Makefile, tests/Makefile, tools/hmsa/Makefile:
	Removed the old Makefiles. Use CMake now to generate the build files
	of your choice.
	[49640ff19f1c]

	* website/index.html, website/links.html:
	Website update
	[c7275f697c69]

2010-06-12  Eero Tamminen

	* doc/release-notes.txt, src/debug/debugcpu.c, src/debug/debugdsp.c:
	add DSP and CPU profiling commands to the debugger
	[ad6756190967]

	* src/debug/CMakeLists.txt, src/debug/Makefile, src/debug/profile.c,
	src/debug/profile.h:
	add profiling functionality (using new symbol count & DSP
	instructions APIs)
	[a917c1a05461]

	* src/debug/symbols.c, src/debug/symbols.h:
	API for getting DSP & CPU symbols counts
	[cd1c60a3186f]

	* src/falcon/dsp.c, src/falcon/dsp.h:
	API for getting last DSP instruction cycles
	[f9fe56697d0b]

	* src/blitter.c, src/cycInt.c, src/debug/breakcond.c,
	src/debug/debugInfo.c, src/fdc.c, src/ikbd.c, src/includes/screen.h,
	src/includes/video.h, src/ioMemTabFalcon.c, src/ioMemTabST.c,
	src/ioMemTabSTE.c, src/ioMemTabTT.c, src/joy.c,
	src/memorySnapShot.c, src/mfp.c, src/psg.c, src/sound.c,
	src/statusbar.c, src/uae-cpu/hatari-glue.c, src/uae-cpu/newcpu.c,
	src/video.c:
	Add HBL_PALETTE_LINES & HBL_PALETTE_MASKS defines to screen.h & use
	them in video.h.

	This helps with GCC Mudflap pointer debugging as GCC now knows the
	sizes of the related palette arrays.

	Because video.h now needs defines from screen.h, I had to add
	includes for it to files that were including only video.h.
	[d6839550659b]

	* src/includes/ioMemTables.h:
	const ioMemTab struct members which won't change
	[583cf75f5072]

	* Makefile, doc/release-notes.txt, src/CMakeLists.txt,
	tools/hmsa/CMakeLists.txt, tools/hmsa/Makefile, tools/hmsa/hmsa.1,
	tools/hmsa/hmsa.c, tools/hmsa/readme-hmsa.txt:
	rewrite hmsa to support also empty disk creation + add manual page
	(readme is now autogenerated from manual page in Makefile)
	[774149db8bd4]

2010-06-12  Thomas Huth

	* .hgtags:
	Cleaned up hg tags file
	[bbd691c40719]

2010-06-12 : *** Version 1.4.0 ***

2010-06-12  Nicolas Pomarede

	* doc/compatibility.html, doc/doxygen/Doxyfile, doc/manual.html, doc
	/release-notes.txt, hatari.spec, src/includes/main.h,
	src/memorySnapShot.c:
	Update version to 1.4.0
	[98f234293466] [tip]

2010-06-04  Thomas Huth

	* src/gui-osx/SDLMain.h:
	Fixed Stop-Recording problem in Mac OS X GUI
	[881291439adc]

2010-06-03  Thomas Huth

	* src/avi_record.c, src/includes/pixel_convert.h,
	src/screenSnapShot.c:
	Take pixel layout into account when converting screen for PNG
	snapshots. This hopefully fixes the endianess problem on Macs with
	Intel processors.
	[d1b6f581e22e]

2010-06-03  Nicolas Pomarede

	* src/video.c:
	Temporarily disable "cosmetic" patch from changesets 2823/2830 in
	Video_ConvertPosition where FrameCycles >= CyclesPerVBL This causes
	problem when $ff8209 is read during first 64 cycles of the VBL
	(regression in Enchanted Land)
	[595783001b0b]

2010-06-02  Thomas Huth

	* src/falcon/dsp.c:
	Silenced another possible compiler warning
	[7e370fc1ffbe]

2010-06-02  Eero Tamminen

	* src/debug/debugui.c:
	fix compile warning on 64-bit
	[f56efc333891]

	* src/zip.c:
	fix zip.c free (should free array, not array count).
	[4c735f028828]

2010-06-02  Laurent Sallafranque

	* src/falcon/crossbar.c, src/falcon/dsp_core.c, src/falcon/dsp_core.h,
	src/falcon/dsp_cpu.c, src/falcon/dsp_cpu.h:
	dsp interrups should be in dsp_cpu.c code, not in dsp_core.c. I've
	moved code to the correct place. Crossbar frame counter code update
	(not yet finished)
	[62685a040f60]

2010-06-01  Eero Tamminen

	* doc/manual.html:
	move debugger symbols documentation to its own section
	[e43d74476894]

2010-05-30  Eero Tamminen

	* python-ui/README, python-ui/release-notes.txt:
	minor hatari doc update
	[bdc2570f62e2]

	* python-ui/CMakeLists.txt, python-ui/Makefile, python-ui/hatariui.1:
	add manual page for hatariui
	[a901658fa667]

	* python-ui/hatariui.py:
	fix hatariui help control/action description generation
	[01b79c77d388]

2010-05-30  Thomas Huth

	* CMakeLists.txt:
	The poseAsClass problem has been fixed, no need to force a 32-bit
	build anymore
	[49c57d8cc01d]

	* src/gui-osx/AlertHooks.m, src/gui-
	osx/English.lproj/InfoPlist.strings, src/gui-
	osx/English.lproj/Localizable.strings, src/gui-
	osx/English.lproj/SDLMain.nib/designable.nib, src/gui-
	osx/English.lproj/SDLMain.nib/keyedobjects.nib, src/gui-
	osx/French.lproj/InfoPlist.strings, src/gui-
	osx/French.lproj/Localizable.strings, src/gui-
	osx/French.lproj/SDLMain.nib/designable.nib, src/gui-
	osx/French.lproj/SDLMain.nib/keyedobjects.nib, src/gui-osx/Info-
	Hatari.plist, src/gui-osx/PrefsController.h, src/gui-
	osx/PrefsController.m, src/gui-osx/SDLMain.h, src/gui-osx/SDLMain.m:
	Fixed the poseAsClass problem by adapting SDLMain.m to the latest
	version from SDL 1.2.14. Thanks to Jerome Vernet for the patch.
	[2071b56221db]

2010-05-29  Thomas Huth

	* CMakeLists.txt:
	Universal binaries caused troubles during built - and since the OS X
	GUI does not work on Mac OS X 10.4 anymore, I've disabled the
	PowerPC support now.
	[2d45f531ae53]

	* src/gui-osx/PrefsController.m:
	Do not force color depth to 16 bpp, use default depth instead.
	[174f5a1212bb]

	* src/gui-osx/CreateFloppyController.m:
	Fix for compiling with older XCode
	[5915bab9acb7]

	* src/gui-osx/AlertHooks.m, src/gui-osx/CreateFloppyController.m, src
	/gui-osx/English.lproj/SDLMain.nib/designable.nib, src/gui-
	osx/French.lproj/SDLMain.nib/designable.nib:
	Jerome's latest update
	[f23ba86b69c5]

2010-05-28  Laurent Sallafranque

	* src/falcon/crossbar.c:
	sorry, removed the 2 fprintf. Precedent comment must be read as
	"corrects 25Mhz and 32 Mhz ..."
	[82edeecbe0c3]

	* src/falcon/crossbar.c:
	add: increase 258Mhz and 32 Mhz interrupts by taking into account
	the pending cycles
	[2b08d56579e6]

2010-05-24  Thomas Huth

	* src/gui-osx/English.lproj/SDLMain.nib/designable.nib, src/gui-
	osx/English.lproj/SDLMain.nib/keyedobjects.nib, src/gui-
	osx/French.lproj/SDLMain.nib/designable.nib, src/gui-
	osx/French.lproj/SDLMain.nib/keyedobjects.nib, src/gui-
	osx/SDLMain.h, src/gui-osx/SDLMain.nib/classes.nib, src/gui-
	osx/SDLMain.nib/info.nib, src/gui-osx/SDLMain.nib/keyedobjects.nib:
	Jerome's latest update to the .nib files
	[9b6af41ac267]

2010-05-24  Eero Tamminen

	* doc/release-notes.txt, src/createBlankImage.c, src/gui-
	sdl/CMakeLists.txt, src/gui-sdl/Makefile, src/gui-sdl/dlgFloppy.c,
	src/gui-sdl/dlgNewDisk.c, src/includes/dialog.h:
	ask whether newly created floppy image should be mounted to A: or B:
	[8195baf82d1b]

	* doc/compatibility.html:
	minor updates
	[0455c652b45c]

2010-05-23  Eero Tamminen

	* doc/emutos.txt:
	latest DHS STE demos work with EmuTOS
	[c03622269240]

2010-05-23  Thomas Huth

	* CMakeLists.txt, src/CMakeLists.txt:
	CMakeLists.txt updates for building on OS X
	[1dc598df076b]

2010-05-18  Eero Tamminen

	* python-ui/hatari.py:
	fix Hatari UI ST/E borders size calculation for max screen size
	change
	[6f04fdd8bb0a]

	* src/screen.c:
	max doubled res for ST/STE is 640x400 (before adding borders &
	statusbar)
	[2bca525abfdc]

2010-05-17  Eero Tamminen

	* src/configuration.c, src/gui-sdl/dlgMain.c:
	retain name of config file user loaded, fix the name leak and
	correct error message
	[83d8b64aa42d]

2010-05-16  Thomas Huth

	* src/CMakeLists.txt:
	Updates for building on Mac OS X
	[3a2583110465]

	* src/hd6301_cpu.c, src/hd6301_cpu.h:
	Fixed compiler warnings and moved variables to .c file
	[89fbba6bba67]

2010-05-16  Eero Tamminen

	* src/configuration.c:
	fix python UI assert, add correct prefix to SdlAudioBufferSize
	[4d50b6e82780]

2010-05-16  Thomas Huth

	* doc/release-notes.txt:
	Added LMC1992 emulation to release notes
	[ac022682f790]

	* doc/images/main.png:
	Updated the main dialog screenshot
	[db9f7f6b9ddd]

	* src/gui-sdl/dlgMain.c:
	Show file selection dialog when loading and saving configuration
	files.
	[d9630fde56a6]

2010-05-15  Nicolas Pomarede

	* src/video.c:
	Fix a potential bug/crash when running in monochrome and VBL was
	delayed too much. In monochrome (71 Hz) a line is 224 cycles, which
	means if the VBL is delayed by 160 cycles (DIVS) we will already be
	on line 1 when adding first hbl/timer B interrupts for line 0. If we
	detect VBL was delayed too much, we now add hbl/timer b immediatly
	in the next 4 cpu cycles to be sure line 0 is processed.
	[9dd6c5c12177]

2010-05-13  Nicolas Pomarede

	* src/gui-osx/English.lproj/InfoPlist.strings, src/gui-
	osx/English.lproj/SDLMain.nib/designable.nib, src/gui-
	osx/English.lproj/SDLMain.nib/keyedobjects.nib, src/gui-
	osx/French.lproj/InfoPlist.strings, src/gui-
	osx/French.lproj/SDLMain.nib/designable.nib, src/gui-
	osx/French.lproj/SDLMain.nib/keyedobjects.nib:
	Update localized files for english and french
	[1cae24a9621a]

	* src/gui-osx/CreateFloppyController.m, src/gui-osx/Info-Hatari.plist,
	src/gui-osx/PrefsController.h, src/gui-osx/PrefsController.m, src
	/gui-osx/SDLMain.h, src/gui-osx/SDLMain.m:
	Apply Jerome Vernet's patch to update OSX version of the GUI
	[73035156f3d4]

	* doc/hatari.1, doc/manual.html:
	Add --sound-buffer-size to the man and html versions of the
	documentation
	[76bef71735d4]

	* src/options.c:
	Add the option --sound-buffer-size to specify SLD sound buffer size
	in ms
	[2e0df51e1f6c]

	* src/sound.c:
	Comment debug traces
	[783c3f1c502a]

	* src/configuration.c, src/includes/configuration.h:
	Save/restore SdlAudioBufferSize in the [Sound] section of hatari.cfg
	[2e758ee7de3e]

2010-05-12  Nicolas Pomarede

	* src/audio.c, src/includes/audio.h:
	Allow to specify the size of SDL's sound buffer in ms using
	SdlAudioBufferSize. Instead of specifying a fixed value of 1024,
	which can confuse some faulty sound driver and create a hearable
	delay, it's possible to use SdlAudioBufferSize to specify the size
	of SDL's buffer. Default value of 1024 samples will give a 20-30 ms
	sound buffer. Users having sound delay should try to force
	SdlAudioBufferSize to 20 ms.
	[bf1c8ace3386]

	* src/sound.c:
	Add some debug traces
	[232728040217]

2010-05-12  Eero Tamminen

	* doc/emutos.txt:
	update emutos.txt for new emutos v0.8.5
	[1557ec961677]

2010-05-11  Eero Tamminen

	* python-ui/TODO:
	add pygui TODO from Anders on config file selection
	[a9e92b404ab6]

	* src/createBlankImage.c, src/includes/createBlankImage.h:
	const unmodified path arg, return whether disk creation succeeded
	[e0ce4e7bc587]

	* src/dim.c, src/includes/dim.h, src/includes/msa.h,
	src/includes/st.h, src/msa.c, src/st.c:
	const unmodified path argument for DIM/MSA/ST functions
	[0049b3309f76]

2010-05-10  Eero Tamminen

	* src/tos.c:
	when claiming to switch to some machine mode, switch all CPU
	parameters too (this is convenient and doing otherwise would confuse
	users, especially if they don't notice that Hatari didn't switch all
	parameters).
	[9d00b382eb24]

2010-05-09  Nicolas Pomarede

	* src/audio.c:
	Align comments
	[437e4eedb5f7]

	* src/audio.c:
	After calling SDL_OpenAudio(), SoundBufferSize should be converted
	in number of samples (not bytes)
	[43a438bdc231]

2010-05-09  Eero Tamminen

	* src/tos.c:
	Correct ROM checks/switches for Falcon->TOS1.62 and 030/STE->TOS
	1.4.
	[084f0f029518]

	* python-ui/dialogs.py, python-ui/uihelpers.py:
	update Hatari UI copyright & version (now v1.0)
	[591e79b730d7]

2010-05-08  Nicolas Pomarede

	* doc/authors.txt:
	Add Anders Eriksson to the contributors list
	[22ff20072888]

	* src/includes/m68000.h, src/m68000.c:
	Add a possibility for ADD/MOVE to pair when combined with d8(an,ix)
	addressing mode. The bus cycle penalty caused by d8(an,ix) can cause
	some instructions to pair, even if they wouldn't pair with some
	other addressing modes. For example, add.l (a5,d1.w),d0 + move.b
	7(a5,d1.w),d5 will pair to take a total of 36 cycles (fix Sommarhack
	2010 Invitation by DHS)
	[c5071f17020c]

2010-05-05  Laurent Sallafranque

	* src/falcon/dsp_cpu.c:
	ooops: I forgot to remove the debug flags
	[c89fae547982]

	* src/falcon/dsp_cpu.c, src/falcon/dsp_disasm.c,
	src/falcon/dsp_disasm.h:
	reworked dsp disasm code. fix mem disasm order (mem changes were
	displayed before the instruction in disasm mode). Optimized disasm
	code
	[4e94a6d38fc5]

2010-05-04  Nicolas Pomarede

	* src/falcon/crossbar.c:
	Use a scaling factor of 2.66 instead of 3 for mixing PSG (patch by
	David Savinkoff)
	[d1b385bdfcb4]

	* src/video.c:
	Improve Video_ConvertPosition, use CyclesPerVBL instead of
	evaluating CYCLES_PER_FRAME
	[e9815654c3a8]

2010-05-03  Thomas Huth

	* etc/win-ce.cfg:
	Updated Win-CE sample config file.
	[70ec266b3826]

2010-05-02  Eero Tamminen

	* python-ui/hatari-console.py:
	hatari console: mount-changes -> protect-floppy/hd
	[253afcfdd198]

	* doc/todo.txt:
	todo on ASCI/IDE write protection
	[cc8fc0afa05f]

	* python-ui/README:
	update python UI readme
	[9c14727e1aa4]

	* python-ui/TODO, python-ui/dialogs.py, python-ui/hatari.py:
	support --protect-floppy/-hd in python UI
	[592dc1e015a4]

	* doc/hatari.1, doc/manual.html, doc/release-notes.txt,
	src/configuration.c, src/gemdos.c, src/gui-sdl/dlgHardDisk.c,
	src/includes/configuration.h, src/options.c:
	unify how floppy and (GEMDOS) harddisk write protection is used:
	- rename bGemdosChanges -> nWriteProtection
	- add "auto" option also for GEMDOS emulation (disables Fattrib())
	- add --protect-floppy command line option
	- rename --mount-changes <bool> to --protect-hd <on/off/auto>
	- update documentation
	[4e2e821c95ce]

2010-05-02  Nicolas Pomarede

	* src/video.c:
	In Video_ConvertPosition, handle the case where we read the position
	between the last HBL and the start of the next VBL. During 64 cycles
	FrameCycles can be >= CYCLES_PER_FRAME (harmless fix, only useful
	when using --trace to get correct positions in the logs).
	[eaaaa1b449be]

2010-05-02  Eero Tamminen

	* doc/compatibility.html:
	update falcon compat notes
	[0fbf0ee26b62]

	* doc/compatibility.html:
	trivial compat update
	[febc000f3db6]

2010-05-02  Thomas Huth

	* doc/compatibility.html, doc/manual.html:
	Some more HTML fixes and improvements
	[5d956e94783f]

2010-05-01  Eero Tamminen

	* etc/README, etc/n810.cfg:
	update config example for Nokia Maemo tablets (not tested)
	[a46d4c3bd0c7]

2010-05-01  Thomas Huth

	* doc/manual.html:
	Fixed HTML bug
	[b0699e8d1ad2]

2010-05-01  Eero Tamminen

	* doc/manual.html:
	add instructions on debugging normal AHCC compiled TOS/GEM programs
	with symbols
	[dc9326accf5c]

	* src/debug/symbols.c:
	fix symbols double free and load address offset handling
	[960bb0c2426a]

	* src/debug/debugInfo.c:
	show all env vars and cli args with the "info basepage" command
	[6073d340e13b]

2010-04-28  Laurent Sallafranque

	* src/falcon/crossbar.c:
	When crossbar dma sound is stopped, we must call Sound_Update() to
	update the samples buffer
	[adcacc92d016]

2010-04-28  Thomas Huth

	* CMakeLists.txt:
	Fixed stupid typo ... forgot an else() statement
	[9ab74fbc50ec]

2010-04-28  Eero Tamminen

	* src/vdi.c:
	VDI opcode & subcode are unsigned, fix (tracing) checks against them
	[c7610ef027d1]

	* src/xbios.c:
	opcode is of unsigned type, so comparing it with >= 0 is redundant.
	[724488e0900f]

2010-04-28  Nicolas Pomarede

	* src/falcon/crossbar.c:
	For crossbar sound, check end address is greater than start address
	[789764c08ff4]

2010-04-27  Thomas Huth

	* CMakeLists.txt:
	unset READLINE_FOUND in case it's not a good readline library, so
	that the src/CMakeLists.txt does not try to link against this
	library
	[6fa60c3dfd05]

	* src/bios.c:
	The BiosCall variable is of unsigned type, so comparing it with >= 0
	is redundant.
	[20efcdbaf5b2]

2010-04-27  Eero Tamminen

	* readme.txt:
	fix RHEL problem section, add contents
	[fa08d4b913d0]

2010-04-27  Nicolas Pomarede

	* src/dmaSnd.c:
	When dma sound is stopped, we must call Sound_Update() to update the
	samples buffer In case dma is turned off during the vbl, we must
	fill the sample buffer with all the samples that were generated
	before stopping sound. This could cause some sound bugs in EPSS by
	Unit 17 (and sometimes a complete crash of Hatari) because the dma
	interrupt won't happen at the expected place (EPSS is doing clr.b
	$ff8901 + move.b #3,$ff8901 to force an immediate start of the
	sound)
	[41a7ad85ef6a]

	* src/dmaSnd.c:
	Fix typo in log message
	[adc1fc83ebdb]

	* src/dmaSnd.c:
	For DMA sound, check end address is greater than start address
	(testing dma.frameLen <= 0 is wrong because dma.frameLen is
	unsigned)
	[f0970768a021]

2010-04-26  Thomas Huth

	* CMakeLists.txt, cmake/FindPortAudio.cmake:
	Clean up CMAKE_REQUIRED_LIBRARIES after test has been done or other
	unrelated tests later might fail.
	[483d790192eb]

	* src/includes/gemdos_defines.h:
	Error code for write-protected is -13, not -12
	[9d4d83be9e40]

2010-04-26  Eero Tamminen

	* readme.txt:
	note the RHEL readline issue in installation instructions
	[d803a2d91018]

	* doc/manual.html, doc/release-notes.txt:
	tracing documentation improvements
	[4babcc5a30f7]

2010-04-25  Eero Tamminen

	* doc/compatibility.html, doc/emutos.txt:
	compat updates: keff doesn't work on falcon, emperor works with
	emutos
	[d47ab4973210]

	* src/xbios.c:
	add names for all XBIOS calls when tracing
	[068170b0544b]

	* src/bios.c:
	give names for all bios functions when tracing
	[34a3d33db441]

2010-04-24  Thomas Huth

	* cmake/FindPortAudio.cmake:
	Removed bad quotations in portaudio detection file
	[be0f922c0d0b]

	* CMakeLists.txt:
	Use the additional CFLAGS from SDL for compilation
	[5e21a8c46d8b]

2010-04-24  Eero Tamminen

	* src/vdi.c:
	add more verbose VDI tracing (sub-opcode + VDI function name)
	[6a5adae76732]

2010-04-22  Laurent Sallafranque

	* src/falcon/crossbar.c:
	applied David's patch (it corrects some bugs and fix attenuation and
	gain values)
	[2785c5912789]

2010-04-21  Eero Tamminen

	* python-ui/TODO:
	more python-UI debugger TODOs
	[9ab9d0009a95]

2010-04-19  Eero Tamminen

	* python-ui/debugui.py, python-ui/release-notes.txt:
	Option for whether Hatari UI debugger will change to new PC address
	(whenever emulation is stopped again)
	[ffe2d43c8f25]

	* python-ui/config.py, python-ui/hatariui.py:
	fixes for Hatari UI missing config saving
	[c2d0f3becc1f]

2010-04-18  Nicolas Pomarede

	* src/dmaSnd.c:
	Patch by David Savinkoff : fix possible memory corruption that could
	alter video/sound
	[ae01f13d72de]

2010-04-18  Eero Tamminen

	* python-ui/TODO, python-ui/release-notes.txt, python-ui/uihelpers.py:
	update python UI docs
	[bc7df15c5776]

	* python-ui/dialogs.py, python-ui/hatari.py, python-ui/hatariui.py:
	Add new settings dialog for configuring HD images and dir. Also
	remove get/set_usehd stuff, as it's not handled properly, setting
	the image/dir option already should do what's needed...
	[dd66431fe4f3]

	* doc/todo.txt:
	todo for partition counting
	[084d2b4978d4]

	* src/options.c:
	improve missing file handling for option setting:
	- "none" as file name can be used to disable functionality even when
	file existence check is requested. This is needed for Hatari UI
	hard disk settings
	- midi and rs232 create their output files so the files don't need
	to pre-exist
	- midi input file needs to pre-exist
	[77038f38c219]

	* doc/manual.html:
	for v1.4, passes still HTML validation
	[1a7c135147db]

	* python-ui/dialogs.py, python-ui/hatari.py:
	Support max size in Hatari UI, remove aspect ratio & spec512
	controls from it (they work fine so they're redundant options for
	the UI)
	[492a52adc4c5]

	* python-ui/config.py, python-ui/debugui.py, python-ui/hatari.py,
	python-ui/hatariui:
	fix debugger UI config loading
	- move config path handling from hatari.py back to config.py for this
	- rename HATARI_CONFDIR to more correct HATARI_SYSTEM_CONFDIR
	[c87dd379aa02]

	* doc/authors.txt:
	update authors list and make sure its text fits into 80 cols
	[a12f5bf9cc53]

2010-04-17  Eero Tamminen

	* doc/compatibility.html:
	jam-cols works fine
	[0b014d7939e1]

2010-04-16  Eero Tamminen

	* doc/images/monitor.png, doc/images/screen.png, doc/manual.html:
	split manual screen section to Atari monitor and Hatari screen
	sections (with new screenshots etc).
	[9883146ec514]

	* src/gui-sdl/dlgScreen.c:
	remove aspect correction option from GUI as unnecessary:
	- disabling it can produce really strang Falcon resolutions
	- it works as fine
	[969c4439ba72]

2010-04-15  Nicolas Pomarede

	* website/scrshots6.html:
	For Falcon, remove 'higly experimental' from the description
	[d05718701223]

2010-04-15  Eero Tamminen

	* doc/release-notes.txt:
	mention fullscreen/pause fix
	[b0fec3c1469d]

2010-04-15  Nicolas Pomarede

	* website/links.html:
	Fix type in url
	[a939a65b2cb5]

2010-04-14  Nicolas Pomarede

	* website/docs.html, website/index.html, website/links.html:
	Small changes in description regarding TT/Falcon, add link to
	todo.txt
	[36a74890f71e]

2010-04-13  Eero Tamminen

	* doc/compatibility.html, doc/emutos.txt, python-ui/release-notes.txt:
	trivial doc updates
	[aff5593c4dda]

2010-04-12  Nicolas Pomarede

	* src/video.c:
	Improve timings when writing to $ff8205/07/09 when hscroll is used
	The MMU starts reading video data 16 cycles earlier in that case
	(fix Pacemaker's Bump Part by Paradox)
	[1c6984f95830]

2010-04-11  Eero Tamminen

	* doc/compatibility.html:
	compatibility: 1.3.1+ -> 1.4, add AHCC/Pure-C/MP2
	[2a880c46ea75]

2010-04-09  Nicolas Pomarede

	* src/sound.c:
	Use the same indent style as the rest of the file
	[45557987d41a]

2010-04-09  Eero Tamminen

	* python-ui/Makefile, python-ui/config.py, python-ui/hatari.py,
	python-ui/hatariui:
	use and handle Hatari system configuration file correctly (if one
	exists, but saved user configuration is missing)
	[9f81b10fef96]

2010-04-07  Eero Tamminen

	* doc/manual.html:
	update manual feature list based on Laurent's comments
	[9a217ffeee4d]

2010-04-06  Eero Tamminen

	* doc/manual.html, doc/release-notes.txt, doc/todo.txt:
	minor updates to manual, release notes and todo
	[fe7f031388d2]

2010-04-06  Laurent Sallafranque

	* src/dmaSnd.c, src/sound.c:
	add David's latest patches for DMA sound. Thanks again David.
	[9ffac230e9cf]

	* doc/todo.txt:
	update the falcon and STe Dma sound TODO list
	[baa046aeefdf]

2010-04-06  Eero Tamminen

	* doc/images/harddisks.png, doc/images/main.png,
	doc/images/newfloppy.png, doc/images/system.png, doc/manual.html:
	update manual screenshots and texts for options dialogs (except for
	screen dialog which I update later)
	[c7121754c80a]

2010-04-05  Eero Tamminen

	* doc/manual.html:
	improve/update perforance section in manual
	[38b661d0da92]

	* doc/compatibility.html:
	update falcon compatiblity reasons
	[9e77fd74d470]

	* src/debug/evaluate.c, src/debug/log.h:
	set LOG_TRACE() debug stuff as unlikely to speed emulation when
	tracing isn't enabled
	[8af4ed017568]

	* src/convert/macros.h, src/convert/spec320x16.c,
	src/convert/spec320x32.c, src/convert/spec640x16.c,
	src/convert/spec640x32.c:
	fix x86 past-array-end read for spec512 conversion
	[2a02fa8735e3]

2010-04-05  Nicolas Pomarede

	* src/m68000.c:
	Correctly initialize LastOpcodeFamily with a valid opcode.
	[72fe4de1a4b6]

	* src/includes/m68000.h, src/m68000.c, src/uae-cpu/gencpu.c, src/uae-
	cpu/newcpu.c, src/uae-cpu/newcpu.h:
	Better handling of d8(an,ix) addressing mode on ST (including
	pairing). On ST, d8(An,Xn) is causing a misaligned bus access and
	will generate a 2 cycles penalty on every use (can be 4 cycles if
	used as both source and dest in a move). Due to this particular bus
	access, an instruction using d8(An,Xn) will usually take 4n+2 cycles
	and could pair with a previous compatible instruction. We use
	BusCyclePenalty to count the number of cycles lost by d8(an,ix) and
	we add this value to the current number of cycles depending on
	whether pairing is used or not. This code should handle all possible
	cases (previous code only handled some special cases with add/sub)
	(verified with various combinations on a real STF, as well as in ULM
	Demo Menu, Anomaly Demo Intro, DHS Sommarhack 2010).
	[9eb34ca61590]

2010-04-04  Eero Tamminen

	* tools/hmsa/Makefile:
	hmsa build needs LDFLAGS too
	[619ab05097ba]

	* Makefile-default.cnf, src/falcon/hostscreen.c, src/main.c,
	src/screen.c, tests/Makefile, tests/test-scripting.sh:
	add GCC "mudflap" instrumentation support:
	http://gcc.gnu.org/wiki/Mudflap_Pointer_Debugging
	[604cc0ae1597]

	* src/screen.c:
	make it more explicit that double buffering isn't used, and why
	[9f3bc3edeb1c]

	* doc/hatari.1, src/includes/options.h, src/main.c, src/options.c:
	add option to disable SDL parachute to get Hatari core dumps. (and
	remove redundant comments from headers and redundant var
	initialization to zero)
	[7e9a24db3756]

	* src/debug/symbols.c, tests/debugui/debugger.ini, tests/test-
	symbols.c:
	allow removing symbols + make tests use that (will get rid of
	unfreed allocs messages in tests)
	[739add946452]

2010-04-01  Laurent Sallafranque

	* src/dmaSnd.c:
	added David's latest patch. Thanks David !! :)
	[bad1e1cc5b85]

2010-03-31  Laurent Sallafranque

	* src/audio.c, src/includes/dmaSnd.h:
	fix headers in audio.c
	[e285a9dad08e]

2010-03-31  Eero Tamminen

	* src/debug/breakcond.c:
	fix !_GNU_SOURCE compilation warning / remove redundant isblank()
	[6b53c0bfa595]

	* doc/emutos.txt:
	add few programs working with emutos
	[068e7d0dc668]

	* doc/compatibility.html:
	add URLs for STE compat list games
	[f181a61fc3fb]

2010-03-30  Laurent Sallafranque

	* src/dmaSnd.c:
	I uploaded the wrong David's patch yesterday. Here is the correct
	one.
	[b8d5235fb3ed]

2010-03-29  Laurent Sallafranque

	* src/dmaSnd.c:
	fix mono divider value
	[12b5519f1d06]

2010-03-29  Laurent Sallafranque

	* src/audio.c, src/dmaSnd.c:
	add David's patch
	[0b698d74de5a]

2010-03-27  Thomas Huth

	* doc/CMakeLists.txt:
	Fixed manpages target for CMake version 2.6.0
	[a799659c1e53]

2010-03-24  Laurent Sallafranque

	* src/dmaSnd.c:
	David's optimizations and improvements's patch for LCM1992
	bass/treble emulation. He also added anti aliasing for 50 Khz
	frequency.
	[74f20f88d57e]

2010-03-21  Laurent Sallafranque

	* src/dmaSnd.c:
	fix: mix correctly Yamaha's sound and DMA's sound together. Phazer
	by 505 from Blubber demo runs well now
	[4a7cc38aa498]

2010-03-21  Eero Tamminen

	* src/falcon/hostscreen.c:
	remove debug stuff that makes paused text disappear after fullscreen
	toggling (hostscreen render end function call results in an extra
	statusbar update)
	[5e82d68ba1b0]

	* src/includes/video.h, src/screen.c, src/video.c:
	keep emulation paused while toggling fullscreen:
	- when emulation is paused, screen needs to be redrawn after the
	toggle, add internal screen.c function for this
	- for redrawing TT screen, a function needs to be exported from
	video.c for screen.c
	[3bf843d5ae90]

2010-03-21  Thomas Huth

	* src/debug/debugui.c:
	Disable the risky system call by default.
	[2dbd35845115]

	* src/gui-sdl/dlgFileSelect.c, src/zip.c, tools/hmsa/hmsa.c:
	Free allocated memory in case of errors. Thanks to Christoph Fritz
	for the patch.
	[10aca286b32a]

	* src/printer.c:
	Make sure that Printer_ResetInternalBuffer is always called, also
	when pPrinterHandle is invalid
	[aa25ee217ceb]

2010-03-21  Laurent Sallafranque

	* src/dmaSnd.c, src/sound.c:
	applied David's patches.
	[db609c138814]

2010-03-21  Eero Tamminen

	* src/CMakeLists.txt, src/Makefile, src/falcon/hostscreen.c,
	src/falcon/hostscreen.h, src/includes/resolution.h,
	src/resolution.c, src/screen.c:
	Fix: limit max zoom size to largest video mode available to SDL:
	- move video mode search and selection functions to new resolution.c
	file
	- add Resolution_GetLimits() function for getting largest resolution
	from configuration which is clipped to largest SDL video mode
	- use int as args instead of Uint32 as that's what the SDL functions
	accept
	- change screen.c and hostscreen.c to use these new functions
	- add resolution.c to C/Makefile and document its functions
	[db1c0fd41108]

2010-03-20  Eero Tamminen

	* doc/release-notes.txt, doc/todo.txt:
	note in docs: options for how many lines to disasm & memdump
	[4ea11a28275f]

	* src/configuration.c, src/includes/configuration.h, src/screen.c:
	clip low/med rez borders according to max size, remove border size
	config settings (can be done now that Nicolas fixed video.c in
	revision 3e393cb7ebad)
	[6e41b2bbd122]

	* doc/compatibility.html:
	last Braindamage demo difference has disappeared
	[5d64a2028858]

	* src/falcon/hostscreen.c:
	remove hostscreen save&restore on fullscreen toggling, it doesn't
	work properly (when SDL/host screen is larger than Atari one,
	hostscreen was restoring it in different position (0,0) than where
	Videl will draw the Atari screen).
	[e829357ea79a]

	* src/falcon/hostscreen.c:
	don't use SDL_WM_ToggleFullScreen() if Atari screen size differs
	from SDL screen rename: sizeChanged -> sizeDiffers
	[051a9ab85188]

2010-03-20  Laurent Sallafranque

	* src/dmaSnd.c:
	add : 25, 12, and 6KH frequencies for IIR filter LMC1992 emulation
	should be complete now
	[4dbb8ef7b1e7]

2010-03-19  Laurent Sallafranque

	* src/dmaSnd.c:
	renamed all IIR functions to Dma_
	[650eef50dca5]

	* doc/authors.txt, src/dmaSnd.c:
	update and fix BASS / Treble code (again, thanks to David)
	[04cb09f32043]

2010-03-19  Nicolas Pomarede

	* src/video.c:
	Ensure left border is large enough to copy video bytes when display
	starts 2 or 8 bytes earlier
	[3e393cb7ebad]

2010-03-18  Laurent Sallafranque

	* src/dmaSnd.c, src/includes/dmaSnd.h, src/main.c:
	add: first try to implement LMC1992 bass / Treble. Mega thanks to
	david for his FIR code and his help.
	[e8ca39fd9666]

2010-03-18  Eero Tamminen

	* src/falcon/crossbar.c:
	fix portaudio crash (it was being re-initialized on every reboot and
	didn't like that)
	[0b6213fafb93]

2010-03-17  Eero Tamminen

	* src/falcon/hostscreen.c:
	fix Falcon screen size changes on fullscreen which don't cause video
	mode change (need to clear screen, especially in case new Atari
	screen size is smaller, otherwise parts of old Atari screen contents
	are left there.)
	[90364f0ccb43]

	* src/falcon/hostscreen.c:
	fix: modes returned by SDL_ListModes() are not sorted
	[1f3ad505fdc2]

2010-03-16  Nicolas Pomarede

	* configure:
	Add '--cross-compile-win32' to the configure script
	[812a579a7df5]

	* src/CMakeLists.txt:
	Set "windres" as a default rc compiler under windows
	[f8183de23ae4]

2010-03-16  Eero Tamminen

	* src/gui-sdl/dlgMain.c, src/gui-sdl/dlgScreen.c:
	use dialog names suggested by Thomas, "Doubled" -> "Zoomed"
	[1d0beb94f741]

	* readme.txt:
	update build instructions
	[24caa8e05f2d]

	* CMakeLists.txt:
	glob isn't used anymore, remove
	[1215f644921f]

2010-03-15  Eero Tamminen

	* src/configuration.c, src/options.c:
	set default/zoomed size according to 2x (ST-low + max borders)
	[098ef1c548ec]

2010-03-13  Eero Tamminen

	* python-ui/hatari-console.py:
	hatari-console sleep command
	[67bb4ba9ff1f]

	* src/control.c:
	fix compiler warning
	[40d829845d49]

2010-03-13  Nicolas Pomarede

	* cmake/Toolchain-mingw32.cmake:
	Add a toolchain file to cross compile the Windows version under
	another OS using mingw32 To use this toolchain, you should have a
	working mingw setup (with all required devel sources for sdl, png,
	...) Then run : cmake -DCMAKE_TOOLCHAIN_FILE=cmake/Toolchain-
	mingw32.cmake .
	[057aaadff2b1]

	* src/CMakeLists.txt:
	Add support for .rc ressouce files when compiling a Windows
	executable using cmake
	[f2056d29f15b]

2010-03-12  Eero Tamminen

	* tests/debugui/console.ini, tests/debugui/debugger.ini, tests/test-
	scripting.sh:
	add test script for debugger and console scripting features
	[277621041d3e]

	* python-ui/hatari-console.py, python-ui/release-notes.txt:
	hatari-console can be scripted.

	(moved also the code around so that now all functions are methods in
	some suitable class)
	[ee1b16f9aa30]

	* src/debug/breakcond.c:
	fix: segfault when using debugger "da" command without DSP being
	enabled
	[2d7d9a4a31a5]

	* src/debug/debugui.c:
	Error message at startup when exiting due to debug input file being
	not found.
	[6cd62826f8fb]

	* src/debug/debugui.c:
	fix: double free in debugger input file parsing
	[ff3f2ef09a8d]

	* src/configuration.c, src/includes/configuration.h, src/shortcut.c:
	MOUSEMODE -> MOUSEGRAB (more accurate name)
	[7e6b8db90464]

	* src/debug/debugui.c, src/file.c:
	fix: File_MakeValidPathName() could write past the string end.
	[14fe17ede6e1]

	* python-ui/hatari-console.py, python-ui/release-notes.txt:
	update Hatari UI release notes and hatari-console options.
	[94f4a1212c64]

	* doc/hatari.1, python-ui/hatari.py, python-ui/hatariui.py,
	src/options.c:
	add --saveconfig option for Hatari UI so that user doesn't need
	manually save/sync Hatari config for it.

	Also added configuration validation function to Hatari UI so that it
	can know early at its startup when to ask Hatari to do --saveconfig.
	Previously it could die to exeption somewhat later on where it
	wasn't (at least easily) catchable.

	If --saveconfig doesn't help, Hatari UI will still get exeption
	which tells what part of the configuration is out of sync between
	Hatari & UI.
	[46baf24808d4]

2010-03-11  Eero Tamminen

	* python-ui/config.py, python-ui/dialogs.py:
	improved UI button type & warning message
	[ebc41ec53b80]

	* python-ui/config.py, python-ui/debugui.py, python-ui/dialogs.py,
	python-ui/hatari.py, python-ui/hatariui.py, python-ui/uihelpers.py:
	fix for previous Hatari-UI zooming update, update Hatari UI sources
	copyright & email info
	[0863026d395b]

2010-03-10  Eero Tamminen

	* python-ui/TODO, python-ui/dialogs.py, python-ui/hatari.py:
	adapt Hatari-UI for bZoomLowRes changing to max window size options
	[32868e9249af]

	* doc/hatari.1, doc/manual.html, doc/release-notes.txt, doc/todo.txt,
	src/options.c:
	add options for aspect ratio correction and max window size + doc
	update
	[6fa083381fca]

	* src/falcon/hostscreen.c:
	fix: hostscreen resolution changing while in fullscreen
	[7251e7f708fb]

	* Makefile-default.cnf:
	Makefile.cnf template: make LIBS overridable, update comments
	[59626bc22808]

2010-03-10  Laurent Sallafranque

	* src/falcon/crossbar.c:
	fix 32 MHz timer
	[74aad0454f93]

	* src/debug/debugInfo.c:
	add: implemented Iphigeny into "info crossbar" code. Infos are
	easier to read.
	[483089def6ee]

2010-03-09  Nicolas Pomarede

	* Makefile-MinGW.cnf:
	Makes HOSTCC overridable by env variable
	[f1e336b35380]

	* Makefile-MinGW.cnf:
	When crosscompiling, HOSTCC must be 'gcc', not CC (else it will use
	mingw and will fail)
	[c784976559db]

2010-03-08  Laurent Sallafranque

	* src/dmaSnd.c, src/falcon/crossbar.c:
	fix: replace linear volume tables by logarythmics ones. Volume is
	now correctly emulated.
	[2bf8f18d7eb7]

2010-03-07  Laurent Sallafranque

	* src/dmaSnd.c:
	fix: remove compiler warning
	[9c97eaa78e25]

	* src/dmaSnd.c:
	add: LMC1992 volume emulation : left, right and master volumes are
	emulated now. Todo: the bass and treble emulation
	[944b4ac97377]

2010-03-06  Thomas Huth

	* python-ui/hatariui:
	Make python-ui wrapper relocatable
	[c0ced9cd7d58]

2010-03-06  Eero Tamminen

	* src/falcon/hostscreen.c:
	fix statusbar assert when running Alive Falcon demo on fullscreen
	[7bf314510939]

2010-03-05  Eero Tamminen

	* src/falcon/hostscreen.c:
	do aspect ratio & max window size scaling in hostscreen
	[d0a6ebcf9d36]

	* src/change.c, src/configuration.c, src/falcon/videl.c, src/gui-
	sdl/dlgMain.c, src/gui-sdl/dlgScreen.c,
	src/includes/configuration.h, src/includes/dialog.h, src/options.c,
	src/screen.c, src/video.c:
	split screen to separate monitor and window dialogs, replace zoom
	option with aspect ratio and max size options
	[b7002300be19]

	* src/includes/statusbar.h, src/statusbar.c:
	add statusbar function needed by new zooming code.
	[75793f762686]

	* src/falcon/hostscreen.c, src/falcon/hostscreen.h,
	src/falcon/videl.c, src/includes/video.h, src/screen.c, src/video.c:
	doing aspect correction based on Videl values not feasible (yet),
	revert.
	- instead do simple 2^ aspect correction in hostscreen
	- remove the old zooming that was ifdeffed out by previous comment
	[e4d73a152c2f]

2010-03-04  Eero Tamminen

	* src/falcon/hostscreen.c, src/falcon/hostscreen.h,
	src/falcon/videl.c, src/includes/video.h, src/screen.c, src/video.c:
	preliminary support for Falcon/TT Monitor aspect ratio correction,
	also
	- disable Falcon/TT zooming so that issues with aspect ratio can be
	found
	- do video mode change only when needed
	[87b9c628b6c2]

2010-03-04  Thomas Huth

	* src/uae-cpu/CMakeLists.txt:
	Fixed cross-compiling with CMake
	[1fcbc2dc96a5]

2010-03-04  Eero Tamminen

	* src/falcon/hostscreen.c:
	make sure that Falcon fullscreen toggling doesn't mess window size:
	- SDL_WM_ToggleFullScreen() should use requested WinSize, not the
	resulting one that's modified by scaling and whichever screen
	resolutions SDL had available as fullscreen
	- user might even change scaling settings while in fullscreen
	[048a8d8a136d]

	* python-ui/TODO, python-ui/dialogs.py, python-ui/hatari.py:
	Hatari UI: support --slowfdc, update CPU types, update TODO
	[ce4aef90bb02]

2010-03-02  Eero Tamminen

	* python-ui/hatari-console.py:
	add new command line options & debugger commands to hatari-console
	and update the help text.
	[566647b13866]

	* src/options.c:
	fix option error case for previous fix, improve comments (for
	--option<digit> case)
	[1044462d3587]

	* src/options.c:
	fix: segfault when using --joyX option without argument
	[dc6253fc79e5]

	* src/debug/debug_priv.h, src/debug/debugcpu.c, src/debug/debugdsp.c,
	src/debug/debugui.c:
	don't save disasm/memdump addresses to emulated state as they aren't
	part of that. change debugger state file extension from .break to
	.debug.
	[fac24f29b4b1]

	* src/configuration.c, src/debug/debugcpu.c, src/debug/debugdsp.c,
	src/debug/debugui.c, src/debug/evaluate.c,
	src/includes/configuration.h:
	Make debugger disasm and memdump lines configurable from Hatari
	config, move number base variable from Log section to new Debugger
	section (as it's only used by debugger).
	[ce0769a48e1f]

2010-03-01  Laurent Sallafranque

	* src/dmaSnd.c:
	fixed switch condition
	[d7b955eebd4d]

	* src/dmaSnd.c:
	Added some code for Microwire & LMC 1992 emulation.
	[f62c25f2259c]

2010-03-01  Eero Tamminen

	* src/debug/breakcond.c:
	fix: trimmed string needs separate var from the one that will be
	freed. It may also be useful to be able to remove or list
	breakpoints from DSP although it would be disabled (e.g. from the
	UI).
	[b3b48c24fb89]

	* src/debug/breakcond.c, src/debug/breakcond.h, src/debug/debugcpu.c,
	src/debug/debugdsp.c, src/debug/debugui.c, src/debug/debugui.h,
	src/memorySnapShot.c:
	breakpoints aren't part of emulated state, save them to separate
	file from memory snapshot
	[9df6a9492eff]

2010-02-28  Eero Tamminen

	* doc/hatari.1, doc/manual.html, doc/release-notes.txt, src/options.c:
	document "parse" command and "--parse" & --trace-file options
	[1c80553f257c]

	* doc/compatibility.html:
	link to right Protracker STE, add Amiga Demo 2 (has also 50kHz
	replay)
	[aaae80b005f5]

	* src/debug/debugui.c:
	fix Thomas' compile warnings: check system() & chdir() return values
	[c9608ebcd966]

2010-02-28  Nicolas Pomarede

	* Makefile-MinGW.cnf:
	BUILD_HOST should default to windows
	[291725574b78]

	* Makefile-MinGW.cnf, src/gui-win/Makefile:
	Add BUILD_HOST to allow to build the windows binary from windows or
	from linux
	[1937af63f511]

2010-02-28  Thomas Huth

	* src/CMakeLists.txt, tools/CMakeLists.txt, tools/hmsa/CMakeLists.txt:
	Build hmsa with CMake build system, too
	[9aa93eb03a75]

2010-02-28  Eero Tamminen

	* src/debug/debug_priv.h, src/debug/debugcpu.c, src/debug/debugdsp.c,
	src/debug/debugui.c:
	move readline match callback names to where function names are, add
	completion for registers
	[f0e6d62b4f0e]

2010-02-28  Thomas Huth

	* CMakeLists.txt, tools/CMakeLists.txt:
	Install shell script tools
	[52cb1e9b5f67]

	* src/CMakeLists.txt:
	Install hatari-icon.bmp and tos.img, too
	[5ada12e52cd2]

	* CMakeLists.txt, cmake/config-cmake.h:
	Make BIN2DATADIR configurable
	[2727597f95be]

	* cmake/config-cmake.h, config-default.h:
	Removed unused defines
	[074ece69c9dd]

	* Makefile-default.cnf:
	Link against libm in old Makefile build system, too. This is
	required for upcoming Fedora core 13, see bug #16851 for details.
	[2b4b8d88d702]

	* CMakeLists.txt, cmake/FindMath.cmake, src/CMakeLists.txt:
	Added Math library to CMake build system. This should fix bug
	#16851.
	[265723760fde]

2010-02-27  Thomas Huth

	* cmake/FindPortAudio.cmake:
	We need portaudio version 2, so check for a unique function of that
	version
	[188556c9d3b9]

2010-02-28  Eero Tamminen

	* tests/debugui/debugger.ini, tests/debugui/dsp-test.sym,
	tests/debugui/etos512.sym, tests/etos512.sym:
	add/move test files for debugger commands file parsing
	[0389f04be522]

	* src/debug/debugui.c:
	fix reading commands file: evaluate expressions, fix leak, skip
	empty & comment lines
	[e536598dc9df]

2010-02-27  Eero Tamminen

	* src/debug/debugui.c, src/debug/debugui.h, src/main.c, src/options.c:
	fix: debugger commands file needs to be read after CPU & DSP are
	initialized, otherwise breakpoints (and possibly some other
	commands) given from it won't work when the file is given as a
	command line option.
	[48909f343ec9]

	* src/debug/breakcond.c:
	conditional breakpoints: allow DSP breakpoints only if DSP enabled,
	fix symbol matching
	[09c8a67127f4]

	* tests/os-header.sym, tests/test-symbols.c:
	add os-header.sym symbols file and use that in debugger symbol
	handling tests (those values don't change like etos ones may and the
	file is smaller)
	[c956d8971d48]

	* src/debug/debugui.c, src/debug/debugui.h, src/options.c:
	option and command to parse debugger commands from a file
	[bc41eaec8c6a]

	* doc/compatibility.html:
	Alive demo issues were in use of frameskip, it works fine
	[9ca5cbeffd75]

2010-02-26  Eero Tamminen

	* src/debug/debugcpu.c, src/debug/debugdsp.c:
	continue dumping from previously given DSP memory space/address if
	none specified (+ add <> to DSP & CPU address ranges)
	[2844eca06783]

	* config-default.h, src/main.c:
	glob.h doesn't need to checked. add missing sys/times.h check, warn
	if it's used
	[d771fd1a63d9]

	* doc/release-notes.txt, src/main.c:
	Fix VBLs/s counting to work also when --run-vbls isn't used
	[725ecd4cbe42]

2010-02-26  Laurent Sallafranque

	* doc/compatibility.html:
	add : bound 42 (MJJ Prod) to compatibility list
	[d3ff24644059]

2010-02-25  Laurent Sallafranque

	* doc/compatibility.html:
	added : Ishar3 (CD version)
	[9a0f61053f6b]

	* src/falcon/crossbar.c:
	fix: clear DAC (L+R) buffers when DMA play sound stops. Else, the
	buffers loops forever.
	[37aa7a6a572b]

	* src/falcon/dsp_cpu.c:
	optimisation of MAC, MACR, MPY and MPYR
	[1d6526e3d2f8]

2010-02-25  Eero Tamminen

	* doc/manual.html, doc/release-notes.txt:
	mention "cd" & "exec" commands in docs
	[cdca9b046255]

	* src/debug/debugui.c:
	fix usage output for debug commands with no short name.
	[6b2adc395285]

	* src/debug/debugui.c:
	add "exec" debugger command
	[0ef75733965b]

	* src/debug/symbols.c:
	output symbols list in the same format as they're input
	[96820ec60642]

	* src/debug/debugui.c:
	add "cd" debugger command
	[ff4187f89ac2]

	* src/debug/debugdsp.c:
	fix DSP symbols in disasm output + minor DSP debugger output
	improvements
	[945d40e7eaef]

	* src/gemdos.c:
	fix gemdos.c compiler warning
	[8c1e08f1ec6a]

2010-02-25  Laurent Sallafranque

	* src/falcon/dsp.c, src/falcon/dsp.h:
	add a define for CPU/DSP ratio
	[e4e5fa7e003e]

	* src/falcon/dsp.c:
	fix: changed DSP cycles tuning to be compatible with Nicolas's last
	patch
	[8ea0648ccf91]

2010-02-24  Eero Tamminen

	* doc/compatibility.html, doc/emutos.txt:
	add: 20 years Atari STE megademo
	[f7f27561eb16]

2010-02-23  Nicolas Pomarede

	* src/includes/cycles.h, src/uae-cpu/newcpu.c:
	When DSP is enabled, use CYCLES_COUNTER_CPU to get the total number
	of cycles used by the CPU. We need to compute all cycles spent in
	the CPU, including the time needed to process exceptions, before
	calling DSP_Run (else the DSP won't run for the correct number of
	cycles)
	[3519b02affa0]

2010-02-21  Eero Tamminen

	* doc/compatibility.html:
	risk works ok
	[4a0c21b49fb4]

	* doc/compatibility.html:
	correct pouet.net id
	[f0b688097d7a]

	* config-default.h:
	add HAVE_MALLOC_H & HAVE_POSIX_MEMALIGN to config-default.h (for
	Glibc)
	[317b150f171c]

	* doc/compatibility.html:
	add several Falcon games/demos
	[4e793ee2901f]

	* doc/todo.txt:
	remove configure.ac todo
	[4aab39a4be09]

2010-02-21  Thomas Huth

	* readme.txt:
	Rewrote the instructions for compiling with CMake
	[e6588e9ef7a1]

	* .hgignore, Makefile.cnf.in, acsite.m4, configure.ac:
	Removed the autoconf files since nobody wants to maintain these
	files anymore. For configuring the build process, you can now use
	"cmake" instead.
	[2d05fee42afb]

	* .hgtags:
	Added tag before_removing_autoconf_files for changeset 50b9dfdcc014
	[b20eb20251fa]

2010-02-21  Nicolas Pomarede

	* CMakeLists.txt:
	For cmake, ensure readline detection is correctly linked with
	libreadline
	[50b9dfdcc014] [before_removing_autoconf_files]

2010-02-21  Eero Tamminen

	* doc/compatibility.html:
	add Team & Epi-lepsie
	[db449c77e9b2]

2010-02-20  Eero Tamminen

	* doc/compatibility.html:
	add Aniplayer to compatibility list (and move AFM to sorted
	position)
	[1f0fb9eeb455]

2010-02-20  Laurent Sallafranque

	* src/falcon/crossbar.c:
	finished to optimize crossbar code. Sound problem is clearly in
	crossbar <---> DSP transfers. I'll check this.
	[b277f94e5575]

2010-02-19  Laurent Sallafranque

	* src/falcon/crossbar.c:
	add: sound volume for both adc and dac. Remove double variables for
	readDacBuffer. Sound seems better under Whip, but not under AFM
	[efcc3ab3f9e8]

	* src/falcon/crossbar.c:
	add: first preview of sound volume control.
	[8cd6bc72d014]

2010-02-18  Eero Tamminen

	* src/falcon/crossbar.c:
	silence crossbar.c compiler warning (it doesn't know
	codecInputSource max value is 3)
	[aad85ef530cd]

2010-02-18  Laurent Sallafranque

	* src/falcon/crossbar.c:
	remove some double variable. Rewrite of 25 Mhz and 32 Mhz
	frequencies. Optimize microphone code. Code cleaning
	[65d8be280806]

2010-02-17  Eero Tamminen

	* src/debug/debugInfo.c, src/debug/debugInfo.h,
	src/debug/debug_priv.h, src/debug/debugcpu.c, src/debug/debugdsp.c,
	src/debug/debugui.c:
	reset disasm address to PC whenever re-entering the debugger.
	[6e3ff0505fb7]

2010-02-16  Eero Tamminen

	* doc/release-notes.txt, doc/todo.txt:
	docs: symbols are shown in DSP disassembly too
	[c789f016bd92]

	* src/debug/debugdsp.c, src/falcon/dsp.c, src/falcon/dsp.h:
	handle DSP memdump similarly to disasm.
	[2897107093d7]

	* src/debug/debugdsp.c:
	support symbols in DSP "disasm" command output
	[8f436371bfc1]

	* src/debug/symbols.c:
	fix comment
	[b03453b54c3d]

	* src/debug/debugdsp.c:
	use stderr for remaining debugdsp.c error messages
	[5de119d8f389]

	* doc/manual.html, doc/release-notes.txt:
	trivial doc improvement
	[92a43491524a]

	* doc/todo.txt:
	breaking out of loops can now be done with "b pc > pc :once"
	[78e776b112a4]

	* src/debug/breakcond.c, src/debug/debugcpu.c:
	fix typos in help texts
	[2aef8d1f60ae]

	* doc/manual.html:
	major update to manual debugger section to get it upto date
	[197e2d50ad48]

2010-02-15  Eero Tamminen

	* tests/TODO:
	remove done tests TODO
	[a339ba45c935]

	* doc/release-notes.txt:
	update release notes for debugger stuff
	[5072b59b54eb]

	* src/debug/breakcond.c:
	fix issue and improve output revealed by updated breakcond tests
	[b1c44c46f849]

	* tests/test-breakcond.c:
	add tests for new conditional breakcond features
	[1855b5e80666]

	* src/debug/breakcond.c, src/debug/breakcond.h, tests/test-
	breakcond.c:
	make breakcond tests to use the public BreakCond_Command() API, so
	that extra functions don't need to be exported just for tests.
	[5a6462ef9c63]

	* tests/Makefile, tests/test-breakcond.c, tests/test-dummies.c, tests
	/test-evaluate.c:
	update test code, split common "dummy" stuff to test-dummies.c
	[91954e86415c]

	* src/debug/breakcond.c, src/debug/debugui.c, src/debug/evaluate.c,
	src/debug/evaluate.h:
	interpret in "evaluate" CPU or DSP regs&symbols where appropriate,
	not both CPU and DSP.
	[954f37932500]

2010-02-14  Nicolas Pomarede

	* src/cycles.c, src/includes/cycles.h, src/memorySnapShot.c:
	Add nCyclesCounter[] to the memory snapshot. Without this, some
	snapshots would cause an error in Cycles_GetCounter() when restored
	and some possible crashes.
	[ffb8bd5c49c3]

2010-02-14  Eero Tamminen

	* src/debug/breakcond.c, src/debug/debugcpu.c, src/debug/debugdsp.c,
	src/debug/debugui.c, src/debug/symbols.c, src/debug/symbols.h:
	update and improve several debugger help texts.
	[986bac9e218a]

	* doc/todo.txt, src/debug/breakcond.c, src/debug/breakcond.h,
	src/debug/debugcpu.c, src/debug/debugdsp.c:
	Make address & dspaddress commands wrappers for conditional
	breakpoints. This way there's only one list of breakpoints for user
	to manage, options for them are the same and code doesn't need to be
	duplicated.
	[4178c971bf22]

	* src/includes/str.h, src/str.c:
	Str_EndsWith() not needed anymore with breakcond.c update, remove.
	[a21a0f598310]

	* src/debug/breakcond.c:
	conditional breakpoint options separated with ':', support for skip
	option (breakpoint features are now on par with address
	breakpoints).
	[5b2bb41f6142]

	* src/debug/debugcpu.c:
	simplify "disasm" command implementation (remove also breakpoint
	showing, that won't be possible once address breakpoints are
	implemented with conditional ones.)
	[8f4fedbd8dff]

	* doc/release-notes.txt, doc/todo.txt:
	update todo & release-notes to latest debugger improvements
	[b859f30276af]

	* src/debug/debugui.c:
	remove "value" command and more number base setting to "setopt"
	command
	[139c5bae1af8]

	* src/debug/debugui.c:
	TAB-completion for "evaluate" command and quoted expressions. Update
	help.
	[8e18f70b46c5]

	* src/debug/debugui.c, src/debug/log.c, src/debug/log.h:
	disable normal GUI alerts while on debugger/console
	[7d2d89129fd3]

2010-02-13  Eero Tamminen

	* src/debug/debugui.c:
	TAB-complete last "evaluate" result for $
	[d86ea4664eb6]

	* src/debug/breakcond.c, src/debug/debugui.c:
	allow quoted expression evaluation for everything in debugger
	[6f7e04f791c0]

	* src/debug/evaluate.c:
	support register and symbol values in evaluate command
	[123f11b2f33c]

	* src/falcon/dsp.c:
	don't return DSP register addresses unless DSP is running
	[c4075863947d]

2010-02-13  Laurent Sallafranque

	* doc/compatibility.html, src/ioMemTabFalcon.c:
	compatibility list update
	[de9af48c14d1]

2010-02-12  Eero Tamminen

	* src/debug/debugInfo.c:
	add register address disasm/memdump support to lock command
	[2072bf3b4667]

2010-02-12  Laurent Sallafranque

	* src/falcon/crossbar.c, src/falcon/crossbar.h, src/ioMemTabFalcon.c:
	crossbar code cleaning
	[53bbc968eee2]

2010-02-11  Laurent Sallafranque

	* src/falcon/crossbar.c:
	add: ADC->DAC direct connexion. Whip and Audio Fun Machine are
	playing sound now. $FF8937 and $FF8938 are correctly taken into
	account.
	[eb80a1b35d16]

2010-02-11  Eero Tamminen

	* doc/release-notes.txt, src/debug/debugInfo.c, src/debug/debugInfo.h,
	src/debug/debugui.c:
	make "lock" separate command instead of "info" option, add
	dspmemdump handling for the lock command (additional parameter
	require more extensive changes, but will be useful also for register
	locking)
	[ae3fc0f4ac6f]

2010-02-10  Eero Tamminen

	* src/debug/breakcond.c:
	evaluate quoted expressions in conditional breakpoints
	[eec2aad8e73e]

	* src/debug/breakcond.c:
	change current value only for non-tracked values
	[41c1b3e73fed]

2010-02-10  Laurent Sallafranque

	* src/falcon/crossbar.c:
	add: crossbar ASCIIart schematic.
	[f262e337c7b7]

2010-02-09  Eero Tamminen

	* src/debug/debugcpu.c, src/debug/debugdsp.c, src/debug/debugui.c:
	add subheadings to debugger help
	[890976a0458b]

	* src/debug/debugInfo.c, src/debug/debugdsp.c, src/debug/debugdsp.h:
	support DSP disasm/regs for debugger info/lock command, fix info
	help
	[a938235faf79]

	* doc/release-notes.txt, src/debug/debugInfo.c, src/debug/debugInfo.h,
	src/debug/debugcpu.c, src/debug/debugcpu.h, src/debug/debugui.c:
	possibility to "lock" info command to be output when entering
	debugger. info commands for disasm, memdump & registers.
	[91184cbe5fbf]

2010-02-08  Eero Tamminen

	* src/debug/debugcpu.c:
	simplify DebugCpu_MemDump() code
	[4519881bce20]

	* doc/release-notes.txt, src/debug/debugui.c:
	add statesave & stateload debugger commands, update release notes
	[709c4eddbf60]

	* src/debug/breakcond.c:
	if comparing identical expressions, evaluate right side when
	condition entered (change tracking is done only for the inequality
	condition)
	[d0d88fc2990b]

2010-02-07  Nicolas Pomarede

	* doc/compatibility.html, doc/release-notes.txt:
	Update docs regarding video counter emulation on STE
	[074e7692eb0a]

	* src/video.c:
	Better support for modifying $ff8205/07/09 while display is on (fix
	EPSS demo by Unit 17)
	[5b413e37d514]

2010-02-06  Nicolas Pomarede

	* src/video.c:
	In Video_CalculateAddress, take STE's LineWidth into account On STE,
	the content of $ff820f is added to the current video address as soon
	as display enters the right border (cycle 376 for a normal line). We
	should not wait for Video_EndHBL (cycle 512) to add $ff820f when
	reading $ff8205/07/09 (fix the game Utopos)
	[0b5d2ef08b6f]

2010-02-06  Eero Tamminen

	* tests/TODO:
	add tests TODO
	[7f06f219864c]

	* tests/test-symbols.c:
	update to latest symbols changes
	[ab29e3b5fa9f]

	* src/debug/debugui.c:
	add symbol name completion and symbol address showing to value
	command
	[dc3ca2bf4478]

	* src/debug/debugui.c:
	add conditional breakpoint symbol completion + update address
	breakpoint completion (address breakpoints should match only code
	addresses)
	[e3ea0894fc9f]

	* src/debug/breakcond.c, src/debug/breakcond.h:
	add symbols support to conditional breakpoints
	[2aac4498dc3d]

	* src/debug/debugcpu.c, src/debug/debugdsp.c, src/debug/symbols.c,
	src/debug/symbols.h:
	finish supporting separate text/code and data/bss symbols matching
	[b4a6f6e27269]

2010-02-05  Eero Tamminen

	* src/debug/breakcond.c:
	better conditional break message, have "once" bp removal code in one
	place
	[13ced9619b75]

	* src/debug/symbols.c, src/debug/symbols.h:
	show symbol type on listings and make symbols type a bitmask (in
	preparation for separate TEXT and DATA symbol access)
	[6acfa9079697]

	* src/debug/breakcond.c, src/debug/breakcond.h:
	test needs to give breakcond.c ro strings, make parse function args
	const
	[9038726e3c34]

	* tests/test-breakcond.c:
	update test-breakcond.c
	[4ee566abf67f]

2010-02-03  Eero Tamminen

	* src/debug/breakcond.c, src/debug/breakcond.h, src/debug/debugcpu.c,
	src/debug/debugdsp.c:
	move breakpoint command description to breakcond.c
	[e38d8fda585c]

2010-02-02  Laurent Sallafranque

	* src/debug/debugInfo.c:
	add: scroll register added to VIDEL info (debug mode)
	[ffbd105e8c15]

2010-02-02  Eero Tamminen

	* src/file.c:
	when splitting path, remove separator from end of path (Windows-only
	issue, patch courtesy of Konador, Cyprian)
	[ed206c749ea7]

	* src/gui-sdl/dlgFileSelect.c:
	use paths.c utility function for getting home dir (has better
	fallbacks)
	[5d2ee6cfc13d]

	* src/paths.c:
	support Windows homedir path variable
	[bd60753ae67d]

	* src/createBlankImage.c:
	better error message when floppy image creation fails
	[bcbeac5da8e3]

2010-02-01  Eero Tamminen

	* src/debug/breakcond.c:
	correct printf message
	[4b6524794b14]

2010-01-31  Eero Tamminen

	* doc/release-notes.txt, src/debug/breakcond.c, src/debug/breakcond.h,
	src/debug/debugcpu.c, src/debug/debugdsp.c:
	memory change tracking suport, once & trace keywords, hit counting
	to conditional breakpoints
	[1a659fed336b]

	* src/includes/str.h, src/str.c:
	Add Str_EndsWith() function for new debugger feature.
	[fb419c815edd]

2010-01-31  Laurent Sallafranque

	* src/falcon/crossbar.c:
	add: correct crossbar intial values (after boot). This let me remove
	the temporary "bad hack" I wrote in function
	"Crossbar_FrameCountLow_WriteByte" to let "Eko system" demo work. It
	may fix some other programs, I haven't tested deeply.

	fix: crossbar sound buffer size to reduce the delay when sound is
	playing.
	[48d329bc3579]

2010-01-29  Eero Tamminen

	* doc/manual.html:
	HTML validator and readability fixes ("&minus;" -> "-", "&quot;" ->
	'"')
	[dc14ad141f96]

	* doc/compatibility.html:
	fix HTML-validator issues, update several Falcon compat items (and
	change "dummy/emu" -> "dummy emu" in tables so that it can wrap)
	[0dc511796685]

2010-01-29  Laurent Sallafranque

	* doc/compatibility.html:
	update compatibility list
	[edd98f6f757f]

2010-01-26  Thomas Huth

	* CMakeLists.txt, cmake/config-cmake.h:
	Check for posix_memalign() and memalign() functions
	[dca761fc16ac]

	* Info-Hatari.plist, src/CMakeLists.txt, src/gui-osx/Info-
	Hatari.plist:
	Moved Info-Hatari.plist file to src/gui-osx/ folder since this file
	is for Mac OS X only.
	[2709cf75ed8e]

	* Hatari.xcodeproj/project.pbxproj:
	Removed old Xcode project. Use the new CMake build system instead to
	generate project files for Xcode.
	[2e1df3a8df6c]

	* .hgtags:
	Added tag before_removing_xcode_project for changeset 5f5002de02bb
	[b82d2b234f62]

2010-01-26  Eero Tamminen

	* src/gemdos.c:
	replace magic GEMDOS values with appropriate defines
	[5f5002de02bb] [before_removing_xcode_project]

	* src/gemdos.c:
	set FileHandles[].szActualName in Fcreate() too when file open
	succeeds. (and in Fopen() set it only _if_ file open succeeds)
	[ad0b98dad6f0]

	* src/gemdos.c:
	gemdos improvements: check dest size, use file.c util function
	[f387bce13a46]

	* src/gemdos.c:
	fix case: Fcreate() given dir\filename of which neither exists. (the
	new code created file with shortened name of "dir\filename")
	[35b58807ba76]

	* doc/release-notes.txt, src/gemdos.c:
	Fixed and much improved host file name support for GEMDOS drive
	emulation:
	- convert host filename chars that are invalid in TOS to valid ones
	('@') (main thing is that extra dots don't break TOS fileselector
	etc).
	- cut file basename and extension separately to 8+3 size (gives more
	readable TOS filenames).
	- support long host directory names in addition to filenames
	(earlier they might be visible in TOS, but files in them weren't).
	- first try matching exact (non-casesensitive) name first, only if
	that fails, use a pattern for long names (fixes renaming name.prg
	to name.pr).
	- get rid of glob() and use opendir()/readdir()/closedir() and TOS
	pattern matching instead (unlike TOS, glob() interprets [] as
	ranges).
	[4a58031dd34c]

	* doc/manual.html:
	minor manual improvements (mainly language)
	[707323a092dd]

	* doc/compatibility.html:
	tron2001 is from ICE
	[df03e216c986]

	* src/ide.c:
	ide.c: assert on alloc errors. free everything on uninit. I used
	asserts as the earlier code was incorrect: if
	(!opaque_ide_if || !hd_table[0] || !hd_table[1]) {
	perror("Ide_Init"); (errno is undefined after a succesful library
	call i.e. check + perror() would need to be separately for each
	malloc.)
	[2603bc3ea79f]

	* src/debug/debugcpu.c:
	show symbols in disasm trace when: nCpuActiveBPs || nCpuActiveCBs ||
	nCpuSteps
	[11500183bf54]

	* doc/release-notes.txt, src/createBlankImage.c, src/gui-
	sdl/dlgNewDisk.c:
	add support for creating blank HD & ED floppy images
	[7cf3e651c547]

	* src/gui-sdl/dlgMain.c:
	fix Hatari GUI reset button active area width
	[fcb2e17e9175]

2010-01-25  Laurent Sallafranque

	* doc/compatibility.html:
	update compatibility list : Wotanoid is now working
	[f16c13621f0d]

	* src/gemdos.c, src/ioMemTabFalcon.c:
	fix: gemdos Fread accept size > $7fffffff with Tos > 4.0. fix:
	iomemTabFalcon address $FF9206 Wotanoid game is now working
	[6bfd3046f74d]

2010-01-25  Eero Tamminen

	* doc/todo.txt:
	add myself todo about configure.ac update or removal before next
	release.
	[46d58a22104b]

2010-01-24  Thomas Huth

	* CMakeLists.txt, cmake/DistClean.cmake:
	Added 'distclean' target
	[312e81e718bb]

2010-01-24  Eero Tamminen

	* doc/release-notes.txt, doc/todo.txt:
	Note new debugger features, list possible debugger TODOs (Monst
	features)
	[5ea6ffb477d1]

	* src/debug/debugcpu.c:
	Counted CPU breakpoint support. Show symbols & breakpoints with CPU
	disasm trace (only if there are CPU breakpoints)
	[051e73aca8d8]

	* doc/todo.txt, src/floppy.c, src/gui-sdl/dlgFloppy.c:
	Give error dialog when user tries to insert same floppy image to
	multiple drives. GUI code changes required for handling error from
	name setting correctly (easiest was just removing the unused return
	value).
	[057572bb031f]

	* src/ide.c:
	IDE sector read/write error handling
	[2e629f22c22b]

2010-01-23  Thomas Huth

	* src/CMakeLists.txt:
	Added libraries SDLmain and ws2_32 for compiling on Windows
	[eb729b557f53]

	* configure:
	Added '--disable-osx-bundle' parameter
	[6e085d951d66]

	* src/CMakeLists.txt, src/gui-osx/CMakeLists.txt:
	OS X GUI classes must not be built as library, but linked directly
	into the executable. Some classes are referenced only from the .nib
	file and thus discarded when linked into a library first.
	[47e1795527bf]

	* CMakeLists.txt, src/CMakeLists.txt:
	Made the OS X bundling optional
	[2c585943af19]

	* CMakeLists.txt:
	Only use libreadline if the completion functions are available. This
	fixes the problems with older versions of editline on Mac OS X
	[614a54d1cd84]

	* src/gui-osx/CMakeLists.txt:
	Make sure that CMake does not use C++ compiler for Objective-C
	files.
	[ed7f5f178540]

	* CMakeLists.txt, src/CMakeLists.txt, src/gui-osx/CMakeLists.txt, src
	/gui-osx/SDLMain.m:
	The CMake build system can now also create a working Xcode project.
	[857657c8fd05]

	* src/gui-osx/Shared.h, src/gui-osx/Shared.m:
	Silenced some compiler warnings
	[024f9c788433]

	* src/gui-osx/PrefsController.m:
	Made OS X GUI compilable again
	[5fa35ca71eff]

	* src/debug/symbols.c:
	Fixed compiler warning about unitialized variable
	[21cfc83f14ab]

	* Hatari.xcodeproj/project.pbxproj:
	Updated old Xcode project with new files.
	[42dd9ca0d40c]

2010-01-22  Thomas Huth

	* src/uae-cpu/CMakeLists.txt:
	Do not assume that executable is in current dir, use
	get_target_property instead. This helps a little bit with the build
	process on Xcode...
	[ebc4d432fc2e]

2010-01-21  Eero Tamminen

	* src/xbios.c:
	fix previous xbios.c ARRAYSIZE commit
	[eefe4b5c73a5]

2010-01-20  Eero Tamminen

	* src/gemdos.c:
	Make GEMDOS multipartition subdir name check stricter. isalpha() is
	locale aware, so check for A-Z explicitly.
	[5cf051595b42]

	* src/floppy.c, src/gemdos.c, src/includes/gemdos.h, src/stMemory.c:
	name driver number variable as such instead of calling it hd letter.
	[d438fe62b105]

	* src/gemdos.c:
	2 missing gemdos call names to trace table
	[1de07126a354]

	* src/includes/rs232.h, src/rs232.c, src/xbios.c:
	use SDL types for rs232 stuff too.
	[754d0d4336c5]

	* src/rs232.c:
	both set functions should take FILE*, configured device file open
	should give warning, change direct printf warnings to use log
	functions so that they they can be controlled.
	[3716234546c4]

	* src/change.c, src/falcon/dsp.c, src/hdc.c, src/includes/hdc.h,
	src/main.c:
	move HDC and DSP config values checking from main to respective Init
	functions like with the rest of the Init functions.
	[ae2c8925403d]

	* src/debug/debugInfo.c:
	validate sysbase against TosAddress too
	[6f0550c3e7c9]

2010-01-20  Laurent Sallafranque

	* src/falcon/dsp_cpu.c:
	clean: remove debug fprintf
	[d000a5f56edf]

	* src/falcon/dsp_cpu.c:
	fix: 2nd vectored instruction test for a JSR must be done only when
	we're on the second fetched instruction. (if the first instruction
	was a jmp, no need to test if the second one is a JSR)
	[71fdd94ba633]

	* doc/todo.txt, src/falcon/dsp_core.c, src/falcon/dsp_core.h,
	src/falcon/dsp_cpu.c:
	fix: rewrite of DSP interrupts code. Interrupts are now "fetched"
	correctly. fix: stack interrupt is now raised with movec instruction
	too.
	[13c5e580ea46]

2010-01-20  Eero Tamminen

	* doc/manual.html, doc/release-notes.txt:
	Major updates to manual hard disk sections. Update manual and
	release notes to latest Hatari changes.
	[9dcfe732e857]

2010-01-18  Thomas Huth

	* tests/buserror/buserr_b.prg, tests/buserror/buserr_b.s,
	tests/buserror/buserr_w.prg, tests/buserror/buserr_w.s,
	tests/buserror/readme.txt, tests/buserror/results/fal_c_b.txt,
	tests/buserror/results/fal_c_w.txt,
	tests/buserror/results/fal_n_b.txt,
	tests/buserror/results/fal_n_w.txt, tests/buserror/results/st_b.txt,
	tests/buserror/results/st_w.txt, tests/buserror/results/ste_b.txt,
	tests/buserror/results/ste_w.txt, tests/buserror/results/tt_b.txt,
	tests/buserror/results/tt_w.txt:
	Added programs for testing the bus errors in the IO memory
	[b50b0dac2306]

2010-01-17  Eero Tamminen

	* doc/hatari.1, doc/manual.html:
	doc: add info on debugger symbols command; --ide to --ide-master &
	--ide-slave
	[e60bf40e5ac6]

	* src/debug/debugcpu.c:
	show symbol names in the CPU disassembly
	[db4504b80eb3]

	* src/debug/debugdsp.c:
	list symbols for dsp breakpoints, not CPU
	[51d1c5002cd5]

	* src/gui-sdl/dlgAbout.c, src/gui-sdl/dlgAlert.c, src/gui-
	sdl/dlgDevice.c, src/gui-sdl/dlgFileSelect.c, src/gui-
	sdl/dlgJoystick.c, src/gui-sdl/dlgNewDisk.c, src/gui-sdl/dlgRom.c,
	src/gui-sdl/dlgSound.c, src/gui-sdl/dlgSystem.c, src/gui-
	sdl/sdlgui.c:
	convert rest of SDL-GUI function comments to format needed by Hatari
	API documentation
	[d1bef2c23342]

	* src/debug/debugcpu.c, src/debug/debugcpu.h, src/debug/debugdsp.c,
	src/debug/debugui.c, src/debug/symbols.c, src/debug/symbols.h:
	improve & generalize symbols/address support to work with DSP too:
	- move CPU address & symbol matching functionality to symbols.c,
	generalize it and add minimal wrappers also for DSP
	  - this allowed hiding implementation details to symbols.c and keep
	changes to already existing DSP and CPU debug code minimal
	- add support for loading DSP symbols and TAB-completing them
	- add symbol name showing to breaked, listed and deleted breakpoints,
	both for DSP and CPU
	[044bd9c612bb]

2010-01-17  Thomas Huth

	* CMakeLists.txt:
	check_function_exists is optional, so let's include the
	corresponding module.
	[d85726352bbc]

	* CMakeLists.txt, python-ui/CMakeLists.txt:
	Install python UI with CMake, too
	[9c90712b2ac3]

	* CMakeLists.txt:
	Include module CheckIncludeFiles to make sure that
	check_include_files is always available
	[486a7fe708c3]

2010-01-16  Thomas Huth

	* cmake/FindReadline.cmake:
	Added missing INCLUDE(FindPackageHandleStandardArgs)
	[61e66376af6e]

	* src/debug/CMakeLists.txt:
	Added new file symbols.c to CMakeLists
	[6e0658f20a21]

	* CMakeLists.txt, cmake/FindPortAudio.cmake, cmake/FindReadline.cmake,
	configure, src/CMakeLists.txt, src/debug/CMakeLists.txt,
	src/falcon/CMakeLists.txt:
	CMake build system should now also work if one of the optional
	libraries has not been found.
	[28f5378b45b7]

2010-01-16  Eero Tamminen

	* src/debug/debugInfo.c:
	allow leaving basepage address out, default then to current process
	address
	[9b128d4dbf32]

	* src/debug/debugInfo.c:
	add "info" subcommands "osheader" and "basepage" + arg handling for
	last one
	[df1f3440eae7]

2010-01-15  Eero Tamminen

	* doc/compatibility.html:
	compat list: Aura's illusion and Tron2001 work.
	[1c07e5fc2b35]

2010-01-14  Eero Tamminen

	* src/debug/debugInfo.c, src/debug/debugInfo.h, src/debug/debugui.c:
	bind debug info stuff to debugger.
	[5f17219fb4c0]

2010-01-13  Laurent Sallafranque

	* src/ioMemTabFalcon.c:
	fix: added address $FF800A as voidRead and voidWrite. Illusion Demo
	(Aura) is now working.
	[a512d1ef2d7e]

2010-01-12  Laurent Sallafranque

	* src/debug/debugInfo.c, src/debug/debugInfo.h:
	add: new debugInfo function (I forgot it in my upload)
	[7fb18e8814e5]

	* src/debug/CMakeLists.txt, src/debug/Makefile, src/falcon/crossbar.c,
	src/falcon/crossbar.h, src/falcon/videl.c, src/falcon/videl.h:
	add: debugInfo to get informations of the atari components. (First
	components added : Videl and Crossbar)
	[eb6065eb8a68]

2010-01-12  Eero Tamminen

	* src/debug/Makefile, src/debug/debugcpu.c, src/debug/debugcpu.h,
	src/debug/debugui.c, src/debug/symbols.c, src/debug/symbols.h,
	tests/Makefile, tests/etos512.sym, tests/test-symbols.c, tools/ahcc-
	symbols-convert.sh:
	Hatari debugger symbol/address handling; parsing, sorting, matching,
	TAB completion support, test code/data etc. Initial version.
	[307730a3cf2d]

	* src/file.c:
	remove all slashes from filename end, not just one
	[1a54a53f7fc6]

	* src/gemdos.c:
	fix: gemdos call tracing crash when program does MiNT gemdos calls
	on TOS
	[d6b5961b20f6]

2010-01-11  Laurent Sallafranque

	* src/falcon/crossbar.c, src/falcon/crossbar.h, src/falcon/videl.c,
	src/falcon/videl.h:
	add: info functions for Videl and Crossbar components (to be used in
	debugger mode)
	[42461614fd89]

2010-01-10  Nicolas Pomarede

	* src/video.c:
	In Video_CalculateAddress, take HWScrollPrefetch into account When
	$ff8265 is used to scroll, shifter starts reading memory 16 pixels
	earlier. (fix EPSS demo by Unit 17)
	[cd8bc4c67033]

2010-01-10  Eero Tamminen

	* src/str.c:
	improve str.c comment
	[f9cb14192c0c]

	* src/debug/evaluate.h:
	correct comment/define name
	[e85c769b7516]

	* src/debug/debugui.c:
	debugger help: handle command short version missing or empty.
	[1ca8b28fe054]

	* src/debug/debugcpu.c, src/debug/debugdsp.c:
	Show hex values as hex (%x -> 0x%x)
	[a4c67b95fb2f]

	* src/gemdos.c:
	fix fsfirst_match() end of string matching with '*' (it should match
	also zero chars).
	[84b8989f28fb]

	* src/gemdos.c:
	simplify fsfirst_dirmask()
	[f274eb600602]

2010-01-10  Thomas Huth

	* .hgignore, configure:
	Added configure wrapper script for the CMake build system
	[24a1ac46674e]

2010-01-10  Nicolas Pomarede

	* src/video.c:
	In Video_CalculateAddress, take bSteBorderFlag into account (+16
	pixels in left border on STE) (fix Intro (spec512 pictures) and
	Direct Color Zoomer in Atari STe 20 year megademo)
	[c269e5c8852d]

2010-01-09  Thomas Huth

	* CMakeLists.txt, cmake/config-cmake.h, src/debug/CMakeLists.txt,
	src/falcon/CMakeLists.txt:
	Added conditional build features to CMake build system
	[b212d9045d40]

	* src/gui-sdl/CMakeLists.txt, src/uae-cpu/CMakeLists.txt:
	Fine tuning of compiler warning flags
	[98eb5d35845d]

	* cmake/FindReadline.cmake:
	Improved cmake check for libreadline
	[84b57b79fcbc]

	* doc/authors.txt:
	Nicolas is now admin, too
	[22cd2947a1a2]

2010-01-09  Eero Tamminen

	* tests/Makefile:
	rm built tests on clean
	[b61880a70217]

2010-01-07  Eero Tamminen

	* src/gemdos.c:
	add appropriate consts to string pointers, rename match() ->
	fsfirst_match()
	[cfc0cbcbbf33]

	* src/falcon/dsp_disasm.c:
	workaround compiler warning (sprintf("") -> *str=0)
	[ca56d09f84cd]

2010-01-06  Thomas Huth

	* CMakeLists.txt:
	Set default build type to 'Release' and add more CFLAGS
	[fb341d4e9359]

	* src/uae-cpu/gencpu.c:
	Changed 'char *' to 'const char *' to avoid compiler warnings when
	this file is being compiled with the -Wall flag.
	[ca0ae9af2791]

2010-01-05  Laurent Sallafranque

	* src/falcon/hostscreen.c:
	fix: mouse pointer position is now correctly initialized. Thanks to
	thomas for the fix.
	[3f7bb012e3a0]

2010-01-04  Thomas Huth

	* CMakeLists.txt, cmake/FindPortAudio.cmake, cmake/config-cmake.h,
	src/CMakeLists.txt, src/falcon/microphone.c:
	Added PortAudio test to cmake build system
	[a6f92ea876f6]

2010-01-01  Thomas Huth

	* CMakeLists.txt, doc/CMakeLists.txt, src/CMakeLists.txt:
	Added cmake rules for installing
	[daab4fb7864d]

2009-12-30  Thomas Huth

	* CMakeLists.txt, cmake/FindReadline.cmake, cmake/config-cmake.h,
	config-cmake.h, src/CMakeLists.txt:
	Added proper checks for optional libraries, headers and functions to
	the cmake build system.
	[7642453a7eda]

	* src/uae-cpu/CMakeLists.txt:
	Fixed cmake rules for cross-compiling.
	[9033b969eca5]

	* CMakeLists.txt, config-cmake.h, src/CMakeLists.txt:
	Added config.h for cmake build.
	[685283b4f563]

	* src/CMakeLists.txt:
	Forgot to rename int.c to cycInt.c in CMakeList.txt
	[a90b3bb0ddb8]

	* src/falcon/dsp_cpu.c:
	Disable DSP disassembling by default
	[a6fc6d82fb80]

	* src/gemdos.c:
	Print real file handles instead of negative numbers
	[8160a1f32356]

2009-12-29  Laurent Sallafranque

	* doc/authors.txt, doc/release-notes.txt, doc/todo.txt:
	update TODO and release notes
	[fe9c1e8bd2c8]

	* src/falcon/dsp.c, src/falcon/dsp_cpu.c, src/falcon/dsp_disasm.c,
	src/falcon/dsp_disasm.h:
	add: display DSP cycles for each instruction in debug mode
	[8fffff71d733]

2009-12-29  Eero Tamminen

	* src/gemdos.c:
	Fix gemdos path error check that prevented TOS from copying new file
	to GEMDOS HDD. Update gemdos comments.
	[db7e0c784268]

	* doc/emutos.txt:
	add realtime to emutos compatible ste demos
	[fe054432c6e9]

2009-12-22  Thomas Huth

	* Makefile:
	Automatically use Makefile-MinGW.cnf when compiling with MinGW.
	Thanks to Cyprian Konador for the patch.
	[df62ff0dde52]

	* src/file.c, src/gui-win/opencon.c:
	Fix for compiling with MinGW.
	[12e67c2d6de4]

2009-12-21  Thomas Huth

	* src/gemdos.c:
	Ignore all hidden files when scanning for GEMDOS partition mode
	[14bd1149a232]

	* src/blitter.c, src/cycInt.c, src/dmaSnd.c, src/falcon/crossbar.c,
	src/fdc.c, src/ikbd.c, src/includes/cycInt.h, src/memorySnapShot.c,
	src/mfp.c, src/midi.c, src/reset.c, src/video.c:
	Renamed 'Int' prefix to 'CycInt' to match the new name of the file.
	[d0c337dbee13]

2009-12-21  Laurent Sallafranque

	* src/falcon/crossbar.c, src/falcon/crossbar.h,
	src/falcon/microphone.c:
	fix: detect when there's no input device for microphone emulation.
	(SIGSEGV error removed in this case).
	[b47570526969]

2009-12-20  Thomas Huth

	* src/uae-cpu/fpp-unknown.h:
	Fixed compiler warning from GCC 4.4
	[fc8dfad533d6]

	* src/ide.c:
	Do not try to open an IDE slave image when only a master image is
	configured. Thanks to Uwe Seimet for the patch.
	[2fd881b39956]

	* src/file.c, src/includes/file.h:
	Replaced ftell with ftello for large file support
	[aea86db254d6]

2009-12-19  Thomas Huth

	* src/hdc.c:
	Fixed print-out of LBA (should be block address instead of byte
	address). Thanks to Uwe Seimet for the hint.
	[6f35d71d120b]

	* src/video.c:
	Fixed compiler warning
	[1ebf3f73783e]

	* doc/manual.html:
	Added note about size of hard disk images.
	[f8ab6e212eb6]

	* src/file.c, src/includes/file.h:
	Changed return type of File_Length to long for big files on 64-bit
	systems. Thanks to Uwe Seimet for the hint.
	[9dec5f799366]

2009-12-19  Laurent Sallafranque

	* src/falcon/dsp_disasm.c:
	code beautification + preparation for dsp cycle instruction display
	[3c29e583f7d1]

	* doc/release-notes.txt, doc/todo.txt:
	todo and release-notes update
	[65209a078628]

	* src/falcon/crossbar.c, src/falcon/crossbar.h,
	src/falcon/microphone.c, src/ioMemTabFalcon.c:
	fix: compiler warnings, code beautification, added variables for
	gain ans attenuation control.
	[b51ed0dfa2a1]

2009-12-17  Thomas Huth

	* src/cycInt.c, src/gemdos.c:
	Fixed compiler warnings
	[35ba7999853b]

2009-12-14  Laurent Sallafranque

	* src/falcon/crossbar.c, src/falcon/crossbar.h,
	src/falcon/microphone.c:
	fix: remove microphone warning during compilation
	[e174abde168a]

2009-12-13  Laurent Sallafranque

	* src/falcon/dsp_core.h, src/falcon/dsp_cpu.c:
	fix: SR IPL test was wrong. SR must mask only lower interrupt level,
	not same level code cleaning
	[99916d9c84dc]

2009-12-13  Eero Tamminen

	* doc/compatibility.html:
	really set Moai as working
	[942100792db9]

2009-12-13  Nicolas Pomarede

	* src/video.c:
	Fix small error on STE when using hardware scrolling in overscan
	(introduced in rev 2334) When using overscan, the whole screen is
	shifted 4 pixels to the left as the display starts earlier. When
	combined with STE's $ff8264 we must first scroll the pixels in the
	displayed area, then we shift the whole line by STF_PixelScrol
	pixels (doing it the other way around introduced 4 color-0 pixels in
	the right border). The STE will scroll the pixels in the displayed
	area ; the hi/lo switch will shift the whole displayed area.
	[0eac85b8f5f8]

	* src/video.c:
	Improve STE 224 bytes overscan lines
	 - correctly set leftmost 16 pixels to color 0 (taking into account how
	many bytes are displayed by Hatari in left border)
	 - remove small glitches when combined with hscroll ($ff8264)
	[32bfc6f4f89b]

2009-12-12  Eero Tamminen

	* src/change.c:
	do statusbar update always after config changes. (CPU speed etc
	settings can be changed without emulation reset)
	[7fffd28bbd28]

	* doc/compatibility.html:
	chosneck supplement demo works almost completely
	[2b12fc156793]

2009-12-11  Eero Tamminen

	* src/statusbar.c:
	Add CPU type+speed and FastForward mode indicator to statusbar.
	Based on patch from Cyprian Konador, thanks!
	[43dbf4ce5a11]

	* doc/compatibility.html:
	add winrec & STEarth + links and software sites section.
	[20888c89dc1a]

	* doc/emutos.txt:
	stearth demo works with emutos
	[f5145d9e2be8]

2009-12-10  Laurent Sallafranque

	* src/falcon/crossbar.c:
	fix: DMA interrupts must be LOG_TRACE, not LOG_Printf. Removed
	PORTAUDIO #ifdefs.
	[dc7b305dd39a]

	* src/falcon/crossbar.c, src/falcon/crossbar.h,
	src/falcon/microphone.c, src/falcon/microphone.h:
	add: microphone jack emulation is now running. Just listen to winrec
	in cyborg mode.
	[1ee9524711ab]

2009-12-08  Eero Tamminen

	* src/gemdos.c:
	Fdatime fix: unix month starts from 0, need to subtract 1 from from
	GEMDOS month
	[5a9f911240aa]

2009-12-07  Nicolas Pomarede

	* src/includes/video.h, src/video.c:
	Add support for STE 224 bytes overscan by switching hi/lo at cycle
	504/4 to remove left border This line doesn't need a stabiliser and
	displays less pixels in the left border than the usual method (fix
	More Or Less Zero and Cernit Trandafir by DHS, as well as Save The
	Earth by Defence Force)
	[c84981869f5c]

2009-12-06  Thomas Huth

	* src/debug/Makefile, src/falcon/Makefile, src/gui-sdl/Makefile, src
	/uae-cpu/Makefile:
	Sub-makefiles dependency generation should depend on the main
	Makefile
	[0b1cfe22631f]

2009-12-05  Thomas Huth

	* src/Makefile, src/cycInt.c, src/dmaSnd.c, src/falcon/crossbar.c,
	src/ikbd.c, src/includes/cycInt.h, src/includes/int.h,
	src/includes/m68000.h, src/int.c, src/m68000.c,
	src/memorySnapShot.c, src/mfp.c, src/reset.c, src/sound.c,
	src/spec512.c, src/uae-cpu/hatari-glue.c, src/uae-cpu/newcpu.c,
	src/video.c:
	Renamed int.c to cycInt.c
	[ad9ae70a9d0c]

	* Makefile-default.cnf:
	Do not print out annoying error messages when an optional library is
	missing
	[1d9f153e0f89]

2009-12-05  Eero Tamminen

	* python-ui/README:
	note on how to run non-installed version of Hatari with python-ui
	[c5cb0154f684]

	* python-ui/TODO:
	update python-ui TODO
	[ee58791f8b29]

	* python-ui/hatari-console.py, python-ui/release-notes.txt:
	support new hatari options in hatari-console
	[11a03b1a8862]

	* src/gui-sdl/dlgHardDisk.c:
	SDL GUI part for --mount-changes option
	[22b9721283fd]

	* src/control.c, src/debug/debugui.c, src/debug/debugui.h:
	restore support for remote/parallel Hatari debugging
	[2c98fcb1e792]

2009-12-04  Eero Tamminen

	* src/gemdos.c:
	File stream should be flushed before setting its modifications time.
	(Change also FileInfo function arg from file name to handle for
	this.)
	[25c544f10bf6]

	* doc/authors.txt, doc/release-notes.txt, doc/todo.txt:
	add notes about IDE & GEMDOS emulation improvements
	[9c8c4dc96472]

2009-12-03  Nicolas Pomarede

	* src/includes/video.h, src/video.c:
	Add support for a 3rd empty line method by switching res hi/lo at
	cycle 464 This is another effect of the switch used in Enchanted
	Lands, but without removing right border (fix Pax Plax Parralax in
	Beyond by Kruz)
	[4218a86c81d1]

2009-12-03  Eero Tamminen

	* src/gemdos.c:
	add GEMDOS file date/time setting, fix time&date word order for
	getting them
	[0d62b7c99357]

2009-11-30  Thomas Huth

	* src/hdc.c:
	Update DMA address after transfering bytes to the memory.
	[dfba429e3328]

	* src/hdc.c, src/includes/hdc.h:
	Added "Test Unit Ready" command. Thanks to Uwe Seimet for the patch.
	[339bab06acf6]

2009-11-29  Eero Tamminen

	* src/gemdos.c:
	refactor+fix GEMDOS date & time getting:
	- GemDOS_GetFileInformation() got both date & time fields wrong,
	however, they're done right for DTA setting, so use that
	functionality
	- date & time are both set at the same time, so join getting them to a
	new function and use DATETIME* as arg instead handling them
	separately
	- rename DATETIME struct fields to something more descriptive
	[3201c6e4d2e6]

	* src/ide.c:
	logging: printf doesn't support variables that are 64-bit both on 32
	& 64-bit host.
	[6d21b81b7538]

	* src/gemdos.c:
	add SIZE_WORD to Params in GemDOS_OpCode() so that all emulated
	functions don't need to do it.
	[049b5b20088e]

	* src/gemdos.c:
	Fold 2 identical & trivial functions to GemDOS_Pexec() calling them
	[c4a74da32799]

	* src/ide.c:
	ide.c logging should identify it's from IDE (and be consistent)
	[a18086790451]

	* src/gemdos.c:
	fix remaining inconsistent logging in gemdos.c
	[b48c321bfc81]

	* src/gemdos.c:
	when tracing gemdos calls, tell all of their names, not just
	emulated ones
	[1030ec6179e1]

	* src/gemdos.c:
	all GEMDOS log & trace messages should identify they're GEMDOS
	messages (and to be consistent, change GemDOS in some messages to
	GEMDOS too)
	[0880411636e9]

	* src/gemdos.c:
	check that DTA addresses are on valid ST-RAM area (Hatari's internal
	memory can get corrupted if it's not)
	[572cbacc6a43]

	* src/gemdos.c:
	improvements to Fread/Fwrite:
	- check that given address range is valid
	- use more correct variable types (size is signed, negative value ->
	0)
	- identify log/trace messages as coming from GEMDOS
	[316002c87c69]

	* src/includes/ioMem.h, src/includes/stMemory.h:
	use function documentation comment format for static inlines in
	includes
	[8cc463301644]

	* src/includes/stMemory.h:
	add function to check that address range is on valid ST memory area
	[f16daded3d12]

2009-11-29  Thomas Huth

	* src/hdc.c, src/includes/hdc.h:
	Reworked ACSI emulation so that it also works with HDDriver.
	HDCCommand.byteCount must only be increased when accesssing a valid
	target.
	[415dfe04f359]

2009-11-28  Thomas Huth

	* src/ide.c:
	Fix for detection of ejected IDE slave. This patch ensures that an
	ejected IDE slave is not present anymore after Hatari was reset.
	Before, even after the slave was ejected it was still found as long
	as a master was present. Thanks to Uwe Seimet for the patch.
	[be4b554e8d0c]

2009-11-28  Eero Tamminen

	* tests/Makefile, tests/test-breakcond.c:
	use real register parsing functions instead of fake ones in test
	code (to catch issues in register name->address mapping I just had
	to fix)
	[ed903bc85603]

	* src/gemdos.c:
	Fix GEMDOS Fcreate(), read-only flag has effect only after file is
	closed! When tracing GEMDOS, log the created and opened file FD and
	mode.
	[3b90c5617b6d]

	* src/debug/evaluate.c:
	improve debugger value parsing error messages
	[9d68bab35286]

	* src/debug/debugcpu.c, src/debug/debugdsp.c, src/falcon/dsp.c,
	src/falcon/dsp.h:
	allow white space in DSP & CPU register set command, unify error
	messages
	[9429bbf0f00c]

	* src/falcon/dsp.c:
	fix debugger DSP register name parsing
	[ecaaf781a86f]

2009-11-25  Thomas Huth

	* src/change.c, src/configuration.c, src/floppy.c, src/gui-
	sdl/dlgHardDisk.c, src/ide.c, src/includes/configuration.h,
	src/options.c, src/tos.c:
	Support for IDE slave drive. Thanks to Uwe Seimet for the patch!
	[9d4856b3f8f8]

2009-11-22  Eero Tamminen

	* src/gemdos.c:
	GEMDOS Fseek() fixes:
	- use Sint32 offset instead of long one, otherwise wrong value on
	64-bit
	- offset is negative for mode 2 (from-end-of-file), so *add* it
	[1fdc5061f139]

2009-11-22  Laurent Sallafranque

	* src/falcon/crossbar.c:
	fix: change in generate_sound, cast from (double) to (int) correctly
	computed. Thanks to Nicolas for the hint.
	[44dddd5cdff0]

	* src/falcon/dsp_core.c, src/falcon/dsp_cpu.c:
	optim: Remove host_process after every DSP instruction. Transfer
	host datas only when needed. Big thanks to Thomas for the hint.
	[f68dbfc202f8]

2009-11-22  Eero Tamminen

	* doc/compatibility.html:
	Moai+Doomino work, HDDriver works with TOS4, better sound support
	for ACE apps & GEMPlay (First thanks to Thomas' 030 setting, latter
	to Laurent's DSP improvements)
	[5bd9a528fc25]

	* src/floppy.c:
	give note to user when floppy contents are discarded.
	[c7a0bf177c02]

2009-11-21  Laurent Sallafranque

	* src/falcon/dsp.c:
	optim : dsp_run optimisation
	[5a256b490cf5]

2009-11-21  Thomas Huth

	* src/gui-sdl/dlgSystem.c:
	Changed "68020 + FPU" to "68EC030 + FPU".
	[ec373a648cfa]

	* src/uae-cpu/newcpu.c:
	Fake 68030 by supporting the right mask in the CACR register. TOS
	uses this register to detect the 68030 for setting up the _CPU
	cookie. By supporting a right mask for this register, TOS now
	detects a 68030 instead of 68020 CPU.
	[1312264d9285]

2009-11-19  Eero Tamminen

	* doc/compatibility.html:
	Music works in many games & demos after Laurent's DSP<->DMA fixes.
	Changed some Falcon issues from minor to major.
	[0728b56a62be]

2009-11-18  Laurent Sallafranque

	* src/falcon/crossbar.c, src/falcon/dsp.c, src/falcon/dsp.h,
	src/falcon/dsp_core.c, src/falcon/dsp_core.h, src/falcon/dsp_cpu.c:
	optimizations + code cleaning.
	[a46201ee51b1]

2009-11-17  Eero Tamminen

	* doc/compatibility.html:
	Illusion was working already in 1.2
	[869cd3d546bf]

	* src/gemdos.c:
	fix stupid mistakes from previous commit
	[06de2e824554]

	* src/gemdos.c:
	Fix/improve Fcreate()/Fopen() attribute and error handling:
	- instead of creating Fcreate() files with fopen() write-only flag,
	use that just to truncate and then re-open them (correctly) using
	read-only flag. Also chmod() the file to be read-only
	- check and report access errors as such to TOS, both in Fcreate() &
	Fopen()
	- in Fcreate() check path miss from errno too and add path miss
	check & reporting also to Fopen()
	- log access errors to user (so that one can correct them outside
	Hatari)
	- force Fopen() to read-only when "--mount-changes no" is used
	(otherwise programs opening read-only files as RW fails although
	program wouldn't be writing to them)
	[8ade08d9021c]

2009-11-16  Eero Tamminen

	* doc/compatibility.html:
	add to compat list: zero-5 STE gamedemo, KillingImpact Falcon game,
	2 NoCrew Falcon demos
	[be1fee1130f3]

	* doc/hatari.1, doc/manual.html, doc/release-notes.txt, src/options.c:
	Change --do-changes to more descriptive --mount-changes option name
	[48ce1ddaed60]

2009-11-16  Laurent Sallafranque

	* src/falcon/crossbar.c, src/falcon/crossbar.h, src/falcon/dsp.c,
	src/falcon/dsp.h, src/falcon/dsp_core.c, src/falcon/dsp_core.h:
	fix: DspPlay -> DMA Record in handshake mode is working. (Look at 4k
	aggressive party 2 demo from Nocrew)
	[73dd485d5536]

2009-11-15  Eero Tamminen

	* doc/hatari.1, doc/manual.html, src/options.c:
	document AVI recording options + move them after VDI ones (it's more
	logical for VDI ones to be after Display options)
	[d8e8660bbebc]

	* src/gemdos.c:
	Reduce gemdos.c indenting in rest of the functions by using "early
	returns" like in the other refactored functions + add some comments.
	(Change is best viewed with "diff -ub", not with Mercurial.)
	[1bb28a355d2f]

	* src/gemdos.c:
	gemdos: Add Fcreate() Handle result to trace and improve logging
	[8fe209bda5ea]

	* src/gemdos.c:
	fix redundant console noise from GemDOS_CreateHardDriveFileName()
	(make it understand ".\" and "\.." like code using this function)
	[c90ff3b74885]

	* src/gemdos.c:
	gemdos.c cleanup: use Uint8 & Uint16 instead of unsigned char &
	unsigned short int as elsewhere in code
	[b385f55e5d07]

	* src/gemdos.c:
	simplify GemDOS_IsInvalidFileHandle() code
	[1cab3d17671f]

	* doc/release-notes.txt:
	add GEMDOS emu changes + WIN_FORMAT support to release-notes
	[033f312cf377]

	* doc/hatari.1, doc/manual.html, src/configuration.c, src/gemdos.c,
	src/includes/configuration.h, src/options.c:
	add option for whether Hatari can change GEMDOS HDD dir contents,
	log prevented modification attempts
	[0eb2ae84c030]

2009-11-15  Thomas Huth

	* doc/todo.txt:
	New TODO item: IDE slave
	[10822cff3747]

2009-11-15  Eero Tamminen

	* doc/manual.html:
	update HD Driver comment in manual too
	[33564e550205]

	* src/ide.c:
	IDE WIN_FORMAT command support from Uwe Seimet to get formatting
	work with HD Driver
	[18636b909666]

	* doc/compatibility.html:
	fix class + update hddriver comment
	[0b784f5586eb]

	* doc/emutos.txt:
	add Cecile
	[b653070efad9]

	* doc/compatibility.html:
	update TT/Falcon utilities compat list
	[186a208ebb1b]

2009-11-14  Eero Tamminen

	* doc/manual.html:
	HD Driver doesn't work with TOS v4
	[35cbf6afbb9f]

	* doc/manual.html:
	document how to access both IDE & GEMDOS partitions with HD Driver
	[d4bbda3ce96d]

	* python-ui/FILES, python-ui/Makefile:
	python-ui: update FILES list / fix installation
	[a2c4217b1ac2]

2009-11-14  Laurent Sallafranque

	* src/falcon/crossbar.c, src/falcon/crossbar.h, src/falcon/dsp_core.c,
	src/includes/int.h, src/int.c:
	crossbar refactoring : code is now closer to reality and easier to
	read. Aggressive Party 2 4Ko demo is giving some results now. (Dsp
	-> DMA record in handshake mode) Still many things to do
	[52753ac78dfd]

2009-11-08  Eero Tamminen

	* doc/compatibility.html, doc/hatari.1, doc/manual.html, doc/memory-
	usage.txt, src/includes/vdi.h, src/options.c:
	Increase max VDI rez to TT-hi (1280x960) + related doc updates
	[34c75b4caa48]

2009-11-08  Laurent Sallafranque

	* src/falcon/crossbar.c, src/falcon/crossbar.h, src/falcon/dsp.c,
	src/falcon/dsp_core.c, src/ioMemTabFalcon.c, src/mfp.c:
	add: Dma Record. First attempt to include DSP out --> Dma record
	mode in handshake mode. I Still have to do:
	 - customize handshake mode for both DSP -> DMA and DMA -> DSP
	 - finish to map the codecs attenuation and amplifications
	 - change generate_sound algo to interpolate sound better
	[b1b5fc038906]

2009-11-08  Thomas Huth

	* CMakeLists.txt, src/CMakeLists.txt:
	Added PNG and ZLIB tests to cmake configuration files.
	[d8ab3a669a94]

	* src/uae-cpu/CMakeLists.txt:
	Little fix for cmake out of source builds.
	[d8a5057e71c8]

2009-11-06  Nicolas Pomarede

	* src/video.c:
	Harmless correction for DisplayEndCycle when right border is
	removed.
	[0c8990796a1b]

2009-11-05  Thomas Huth

	* CMakeLists.txt, src/CMakeLists.txt, src/debug/CMakeLists.txt,
	src/falcon/CMakeLists.txt, src/gui-sdl/CMakeLists.txt, src/uae-
	cpu/CMakeLists.txt:
	Something to play with: Added experimental cmake configuration
	files. Hatari recently got a modern version control system
	(Mercurial instead of CVS). Maybe it's also time now to get rid of
	the old and error prone Makefiles and "autopain" configure script
	and switch to a more modern build system. So here are some
	experimental CMake files for evaluation.
	[6ca3b85c415b]

2009-11-03  Laurent Sallafranque

	* src/falcon/crossbar.c:
	add: connexions between devices, DMA_Play -> DSP_Record handshaking
	mode (Wait is running, sound still have problems for now).
	[20458c3d05bf]

	* src/falcon/crossbar.c, src/falcon/crossbar.h:
	crossbar rewritten : added structures, opimized cycles computing,
	simplified code
	[fb621eb6bb7b]

2009-11-01  Nicolas Pomarede

	* doc/compatibility.html, src/video.c:
	Correctly align pixels when left border is removed. The switch to
	high resolution to remove left border will make the display starts 4
	pixels earlier ; when emulating, the whole line should be shifted 4
	pixels to the left to keep pixels aligned with a normal line.
	- fixes fullscreen spectrum512 images in the Overscan Demos by Paulo
	Simoes
	- fixes mixed normal/overscan screen where gfx in the overscan part
	were not correctly aligned with the rest of the screen (ULM hidden
	screen in Ooh Crikey Wot a Scorcher, FullBall by Next in the
	Phaleon Demo)
	[a830cfdf159f]

2009-10-30  Laurent Sallafranque

	* src/falcon/crossbar.c, src/falcon/crossbar.h, src/falcon/dsp.c,
	src/falcon/dsp.h, src/falcon/dsp_core.c, src/falcon/dsp_core.h,
	src/falcon/dsp_cpu.c, src/int.c:
	add: first try to implement DMA Play <-> DSP-IN handshaking mode
	[f827bb5ec694]

2009-10-26  Eero Tamminen

	* src/hdc.c, src/includes/hdc.h:
	couple of functions and variable were needlessly exported in hdc.c
	[e1c9f8c406c0]

2009-10-26  Laurent Sallafranque

	* src/falcon/crossbar.c:
	fix : correct 16 bit sound in DMA mode. I've removed the temporary
	hack from yesterday. Pinball Dreams and Ishar 3 are now playing
	correct 16 bit DMA sound
	[cf9b89cf3a85]

	* src/falcon/crossbar.c:
	add+fix : reintegrated direct DMA buffer rendering if DMA play is
	connected to the DAC. (No need in this case to play the samples one
	by one). Sound is not very nice, but all DMA_play musics are
	rendering correctly (in 8 and 16 bits).
	[9e29561f018d]

2009-10-25  Eero Tamminen

	* doc/compatibility.html:
	add DHS altParty STE demo and two new STE games to compatibility
	list
	[2632d3ea4085]

2009-10-24  Thomas Huth

	* src/avi_record.c:
	Fixed compiler warning about missing check for return type.
	[aa9052b412c3]

	* src/includes/main.h, src/includes/stMemory.h, src/m68000.c,
	src/main.c, src/memorySnapShot.c, src/stMemory.c:
	Reworked loading and saving of ST RAM in the memory snapshots.
	[ba671e341f6c]

	* src/includes/m68000.h, src/m68000.c, src/main.c:
	Init instruction pairing only once, not every time during a reset.
	[cd59599e602b]

	* src/m68000.c:
	Clear all registers during cold reset.
	[d46182f40a3d]

2009-10-24  Eero Tamminen

	* src/debug/debugui.c, src/debug/evaluate.c, src/debug/evaluate.h,
	tests/test-evaluate.c:
	Parse Uint32 instead of long long to get rid of C99 LLONG_* defines,
	show also signed value in DebubUI when highest bit is set.
	[fca981bbcf23]

	* src/scandir.c:
	fix BeOS/Sun scandir() implementation dir & alloc leaks on errors
	[a01ea2fc82bb]

2009-10-22  Eero Tamminen

	* tests/test-breakcond.c:
	remove obsolete comments, return error code on program failure
	[770c04f19333]

	* tests/Makefile, tests/test-evaluate.c:
	add test code for expression evaluation
	[c4428ffb20fa]

	* src/debug/evaluate.c:
	more correct error message on erronous unary operation.
	[c8ad66b5c5af]

2009-10-21  Eero Tamminen

	* doc/compatibility.html:
	add TOYS wait demo and notes about NoCrew MP2-player use in demos.
	[4fbcfe9fa0d6]

	* src/debug/evaluate.c:
	fix: include stdio.h
	[b5eaec51a1b0]

2009-10-21  Laurent Sallafranque

	* src/falcon/crossbar.c:
	fix: reduced DAC buffer size to MIXBUFFERSIZE value.
	[08714537482e]

2009-10-18  Laurent Sallafranque

	* src/falcon/crossbar.c:
	add: separated left and right channel in the DAC device. Added
	correct destination tests for each device of the crossbar (except
	DMA for now). To fix : frequencies are still not always correct, DAC
	buffer size is too big and generates a delay.
	[b43a271fe1de]

2009-10-18  Eero Tamminen

	* src/screenSnapShot.c:
	fix compile warning: remove unused bGrabWhenChange
	[7c26b9a20cc0]

	* src/avi_record.c, src/includes/avi_record.h, src/main.c,
	src/sound.c, src/statusbar.c, src/video.c:
	consistent recording bool names: AviRecording -> bRecordingAvi
	[2e67ce9082ce]

2009-10-18  Nicolas Pomarede

	* src/includes/screenSnapShot.h, src/screenSnapShot.c, src/video.c:
	Screenshots animation recording is replaced by AVI recording, remove
	old code
	[41eb5a61af19]

	* src/statusbar.c:
	Update status bar when AVI recording is ON
	[961d2772abcf]

2009-10-17  Nicolas Pomarede

	* src/gui-osx/SDLMain.m:
	Use AVI recording instead of screenshots animation
	[6dea328884e5]

	* src/shortcut.c:
	Associate 'record anim' key (alt+a) to avi recording instead of
	screenshots recording
	[74c9d173c3f0]

	* src/avi_record.c, src/includes/pixel_convert.h,
	src/screenSnapShot.c:
	Group in a single file the functions used to convert pixels from
	8/16/32 to 24 bits
	[464fcf2b17dc]

2009-10-15  Nicolas Pomarede

	* src/avi_record.c, src/gui-sdl/dlgScreen.c,
	src/includes/avi_record.h, src/main.c, src/sound.c, src/video.c:
	Use Avi_ instead of Avi for all functions in avi_record.c
	[7c7a5a6b3c61]

2009-10-14  Eero Tamminen

	* doc/manual.html, src/main.c:
	Allow --run-vbls to be used also without --fast-forward mode.
	[000e5e041d4a]

2009-10-12  Laurent Sallafranque

	* src/falcon/crossbar.c:
	Fix: don't reload the dsp xmit handler is DSP becomes tri-stated
	Add: 32 Mhz frequencies
	[26e992496b4b]

2009-10-11  Eero Tamminen

	* src/avi_record.c:
	AVI: functions declared static should be static, return error on
	unsupported codecs.
	[528ebd601339]

	* src/main.c:
	show note about AVI also on Hatari exit
	[0161ff0e83a6]

	* src/gui-sdl/dlgScreen.c:
	AVI indexing can take while, show note in statusbar about what's
	going on.
	[a9bae891eddd]

	* src/debug/calculate.c, src/debug/calculate.h:
	Aarg. Commit removed files too...
	[f6f8a5c4017e]

	* src/debug/Makefile:
	update also Makefile
	[e2e53cb27d55]

	* src/debug/breakcond.c, src/debug/debugcpu.c, src/debug/debugdsp.c,
	src/debug/debugui.c, src/debug/evaluate.c, src/debug/evaluate.h:
	rename calculate.* to (now) more appropriate evaluate.*.
	[535fc59eea0c]

	* src/debug/breakcond.c, src/debug/calculate.c, src/debug/calculate.h,
	src/debug/debug_priv.h, src/debug/debugcpu.c, src/debug/debugdsp.c,
	src/debug/debugui.c:
	evaluate command uses same number base & parsing as rest of debug
	commands:
	- Moved number and range parsing functions to calculate.c so that it
	it can split to functionality used by expression evaluation and a
	wrapper for rest of the debug commands (which parse NULL terminated
	arguments).
	- Added support for parsing 0x/0b/0d/0o prefixes and improved number
	parsing error messages.
	- Those functions prefix is now Eval_*.
	- Removed calculate.c own number parsing functionality and
	simplified it otherwise a bit.
	[6fb7ce170fa0]

2009-10-10  Nicolas Pomarede

	* src/avi_record.c, src/gui-sdl/dlgScreen.c,
	src/includes/avi_record.h:
	Fix avi record/stop button in sdl gui
	[4d34780721f1]

	* src/avi_record.c:
	Thomas committed before me :) Merge my changes for libpng
	[731942c00582]

2009-10-10  Thomas Huth

	* src/avi_record.c:
	Check for availability of libpng, so that Hatari now compiles w/o
	libpng again.
	[8452d61aa756]

	* Hatari.xcodeproj/project.pbxproj:
	Updated Xcode project so that Hatari can be compiled again.
	[7f41257ebc84]

2009-10-10  Eero Tamminen

	* Makefile-default.cnf, src/Makefile, src/debug/Makefile,
	src/falcon/Makefile, src/gui-sdl/Makefile:
	improve CFLAGS & LIBS handling in Makefiles:
	- current Makefile-default.cnf was forcing X11, PNG & portaudio to
	be linked to hmsa, fixed that
	- use X11, PNG & portaudio CFLAGS only when needed
	- move CFLAGS place in falcon & debug Makefiles later as they were
	adding values that were changed later in Makefile (it worked
	because '=' assignment is deferred one, but it would have broken
	if one would have used ':=' immediate assignment for CFLAGS)
	[f3588d680201]

2009-10-10  Laurent Sallafranque

	* src/falcon/crossbar.c:
	add: added the monitored track in the DAC. bobTracker delivers sound
	now. fix: correct computing of the DSP Xmit and receive frame

	Still strange : (bobTracker and willi's adventure) are playing 2
	times slower than normal, but "graoumf tracker is no so damn slow"
	plays at correct speed). They all seem to have the same parameters.
	[dbbaa5c550e8]

2009-10-09  Nicolas Pomarede

	* src/screenSnapShot.c:
	Restore erroneously removed surface's locking
	[3c04a252d946]

	* doc/release-notes.txt, doc/todo.txt:
	Update todo/release-notes with AVI recording
	[dee90d30dc64]

	* src/options.c:
	Change syntax for avi related options on the command line
	[56bfcb1719a1]

	* src/avi_record.c, src/screenSnapShot.c:
	Fix some compiler warnings with type casting.
	[d2d47c1a7534]

2009-10-08  Nicolas Pomarede

	* src/avi_record.c:
	Add missing include for SDL_SwapLE16 (for old SDL versions)
	[f043794931e6]

2009-10-08  Eero Tamminen

	* src/Makefile, src/crossbar.c, src/falcon/Makefile,
	src/falcon/crossbar.c, src/falcon/crossbar.h,
	src/falcon/microphone.c, src/falcon/microphone.h,
	src/includes/crossbar.h, src/includes/microphone.h,
	src/microphone.c:
	move crossbar.* and microphone.* under falcon/ as they're Falcon
	specific
	[cb6b6e5d97a0]

2009-10-07  Laurent Sallafranque

	* src/crossbar.c:
	fix : new crossbar frequencies calculations. Big thanks to Thomas
	for his help. Sound is now perfect with some programs, but still
	wrong with some others. Still some work to do.
	[dcc0ebb28344]

2009-10-07  Nicolas Pomarede

	* src/gui-sdl/dlgScreen.c, src/includes/options.h, src/main.c,
	src/options.c, src/sound.c, src/video.c:
	Plug avi recording into Hatari. Command line and GUI are now usable
	to record avi.
	[8d951eb1b448]

	* src/Makefile, src/avi_record.c, src/includes/avi_record.h:
	Add avi recording capabilities Support BMP or PNG compression for
	the video stream and 16 bits stereo PCM for the audio stream.
	[e433fdf1ea20]

	* src/includes/screenSnapShot.h, src/screenSnapShot.c:
	Split ScreenSnapShot_SavePNG(), to reuse the png image compression
	in avi_record.c Also add some parameters to choose compression level
	and cropping.
	[4cc2e4917740]

2009-10-07  Eero Tamminen

	* src/debug/calculate.c, src/debug/calculate.h, src/debug/debugui.c:
	more calculator simplification / cleanup:
	- use long longs instead of doubles -> allowed removing bitwise op
	functions
	- removal of power operation (^) allowed adding XOR bitwise operation
	(^)
	- return is not a function, remove parenthesis
	[09300aec3ffa]

	* src/debug/debugui.c:
	no eval arguments should give help, not crash. update eval help.
	[30eb0d0005eb]

	* src/debug/calculate.c:
	simplify/clean calculator:
	- remove modulo & power operations
	- remove octal and ascii support
	- change int/TRUE/FALSE to bool/true/false
	- change < & > to more familiar << & >>
	[f553a6284af8]

2009-10-07  Laurent Sallafranque

	* src/crossbar.c:
	crossbar fix : some changes shouldn't have been uploaded. I've
	return to the previous code.
	[52e7e21dc4eb]

	* src/crossbar.c, src/falcon/dsp_core.c, src/falcon/dsp_core.h,
	src/falcon/dsp_cpu.c:
	fix : correct bug in DSP interrupts. Rewrote of this part of code.
	And interrupt at a certain level can't interrupt the DSP is the SR
	mask is at the same level. This corrects AFM and Are you sitting
	comfortably demo.
	[0ea1ced6a427]

2009-10-06  Eero Tamminen

	* src/debug/Makefile, src/falcon/Makefile, src/gui-sdl/Makefile:
	clean also created *.a files
	[bd1235dfa19c]

	* readme.txt:
	note in readme that Hatari is also STE/TT/Falcon emu
	[bb3e08d8c9d1]

2009-10-02  Laurent Sallafranque

	* src/microphone.c:
	fixed a stupid include mistake :)
	[e82bf51861dd]

2009-10-01  Laurent Sallafranque

	* src/crossbar.c, src/falcon/dsp.c, src/falcon/dsp.h,
	src/falcon/dsp_core.c, src/falcon/dsp_core.h:
	add: separate DSP Xmit and DSP Receive (SSI mode). Add SCK transmit
	and receive. Add frame for Tx and RX relative to the number of
	tracks played or recorded in the crossbar.
	[0de41927746a]

	* src/crossbar.c, src/includes/microphone.h, src/microphone.c:
	code cleaning
	[854cd6be3fee]

2009-09-30  Laurent Sallafranque

	* src/crossbar.c, src/includes/microphone.h, src/includes/portaudio.h,
	src/microphone.c:
	fix : remove portaudio.h from hatari. check HAVE_PORTAUDIO in the
	microphone.c and its header file + in crossbar.c
	[8141d4cc8e34]

2009-09-30  Eero Tamminen

	* Makefile-default.cnf:
	improve make config settings comments
	[e36af331096d]

	* doc/emutos.txt:
	trivial update to emutos compat list
	[700a133e0c0e]

2009-09-30  Laurent Sallafranque

	* src/includes/microphone.h, src/includes/portaudio.h,
	src/microphone.c:
	fix : added microphone files, sorry :)
	[a636661d7e2a]

	* Makefile-default.cnf, src/Makefile, src/crossbar.c,
	src/falcon/dsp_core.c, src/includes/crossbar.h, src/includes/int.h,
	src/int.c:
	add : included portaudio library to emulate the falcon Jack input.
	Many problems to solve in crossbar.
	[2e0358b30785]

2009-09-28  Thomas Huth

	* src/gui-sdl/dlgSound.c:
	Fixed 50 kHz sound radio button.
	[6da8f6ac92b1]

2009-09-28  Eero Tamminen

	* readme.txt:
	mention optional libraries in the readme
	[18061864ade5]

2009-09-26  Laurent Sallafranque

	* src/crossbar.c, src/includes/sound.h, src/reset.c:
	fix : added crossbar in reset.c
	[bdfcba8d4dd3]

	* src/crossbar.c:
	applied Eero's patch : DAC out sound buffer size declared in a
	define
	[33559e39c942]

	* src/crossbar.c:
	increased DAC out buffer size : DSP sound is perfect now
	[84d088d4121f]

2009-09-25  Laurent Sallafranque

	* src/crossbar.c, src/includes/sound.h:
	put back MIXBUFFER_SIZE 8192 in sound.h resize up the DAC out
	buffer. Now, DSP sound is nearly perfect (there's still an artefact
	I'd like to correct) DSP out frequency is now correct. (Test with
	Willi's adventure for example)
	[324b9837caca]

2009-09-24  Eero Tamminen

	* doc/compatibility.html:
	Willie has music with DSP
	[c0b416549855]

	* src/screenSnapShot.c:
	fix surface locking
	[b64ca1e4a908]

2009-09-23  Laurent Sallafranque

	* src/crossbar.c, src/includes/crossbar.h, src/includes/int.h,
	src/includes/sound.h, src/int.c:
	fixed 16 bit stereo mode and 8 bits mono mode. Renames carefully DMA
	functions into DMA sound. Code beautification and comments added
	[2d6a05bb0ef7]

2009-09-22  Laurent Sallafranque

	* src/crossbar.c, src/includes/sound.h:
	DMA sound is nearly perfect now (no more freezing) and quality is
	much better than before.
	[985dc15cb2e5]

2009-09-23  Eero Tamminen

	* src/debug/calculate.c:
	fix indenting in calculate.c
	[b6dd9e2869a5]

2009-09-22  Eero Tamminen

	* doc/manual.html, src/debug/calculate.c, src/debug/debugui.c:
	fix evaluate command parenthesis handling + document it. Don't
	repeat shown value.
	[61556cc8e1ac]

	* src/debug/calculate.h:
	add header
	[86e101dda8ac]

2009-09-22  Laurent Sallafranque

	* src/crossbar.c, src/includes/crossbar.h, src/ioMemTabFalcon.c:
	Dma sound work again (but freezes randomly for now) Dma sound is
	really much better quality than before (listen to Eko system demo
	for example) Everything is not yet coded. Still a lot of work to do
	:)

	removed DmaSnd from iomemtabfalcon definively
	[fadb6c35e332]

2009-09-22  Eero Tamminen

	* doc/release-notes.txt, doc/todo.txt, src/debug/Makefile,
	src/debug/calculate.c, src/debug/debugui.c:
	add first version of "evaluate" calculation command to debugger
	(parenthesis handling doesn't work yet).
	[edc5be98f4a5]

2009-09-21  Laurent Sallafranque

	* src/crossbar.c, src/falcon/dsp.c, src/falcon/dsp.h,
	src/falcon/dsp_core.c, src/falcon/dsp_core.h,
	src/includes/crossbar.h, src/includes/int.h, src/int.c:
	- Prepared SC0, SC1, SC2 (set and get) for DSP SSI
	- Rewrite of DSP sound interrupt (sound is much better now, listen to
	willi's adventure for example)
	- prepared DMA sound (still not working for now)
	[532ea8e569df]

2009-09-20  Eero Tamminen

	* src/debug/breakcond.c, src/debug/debug_priv.h, src/debug/debugcpu.c,
	src/debug/debugdsp.c, src/debug/debugui.c, src/includes/str.h,
	src/str.c:
	move Number and Range parsing back to DebugUI from str.c (as DebugUI
	got refactored and these are only used by debug code)
	[7b0a0c8b3565]

	* python-ui/Changelog, python-ui/release-notes.txt:
	rename changelog to (user visible) release-notes.txt as suggest by
	Thomas
	[420608d20b01]

	* python-ui/Changelog, python-ui/TODO, python-ui/debugui.py, python-
	ui/dialogs.py, python-ui/hatari.py, python-ui/uihelpers.py:
	Support for setting CPU level & clock and Falcon DSP type:
	- table dialog helper supports multiple columns
	- table helper for radio button group items
	- use above in machine config dialog
	- add CPU level & clock and Falcon DSP support to machine config
	dialog and configuration handler
	[527f82ec2c12]

2009-09-20  Thomas Huth

	* src/crossbar.c, src/dmaSnd.c, src/includes/main.h:
	Introduced CPU_FREQ define.
	[0a9811e224a5]

2009-09-20  Eero Tamminen

	* python-ui/Changelog, python-ui/README, python-ui/TODO:
	update python-ui docs to latest state
	[d618edea3f6b]

	* doc/todo.txt:
	add rs323, update directory todo
	[7d5bd8df4703]

	* src/falcon/dsp_core.c, src/falcon/dsp_core.h:
	fix compiler warnings
	[071d8b90a864]

	* src/crossbar.c, src/includes/crossbar.h:
	fix again compiler warnings
	[ec5a1ad2cd7d]

2009-09-19  Laurent Sallafranque

	* src/sound.c:
	fix: change arnaud carre by arnaud carré
	[123f2f3736b9]

	* src/dmaSnd.c:
	fix: use the correct 68000 frequency for Dma sound frequency.
	[e4c6b52e35c1]

	* src/crossbar.c, src/dmaSnd.c, src/includes/crossbar.h,
	src/includes/dmaSnd.h, src/ioMemTabFalcon.c, src/mfp.c, src/sound.c:
	added the crossbar to the falcon. finished to separate Ste/TT Dma
	sound and crossbar sound Added comments to crossbar code
	[a986d6a12211]

2009-09-19  Thomas Huth

	* src/m68000.c, src/mfp.c, src/uae-cpu/fpp.c, src/uae-cpu/gencpu.c,
	src/uae-cpu/newcpu.c, src/uae-cpu/newcpu.h, src/video.c:
	Shortened the M68000_EXCEPTION_SRC_... defines a little bit for
	better readability.
	[29bd51d3d671]

	* src/falcon/dsp.c, src/falcon/dsp.h, src/falcon/dsp_core.c,
	src/falcon/dsp_core.h, src/m68000.c, src/mfp.c, src/uae-
	cpu/newcpu.c, src/uae-cpu/newcpu.h:
	Added HREQ DSP interrupt (needed for Graoumpf Tracker).
	[260eda49da65]

	* src/includes/m68000.h, src/mfp.c:
	Removed the old FIND_IPL macro.
	[be6f90f8c666]

2009-09-19  Laurent Sallafranque

	* src/dmaSnd.c, src/ioMemTabSTE.c, src/ioMemTabTT.c:
	little fixes.
	[5194b5938839]

2009-09-17  Eero Tamminen

	* src/includes/crossbar.h:
	remove inappropriate static function declarations from header
	[e33a17c47759]

2009-09-16  Laurent Sallafranque

	* src/crossbar.c, src/debug/log.c, src/debug/log.h:
	add : crossbar logs
	[fcdefddec4c2]

	* src/crossbar.c, src/dmaSnd.c, src/includes/dmaSnd.h:
	rename DmaSnd_GetsoundFromDAC() in DmaSnd_ReceiveSoundFromDAC()
	[a4734dbd723a]

	* src/Makefile, src/crossbar.c, src/dmaSnd.c, src/includes/crossbar.h,
	src/includes/dmaSnd.h, src/int.c, src/ioMemTabFalcon.c,
	src/ioMemTabSTE.c, src/ioMemTabTT.c:
	add : crossbar.c for falcon sound matrice management. transfered
	access to dsp from dmaSnd.c to crossbar.c
	[8b4585b74986]

2009-09-15  Eero Tamminen

	* tools/hmsa/Makefile:
	update hmsa include paths after debug code splitup
	[287b9da8dc91]

2009-09-15  Laurent Sallafranque

	* src/falcon/dsp.c, src/falcon/dsp.h, src/falcon/dsp_core.h:
	add Dsp_get_HREQ to get the state of HREQ bit for mfp/combel
	interrupts
	[195d02b5f536]

2009-09-15  Eero Tamminen

	* doc/release-notes.txt, doc/todo.txt, src/debug/debugui.c,
	src/debug/log.c, src/debug/log.h, src/includes/options.h,
	src/options.c:
	add argument completion support to debugger h, o, t, f, l, s
	commands
	[d6d6432d1b23]

	* doc/manual.html, src/debug/debugui.c:
	add separate "trace" debugger command + improve manual debugger
	section
	[c2bd9568ffd7]

	* tests/test-breakcond.c:
	really fix for debugui split
	[0326938b4dd0]

	* src/debug/Makefile, src/debug/breakcond.c, src/debug/debug_priv.h,
	src/debug/debugcpu.c, src/debug/debugcpu.h, src/debug/debugdsp.c,
	src/debug/debugdsp.h, src/debug/debugui.c, src/debug/debugui.h,
	src/falcon/dsp.c, src/uae-cpu/newcpu.c, tests/test-breakcond.c:
	split DSP and CPU debugging code to separate files from debugui.c.
	[05c907fa0b58]

2009-09-14  Eero Tamminen

	* src/debug/breakcond.c, src/debug/breakcond.h, tests/Makefile, tests
	/test-breakcond.c:
	move breakcond.c test code to new tests/ directory at top level
	- export some of the static parsing functions for the test code
	[961aa7d45504]

	* src/uae-cpu/Makefile, src/uae-cpu/hatari-glue.c, src/uae-cpu/hatari-
	glue.h, src/uae-cpu/memory.c, src/uae-cpu/newcpu.c:
	Use Hatari includes in uae-cpu/* without paths like in all other
	files
	[a8315a5c6b23]

2009-09-13  Laurent Sallafranque

	* src/falcon/dsp_core.c:
	very little optim in HREQ computing
	[9cdd9fb11f46]

2009-09-13  Eero Tamminen

	* src/Makefile, src/breakcond.c, src/debug/Makefile,
	src/debug/breakcond.c, src/debug/breakcond.h, src/debug/debugui.c,
	src/debug/debugui.h, src/debug/log.c, src/debug/log.h,
	src/debugui.c, src/falcon/Makefile, src/includes/breakcond.h,
	src/includes/debugui.h, src/includes/log.h, src/log.c, src/uae-
	cpu/Makefile, src/uae-cpu/newcpu.c:
	move debugui[ch], breakcond.[ch] and log.[ch] to debug/
	-subdirectory
	[f631b702fad3]

2009-09-10  Eero Tamminen

	* doc/release-notes.txt, doc/todo.txt, src/breakcond.c, src/debugui.c,
	src/includes/breakcond.h:
	finish initial version of debugger readline completion
	functionality:
	- ifdef completion out when readline isn't available
	- complete first word as command regardless of whitespace
	- complete breakcond variables after command
	[cb61d96a261b]

2009-09-09  Laurent Sallafranque

	* src/hd6301_cpu.c:
	lot's of bugs corrected + major rewrite of the code + add of ccr bit
	H management
	[c0dd22f00a40]

2009-09-10  Eero Tamminen

	* doc/todo.txt, src/debugui.c:
	add readline completion for debugger commands
	[79f02cbc159d]

2009-09-07  Eero Tamminen

	* src/log.c, src/options.c:
	fix "--trace help":
	- terminate opt parsing at Hatari startup
	- still don't show extra usage in debugger
	[0862918946da]

2009-09-06  Nicolas Pomarede

	* src/uae-cpu/newcpu.c:
	Preserve SPCFLAG_DEBUGGER (for checking breakpoints) after a
	cold/warm reset.
	[db291f43ea1e]

2009-09-05  Laurent Sallafranque

	* src/hd6301_cpu.c, src/hd6301_cpu.h:
	code beautification
	[ad73d91f8d8d]

2009-09-05 : *** Version 1.3.1 ***

2009-09-05  Thomas Huth

	* doc/release-notes.txt:
	Updated release notes for version 1.3.1
	[9fb9dc477e75]

	* Info-Hatari.plist, configure.ac, doc/doxygen/Doxyfile, hatari.spec,
	readme.txt, src/gui-osx/English.lproj/InfoPlist.strings,
	src/includes/main.h:
	Increased version number to 1.3.1
	[0ffa580c704d]

2009-09-03  Thomas Huth

	* src/floppy.c:
	Fixed HD boot drive when drive C: does not exist. TOS 2.06 was
	crashing during the boot process when drive C: did not exist, but
	Hatari wrongly declared this drive as boot drive.
	[7763d64c36aa]

	* src/gemdos.c:
	Fixed drive enumeration of GEMDOS HD emulation. Single partition
	GEMDOS HD emulation did not work anymore when an ACSI HD image was
	also used, due to some problems with the automatic drive letter
	detection.
	[3bfce602e42a]

	* src/stMemory.c:
	Fix ConnectedDriveMask with multiple, non-contiguous GEMDOS
	partitions.
	[ac7bbcfe1801]

2009-08-25  Eero Tamminen

	* python-ui/Makefile:
	Fix to incorrect use of DESTDIR in python-ui installation
	[915340642fd3]

2009-08-17  Eero Tamminen

	* src/debugui.c:
	more compact debugger output (return to emulation msg)
	[240c39b890ef]

	* python-ui/dialogs.py:
	update copyright, fix trace settings names
	[e8ba0d2c79c9]

	* python-ui/debugui.py:
	fix: debugger memdump/disasm show/save/load need now to use '$' for
	hex
	[5a1592749444]

2009-08-17  Thomas Huth

	* doc/compatibility.html, doc/manual.html:
	Improved the CSS of the manual and compatibility list. The "font-
	family:Fixed" did not work at all on Windows. Also cleaned up the
	CSS in general.
	[21687104622b]

	* src/Makefile, src/gui-win/Makefile:
	The hatari icons for the Windows executable must not be put into an
	archive for linking.
	[1d35342eb1bc]

2009-08-16 : *** Version 1.3.0 ***

2009-08-16  Thomas Huth

	* python-ui/dialogs.py:
	Changed the website URL to the new home of Hatari at berlios.de
	[05a83cb7f76a]

	* python-ui/Makefile:
	Fixed installation of the python-ui
	[feb0ae323aff]

	* src/falcon/dsp_core.c:
	Silenced compiler warning about unused variables.
	[f6a3ccc303ea]

	* doc/release-notes.txt:
	Updated release notes for version 1.3.0
	[a07860a61bf8]

	* doc/doxygen/Doxyfile:
	Removed obsolete Doxygen settings.
	[7afaa1d83324]

	* src/screenSnapShot.c:
	Reworked a comment that confused Doxygen.
	[492d9e10a519]

	* Info-Hatari.plist, configure.ac, doc/doxygen/Doxyfile, hatari.spec,
	readme.txt, src/gui-osx/English.lproj/InfoPlist.strings,
	src/includes/main.h, src/memorySnapShot.c:
	Increased version number to 1.3.0
	[0c734b1a5776]

	* .hgignore:
	Added generated Doxygen files to .hgignore file
	[126cb8fe341c]

	* doc/manual.html:
	Added a note about changing the DSP option
	[1ff74562f62c]

	* src/sound.c:
	Don't save sound configuration options in memory snapshots.
	[cf1faf50cd4b]

	* src/dmaSnd.c:
	Scale DMA samples by factor 0.5 instead of 0.707. Since the YM
	samples are now pretty much normalized, we have to adapt the volume
	level of the DMA samples accordingly.
	[650448480c94]

	* src/sound.c:
	Always remove the DC part of the YM samples. Normalizing the level
	of the YM samples makes it easier to mix them with the DMA samples
	later.
	[2ff4776b0954]

2009-08-16  Eero Tamminen

	* doc/compatibility.html:
	rg demo needs 14MB to work reliably
	[5e34df26eba3]

	* doc/manual.html:
	mention DSP continue in addition to CPU continue
	[f385812ca925]

	* src/breakcond.c:
	update breakpoint condition test code to latest changes
	[184b729a4db0]

2009-08-16  Thomas Huth

	* src/debugui.c:
	Silenced compiler warning that happened with GCC 4.3
	[6e5ea9bddbac]

2009-08-16  Eero Tamminen

	* doc/emutos.txt:
	more emutos compatible gem/mono games
	[1f6717b6c6bd]

2009-08-15  Eero Tamminen

	* src/uae-cpu/newcpu.c:
	if exceptions aren't catched in debugger, show user a dialog about
	CPU halting
	[c7f84096ce48]

	* doc/manual.html:
	tell about Hatari variables support in conditional breakpoints
	[cdc24363bf70]

	* doc/release-notes.txt:
	note regs/vars showing on entering debugger
	[bdfa8de0865f]

	* doc/todo.txt:
	add calculator, indentation fix
	[bfde57ccc9be]

	* src/debugui.c:
	make debugger output more concise + add regs/vars info:
	- values command output as one-liner
	- show reg/var one-liner on entering debugger
	- show welcome only on first time
	[90a940da8090]

	* src/breakcond.c, src/debugui.c:
	fix PC and SR access for conditional breakpoints, add size to
	FUNCTION type define
	[d5b1fe5c67e7]

2009-08-15  Thomas Huth

	* src/dmaSnd.c:
	Scale DMA sound samples by factor 0.707 instead of 0.5. This factor
	seems to be closer to a real STE. Thanks to Per Almered for the
	hint!
	[1ea9d6316474]

	* src/configuration.c:
	Renamed LogDebug section back to Log to avoid breaking old config
	files.
	[87b63b6bde51]

2009-08-15  Eero Tamminen

	* doc/hatari.1, doc/manual.html, src/options.c:
	remove toggling of Pause key functionality with -D (it's redundant
	as one can set the Pause & Debug keys in config file)
	[8bbc44eefb33]

2009-08-15  Thomas Huth

	* src/gui-win/Makefile, src/gui-win/opencon.c:
	Fixed compiling on MinGW
	[f808a3b0eb81]

	* src/debugui.c, src/shortcut.c:
	Always return to window mode when entering the debugger. This fixes
	the problem that the emulator freezes in fullscreen mode when it
	enters the debugger due to a breakpoint.
	[279cc4fe485c]

	* doc/todo.txt:
	Added LMC1992 to the TODO list.
	[aa72ccab20d9]

2009-08-14  Thomas Huth

	* src/video.c:
	Fixed palette problem in VDI mode. The code did not call
	Video_StoreFirstLinePalette() anymore - which is called from the HBL
	function, but since the HBLs have been disabled in VDI mode, this
	does not happen anymore. So HBLPalettes did not get initialized
	correctly in monochrome and TT/Falcon mode, and
	Screen_CreatePalette() then set the wrong colors.
	[0522887d10fc]

2009-08-13  Thomas Huth

	* website/scrshots1.html, website/scrshots4.html,
	website/scrshots5.html:
	Updated website with Eero's latest screenshots (mainly STE).
	[42b221c535d5]

2009-08-11  Eero Tamminen

	* doc/compatibility.html:
	update badmood & pmheretic/pmdoom notes
	[bc223a10adad]

2009-08-11  Nicolas Pomarede

	* src/video.c:
	No need to handle $ff820a in VDI mode
	[9df6f34751a8]

2009-08-10  Eero Tamminen

	* doc/emutos.txt:
	add rebirth
	[4ecf57e23895]

	* doc/memory-usage.txt:
	fix typos
	[5a84fb52fc77]

	* doc/compatibility.html:
	minor updates to 3 falcon program compatibility
	[a48834359d9a]

	* doc/todo.txt:
	indent all subitems the same way + wrap to 80 columns
	[279e75ce47f6]

2009-08-10  Laurent Sallafranque

	* src/falcon/dsp_cpu.c:
	FIX : some parts of SS stack (SSH+SSL). SSH moves are now
	increasing/decreasing correctly the stack. I've also masked to 16
	bits the SSH/SSL values.
	[766b69f99367]

2009-08-10  Nicolas Pomarede

	* src/includes/video.h, src/mfp.c, src/video.c:
	Use Video_AddInterruptTimerB when Timer B positions is changed in
	MFP_ActiveEdge_WriteByte.
	[e53ed3601bf5]

2009-08-09  Eero Tamminen

	* doc/todo.txt:
	add debugger TODOs, collect screen TODOs together + list KÃ¥re's
	stuff
	[25fd3fb29bcd]

2009-08-09  Nicolas Pomarede

	* src/video.c:
	Don't update HBL / Timer B interrupt's position when VDI mode is
	used.
	[2f7cb88dd314]

2009-08-09  Eero Tamminen

	* doc/release-notes.txt:
	tune DSP notes based on todo, update/add debugging notes, add note
	about doc updates
	[dbce71211d73]

	* doc/manual.html:
	large debugger section update, nice box for <pre> tags, minor fixes
	[0bb4ca03093a]

	* src/breakcond.c:
	value accessor function/variable support in breakcond.c -> possible
	to break on specific place on screen:
	- changed regsize member to valuetype and define few enum values for
	it
	- names for Hatari variables and functions can now be of arbitrary
	lenght
	- support selecting value helper functions by name and calling them
	when checking for breakpoints.
	- help lists also the function variable names and values. This and
	above is a bit ugly as it requires casts which compiler cannot
	check for type safety
	- updated test code accordingly + fixed earlier breakage
	[5a4ab49cb9c1]

	* src/configuration.c, src/debugui.c, src/includes/configuration.h,
	src/str.c:
	add support for configuring default number base (in debugger):
	- nNumberBase config setting added to configuration
	- Config file Log section renamed to LogDebug because of this
	- debugui value command can now change the default number base
	- in Str_GetNumber() the number prefix can be left out from values
	in the selected/default number base. When it's other than
	10-based, decimals need to be prefixed with '#'
	[79ec43f49b78]

	* doc/compatibility.html:
	add links for games which still have homepages, note about newer
	Calamus
	[68bdd767f40e]

2009-08-08  Eero Tamminen

	* doc/hatari.1, doc/manual.html, src/configuration.c, src/debugui.c,
	src/includes/configuration.h, src/includes/debugui.h,
	src/includes/main.h, src/main.c, src/options.c, src/shortcut.c, src
	/uae-cpu/newcpu.c:
	Add always available shortcut for debugger:
	- rename config file keyDebug setting to keyPause and add new
	keyDebugger for the Debugger shortcut. By default debugger needs
	AltGr with Pause
	- as debugger is always available, rename bEnableDebug to
	bExceptionDebugging and move it from main.c to debugui.c
	- besides toggling bExceptionDebugging on -D option, switch whether
	pause or debugger functionality needs AltGr modifier when Pause key
	is pressed for easier debugger use
	- show in statusbar when console debugger is invoked
	- update -D option & shortcuts documentation
	[2d9abff9bcd7]

	* src/includes/log.h, src/log.c, src/options.c:
	improve option error and usage messages, especially for --trace in
	debugger
	[7c74d8e01476]

2009-08-07  Thomas Huth

	* doc/manual.html:
	Added chapter about the debugger and cleaned up for version 1.3
	[07169ee30e7f]

2009-08-06  Nicolas Pomarede

	* doc/todo.txt:
	Add item on avi recording
	[75a6394d54b8]

	* doc/release-notes.txt, doc/todo.txt:
	Update release's notes for video changes
	[ba8925d2094a]

	* src/video.c:
	Don't update HBL/Timer B interrupt's position on the last line when
	freq or res are changed. This completes the patch from rev 2116 : as
	we don't call Video_StartHBL on the last visible line, we should
	also ensure that when frequency or resolution are changed on the
	last HBL (312 at 50 Hz) we don't update the HBL or Timer B position,
	else we'll get a crash as ShifterLines[ nHBL+1 ] is not initialized.
	(fix hatari's crash in TCB Guest Screen in Nostalgic-o-demo by
	Oxygene)
	[b7b9271c6bad]

2009-08-05  Nicolas Pomarede

	* src/video.c:
	Correct wrong 'right-2' border detection when switching to 50Hz at
	cycle 372 (fix self calibration routine used in Lethal Xcess
	hardscroll).
	[5937371a8c73]

2009-08-04  Thomas Huth

	* website/scrshots6.html:
	Added Laurent's new screenshots of Falcon DSP programs.
	[95a743903385]

	* .hgignore:
	Added *.pyc file to .hgignore.
	[5324f1d21b5b]

2009-08-04  Laurent Sallafranque

	* doc/todo.txt:
	Update the DSP TODO list
	[bc9a3582dc20]

2009-08-03  Eero Tamminen

	* src/breakcond.c:
	allow breaking on specific internal Hatari variable values, show
	breakpoint number
	[a1c4958a68b4]

	* src/falcon/dsp.c:
	catch also too long dsp register names
	[5ca5523b738d]

2009-08-01  Thomas Huth

	* src/dmaSnd.c:
	Fixed Falcon 16-bit DMA samples on little endian machines.
	[8954826a112d]

	* doc/compatibility.html:
	Updated 'Slayer' and 'Alive'
	[a8f9c92b0f58]

	* doc/todo.txt:
	Added some more TODO items.
	[4b9514f24e44]

	* src/fdc.c, src/hdc.c:
	Removed redundant double-checking for ACSI commands.
	[6f75e9a0a810]

2009-08-01  Nicolas Pomarede

	* src/spec512.c, src/video.c:
	Remove unused code from previous video.c
	[215d12217dda]

2009-07-31  Thomas Huth

	* doc/todo.txt:
	Updated the DSP TODO list.
	[11ae0615a158]

2009-07-30  Eero Tamminen

	* doc/compatibility.html:
	Use "Hatari version" column for Falcon games&demo compatibility
	tables too. Correct Hatari version for some Falcon apps (when first
	working/last tested not to work).
	[8eb94c4e215b]

2009-07-28  Nicolas Pomarede

	* src/spec512.c:
	Better timings when changing colors with movem.l and movem.w Fix
	small glitches in Dragonnels Menu and in No Cooper Plasma, as well
	as spec512 slideshow in The Place To Be Again Demo.
	[15770b3f9aa9]

2009-07-26  Matthias Arndt

	* src/str.c:
	* added missing include of stdio.h to make it compilable
	[2350172692fd]

2009-07-26  Thomas Huth

	* src/video.c:
	Fixed buffer overflow at the last HBL in monochrome screen mode.
	This buffer overlow caused performance problems and other side
	effects, especially on Mac OS X. Thanks to KÃ¥re Andersen for the
	patch.
	[52e6916c3c3d]

	* src/control.c:
	Fixed compilation when HAVE_UNIX_DOMAIN_SOCKETS is not defined.
	[036bcf1a82f6]

2009-07-22  Nicolas Pomarede

	* src/video.c:
	Set default value for nFrameSkips to 0 (fix problem with OS X's
	compiler)
	[c314199d5bac]

	* src/video.c:
	Correct an error in Video_ConvertPosition (rare case when reading
	video counter, mostly harmless)
	[26def8a3f566]

2009-07-21  Eero Tamminen

	* src/statusbar.c:
	Fix: overlay drive-led did save&restore blits although showing it
	was disabled (when statusbar was also disabled)
	[d3a4698a13ff]

	* doc/release-notes.txt:
	add note about debugger value prefixes (user visible change)
	[e98bac15417e]

	* doc/manual.html:
	perf note about earlier versions
	[5e4962fe5508]

2009-07-19  Eero Tamminen

	* src/debugui.c:
	add new "value" DebugUI command for showing given value in
	bin/dec/hex base
	[b6df11082ec6]

	* src/debugui.c:
	Support number / address range prefixes in DebugUI:
	- use the new Str_GetNumber()/Str_ParseRange() instead of own
	functions
	- change remainging unsigned longs to (more correct) Uint32 for this
	- rename nBreakPoint variable to more descriptive BreakAddr
	[dbcd7f526435]

	* src/breakcond.c:
	Change to using the new Str_GetNumber() instead of own function
	[603318ac9a20]

	* src/includes/str.h, src/str.c:
	Add Str_GetNumber() and Str_ParseRange() for parsing numbers +
	address ranges with prefixes
	[5058c97a5b70]

	* doc/manual.html:
	add perf note about spec512 mode and statusbar
	[0aa7d7934c11]

2009-07-18  Thomas Huth

	* src/gui-osx/PrefsController.m, src/gui-osx/Shared.m,
	src/includes/main.h:
	Removed the obsolete defines FALSE and TRUE.
	[5fa1544f1dee]

2009-07-18  Eero Tamminen

	* src/debugui.c:
	remove non-ASCII chars from debugui output
	[15375a75c494]

	* src/breakcond.c, src/debugui.c, src/includes/breakcond.h:
	Breakpoints: proper condition match testing, fix multiple condition
	handling, RemoveAll function, improve comments&output
	[ff2d4b960826]

2009-07-18  Thomas Huth

	* src/dmaSnd.c:
	Check for illegal DMA sound buffer sizes.
	[6c657b951606]

	* src/control.c, src/includes/control.h, src/xbios.c:
	Added XBIOS remote control interface (for development only)
	[c19cba83586f]

	* website/docs.html:
	Reworked the FAQ section.
	[5d00c5cd4329]

2009-07-18  Eero Tamminen

	* python-ui/Changelog, python-ui/hatariui.py, python-ui/uihelpers.py:
	add Hatari UI help items to Hatari docs and Hatari & Hatari UI www-
	pages
	[33818b9876c5]

	* doc/compatibility.html:
	move Capy to TT games, update two items
	[d587b1227aa6]

2009-07-18  Thomas Huth

	* doc/compatibility.html:
	Cleaned up the Falcon applications table and added some more
	comments about Apex.
	[48a6a5813b5c]

	* src/falcon/hostscreen.c, src/falcon/hostscreen.h,
	src/falcon/videl.c:
	Removed the unused 24 bpp converters.
	[1bfbd0accca5]

	* src/main.c:
	Ignore mouse motion when position has changed right after a reset.
	TOS (especially version 4.04) might get confused when it receives a
	mouse event right after a reset and then play annoying key clicks.
	[1c4f97d5767f]

2009-07-16  Nicolas Pomarede

	* src/video.c:
	When spec512 mode is off and color is changed after cycle 460, we
	consider the change should be applied on next line. This fixes old
	automation menu 002, where color is changed on each line on a med
	res screen ; as spec512 mode is not supported in med res yet, we
	must consider that any change after the maximum right border (cycle
	460) should be applied to line nHBL+1. Else, in the case where the
	colors are changed just before/after cycle 512, the result will
	flicker as the change will be applied to line nHBL or nHBL+1 instead
	of always using nHBL+1
	[3db6c876bba5]

2009-07-15  Eero Tamminen

	* doc/compatibility.html:
	compat updates: 32Mhz makes couple of demos work, add EKO demos,
	remove 2 of 7 Lazer demos
	[680ea7a2b358]

2009-07-14  Eero Tamminen

	* doc/manual.html, doc/todo.txt, python-ui/dialogs.py:
	update docs: RS232 & MIDI I/O stable, IDE supported, GEMDOS multiple
	dirs etc
	[3b463b37967a]

	* doc/compatibility.html:
	add (fake?) Pinball Dreams
	[65fb856e104e]

	* src/options.c:
	bLoadAutoSave not needed for bSlowFloppy as that's not in memory
	save file
	[1163e317ec07]

	* doc/hatari.1, doc/manual.html, python-ui/TODO, python-ui/dialogs.py,
	python-ui/hatari.py, src/options.c:
	add --timer-d option, document it and support it in the python-UI
	[41390733378a]

2009-07-13  Eero Tamminen

	* doc/manual.html:
	add a section on improving Hatari performance
	[ccacdecf0b70]

2009-07-11  Eero Tamminen

	* doc/authors.txt, doc/release-notes.txt:
	update notes to latest Hatari version
	[cd9b32d130bb]

	* doc/compatibility.html:
	went through rest of none/non-working programs + updated (DSP)
	compatibility
	[631c373ca734]

	* src/falcon/dsp.c:
	support PC and fix DSP_REG_SSH/SSL defines in
	DSP_GetRegisterAddress().
	[043f4d638127]

	* doc/compatibility.html:
	compatibility doc updates for latest DSP
	[49352e1286e0]

2009-07-10  Eero Tamminen

	* src/breakcond.c:
	Warn if given address 23th bit isn't extended properly. Finetune
	warnings.
	[a539291cfc84]

2009-07-09  Thomas Huth

	* src/video.c:
	Fixed the "--memstate is not working" bug. Shortcuts must be
	processed after the video interrupts have been re-started or the VBL
	interrupt might be marked as inactive in the memory snapshot.
	[0657f8f5778f]

2009-07-08  Thomas Huth

	* src/includes/control.h, src/uae-cpu/newcpu.c:
	Use 'true' and 'false' from stdbool.h instead of the obsolete
	defines.
	[f963e7c5c046]

	* src/convert/high640x8.c, src/convert/low320x16.c,
	src/convert/low320x32.c, src/convert/low320x8.c,
	src/convert/low640x16.c, src/convert/low640x32.c,
	src/convert/low640x8.c, src/convert/med640x16.c,
	src/convert/med640x32.c, src/convert/med640x8.c,
	src/convert/spec320x16.c, src/convert/spec320x32.c,
	src/convert/spec640x16.c, src/convert/spec640x32.c,
	src/convert/vdi16.c, src/convert/vdi2.c, src/convert/vdi4.c:
	In the screen convert code, use 'true' and 'false' from stdbool.h
	instead of the obsolete defines.
	[ff1cb2d5610c]

2009-07-07  Laurent Sallafranque

	* src/falcon/dsp.c, src/falcon/dsp_core.h, src/falcon/dsp_cpu.c:
	add : dsp instruction cycle count. Now DSP and 68030 are more
	accurate to each other.
	[bc5e211a2c28]

2009-07-07  Thomas Huth

	* src/int.c:
	Added assertions to make sure that no invalid parameters get passed
	to the Int_AddInterrupt functions.
	[2f3013fe9848]

2009-07-06  Thomas Huth

	* src/int.c:
	Disabled unused function Int_AddRelativeInterruptNoOffset()
	[80f65ef43835]

2009-07-04  Thomas Huth

	* src/debugui.c, src/dialog.c, src/dmaSnd.c, src/hdc.c, src/ikbd.c,
	src/int.c, src/joy.c, src/keymap.c, src/log.c, src/m68000.c,
	src/main.c, src/memorySnapShot.c, src/mfp.c, src/midi.c, src/msa.c,
	src/options.c, src/printer.c, src/psg.c, src/reset.c, src/rs232.c,
	src/screen.c, src/screenSnapShot.c, src/shortcut.c, src/sound.c,
	src/spec512.c, src/st.c, src/statusbar.c, src/tos.c, src/vdi.c,
	src/video.c, src/xbios.c, src/ymFormat.c, src/zip.c:
	Use 'true' and 'false' from stdbool.h instead of the obsolete
	defines.
	[48f78c1be4ee]

	* src/falcon/hostscreen.c, src/falcon/nvram.c, src/falcon/videl.c:
	In the Falcon code, now also use 'true' and 'false' from stdbool.h
	instead of the obsolete defines.
	[2fcc1fb9d486]

	* src/gui-sdl/dlgAlert.c, src/gui-sdl/dlgDevice.c, src/gui-
	sdl/dlgFileSelect.c, src/gui-sdl/dlgFloppy.c, src/gui-
	sdl/dlgHardDisk.c, src/gui-sdl/dlgJoystick.c, src/gui-
	sdl/dlgKeyboard.c, src/gui-sdl/dlgNewDisk.c, src/gui-sdl/dlgRom.c,
	src/gui-sdl/dlgScreen.c, src/gui-sdl/dlgSound.c, src/gui-
	sdl/sdlgui.c:
	For the SDL GUI code, now also use 'true' and 'false' from stdbool.h
	instead of the obsolete defines.
	[895bdc9d587a]

2009-07-04  Eero Tamminen

	* src/debugui.c:
	use Uint32 for (parsing) addresses in debugui.c like elsewhere in
	Hatari (as unsigned long would be unnecessarily 64-bits on 64-bit
	OSes)
	[ac5dab1e6c2c]

	* src/breakcond.c, src/debugui.c, src/includes/breakcond.h,
	src/includes/debugui.h, src/memorySnapShot.c:
	store also debugging session state to memory snapshot (if needed,
	it's easy to disable this from debugui.c even at run-time)
	[823582903643]

2009-07-03  Eero Tamminen

	* src/breakcond.c:
	dummy DSP_ReadMemory() function for breakcond test code
	[542b36e95579]

	* src/breakcond.c:
	Inherit bit width & mask from the other side if not set, derive mask
	from bit width if not set. This removes the (worst) redundant
	warnings about mask mismatches.
	[910298ca48e9]

	* python-ui/README:
	add Hatari UI www-page URL
	[1073baaf53cc]

	* python-ui/TODO:
	update Hatari UI TODO to latest Hatari version
	[9fbdbfcf5b49]

	* python-ui/FILES:
	describe all Hatari UI source etc files
	[a9b9a7b61391]

	* python-ui/hatari-console.py:
	update to latest hatari:
	- add missing command line options
	- use new long debugger commands instead of short ones for clarity
	- wait 0.2s before showing prompt so that Hatari output gets first
	[49ce14ff8770]

	* src/debugui.c:
	debugOutput needs to be initialized also when commands are called
	from control.c
	[ededf28d8a56]

	* src/breakcond.c, src/falcon/dsp.c:
	add/improve debugging code comments/documentation
	[37a08b139cf8]

	* src/breakcond.c, src/falcon/dsp.c, src/falcon/dsp.h:
	add DSP memory support to conditional breakpoints
	[79927961d6ae]

2009-07-03  Nicolas Pomarede

	* src/breakcond.c:
	Allow IO addresses between $ff8000 and $ffffff to be used as
	indirect breakpoint addresses
	[48fddaf04e7e]

2009-07-02  Eero Tamminen

	* src/breakcond.c:
	quote '%'
	[bbea51741eac]

2009-06-27  Thomas Huth

	* src/video.c:
	Clear framecycles counter during reset. This fixes the problem on
	Mac OS X where the video endline interrupt timings suddenly went
	crazy after a reset or resolution switch from color to mono.
	[3a66f38db0ad]

2009-06-27  Laurent Sallafranque

	* src/falcon/dsp_core.c:
	fix : ssi.cra_wordmask value in 24 bits mode fix : remove swap
	receive and transmit datas (crb_shifter defines the hardware way to
	get or send the data, but at end, the data is always MSB.....LSB)
	added some comments + code cleaning
	[12bc6849cc7d]

2009-06-27  Thomas Huth

	* Hatari.xcodeproj/project.pbxproj:
	Added breakcond.c to OS-X project file.
	[6b767a67c566]

	* src/gui-osx/PrefsController.m:
	Fixed typo
	[a0ce6502cee2]

2009-06-24  Thomas Huth

	* src/gemdos.c:
	Fixed bug in Fopen when access mode was 3. Due to a missing comma,
	two strings were merged in the access mode table.
	[671c4e00a188]

2009-06-21  Thomas Huth

	* doc/compatibility.html:
	Added Super Skweek.
	[1261bf120ba6]

	* src/m68000.c:
	Do not print bus error message when program probes for FPU co-
	processor since a lot of users got confused by the "Bus error at
	address $fffa42" message when a program tried to detect this co-
	processor.
	[355775dcd624]

	* src/file.c:
	The header sys/time.h is required for compiling on Cygwin. Without
	sys/time.h the struct timeval is not declared.
	[2f8dcc346f2d]

2009-06-20  Nicolas Pomarede

	* src/blitter.c, src/fdc.c, src/ikbd.c, src/mfp.c, src/psg.c,
	src/spec512.c, src/uae-cpu/newcpu.c:
	Use Video_GetPosition in LOG_TRACE
	[2d9d737fa9b7]

	* doc/compatibility.html:
	Update some STF demos for Hatari 1.3
	[59f4cf99481c]

2009-06-19  Nicolas Pomarede

	* src/int.c:
	Fix a rare bug in Int_AddAbsoluteInterrupt that could cause Hatari
	to go in and endless loop. Int_AddAbsoluteInterrupt was not calling
	Int_UpdateInterrupt as it didn't seem necessary in real case, but if
	an interrupt is added to the list at the same time another interrupt
	is ready to be served, this interrupt will be lost, because
	PendingInterruptCount value will be lost. This fixes Dark Side Of
	The Spoon's loader by ULM, where an FDC command (implying
	Int_AddAbsoluteInterrupt) could sometimes happen at cycle 404 where
	Timer B interrupt should trigger. Timer B int would be lost and
	Hatari would enter an endless loop taking 100% CPU.
	[257fb9b8f62f]

	* src/video.c:
	Replace remaining HATARI_TRACE with LOG_TRACE
	[5ae3c4a862ad]

2009-06-18  Nicolas Pomarede

	* src/video.c:
	Save/Restore ShifterFrame structure in memory's snapshot
	[22d50f19c8d0]

2009-06-17  Nicolas Pomarede

	* src/includes/video.h, src/reset.c, src/video.c:
	Change Video_StartInterrupts to use Video_AddInterruptTimerB and
	Video_AddInterruptHBL instead of Int_AddAbsoluteInterrupt. Also
	starts the VBL's int with Int_AddRelativeInterrupt and
	PendingCyclesOver, as Int_AddAbsoluteInterrupt could be called from
	reset.c with an incorrect value for nCyclesOver (because
	Video_StartInterrupts has no defined value for nCyclesOver when not
	called from an interrupt handler).
	[f3051bd6f969]

2009-06-13  Nicolas Pomarede

	* src/ikbd.c:
	Fix merge conflict
	[589c17590a03]

	* src/ikbd.c:
	Test increasing int's cycles for sendind data
	[73b11856dcdd]

	* src/includes/video.h, src/mfp.c, src/video.c:
	More fixes to the new code, no more regression so far ; reorganize
	some parts to use common functions.
	[13f92beab170]

2009-05-28  Nicolas Pomarede

	* src/uae-cpu/newcpu.c, src/video.c:
	More generic tests to handle writes to $ff8260 Update Timer B's int
	position each time res/freq is changed
	[878e2478c8ee]

2009-05-08  Nicolas Pomarede

	* src/includes/video.h, src/video.c:
	Update HBL's int position and nCyclesPerLine each time res/freq is
	changed at a compatible position. HBL and nCyclesPerLine are now
	fully dynamic and can have different values on different lines.
	[0b0f82ea2e4f]

2009-04-21  Nicolas Pomarede

	* src/includes/video.h, src/spec512.c, src/video.c:
	More generic tests to handle writes to ff820a
	 - Start replacing FrameCycles by HBL/LineCycles in border tests
	 - Always update DisplayStartCycle/DisplayEndCycle
	 - Rewrite top/bottom border removal detection code to work with mixed
	50/60 Hz lines
	 - Use Video_ConvertPosition in spec512 mode
	[fd0a5ecb2120]

2009-04-15  Nicolas Pomarede

	* src/includes/video.h, src/video.c:
	Start rewritting HBL handling and add correct video address
	calculation when mixing 50 and 60 Hz lines. (fix Omega Full
	Overscan, TCB overscan in Swedish New Year, DI screen in MindBomb,
	TEX screen in Syntax Terror)
	[46d4edf4ab53]

	* src/psg.c:
	Read to the YM data register ff8800 was taking 4 more cycles than
	expected.
	[a3c1e1e1f66d]

2009-06-20  Thomas Huth

	* tools/zip2st.sh:
	Quote input file name so that script also works with spaces in file
	names.
	[1cf90a0c007b]

2009-06-18  Eero Tamminen

	* src/breakcond.c:
	document binary decimal %-prefix. proper string-as-value support too
	complicated, remove it
	[c29efdc1f81c]

2009-06-18  Thomas Huth

	* src/audio.c, src/bios.c, src/cart.c, src/cfgopts.c, src/change.c,
	src/configuration.c, src/control.c, src/createBlankImage.c,
	src/dim.c, src/fdc.c, src/file.c, src/floppy.c, src/gemdos.c:
	Use 'true' and 'false' from stdbool.h instead of the obsolete
	defines.
	[17a9da3aaa54]

	* src/gemdos.c:
	Tracing of the GEMDOS function now also shows the parameters of the
	functions.
	[6d05caa3bfbd]

2009-06-18  Eero Tamminen

	* src/breakcond.c:
	parse binary (%10101) and ascii ("ICE) values
	[8c0414ab86bc]

	* src/breakcond.c:
	parse DSP address spaces. address type can be checked for regsize
	and whether to use dsp from dsp_space
	[4e10dcfa00c6]

2009-06-16  Eero Tamminen

	* src/breakcond.c:
	make two mask checks warnings instead of errors, tigher other mask
	checks
	[fc8039e504de]

2009-06-16  Thomas Huth

	* Visual.Studio/VisualStudioFix.c, Visual.Studio/VisualStudioFix.h,
	src/bios.c, src/blitter.c, src/dmaSnd.c, src/fdc.c, src/gemdos.c,
	src/ikbd.c, src/includes/log.h, src/includes/m68000.h, src/int.c,
	src/ioMem.c, src/log.c, src/mfp.c, src/psg.c, src/spec512.c, src
	/uae-cpu/newcpu.c, src/vdi.c, src/video.c, src/xbios.c:
	Simplified the macros for tracing. The trace macros all started with
	a prefix "HATARI_", which is quite meaningless when the whole
	project is called Hatari... So the functional macros now have got
	the prefix "LOG_" (since they are defined in log.h) and the constant
	macros use now simply the prefix "TRACE_".
	[073072bf6e27]

	* src/includes/breakcond.h:
	Added missing header file breakcond.h
	[1d466aa50b58]

2009-06-15  Eero Tamminen

	* src/breakcond.c, src/debugui.c, src/falcon/dsp.c, src/falcon/dsp.h,
	src/includes/debugui.h:
	support all registers for conditional breakpoints + fix DSP reg name
	matching
	[1638a1f3f0f2]

	* src/Makefile, src/debugui.c:
	integrate breakcond.c & conditional breakpoints with DebugUI and
	rest of Hatari
	[c3a9910371bf]

	* src/falcon/dsp.c, src/falcon/dsp.h:
	move DSP register code to separate GetRegisterAddress function for
	breakcond.c
	[94e72d78ab67]

	* src/debugui.c, src/includes/debugui.h:
	move CPU register code to separate GetRegisterAddress function for
	breakcond.c
	[45ae1917865c]

2009-06-14  Eero Tamminen

	* src/breakcond.c:
	Add BreakCond_Command/Help(), CPU/DSP register parsing support &
	test code
	[701192eb7a7b]

	* src/breakcond.c:
	.size -> .bits (reg support preparation), crosscheck width/mask,
	make funcs static
	[d5e8cc3de5c3]

	* src/falcon/dsp_core.h, src/falcon/dsp_cpu.h,
	src/falcon/dsp_disasm.h, src/falcon/nvram.h, src/gui-win/opencon.h,
	src/includes/midi.h, src/includes/rtc.h, src/includes/str.h,
	src/includes/utils.h, src/uae-cpu/hatari-glue.h, src/uae-
	cpu/savestate.h:
	add 'extern' keywords to 11 headers (out of the 93) missing them
	[73c7326779d0]

2009-06-14  Thomas Huth

	* doc/compatibility.html:
	Added Super Sprint.
	[f26374ac147b]

2009-06-13  Eero Tamminen

	* src/breakcond.c:
	trivial test for triggering breakpoints, fix addr size check
	[f3bc75b64fd5]

	* src/breakcond.c:
	Except for registers, BC parsing works now. Added parsing function
	tracing/debug
	[cda62e4215e9]

	* src/breakcond.c:
	fix tokenizing crasher, fix breakpoint removal crasher, code
	tidying:
	- move comparison matching to its own function
	- remove use of pstate member aliases argv/arg
	[a05dc2190037]

2009-06-12  Eero Tamminen

	* src/breakcond.c:
	initial/buggy size/mask/register parsing (doesn't pass tests),
	args->argv
	[b4feacca2e84]

	* src/breakcond.c:
	use '&&' for boolean AND instead of '&', improved test & error
	reporting
	[ae9d8defe818]

	* src/breakcond.c:
	indicate which parsed arg had the error, test output readability
	improvements
	[291e6549d54c]

2009-06-11  Thomas Huth

	* src/gemdos.c:
	Handle illegal Fseek modes.
	[6358f1616639]

2009-06-10  Eero Tamminen

	* src/breakcond.c:
	more parsing and testing functionality, bp listing/removing, var
	name finetuning
	[a0460fd47a6c]

2009-06-10  Laurent Sallafranque

	* src/falcon/dsp_cpu.c:
	removed 2 usued defines
	[e38e43a8527a]

	* src/falcon/dsp_cpu.c:
	DSP condition code simplify. Code is easier to read and faster to
	execute
	[ab6f61afe0ee]

	* src/falcon/dsp.c:
	dsp memory dump fix: correct X and Y memory dump in debug mode
	[17e9cbbafe36]

2009-06-10  Thomas Huth

	* src/gemdos.c:
	Fixed return value of Fseek when end of file has been reached. TOS
	returns -64 when a program tries to seek beyond the end of a file.
	This behavior is now emulated in the GEMDOS HD code of Hatari, too.
	This fixes the "EOF bug" in the program GFASHELL.
	[6fac76c656d4]

2009-06-10  Eero Tamminen

	* src/breakcond.c:
	switch to array of breakpoints having array of conditions, pass
	(most) parsing args in struct, move test code to end
	[8cd480bbef70]

2009-06-09  Eero Tamminen

	* src/debugui.c:
	Expect 'dm' DSP memspace arg to be separated from address. Improve
	help text.
	[ca6e50b103f2]

	* src/breakcond.c:
	"complete" checking side, flesh out parsing code, start on test
	code, more docs
	[cb3c5c5d8926]

2009-06-08  Eero Tamminen

	* src/debugui.c:
	fix: debugger input needs to be trimmed of newline when not using
	readline
	[fc1cbb6fae4d]

	* src/breakcond.c:
	add preliminary code for handling conditional breakpoints
	[563bfb8807ae]

2009-06-07  Eero Tamminen

	* src/debugui.c, src/falcon/dsp.c, src/falcon/dsp.h,
	src/includes/debugui.h, src/includes/main.h:
	Add DSP breakpoints & single stepping + minor DebugUI changes:
	- Add command shortcut to the main help
	- Finetune of some of the messages (state whether it's DSP or CPU etc)
	- Change DSP debug shortcuts back to 2 letters
	- typedef dbgcommand_t And add likely/unlikely gcc extension macros to
	main.h & use them in dsp.c when checking for whether to call
	DebugUI.
	[58443694fb87]

2009-06-07  Thomas Huth

	* src/debugui.c:
	Fixed the help text of the 'continue' command.
	[b5c49fa1ef55]

	* src/debugui.c, src/includes/debugui.h, src/uae-cpu/newcpu.c, src
	/uae-cpu/newcpu.h:
	Added simple CPU breakpoint and single-step debugging possibilities.
	[f6b7b33bf84d]

	* src/log.c:
	Added 'none' trace option to be able to disable tracing from the
	debug UI.
	[8687a80691ea]

2009-06-07  Eero Tamminen

	* doc/hatari.1, doc/manual.html, python-ui/hatari.py, python-
	ui/hatariui, src/options.c:
	change sound freq limits to 6000-50066 and explain them in
	documentation
	[c3b998d94821]

2009-06-06  Thomas Huth

	* src/debugui.c, src/includes/debugui.h:
	Reworked debugger command parsing. Commands are now gather in a
	proper jump table instead of one ugly huge switch() statement.
	Parameter list is now generated with strtok() so that the commands
	can easier access them.
	[298398234a57]

	* src/includes/main.h:
	Added ARRAYSIZE macro for calculating the size of an array.
	[da66ef81e05f]

	* Visual.Studio/VisualStudioFix.c, Visual.Studio/VisualStudioFix.h,
	config-default.h, configure.ac, src/gemdos.c, src/includes/log.h,
	src/log.c:
	Renamed HATARI_TRACE_ACTIVATED to ENABLE_TRACING since this naming
	is more consistant with the other defines from config.h. Also
	enabled this option by default in config-default.h
	[d53e422be120]

	* src/gui-sdl/dlgSound.c:
	Fixed compiler warning about comparison between signed and unsigned
	[9bbc7539b927]

2009-06-03  Thomas Huth

	* website/links.html:
	Replaced defunct Pangaelin Willow link with AtariWorld.org
	[417e1160625d]

2009-06-03  Laurent Sallafranque

	* src/debugui.c, src/falcon/dsp.c, src/falcon/dsp.h:
	added : dsp memory debug mode. (dm [x,y,p]addr)
	[eacd30856dac]

2009-06-03  Thomas Huth

	* src/falcon/videl.c:
	Removed wrong and unused VIDEL_COLOR_REGS_END constant.
	[ef2ab9b1727b]

2009-06-02  Laurent Sallafranque

	* src/falcon/dsp_cpu.c:
	simplified and optimized ccr E, U, N, Z computing. One call is
	suffisant to compute the 4 bits.
	[cf8241df8eb1]

	* src/falcon/dsp.c:
	Changed the registers display in dsp debug mode
	[ac7212190edb]

	* src/falcon/dsp_cpu.c:
	new code : added read SSH and write management
	[79a496454120]

2009-06-02  Eero Tamminen

	* doc/compatibility.html:
	Aazohm needs joypad
	[c8f75d834d11]

2009-06-01  Eero Tamminen

	* doc/manual.html:
	add note about --grab and pause to mouse section
	[61e94eb0172e]

	* doc/hatari.1, doc/manual.html, src/main.c, src/options.c,
	src/screen.c:
	add --grab option and release mouse grab when emulation is paused
	[76f8f4b9cbc6]

	* doc/compatibility.html:
	cryview doesn't work with TT-emu
	[66579a94f31d]

	* src/video.c:
	fix ST colreg address in comment
	[08aad2778d44]

2009-06-01  Thomas Huth

	* src/ikbd.c:
	Increase the amount of cycles for sending keyboard data
	automatically. This fixes the mouse cursor in "Froggies over the
	fence" and "Dragonnels" demo.
	[5cc6980b42b8]

2009-06-01  Laurent Sallafranque

	* src/falcon/dsp.c:
	added PC to dsp debugger
	[fecec9b10035]

2009-06-01  Thomas Huth

	* src/ikbd.c:
	The byte which is sent by the IKBD after a reset command has to be
	delayed by 50000 cycles. Lotus Turbo Esprit 2 now does not crash
	anymore during its buggy start up sequence.
	[ef5d7d38c404]

2009-05-31  Eero Tamminen

	* Makefile, python-ui/Makefile:
	install also python-ui
	[266bdbbbb153]

	* python-ui/dialogs.py:
	convert string underlines (interpreted as kbd-shortcuts) to dashes
	[4dd6ffe7ad2e]

	* python-ui/debugui.py, python-ui/dialogs.py, python-ui/hatari-
	console.py, python-ui/hatari.py, python-ui/hatariui.py:
	support arbitrary sound frequency. scripts should be executable
	[51752f7cfff8]

2009-05-31  Thomas Huth

	* src/dmaSnd.c:
	Calculate frame position only once instead of two times when playing
	stereo sound.
	[95e5a9d63265]

	* src/dmaSnd.c:
	Scale down DMA samples before mixing with PSG sound so that they are
	at the same level. The song "On behalf of the Queen" by 505 should
	now sound better.
	[e27e82952a01]

	* src/Makefile:
	Avoid linking the main executable if nothing has been changed at
	all.
	[7ee334a132f0]

2009-05-29  Eero Tamminen

	* doc/hatari.1, doc/manual.html, src/options.c:
	playback frequency can now be set to "any" value, update --sound
	accordingly
	[eaabb21ef451]

	* python-ui/hatari-icon.png, python-ui/hatari.png:
	add missing / necessary images back
	[68709f44956d]

2009-05-28  Laurent Sallafranque

	* src/falcon/dsp_core.h, src/falcon/dsp_cpu.c,
	src/falcon/dsp_disasm.c:
	removed X and Y external ram buffers (gain 64 ko) some code rewrote
	minor bug fixes
	[054e541ac3b3]

2009-05-24  Eero Tamminen

	* python-ui/TODO, python-ui/dialogs.py, python-ui/hatari.py:
	update python-ui TODO, fix Midi config names, update trace flags
	list
	[6a9db0e5723d]

2008-10-19  Eero Tamminen

	* python-ui/Changelog, python-ui/TODO, python-ui/dialogs.py, python-
	ui/hatari.py, python-ui/hatariui.py, python-ui/uihelpers.py:
	- Implement peripherals dialog
	- Check sound output file extension as required by Hatari
	- disk -> floppy dialog
	- update TODO&Changelog
	[d98dc87b9415]

2008-09-29  Eero Tamminen

	* python-ui/TODO, python-ui/debugui.py, python-ui/dialogs.py, python-
	ui/hatari.py, python-ui/uihelpers.py:
	Implement support for paths and update TODO
	[0ce48441def7]

2008-09-28  Eero Tamminen

	* python-ui/TODO, python-ui/dialogs.py, python-ui/hatari.py, python-
	ui/hatariui.py, python-ui/uihelpers.py:
	- add support for auto frameskip, statusbar and overlay led and
	simplify the display dialog code a bit
	- remove support for multiple machine setups now that Hatari config
	loading (after startup) works, this makes the dialog easier to use
	- fix memory size setting
	- other minor changes
	[eadf8aca0f3a]

2008-08-28  Eero Tamminen

	* python-ui/Changelog, python-ui/TODO:
	- make changelog more readable
	- remove Hatari stuff from TODO list (some of is now implemented and
	rest discussed with Thomas)
	[aad379ed7f16]

2008-07-30  Eero Tamminen

	* python-ui/hatari-console.py:
	- support for older Pythons (non-derived class syntax)
	- check whether Hatari supports --control-socket option
	- support Hatari remote path setting and device toggling
	- add hatari-console help
	[69a5288ff975]

2008-07-26  Eero Tamminen

	* python-ui/Changelog, python-ui/Makefile, python-ui/README, python-
	ui/TODO:
	- Moved feature TODOs from source to new TODO file and added there
	also some issues found from Hatari too + things that Steem has
	- Added Changelog
	- README update
	[727560b53cd6]

	* python-ui/config.py, python-ui/debugui.py, python-ui/dialogs.py,
	python-ui/hatari.py, python-ui/hatariui, python-ui/hatariui.py,
	python-ui/uihelpers.py:
	- Added recanim, recsound, config load/save and memory snapshot
	load/save features. If config changed in UI, give a temporary
	config file to Hatari whenever it's re-run
	- Fullscreen isn't anymore a toggle as user cannot use this option
	if Hatari is fullscreen... Removed fullscreen config option
	handling as it will be changed also directly from Hatari
	- To support drag&drop for the UI, it forwards non-option args
	(floppy name) to Hatari from the UI command line
	- Disk image and joystick settings to separate dialogs
	- Add dummy paths and peripherals settings dialogs
	- Check that Hatari supports --control-socket argument
	- Make dialog run() methods more consistent
	- Python code compatible to Python 2.4 (I'm testing with 2.5 which
	accepts '()' for classes not inheriting anything) and wrapper
	scripts to older SH (use exit when outside func body)
	[492d35446e43]

2008-07-11  Eero Tamminen

	* python-ui/Makefile, python-ui/hatariui, python-ui/hatariui.desktop:
	add desktop file, minor tweaks
	[0b4f154621f6]

2008-07-10  Eero Tamminen

	* python-ui/.cvsignore, python-ui/Makefile, python-ui/README, python-
	ui/hatariui, python-ui/setup.py:
	- Add Makefile for installing and make script installable
	- Update README and add .cvsignore for local bytecompiled .py files
	- remove useless setup.py
	[8b89b8ff559c]

2008-07-07  Eero Tamminen

	* python-ui/hatariui, python-ui/hatariui.py:
	fix single row panel with actions
	[08119e0ee4cc]

2008-07-06  Eero Tamminen

	* python-ui/hatari-ui, python-ui/hatari-ui.py:
	old UI is now redundant
	[bee8da661e8d]

	* python-ui/dialogs.py, python-ui/hatariui, python-ui/hatariui.py,
	python-ui/uihelpers.py:
	- fix: create_toolbutton utility
	- fix: make sound settings into a dialog
	- fix: fastforward & fullscreen initial state in actions
	- add new hatariui helper script
	- enable keyboard shortcuts when Hatari isn't embedded
	- make panels into actions and if user gives any on command line,
	add them to menu too
	- close by itself on a row is enough as a button, no need for
	toolbar + toolitem
	[2924cd3efb20]

2008-07-05  Eero Tamminen

	* python-ui/hatariui.py:
	GtkSocket embedding the Hatari window needs to do Gtk focus grab for
	key events to go to Hatari (at all) when toolbars are used.
	[28e9210f925c]

	* python-ui/hatariui.py:
	Large refactoring for the new hatariui.py:
	- get menus working + option to disable them
	- converted all buttons to toolbars and toolbar items and it mostly
	works, but it steals focus from Hatari!
	- slightly improved Hatari window resize handling
	[656cf0873578]

2008-07-03  Eero Tamminen

	* python-ui/dialogs.py, python-ui/hatari-ui, python-ui/hatari-ui.py,
	python-ui/hatariui.py, python-ui/uihelpers.py:
	- move text/click input buttons to separate dialog
	- move menu/actions stuff to new hatariui.py file which will
	eventually replace hatari-ui.py
	[fbed1df56baf]

2008-07-01  Eero Tamminen

	* python-ui/dialogs.py, python-ui/hatari-ui, python-ui/hatari-ui.py,
	python-ui/hatari.py:
	- add borders, st-low zoom and fullscreen options support
	  - controls for first two to display dialog, fullscreen as
	action/button
	- fine-tune dummy menu texts
	[bd1218b8145f]

	* python-ui/dialogs.py, python-ui/hatari-ui, python-ui/hatari-ui.py:
	- add dummy (for now) Hatari UI menu
	- move run-time display settings into dialog of their own as it's
	impossible to have slider in menu (for frameskip)
	[6392e4d610d3]

2008-06-26  Eero Tamminen

	* python-ui/hatari.py:
	better check for required Hatari support
	[e6db36811654]

	* python-ui/hatari.py:
	assert that Hatari supports the required --control-socket option
	[53394dd57397]

2008-06-25  Eero Tamminen

	* python-ui/dialogs.py:
	- allow user to eject disks in peripherals dialog
	- support "use HD" option in machine config dialog
	- in both of these dialogs, batch the changes in one go to Hatari
	[9df61e51ff51]

	* python-ui/hatari-ui.py:
	make new Hatari window size reading more robust against Hatari
	reboots and re-running (previously it could get stuck sometimes when
	Hatari was asked to reboot itself after re-running Hatari).
	[f83da3dc70fd]

	* python-ui/config.py:
	- empty string key values should be shown and saved as "", not
	"None"
	[f6cc4bfd3a49]

	* python-ui/hatari.py:
	- more robustness for the case when user terminates Hatari
	- support for batching Hatari option changes
	- support for g/setting floppydir and whether to use HD
	[7ad0ebf97c65]

2008-06-24  Eero Tamminen

	* python-ui/hatari-ui.py, python-ui/hatari.py, python-ui/uihelpers.py:
	request and process Hatari window size change messages from Hatari
	[9686a111db9a]

2008-06-18  Eero Tamminen

	* python-ui/config.py, python-ui/dialogs.py, python-ui/hatari-ui.py:
	warn if Hatari configuration is missing and bail out
	[2266d934ae10]

2008-06-16  Eero Tamminen

	* python-ui/uihelpers.py:
	bump version number
	[a9d7d64779ec]

	* python-ui/hatari-ui.py:
	smarter control resize policy
	[c7372558145f]

2008-06-15  Eero Tamminen

	* python-ui/debugui.py, python-ui/dialogs.py, python-ui/hatari.py,
	python-ui/uihelpers.py:
	- "finish" configuration setup dialog and add support for all the
	required hatari variables
	- list (in comment) which Hatari variables are not yet supported
	- disable Hatari internal quit confirmation when starting Hatari
	[3b8dfceaa4d7]

	* python-ui/hatari-console.py, python-ui/hatari-ui, python-ui/hatari-
	ui.py:
	- UI: support taking screenshots
	- console: add support for "savemem"
	[80f10c5db6ec]

2008-06-14  Eero Tamminen

	* python-ui/dialogs.py, python-ui/hatari-ui, python-ui/hatari-ui.py:
	add warm/cold reset/reboot button and dialog
	[e84454e94777]

2008-06-13  Eero Tamminen

	* python-ui/config.py, python-ui/debugui.py, python-ui/dialogs.py:
	- fix debugui.py default config value type (without saved config
	you got exception when trying to switch to disasm or memory dump
	mode)
	- hide peripherals dialog faster
	- correct ConfigStore() constructor __doc__ method
	[d11eaedd1b9b]

2008-06-11  Eero Tamminen

	* python-ui/dialogs.py, python-ui/hatari.py:
	fix initial disk name
	[16a0d6faadc7]

	* python-ui/README, python-ui/dialogs.py:
	README improvements, note that UI needs saved hatari.cfg
	[664f3909c53f]

2008-06-10  Eero Tamminen

	* python-ui/debugui.py, python-ui/dialogs.py, python-ui/hatari-ui,
	python-ui/hatari-ui.py, python-ui/hatari.py, python-ui/uihelpers.py:
	- move table helper functions from debugui.py to uihelpers.py
	- adapt to the new Hatari joystick settings option
	- add handling for the new Hatari disk options
	- add Hatari peripherals dialog (uses table helpers) and move disk &
	joystick settings there
	- refactor hatari.py a bit so that debugui.py can be given options
	with which it should run Hatari
	- comment code more
	[fdb1eadf31d6]

2008-06-08  Eero Tamminen

	* python-ui/hatari-console.py, python-ui/hatari.py:
	add disk support now that Hatari got options for them
	[f6b798f96abc]

2008-06-07  Eero Tamminen

	* python-ui/dialogs.py:
	decided on different/simpler setup dialog structure (still dummy
	though)
	[91b3491419b8]

	* python-ui/config.py, python-ui/debugui.py, python-ui/dialogs.py,
	python-ui/hatari-ui, python-ui/hatari-ui.py, python-ui/hatari.py:
	- stupid oversight, Hatari configuration has after all sections
	with keys named the same (shortcut and joystick sections), needed
	to rewrite config handling to take this into account
	- added joystick emu selection
	- apply doesn't close trace settings dialog, only close will do
	[56be835accd0]

2008-06-06  Eero Tamminen

	* python-ui/hatari-ui, python-ui/hatari-ui.py, python-ui/uihelpers.py:
	- ">" can be used to put controls in multiple rows/columns
	- close button allowed only in panels
	[66dd8855b1e8]

2008-06-03  Eero Tamminen

	* python-ui/dialogs.py, python-ui/hatari-ui.py:
	- add blitter trace setting
	- shorten "Spec512 support" checkbox name (now that tooltips work)
	[cead7a5a4376]

	* python-ui/hatari-console.py, python-ui/hatari.py:
	- USER isn't always defined, use PID instead in socket/file names
	[0a8a14745494]

2008-06-02  Eero Tamminen

	* python-ui/dialogs.py, python-ui/hatari-ui, python-ui/hatari-ui.py:
	small screen / N8x0 improvements
	- trace options are in three columns, not two
	- if close button is given for a panel, set its type as dialog
	[84ea0787f41a]

2008-05-30  Eero Tamminen

	* python-ui/README, python-ui/debugui.py, python-ui/hatari-ui, python-
	ui/hatari-ui.py, python-ui/uihelpers.py:
	- add README
	- allow running the UI and debugger scripts from elsewhere than
	where the scripts themselves (and icon/logo images) are
	[fc71ccb1ab75]

2008-05-28  Eero Tamminen

	* python-ui/dialogs.py, python-ui/hatari-ui.py:
	add support for trace settings loading and saving
	[fdbc9535c239]

	* python-ui/config.py, python-ui/dialogs.py:
	- fix cosmetic bugs in config file output (newlines between
	sections and capitalized True/False)
	- add checkpointing to configuration and change changed config
	variable checking/listing to use that. Checkpointing will be
	useful for Hatari configuration dialogs
	[ee214fb50318]

	* python-ui/dialogs.py, python-ui/hatari-ui.py, python-ui/hatari.py:
	code documentation improvements:
	- prefixing more private methods with "_"
	- adding docstrings to more public methods
	[aeee34e6a18c]

2008-05-27  Eero Tamminen

	* python-ui/dialogs.py, python-ui/hatari-ui.py:
	code cleanup:
	- add docstrings to methods
	- prefix internal methods with "_" as is python convention
	- all dialogs take same __init__ constructor arguments and same
	number of run() method arguments
	[6c8a807a4815]

	* python-ui/debugui.py:
	code cleanup:
	- don't derive from HatariUIDialog unnecessarily
	- change helper methods that don't use other class methods or object
	variables into functions
	- prefix internal methods with "_" is is python convention
	- add docstrings to methods
	[b072ff6ce493]

2008-05-26  Eero Tamminen

	* python-ui/hatari-ui, python-ui/hatari-ui.py:
	- fix panel button tooltips
	- another panel example to the hatari-ui script
	[564bb863b8c0]

	* python-ui/debugui.py, python-ui/dialogs.py, python-ui/hatari-ui.py,
	python-ui/uihelpers.py:
	More refactoring inspired by Pylint OO-style warnings:
	- move common / helper functions from dialogs.py to new uihelpers.py
	file
	- add there create_toggle() and create_button() and use these in
	debugger and hatari UI instead of methods
	- move class variable constants to their own Constants and UInfo
	classes, this makes sharing them more explicit
	- associate HatariControls instead of inheriting it in HatariUI,
	this makes the class roles more explicit (but there are some less
	clean things still)
	- prefix all internal callback methods in HatariControls with "_"
	(which is a Python idiom)
	[c9a730067c5a]

2008-05-25  Eero Tamminen

	* python-ui/debugui.py:
	- refactor address handling to MemoryAddress class from DebugUI
	class in preparation for additional memory area monitoring windows
	requested by Nicolas
	- ask user whether Hatari should be killed instead of just killing it
	- fix OO-style issues reported by pylint
	[f873f3288642]

	* python-ui/dialogs.py, python-ui/hatari-ui.py:
	- fix few errors
	- move killdailog functionality to dialogs.py so that Debug UI can use
	it too
	- make paste timeout callback to a function from method (I'm
	assuming this guarantees the text paste object is not leaked)
	- fix OO-style issues reported by pylint
	[c93b449a3539]

	* python-ui/config.py, python-ui/hatari.py, python-ui/setup.py:
	- improve documentation (comments)
	- fix issues reported by pylint
	- take hatari configuration border settings into account when
	deciding on Hatari cli option
	[59459d1d3670]

	* python-ui/hatari-ui, python-ui/hatari-ui.py:
	- refactor widgets to new HatariUIWidgets class from HatariUI
	- user can now specify that control are in separate panel windows
	- updated Hatari frameskip only when users releases mouse button
	[09ca1c525a93]

	* python-ui/hatari-console.py:
	- fix TAB completion I broke earlier
	- fix more pylint warnings (put main code inside a function)
	[74698a1cfb3f]

	* python-ui/debugui.py:
	- nicer resizing for dialogs
	- leave 0x prefix out from addresses in dialogs
	- kill Hatari on exit
	[fbfa8dbc287b]

	* python-ui/dialogs.py:
	UI improvements:
	- trace settings to two rows
	- config changes list has scrollbars only when needed
	[d6932761b57f]

2008-05-24  Eero Tamminen

	* python-ui/debugui.py:
	- add memory load and save dialogs & functionality
	- refactor the existing classes for this a bit
	[a148f18c41ed]

	* python-ui/dialogs.py:
	add note and question dialogs, some improvements
	[06780b0a5584]

2008-05-21  Eero Tamminen

	* python-ui/hatari-console.py:
	- add event and debugger shortcut handling to hatari-console
	- resolve few pylint warnings
	[b55f5d6a0f10]

2008-05-20  Eero Tamminen

	* python-ui/config.py, python-ui/debugui.py:
	config.py:
	- improve doc strings
	- enable configuration file saving
	- create config file on save if it doesn't exits (under ~/.hatari)
	debugui.py:
	- read/write Debug UI options from/to configuration file
	- bind enter to applying options in options dialog
	[0a79104ae5c9]

	* python-ui/config.py, python-ui/hatari-ui.py, python-ui/hatari.py:
	Prepare for DebugUI and HatariUI configuration handling:
	- generalize Hatari configuration handling code and move it to to a
	new config.py file
	- split Config class to ConfigStore and ConfigVariables classes
	- ConfigVariables class makes accessing the configuration variables
	nicer as they are now class attributes and have proper types
	instead of being just strings. The code checks/enforces the Hatari
	types (bool, int, string) on them
	- ConfigStore class then takes care of loading/saving of
	configuration and its changes
	- Renamed ConfigMapping class left to hatari.py into
	HatariConfigMapping and adapted it to the configuration handling
	changes
	[607cc4333fcc]

2008-05-19  Eero Tamminen

	* python-ui/dialogs.py:
	make changed settings dialog text area size itself sensibly
	[d74c86889411]

2008-05-17  Eero Tamminen

	* python-ui/debugui.py, python-ui/hatari.py:
	- use todo and error dialogs in debug UI
	- add options dialog for number of lines on screen
	- use different address skips in memdump & disasm modes
	- get distinct lines from hatari instead of concatenated data
	- remove "Default" button as useless (when monitor windows are added)
	and set Registers as default mode (+ get address from PC register)
	- lots of fixes to how address changes are calculated
	[da385300c4e2]

	* python-ui/dialogs.py:
	- add TodoDialog and ErrorDialog
	- baseclass improvements
	[63394af0224f]

2008-05-13  Eero Tamminen

	* python-ui/debugui.py:
	- Support arrow keys and page up/down as Nicolas requested
	- Added buttons corresponding to page up/down address change
	- fixed TODO dialog close button
	- fixed address entry size
	[421558cf7504]

	* python-ui/debugui.py, python-ui/hatari-ui.py, python-ui/hatari.py:
	- make debug UI work also as standalone
	- move Hatari output file open and read from debugui.py to hatari.py
	[f3744a49335e]

2008-05-11  Eero Tamminen

	* python-ui/debugui.py:
	remove extra space
	[5e3c71f3304a]

	* python-ui/debugui.py:
	when Hatari is stopped again, let Hatari decide from which address
	to do the disassemble/memdump (hopefully that's PC)
	[9bdf763029f8]

	* python-ui/debugui.py:
	- <<, <, >, >> buttons work now
	- user can set the address also
	- add button for default address and option
	- show dialogs for all TODOs
	[d3744f5a657e]

	* python-ui/debugui.py:
	- fix debugui startup, try deleting the log file only if it exists
	- make register dump just one of the dump modes
	- fix the dump widget to monospace font and make it not to resize
	the debugui window if the widget is smaller than the available
	space, only when there's too little space
	[4b162eb0c9fb]

	* python-ui/hatari-ui:
	convenience script for launching hatari-ui.py with all options
	[129e3f12ad94]

	* python-ui/hatari.py:
	improvements to embed window size option matching
	[ab111e92c4ec]

2008-05-10  Eero Tamminen

	* python-ui/debugui.py:
	fix text to monospaced
	[0fd47415f3fc]

	* python-ui/debugui.py:
	- add code for reading Hatari debugger output. fifo had problems,
	but a regular file seems to work as well for now
	- the window hide/show works now properly and there are labels for
	showing the debugger output and address, but they need still a lot
	of fixes and almost none of the buttons do anything yet
	[733761addf28]

	* python-ui/hatari.py:
	fix hatari-stop/cont
	[e60b244afc85]

2008-05-09  Eero Tamminen

	* python-ui/hatari-ui.py:
	improve text/key insert button tooltips
	[d8a88a8be675]

	* python-ui/debugui.py, python-ui/hatari-ui.py, python-ui/hatari.py:
	- add initial dummy debugger UI
	- instead of using SIGSTOP on Hatari process, use the new hatari-
	stop and hatari-cont remote commands, this allows Hatari to
	receive debugging commands while emulations itself is disabled
	- fix bug from paste dialog refactoring
	- other minor changes
	[3cfcdbb78edf]

2008-05-08  Eero Tamminen

	* python-ui/dialogs.py, python-ui/hatari-ui.py:
	- support inserting strings in addition to keycodes
	  - refactored code in paste dialog to a class of its own for this
	- allow user to specify separators between controls
	- add tooltips automatically to controls
	- improved help
	- some other minor changes
	[e4fc51a5afa9]

2008-05-07  Eero Tamminen

	* python-ui/dialogs.py, python-ui/hatari-ui.py:
	- do dialog hide in dialog classes instead of caller
	- add dialog for pasting text to Hatari (after fixing that at Hatari
	side...)
	[627f04a4b48b]

2008-05-05  Eero Tamminen

	* python-ui/dialogs.py, python-ui/hatari-ui.py, python-ui/hatari.py:
	- complete configuration change support for now
	  - show at exit which configuration options were changed and allow
	user to select whether to save or discard them
	- fix frameskip value (Gtk scale widget returns float instead of int)
	[4786f799493f]

2008-04-30  Eero Tamminen

	* python-ui/dialogs.py, python-ui/hatari-ui.py, python-ui/hatari.py:
	- refactored all the configuration variable handling/mapping from
	Hatari and HatariUI classes to the new ConfigMapping class. This
	way the other classes don't need to know anything about the config
	variable names etc.
	  - when Hatari options having corresponding config variable are
	changed, using ConfigMapping sets the new value also to internal
	config variables hash
	- take a copy of the original config vars and add functions for
	listing what was changed and to revert the changes. These can be
	used from the QuitSaveDialog
	- config variable names are uniq, so simplified their handling a
	bit, section->variable mapping is needed only when saving the
	configuration
	[0171c125ceb3]

2008-04-28  Eero Tamminen

	* python-ui/hatari-ui.py:
	add controls for Spec512 and Sound
	[7ef6c74e15a1]

	* python-ui/dialogs.py, python-ui/hatari-ui.py, python-ui/hatari.py:
	start on setup dialog (currently dummy one) and some other minor
	changes
	[8e0f2db91d8e]

2008-04-27  Eero Tamminen

	* python-ui/dialogs.py, python-ui/hatari-ui.py:
	- move all dialogs to their own .py file as separate classes
	- fix latest command line parsing changes and improve its error
	messages
	[388f7e659269]

	* python-ui/hatari-ui.py, python-ui/hatari.py:
	- add support for buttons that simulate doubleclick, rightclick and
	keypress (requires my patch from hatari-devel to Hatari)
	[c27553931493]

2008-04-26  Eero Tamminen

	* python-ui/hatari-ui.glade:
	removed the glade file too
	[7b3bf52cd325]

	* python-ui/hatari-ui.py, python-ui/hatari.py:
	- moved Hatari socket writing from hatari-ui.py to hatari.py
	- glade doesn't really help that much and gives less control, so I
	just wrote code for all the dialogs I created earlier with glade
	and discarded the glade stuff
	- rewrote how the UI is created; user can now specify all controls
	in the UI (from the provided set of them) and whether they are at
	left/right/top/bottom. Got rid of the Shortcuts & HatariUI
	separation at the same time
	[bf2e8899173a]

	* python-ui/hatari-ui.py:
	fix frameskips config var name
	[41e698aa0e5b]

	* python-ui/hatari-console.py, python-ui/hatari-ui.py:
	- hatari commands are separated by newlines
	- add buttons for debug and trace to the UI
	- add dialog for selecting which tracings options are enabled
	[9e144b72d869]

2008-04-24  Eero Tamminen

	* python-ui/hatari-ui.py, python-ui/hatari.py:
	- add UI support for actually controlling hatari when it's running
	- maxspeed Hatari option was renamed to fast-forward
	- fix GtkRange stealing Hatari keyboard focus
	[9427957741ed]

2008-04-22  Eero Tamminen

	* python-ui/hatari-console.py:
	allow multiple options and their parameters on same line
	[62b2d79dee3a]

	* python-ui/hatari-console.py, python-ui/hatari.py:
	socket should be user specific
	[967da9d6801f]

	* python-ui/hatari-console.py:
	console, not ui
	[35eb6c9a2ff7]

	* python-ui/hatari.py:
	add support for Hatari control socket
	[ff33ad56a1d0]

	* python-ui/hatari-console.py:
	This is now about ready:
	- Added support for all Hatari command line options
	- Args given when console is invoked are forwarded to Hatari
	- Hatari is started immediately and console exits if Hatari isn't
	anymore running
	[d456f469dccc]

	* python-ui/hatari-console.py:
	add readline using hatari-console test program
	[c65500f14987]

2008-03-30  Eero Tamminen

	* python-ui/hatari-ui.py:
	finish UI side of the first shortcut widgets. (it's best to do some
	modifications to Hatari to get them actually to do something as
	synthetizing Hatari shortcut keyevents wouldn't be that reliable)
	[a7fdc8520d13]

2008-03-29  Eero Tamminen

	* python-ui/hatari.py:
	fix
	[e8b50a48fcb6]

	* python-ui/hatari-ui.py:
	start adding shortcut button support + better command line parsing
	[085e1b348ac8]

	* python-ui/hatari-ui.py, python-ui/hatari.py:
	give Hatari options that make best out of the space it's embedded
	[140ef6fa7561]

	* python-ui/hatari-ui.glade, python-ui/hatari-ui.py, python-
	ui/setup.py:
	- about dialog should be dialog and dialogs are not resizable
	- configure dialog updates
	- change layout so that hatari container window size is not changed
	and if it is, resize it
	  -> TODO: larger window should be OK... (works fine on N810 now)
	[4abd35d17ce2]

2008-03-12  Eero Tamminen

	* python-ui/hatari.py:
	remove TODO that's done
	[42462e006d0c]

2008-03-08  Eero Tamminen

	* python-ui/hatari-ui.py, python-ui/hatari.py:
	hatari.py:
	- neither hatari nor config classes are singletons anymore
	- configuration loading, saving and showing
	- setting and getting of config key values
	  - they work as strings as there's no map of the key types like in
	Hatari itself
	- when embedding the window, guarantee that emulated machine is
	either ST or STE to make sure window size will be correct hatari-
	ui.py:
	- fix to closing of the UI
	[6f9781f6e1f7]

2008-03-04  Eero Tamminen

	* python-ui/hatari.py:
	support different embed window sizes, hatari supports now borders
	off
	[7c525f9ad7b6]

2008-03-03  Eero Tamminen

	* python-ui/hatari.py:
	get correct Hatari config path
	[d8afba486a1f]

2008-02-25  Eero Tamminen

	* python-ui/hatari-ui.py, python-ui/hatari.py:
	Embedding of Hatari window is now optional
	[4d9002828347]

2008-02-23  Eero Tamminen

	* python-ui/hatari-ui.glade, python-ui/hatari-ui.py:
	add configure dialog for Hatari with non-working content

	(pretty far from working... First is needed conf loading, creating
	rest of the conf UI in glade, then backend code for that, saving new
	config, creating suitable Hatari config lines from the configuration
	in case its not saved etc.)
	[affbdc70ca17]

	* python-ui/hatari-ui.py, python-ui/hatari.py:
	* email address
	* handle window close button & Hatari exit question correctly
	[bfd5de45075f]

	* python-ui/hatari-ui.py, python-ui/hatari.py:
	* Refactor Hatari instance and configuration handling to new
	hatari.py file
	* Change button orders and change dummy maxspeed button to
	pause/unpause
	  * Do Hatari pause/unpause functionality
	* Add fullscreen option and usage to the UI
	* Add icon & title back to mainwin
	* Set Hatari socket widget bg to black and remove bg image stuff
	* Fix Hatari restart handling
	[aa348e9f5c84]

	* python-ui/tests/README:
	update, embedding works
	[d9eab119b5d4]

	* python-ui/hatari-ui.glade, python-ui/hatari-ui.py:
	* Mainwin:
	  - write in python as Glade cannot handle it properly
	  - remove it from the glade file
	* Update glade file from glade-2 to glade-3
	* Add configure and maxspeed placeholder buttons
	[761c1db11973]

2008-02-22  Eero Tamminen

	* python-ui/hatari-ui.glade, python-ui/tests/pygtk-hatari-embed-
	test.py:
	Widget embedding Hatari needs to be GtkSocket (which Glade doesn't
	support) and CAN_FOCUS needs to be *unset* for any other widgets
	taking input. Then keyboard works in Hatari.
	[d05e700b49dd]

	* python-ui/tests/pygtk-hatari-embed-test.py:
	support testing the Hatari itself embedding and more widgets
	[090c0e22f5d3]

	* python-ui/hatari-ui.glade, python-ui/hatari-ui.py:
	some testing changes...
	[22fc0ec2f17b]

2008-01-27  Eero Tamminen

	* python-ui/hatari-ui.glade, python-ui/hatari-ui.py, python-
	ui/setup.py, python-ui/tests/README, python-ui/tests/pygtk-hatari-
	embed-test.py, python-ui/tests/pygtk-hello-world.py:
	Telling the SDL to embed itself didn't work, neither did work
	embedding the Hatari window from PyGtk code. Results of these tests
	are in the tests/ subdirectory.

	I added some "meat" to the hatari-ui and next I'm going to try doing
	the embedding from the Hatari code itself...
	[2f971a884306]

	* python-ui/hatari-ui.glade, python-ui/hatari-ui.py, python-
	ui/setup.py:
	add original Hatari pygtk UI to CVS
	[ab9d9e6e207d]

2009-05-24  Eero Tamminen

	* doc/compatibility.html:
	fix typo
	[7b4b687ce8c6]

2009-05-24  Thomas Huth

	* src/falcon/videl.c:
	Clear horizontal scrolling HW registers during reset. This fixes the
	distorted screen after doing a warm reset in the "Fever week" demo.
	[a3b8503348b2]

2009-05-22  Eero Tamminen

	* doc/compatibility.html, doc/emutos.txt:
	compatibility updates. New "TT/Falcon utilities" section
	[0eed0c8dbef7]

2009-05-21  Thomas Huth

	* website/links.html:
	Added link to Hatari for the Wii
	[373580a30a9c]

2009-05-20  Eero Tamminen

	* doc/compatibility.html:
	more URLs for Falcon games. Couple of extra DSP demos work
	[21759b081b7b]

2009-05-20  Laurent Sallafranque

	* src/falcon/dsp_cpu.c:
	Scaling mode added into read_accu (A or B) and limiting improving.
	This increase a lot ApexJpeg picture rendering (colors are much
	better now)
	[6dd935623534]

2009-05-17  Laurent Sallafranque

	* src/falcon/dsp_cpu.c:
	fix : display correct write value in dsp->host transfer ($FFEB) in
	debug mode
	[6d3b2f8835c2]

2009-05-15  Laurent Sallafranque

	* src/falcon/dsp_cpu.c:
	Optimization in move l: decoding
	[387817d4a78b]

	* src/falcon/dsp_cpu.c:
	fix : correct move S,D register masking (this corrects a move a,n5)
	for example
	[2c484706bd0d]

2009-05-14  Eero Tamminen

	* configure.ac, doc/manual.html, src/main.c:
	optionally measure performance using user time (time spent only by
	Hatari process) which provides
	*much* more accurate results than the use of SDL_GetTicks() "wall
	clock".
	[9b1022403d88]

	* doc/compatibility.html:
	add Logitron Falcon games to list
	[227bab467929]

2009-05-13  Eero Tamminen

	* doc/compatibility.html:
	madness is STe demo, add links to Falcon games + other updates
	[7f04894eba20]

2009-05-12  Eero Tamminen

	* doc/compatibility.html:
	some things work now better, update falcon compatibility
	[225d3d5a2149]

2009-05-06  Laurent Sallafranque

	* src/falcon/dsp.c, src/falcon/dsp.h, src/falcon/dsp_core.c,
	src/falcon/dsp_core.h:
	first implementation of SSI receive data. Lot's of code to add here
	[e227e326e129]

	* src/falcon/dsp.c, src/falcon/dsp_core.c, src/falcon/dsp_core.h,
	src/falcon/dsp_cpu.c:
	Temporary fix : reinsert internal detection of frame sync. This
	should be set by the DMA crossbar. Temporary fix : remove of
	TX_INTERRUPTION_WITH_ERROR Willie's adventure works again
	[075b35ec6cec]

2009-05-05  Laurent Sallafranque

	* src/dmaSnd.c, src/falcon/dsp.c, src/falcon/dsp.h,
	src/falcon/dsp_core.c, src/falcon/dsp_core.h, src/falcon/dsp_cpu.c:
	rewrite of SSI emulation. Added external frame sync from DMA (pin
	SC2), prepared receive data
	[89613911d9f1]

2009-05-03  Eero Tamminen

	* src/debugui.c:
	check length of string scanf reads to prevent stack smashing, remove
	redundant code (scanf appends zero) + use standard strchr()
	[7ba7c4520f9b]

	* website/links.html:
	fix typo & funet link
	[fd7285ae3a8e]

2009-05-02  Thomas Huth

	* doc/images/discs.png, doc/images/floppydisks.png,
	doc/images/harddisks.png, doc/images/main.png,
	doc/images/newfloppy.png, doc/images/sound.png,
	doc/images/system.png, doc/manual.html:
	Updated 'System', 'Floppy', 'Hard disks' and 'Sound' dialog
	descriptions in the manual.
	[bfb2b3b7d340]

	* src/gui-sdl/dlgSystem.c:
	DSP emulation mode can now be chosen in the GUI.
	[e1a889623eb6]

	* src/configuration.c, src/fdc.c, src/gui-osx/PrefsController.m, src
	/gui-sdl/dlgFloppy.c, src/gui-sdl/dlgSystem.c,
	src/includes/configuration.h, src/options.c:
	Moved the 'Slow down FDC' option from the 'system' configuration
	section to the 'floppy disk' configuration section (where it belongs
	to).
	[758caec3306d]

	* src/gui-sdl/dlgSound.c:
	Support more sample sound frequencies in GUI.
	[a9c27faa9da7]

2009-05-02  Laurent Sallafranque

	* src/debugui.c, src/falcon/dsp.c, src/falcon/dsp.h:
	added : dsp debug set register (option dr reg=value)
	[acdb65155786]

2009-05-01  Thomas Huth

	* src/audio.c, src/configuration.c:
	Make sure that nAudioFrequency has always a valid value, also when
	sound is disabled (thanks to KÃ¥re Andersen for the hint).
	[c1cec2ff235d]

	* Hatari.xcodeproj/project.pbxproj:
	Removed araglue.h from Xcode project and enabled DSP emulation.
	[ee811cc9c7e3]

	* website/links.html:
	Revised the hyperlinks and added some new links
	[64a657c5f56a]

2009-05-01  Laurent Sallafranque

	* src/debugui.c, src/falcon/dsp.c:
	removed the TODO for dsp disasm Eero removed yesterday and I readded
	by mistake tonight.
	[fb476efad98a]

	* src/debugui.c, src/falcon/dsp.c, src/falcon/dsp.h,
	src/falcon/dsp_core.c, src/falcon/dsp_disasm.c:
	fixed some minor bugs added dsp disasm dump registers (command dr in
	the debugger) modified dsp disasm program to display correctly
	instructions in 2 words added some comments
	[b2135292468d]

2009-04-30  Thomas Huth

	* src/falcon/dsp.c:
	Made dsp.c compilable again when ENABLE_DSP_EMU is not set
	[eb140e8c06a2]

	* src/gui-osx/PrefsController.m:
	Made OS X Prefs compilable again (fixed issue with sound playback
	frequency variable).
	[5f6030a47474]

	* src/gui-sdl/dlgFileSelect.c:
	Use PATHSEP instead of hard-coded (forward) slash.
	[bbbe5262222c]

2009-04-30  Eero Tamminen

	* doc/release-notes.txt:
	add more things into devel version release notes
	[e58c5b92462a]

	* doc/authors.txt:
	list Laurent's and Kenneth's latest work in authors.txt
	[c7e916e675b8]

2009-04-29  Eero Tamminen

	* src/debugui.c:
	DSP disasm completed, remove TODO
	[40db54c671f3]

2009-04-29  Laurent Sallafranque

	* src/falcon/dsp_core.c, src/falcon/dsp_cpu.c:
	temporary fix : remove stack pointer management to let Build in
	Obsolescence "run". It bugs anyway.
	[38250a0a4700]

	* src/falcon/dsp_core.c:
	Bug corrected in defines for debugging mode + added
	DSP_DISASM_HOSTCVR for host commands.
	[80d6bb442f92]

	* src/falcon/dsp_disasm.c:
	dsp disasm : change the way traces are displayed. We now display
	"pc: opcode disassembled_instruction"
	[3ddae76bdf78]

2009-04-28  Laurent Sallafranque

	* src/falcon/dsp_cpu.c:
	fixed register masking in parallal move + A and B registers in BCHG,
	BCLR, BSET, BTST, JCLR, JSCLR, JSEt, JSSET + code optimisations. At
	least 2 more demos are working : HMMMM and _ demo.
	[33fb845310f5]

2009-04-26  Eero Tamminen

	* src/debugui.c, src/falcon/dsp.c, src/falcon/dsp.h:
	make DSP disassembly continue work, use consistent CamelCaps
	[6d51f52d5174]

2009-04-26  Laurent Sallafranque

	* src/falcon/dsp.c, src/falcon/dsp_disasm.c, src/falcon/dsp_disasm.h:
	dsp.c added : use of dsp_disasm instruction length to disasemble
	correctly the memory.
	[15efd8208354]

	* src/debugui.c, src/falcon/dsp.c, src/falcon/dsp.h,
	src/falcon/dsp_disasm.c:
	compil bug correction + added instruction length in DSP disasm code
	[0f4b1d578fa8]

	* src/debugui.c:
	Added : DSP debug dd command.
	[3e115632ea82]

2009-04-26  Thomas Huth

	* src/control.c, src/uae-cpu/build68k.c, src/uae-cpu/gencpu.c:
	Fixed compiler warnings about ignored return values.
	[d8bc37558f2c]

	* src/audio.c, src/change.c, src/configuration.c, src/dmaSnd.c, src
	/gui-sdl/dlgSound.c, src/includes/audio.h,
	src/includes/configuration.h, src/options.c, src/sound.c,
	src/wavFormat.c:
	Directly save audio frequency in configuration structure instead of
	saving an index into a fixed table. This way it will be easier to
	support more frequencies later.
	[485575733677]

2009-04-26  Eero Tamminen

	* doc/hatari.1, doc/manual.html:
	add --run-vbls to documentation + a section on performance measuring
	[359af9c50fbe]

	* src/includes/main.h, src/main.c, src/options.c, src/statusbar.c:
	add simple support for Hatari performance measuring:
	- count VBLs when fast-forward is used; output speed when Hatari's
	paused
	- add option to exit Hatari after given number of VBLs is reached
	- remove frame-skip max limit (useful with above when skip=VBLs)
	[4cbfe65d3781]

2009-04-23  Eero Tamminen

	* doc/memory-usage.txt:
	updated memory usage doc to latest Hatari
	[177a5c87d1a6]

	* doc/compatibility.html:
	sonol. demo works, tron2 doesn't always start with dsp
	[e5816e3aeb2e]

2009-04-22  Laurent Sallafranque

	* src/falcon/dsp_core.c:
	compil error in DSP trace mode fix
	[f88ccb556db4]

	* src/falcon/dsp_cpu.c:
	Fixed again SR register restoring after a DO loop.
	[da485562a661]

	* src/falcon/dsp_cpu.c:
	bug fixed in SR restoring at end of do loop. Only bit LF must be
	restored.
	[3091cb3404e7]

2009-04-21  Laurent Sallafranque

	* src/falcon/dsp_core.h, src/falcon/dsp_cpu.c, src/falcon/dsp_cpu.h:
	Fixed stack pointer (push, pull and exception). When dream become
	reality demo now works.
	[a0eb8a9a442d]

2009-04-19  Eero Tamminen

	* src/debugui.c:
	address increase TODOs for DSP stubs
	[e2d160b1ca5f]

	* src/debugui.c:
	get rid of compiler warnings and isRange boolean
	[244f68fd27fe]

	* src/debugui.c, src/falcon/dsp.c, src/falcon/dsp.h:
	parse DSP addresses for DSP debugger stubs:
	- generalize range parsing to a new parseRange() function
	- add range parsing to DSP stubs
	- improve the parsing error and DSP stubs TODO messages a bit
	- in the stubs check whether DSP is enabled
	- add new DSP_GetPC() function for the DSP disassemly stub
	- add example for outputting DSP regs/disasm/memdump on debugger
	invoking
	[2add94104300]

2009-04-19  Laurent Sallafranque

	* src/falcon/dsp_disasm.c:
	fixed move and movem in debugger + code optimization
	[110b67c90449]

2009-04-19  Eero Tamminen

	* src/debugui.c:
	add stubs for DSP debugging commands
	[0d94c937e429]

	* src/debugui.c:
	trivial debugger enhancements:
	- simplify memdumping code by allowing a default address for it
	- add example+comment for setting disasm/memdump address and
	outputting them whenever debugger is invoked
	- do default log setting only once per session
	[192592ffeac6]

	* doc/compatibility.html:
	Quickly tested most of the Falcon games & updated info:
	- moved Capy under TT as it's (supposed) to work there too
	- hexagon and cavemania regressed
	- added info on sound to many games
	- added gemplay & great programs
	- other updates
	[d63bb60fa2f3]

2009-04-18  Laurent Sallafranque

	* src/falcon/dsp_cpu.c, src/falcon/dsp_disasm.c:
	Fixed A and B registers tests in functions xxx_reg( (like
	jsclr_reg). Solonuminezcenz demo is full working now.
	[fe321b769ef9]

2009-04-18  Eero Tamminen

	* doc/compatibility.html:
	Several games and demos started working with Laurent's latest
	update. Checked which (DSP needing) games/demos have working sound
	with Thomas' DSP/sound support addition.
	[0bddb4f9f0ff]

2009-04-17  Eero Tamminen

	* doc/compatibility.html:
	Compatibility list updates for Laurent's DSP/sound fixes
	[364de6bf79a6]

2009-04-17  Laurent Sallafranque

	* src/falcon/dsp.c, src/falcon/dsp_core.c, src/falcon/dsp_core.h:
	Some SSI Code cleaning.
	[1f674c43c267]

	* src/falcon/dsp_core.c, src/falcon/dsp_core.h, src/falcon/dsp_cpu.c:
	Double buffering of HostPort Transmit and Receive (TXhml, RXhml,
	HTX, RTX). Sonoluminezcenz fractal mountains are working now.
	[e27c36526cc6]

2009-04-17  Eero Tamminen

	* src/options.c:
	update descriptions for IDE and GEMDOS hd emu options.
	[389d6c01d98b]

	* src/dmaSnd.c:
	*DspOut* variables don't need to be global
	[c08f8d3fd91d]

2009-04-15  Thomas Huth

	* src/falcon/videl.c:
	Added Videl horizontal fine scrolling for 16 bpp and 32 bpp.
	[dd88e7c3a694]

	* src/falcon/videl.c:
	Use default target color depth instead of always 8 bpp for Videl
	emulation.
	[e69fdef33e90]

	* src/falcon/hostscreen.c:
	Fixed Dprintf debugging statements
	[55c6249a7382]

	* src/falcon/hostscreen.c, src/falcon/hostscreen.h,
	src/falcon/videl.c:
	Moved bitplaneToChunky funtion to videl.c and made it static so that
	compiler can optimize better.
	[2d3f670f6a47]

2009-04-14  Laurent Sallafranque

	* src/falcon/dsp.c, src/falcon/dsp_core.c, src/falcon/dsp_core.h,
	src/falcon/dsp_cpu.c, src/falcon/dsp_cpu.h:
	remove of threaded code.
	[acee96cea84e]

2009-04-13  Thomas Huth

	* src/falcon/dsp_core.h, src/falcon/dsp_cpu.c:
	Moved the pc_on_rep variable into the dsp_core_t structure.
	[742e4ae7b735]

2009-04-12  Thomas Huth

	* src/falcon/Makefile:
	Fixed build with DSP disabled (ENABLE_DSP_EMU=0)
	[28cf22dd3723]

	* src/falcon/Makefile, src/falcon/dsp.c, src/falcon/dsp.h:
	Replaced DSP_EMULATION macro with ENABLE_DSP_EMU
	[99a16773d922]

	* src/falcon/hostscreen.c:
	Forgot to remove some remains from araglue.h ...
	[fc9d076344be]

	* src/dmaSnd.c, src/falcon/dsp.c, src/falcon/dsp.h,
	src/falcon/dsp_core.c, src/falcon/dsp_core.h, src/memorySnapShot.c:
	DSP state is now saved to the memory snapshots, too. Also moved to
	the SSI struct variable into the dsp_core_s structure so that it can
	be accessed from outside of dsp_core.c, too (needed for saving the
	SSI data to the snapshots).
	[8c39afe317e1]

	* src/gemdos.c, src/memorySnapShot.c:
	Fixed memory snapshot which was broken by new multiple GEMDOS
	partitions code.
	[e15d761298ff]

	* src/gemdos.c:
	Fixed bug in the new single-/multi-partition detection code.
	[e06154edd641]

	* src/falcon/hostscreen.h:
	Removed obsolete file araglue.h
	[b5601cbe997e]

	* src/falcon/araglue.h, src/falcon/dsp.c, src/falcon/nvram.c:
	Removed obsolete file araglue.h
	[e611b8cbe1f9]

	* src/falcon/dsp.c:
	Added proper Doxygen-like function comments.
	[36f91f5658e0]

	* src/gemdos.c, src/includes/configuration.h:
	Detect GEMDOS HDD single-/multi-partition mode automatically.
	[b96e8ea06788]

2009-04-11  Thomas Huth

	* src/falcon/dsp_core.c:
	Shift DSP SSI data according to word size. First DSP based sound
	applications are working now (e.g. DSP MOD player from bITmASTER)!
	[b3f12c4333ae]

2009-04-10  SÃ©bastien Molines

	* src/gui-osx/SDLMain.m, src/gui-osx/Shared.h, src/gui-osx/Shared.m,
	src/gui-sdl/dlgAlert.c:
	MacOS: Made alerts always display in Cocoa rather than SDL
	[a50ff16197d4]

	* src/gui-osx/PrefsController.h, src/gui-osx/PrefsController.m, src
	/gui-osx/SDLMain.nib/classes.nib, src/gui-osx/SDLMain.nib/info.nib,
	src/gui-osx/SDLMain.nib/keyedobjects.nib:
	MacOS: Added IDE HD control in prefs window
	[c40460cd7f9c]

2009-04-10  Thomas Huth

	* src/uae-cpu/hatari-glue.c:
	Sourcecode beautification
	[2df2f71e4ad6]

	* src/gemdos.c, src/includes/configuration.h, src/includes/gemdos.h,
	src/stMemory.c, src/tos.c, src/uae-cpu/hatari-glue.c:
	Patch #2713 : Multiple GEMDOS HDD Drives. GEMDOS HD emulation can
	now support multiple partitions. It's still disabled by default, set
	MAX_HARDDRIVES in configuration.h to 23 to enable it. Thanks to K.V.
	Kaufman for the original version of this patch!
	[673d3403389a]

	* src/scandir.c:
	Fixed bug in scandir() on Windows. Thanks to K.V. Kaufman for the
	patch.
	[bb7f0c96b4e9]

	* src/gemdos.c:
	Cleaned up superfluous white spaces
	[0e912a3c92fc]

2009-04-10  SÃ©bastien Molines

	* src/falcon/dsp.c:
	Fixed build break when DSP_EMULATION is not defined
	[ee98a33b3cfd]

	* Hatari.xcodeproj/project.pbxproj, src/gui-
	osx/SDLMain.nib/classes.nib, src/gui-osx/SDLMain.nib/info.nib, src
	/gui-osx/SDLMain.nib/keyedobjects.nib:
	MacOS: Updated XCode project, updated prefs dialog to open on 1st
	tab and tidied it up
	[d6e0b25bc9af]

2009-04-10  Thomas Huth

	* src/dmaSnd.c:
	Mix SSI transmit samples into sound output buffer.
	[3dca3a59b329]

	* src/falcon/dsp.c, src/falcon/dsp.h, src/falcon/dsp_core.c,
	src/falcon/dsp_core.h:
	Added interface for reading SSI TX values.
	[cb2fa4943666]

	* src/falcon/dsp_cpu.c:
	Silenced compiler warnings
	[f9167210ffcd]

2009-04-08  Laurent Sallafranque

	* src/falcon/dsp_cpu.c:
	dsp : bug correct in fast interrupt. HMMM runs better (but still not
	displays correctly)
	[46f637376808]

2009-04-07  Laurent Sallafranque

	* src/falcon/dsp_core.c, src/falcon/dsp_cpu.c:
	dsp : 2 bugs corrected in dsp_jsclr and jsset + 1 bug in ssi code
	(frame divider value must be incremented by 1) + some code clean up
	[90a64f433863]

	* src/falcon/dsp_core.c, src/falcon/dsp_cpu.c,
	src/falcon/dsp_disasm.c:
	rewrite of dsp opcode decoder and split of many function to increase
	dsp speed
	[78197ae22e38]

2009-04-02  Nicolas Pomarede

	* doc/compatibility.html:
	Update note for "No Buddies Land".
	[329260f894dc]

	* src/video.c:
	Add support for another empty line method by switching res hi/lo
	(fix the game No Buddies Land)
	[142371d9c9ff]

2009-04-02  Eero Tamminen

	* src/includes/log.h:
	VC6 fixes from Kenneth for tracing (VC6 doesn't support C99 /
	variadic macros)
	[a25a16dbe505]

	* Visual.Studio/VisualStudioFix.c:
	VC6 fixes from Kenneth for tracing
	[76cdc8784edf]

2009-04-01  Laurent Sallafranque

	* src/dmaSnd.c, src/falcon/dsp_core.c, src/falcon/dsp_core.h,
	src/falcon/dsp_cpu.c:
	First implement of SSI transmit data in network mode. Few more
	programs which were freezing at startup are running now. Still lot's
	of code to write.
	[a21c20b09575]

2009-03-31  Eero Tamminen

	* doc/authors.txt:
	Move Laurent to developers, add Kenneth as contributor, fix my
	email.
	[3244dad9af5f]

2009-03-30  Laurent Sallafranque

	* src/falcon/dsp_cpu.c:
	Rework of DSP alu opcode decoder to increase speed
	[c4a1d65f20ec]

2009-03-30  Thomas Huth

	* src/gui-sdl/dlgJoystick.c, src/gui-sdl/dlgScreen.c, src/gui-
	sdl/dlgSystem.c, src/int.c, src/joy.c, src/shortcut.c:
	Uses enum types instead of normal integers. (Thanks to K.V. Kaufman
	for the patch)
	[eea95cfa165d]

	* src/keymap.c:
	Fixed simulated SHIFT key modifier. (Thanks to K.V. Kaufman for the
	patch)
	[db54d1f88296]

	* src/Makefile:
	Fixed Makefile for building with MinGW.
	[77d5f466a555]

2009-03-29  Laurent Sallafranque

	* src/falcon/dsp_core.c, src/falcon/dsp_core.h, src/falcon/dsp_cpu.c:
	added first (still empty) functions and code for SSI support
	[9befc816c6cb]

2009-03-29  Thomas Huth

	* doc/compatibility.html:
	Patch Timer-D must be disabled for Jambala
	[868da09ca56e]

2009-03-28  Thomas Huth

	* src/change.c:
	Reset when changing IDE hard disk images
	[e2930480f92d]

	* website/index.html:
	Fixed typo in the text of the website. (Thanks to Christoph Fritz
	for the patch)
	[9258fca627d5]

	* src/gui-sdl/Makefile, src/gui-sdl/dlgDisk.c, src/gui-
	sdl/dlgFloppy.c, src/gui-sdl/dlgHardDisk.c, src/gui-sdl/dlgMain.c,
	src/includes/dialog.h:
	Split disk dialog into two, one dialog for floppies and one for hard
	disks. This way there was now enough space in the hard disks dialog
	to add configuration entries for the IDE hard disk image, too.
	[6cda61c854d4]

	* src/gui-sdl/dlgMain.c:
	Reworked main dialog to gain additional space for new buttons.
	[4d336694d3b2]

2009-03-28  Nicolas Pomarede

	* doc/compatibility.html, doc/release-notes.txt, src/includes/video.h,
	src/mfp.c, src/video.c:
	When timer B is in event count mode, add support for start of line
	events. This very rare mode depends on MFP's AER and allows to
	trigger a signal when display starts on each active line. (fix Seven
	Gates Of Jambala by Thalion)
	[d72baab75803]

	* src/includes/log.h, src/log.c:
	Add 'io_all' option for --trace
	[5101bbc00845]

2009-03-27  Thomas Huth

	* src/dmaSnd.c, src/includes/dmaSnd.h, src/includes/int.h, src/int.c:
	Added framework for DSP transmit timer.
	[b381efcab1f8]

	* src/dmaSnd.c, src/includes/log.h, src/log.c:
	Added tracing support for DMA / Falcon sound.
	[fedb06eefb3c]

2009-03-26  Thomas Huth

	* src/dmaSnd.c, src/includes/dmaSnd.h, src/ioMemTabFalcon.c:
	Added (still empty) wrapper functions for Falcon sound subsystem.
	[dc2892aa3ecb]

2009-03-25  Laurent Sallafranque

	* src/falcon/dsp_core.c, src/falcon/dsp_core.h, src/falcon/dsp_cpu.c:
	DSP interrupts code optimisations.
	[c6567e2a430d]

2009-03-25  Eero Tamminen

	* doc/manual.html:
	more info on HD drivers. Instead of HTML list, have separate
	sections for Mtools and loop device HD image host access.
	[ec68ff8f75cb]

2009-03-24  Eero Tamminen

	* tools/atari-hd-image.sh:
	major hd image creation updates:
	- use "sfdisk" instead of "parted" as for that the partition type
	can be specified exactly (DOS FAT16, not VFAT)
	  -> partitions are now compatible with Cecile
	- Create files originally as sparse to reduce disk churn
	- More error checks and verbosity
	- minimum working disk size can be 5MB
	[51eadd98f313]

2009-03-23  Thomas Huth

	* doc/manual.html:
	Corrected some typos
	[757012e03486]

2009-03-22  Eero Tamminen

	* doc/compatibility.html, doc/emutos.txt:
	Added a couple of working and non-working (Falcon) games.
	[d3c5fcbeb10b]

	* doc/manual.html:
	move GEMDOS HD emu first, add new section on accessing HD image on
	Linux as the last section on hard disk support.
	[fb998e979134]

	* doc/emutos.txt:
	2 gem games to emutos list
	[03b30cca2ffb]

2009-03-21  Eero Tamminen

	* tools/atari-hd-image.sh:
	check that disk size is sensible, align partition size for mtools
	[0d219ec5e708]

2009-03-20  Thomas Huth

	* src/ide.c:
	Removed debugging code (not required anymore).
	[4bb75a9aea2c]

	* tools/atari-hd-image.sh:
	Use 'mklabel' command instead of 'mktable' for older versions of
	'parted'.
	[1b523b07b50b]

	* doc/compatibility.html:
	Added Jaguar XJ220 to compatibility list
	[ca8082ecc121]

	* tools/zip2st.sh:
	zip2st script does not need 'rename' anymore
	[321dad1bcaa5]

2009-03-18  Eero Tamminen

	* tools/atari-hd-image.sh:
	better variable names + partition size sanity check
	[e5363b15af0b]

	* tools/atari-hd-image.sh:
	add HD image creation usage examples
	[9795b4918314]

	* Makefile:
	more informative Makefile error messages
	[c3a77387e34a]

2009-03-18  Laurent Sallafranque

	* src/falcon/dsp_cpu.c:
	dsp code synch with aranym
	[b8144299f76e]

	* src/falcon/dsp_cpu.c:
	fix for update Rn with modulo : Modulo mode must take care of
	multiple buffers when Nx register = modulo
	[8be9b7fbe77a]

2009-03-18  Eero Tamminen

	* tools/atari-hd-image.sh, tools/zip2st.sh:
	support POSIX shell syntax subset implemented by Ubuntu's Dash shell
	[5015f10733e7]

2009-03-16  Thomas Huth

	* .hgignore:
	Added 'missing' file to ignore list.
	[68e3d5f82aac]

	* config-default.h, configure.ac, src/file.c:
	Added test for availability of select() function
	[f8163f4167b1]

	* Makefile-default.cnf, config-default.h, src/file.c:
	Some changes for compiling Hatari on the Wii. (based on the patch
	from Yohanes)
	[1fb906d9e8e0]

	* src/Makefile:
	Ensure that Makefile.cnf exists before trying to compile anything.
	[3361c2e9f336]

2009-03-15  Thomas Huth

	* src/falcon/hostscreen.c, src/falcon/hostscreen.h:
	Removed unused code and cleaned up.
	[fa79930577df]

	* src/gui-sdl/dlgAlert.c, src/gui-sdl/dlgDevice.c, src/gui-
	sdl/dlgDisk.c, src/gui-sdl/dlgFileSelect.c, src/gui-
	sdl/dlgJoystick.c, src/gui-sdl/dlgKeyboard.c, src/gui-
	sdl/dlgNewDisk.c, src/gui-sdl/dlgRom.c, src/gui-sdl/dlgScreen.c, src
	/gui-sdl/dlgSound.c, src/gui-sdl/dlgSystem.c, src/gui-sdl/sdlgui.c,
	src/main.c, src/psg.c, src/reset.c, src/rs232.c, src/rtc.c,
	src/scandir.c, src/screen.c, src/screenSnapShot.c, src/shortcut.c,
	src/sound.c, src/spec512.c, src/st.c, src/statusbar.c, src/str.c,
	src/tos.c, src/uae-cpu/build68k.c, src/uae-cpu/fpp.c, src/uae-
	cpu/gencpu.c, src/uae-cpu/memory.c, src/uae-cpu/readcpu.c,
	src/unzip.c, src/utils.c, src/vdi.c, src/xbios.c, src/ymFormat.c:
	Replaced obsolete RCS IDs
	[8916d1d5cd6b]

2009-03-15  Laurent Sallafranque

	* src/falcon/dsp_disasm.c:
	Sync DSP disasm code from aranym
	[a577781adf90]

2009-03-13  Thomas Huth

	* src/falcon/dsp_cpu.c:
	Missing type for parallel move 0
	[66bd06d31f37]

2009-03-12  Eero Tamminen

	* doc/emutos.txt:
	4gewinnt compatible with EmuTOS
	[58630f745787]

	* doc/compatibility.html:
	Parallel move fix fixes grid on DSP JPEG decoded images.
	[2b4a84c8a194]

	* src/falcon/dsp_cpu.c, src/falcon/dsp_disasm.c:
	sync parallel move fix from aranym.
	[15e357b4268c]

	* src/falcon/dsp_cpu.c:
	Sync interrupt functions simplification from aranym. Includes also
	hi interrupt host transmit/receice data interrupt updates.
	[a857126fca79]

	* src/falcon/dsp_cpu.c:
	Sync read_memory*() functions simplification from aranym.
	[659477db055a]

2009-03-11  Thomas Huth

	* src/falcon/dsp_cpu.c:
	dsp56k: Deal with the JMP in interrupt case
	[34204469420b]

	* src/falcon/dsp_cpu.c, src/falcon/dsp_disasm.c:
	dsp56k: Fix case for a X:R parallel move which has nearly same
	opcode as MOVEP
	[9777bfde0486]

2009-03-10  Eero Tamminen

	* doc/compatibility.html:
	Papa Was a Bladerunner uses DSP
	[baa3bee4d5c0]

2009-03-08  Eero Tamminen

	* doc/compatibility.html:
	Falcon demo sorting by group like elsewhere. Minor corrections to
	group names from pouet.net.
	[2f5fb3035a18]

	* doc/compatibility.html:
	more falcon demos
	[e8ee852712a6]

2009-03-07  Eero Tamminen

	* doc/compatibility.html, doc/emutos.txt:
	Add more TT demos & organize them like other demos. Couple of other
	minor updates too.
	[3bc8a8da185d]

2009-03-04  Thomas Huth

	* Visual.Studio/VisualStudioFix.c:
	Patch #2689: The main() handling on Visual Studio needs some more
	minor tweaks.
	[70e4fef0ded3]

2009-03-04  Eero Tamminen

	* tools/atari-hd-image.sh, tools/zip2st.sh:
	Show user what scripts are doing, do cleanup in exit handler (exit
	handler is able to do cleanup also in error cases). Also, create
	harddisk image with single "parted" command.
	[fff8a2c3543c]

	* tools/atari-hd-image.sh:
	add initial script for creating a harddisk image
	[483b197df7f0]

2009-03-03  Thomas Huth

	* src/gui-sdl/dlgAbout.c:
	Center program name in title dialog
	[0611bc9eec2b]

	* src/sound.c:
	Cleaned up white spaces.
	[84ceddf1abbb]

2009-03-01  Eero Tamminen

	* src/falcon/dsp_cpu.c:
	separate read_memory_p() function for reading DSP_SPACE_P memory
	addresses to improve performance.
	[3683d7d0ffef]

2009-03-01  Thomas Huth

	* src/falcon/dsp_cpu.c:
	Fixed scaling mode tests
	[6dae8244f236]

	* src/falcon/dsp_cpu.c:
	dsp56k: RND instruction properly used with scaling modes. (fix from
	Laurent Sallafranque)
	[c4424c71be8d]

	* doc/compatibility.html:
	Added Exterminator and No Buddies Land
	[991275dcf8be]

2009-02-28  Thomas Huth

	* tools/zip2st.sh:
	No need to change file names to uppercase when using
	MTOOL_NO_VFAT=1. Mtools can be instructed to _not_ create VFAT
	entries by setting the MTOOL_NO_VFAT environment variable.
	[aa612eb9ed6a]

	* Visual.Studio/VisualStudioFix.c, src/main.c:
	Added WinMain handling
	[0babecf01f61]

	* Visual.Studio/VisualStudioFix.c, Visual.Studio/VisualStudioFix.h:
	Updated file header with license information
	[7c1d62fe72b8]

	* config-default.h:
	Include VisualStudio.h in default config.h
	[e05fedb3dc6d]

	* Visual.Studio/VisualStudioFix.c, Visual.Studio/VisualStudioFix.h:
	Added files for compiling with Visual-C. Thanks to Kenneth Kaufman
	for the patch!
	[358e51279a85]

	* src/falcon/dsp.c:
	Assert that dsp_core is always initialized, also without explicit
	reset.
	[74e9f851778f]

2009-02-27  Nicolas Pomarede

	* src/includes/video.h, src/video.c:
	Support 0 byte line when switching hi/lo res on STE (different
	timing than STF) (fix Lemmings screen in Nostalgic-o-demo)
	[57654482b592]

2009-02-27  Thomas Huth

	* src/falcon/dsp_disasm.c:
	Merged DSP disassembler changes from Aranym repository:
	- Fix register update in parallel move
	- We really don't care about count on same instruction
	[16c96a901960]

2009-02-25  Thomas Huth

	* src/falcon/dsp_cpu.c:
	Small optimization for DSP movec instruction. The sixth bit is
	always set in the movec instructions, so the code can be simplified
	a little bit. Thanks to Laurent for the hint!
	[a696a1a8b125]

2009-02-25  Nicolas Pomarede

	* src/video.c:
	Correct missing end of line timer B interrupt in the case where
	display is stopped with a hi/lo switch. (fix flickering raster in
	Dragon Ball part in Blood disk 2 by Holocaust).
	[f8bd1e7d7f89]

2009-02-25  Eero Tamminen

	* src/falcon/dsp_core.c, src/falcon/dsp_core.h:
	make dsp_core_dsp2host & dsp_core_host2dsp static, they're used only
	in dsp_core.c.
	[15d7f006ad8c]

2009-02-24  Thomas Huth

	* src/falcon/dsp_cpu.c:
	Optimized dsp_movec() a little bit. (Thanks to Laurent for the
	patch)
	[4cf2cde1293f]

	* src/falcon/dsp_core.c, src/falcon/dsp_core.h, src/falcon/dsp_cpu.c:
	Removed SCI code (not used on Falcon) and cleaned code. Thanks to
	Laurent Sallafranque for the patch!
	[dd8699967ab6]

2009-02-22  Eero Tamminen

	* doc/emutos.txt:
	tested new Falcon stuff with EmuTOS
	[9896a6714d19]

2009-02-22  Thomas Huth

	* src/falcon/dsp_cpu.c:
	dsp56k: write_memory functions use 16 bits addressing, no need to
	mask or use 32 bits value
	[075525d24a35]

2009-02-22  Matthias Arndt

	* src/joy.c:
	Tabified joy.c again
	[a9c85f1a86e4]

2009-02-22  Thomas Huth

	* src/falcon/videl.c:
	Mask out unused bits of the resolution registers instead of clipping
	the resolution artificially.
	[4e96540d6f0a]

	* src/falcon/dsp_cpu.c:
	Some trivial optimizations to the read_memory and write_memory
	functions.
	[2fcdff19bec0]

	* .hgignore, src/Makefile, src/falcon/Makefile, src/gui-sdl/Makefile,
	src/gui-win/Makefile:
	Always execute "make" in the sub-folders. So far the sub-folders
	were only entered by make when one of the *.c files changed. Now
	they are always tested, to be able to re-built files also when there
	has been a change to a header file. To ease this built environment,
	all object files are now linked into an archive in the subfolders.
	[b4f4dfd39802]

	* src/falcon/dsp_core.c:
	Remove FORCE_EXEC hack, should buffer host interface transfers
	instead
	[b79513012415]

	* src/falcon/dsp_core.c, src/falcon/dsp_core.h, src/falcon/dsp_cpu.c:
	dsp56k: Use function pointers also for checking semaphore
	[682ba84ac738]

2009-02-22  Nicolas Pomarede

	* src/includes/m68000.h, src/mfp.c, src/uae-cpu/newcpu.c, src/video.c:
	Add better traces for timer B in event count mode.
	[fb8e82c80bd3]

2009-02-21  Eero Tamminen

	* doc/compatibility.html:
	add couple of falcon games & demos more and update others
	[8b0cde312a35]

2009-02-21  Thomas Huth

	* src/change.c:
	Re-initialize the IDE subsystem if necessary. Thanks to Jerome
	Vernet for the patch.
	[b95cde21b946]

	* src/configuration.c:
	Save the IDE settings to the configuration file, too. Thanks to
	Jerome Vernet for the patch.
	[f744bbb4ac7f]

2009-02-21  Eero Tamminen

	* doc/compatibility.html:
	added couple of falcon demos and names for all groups
	[45f2172dcf0c]

2009-02-20  Eero Tamminen

	* src/change.c:
	cosmetic: do both DSP checks the same
	[70bc76957815]

	* src/statusbar.c:
	fix assert. SDL_Gui decides font size based on screen+statusbar
	height
	[d79c80f86339]

2009-02-19  Matthias Arndt

	* src/configuration.c, src/includes/configuration.h,
	src/includes/joy.h, src/joy.c:
	Small joystick handling patch

	- added constants ATARIJOY_BITMASK_UP etc to make code more readable
	- added configuration option bEnableJumpOnFire2 per joystick
	- Joystick button 2 can now optionally act as JOY UP instead of
	pressing SPACE
	[89c331db884f]

2009-02-18  Eero Tamminen

	* doc/compatibility.html:
	couple of additional (non-working) demos
	[b0f616c85378]

2009-02-17  Eero Tamminen

	* doc/compatibility.html:
	added links to rest of falcon demos and checked their DSP
	compatibility
	[91905b9790b0]

	* doc/compatibility.html:
	more links, demo name corrections
	[d19786f4718d]

2009-02-16  Eero Tamminen

	* doc/compatibility.html:
	added some links, newbeat apps work now better with DSP
	[b8f50848009c]

2009-02-14  Thomas Huth

	* src/falcon/dsp.c, src/falcon/dsp_core.c, src/falcon/dsp_core.h,
	src/falcon/dsp_cpu.c, src/falcon/dsp_cpu.h:
	Merged changes from Aranym: Add flag to run with/without thread
	[61c488b6ec0b]

	* src/scandir.c:
	INVALID_HANLDE_VALUE is already defined in winbase.h on MinGW, too,
	so there is no need to re-define it.
	[a5895e8ff0b4]

	* src/falcon/hostscreen.c, src/falcon/videl.c:
	Added some sanity screen size checks to the VIDEL emulation.
	[1f28cff55246]

	* src/falcon/dsp.c:
	Temporary hack to get ROT3DBMP.PRG and BOUND2.PRG running, too.
	[fe93c308cea1]

2009-02-13  Eero Tamminen

	* doc/compatibility.html:
	updated games/demos that work (better) with latest DSP upates
	[64a84148af16]

2009-02-13  Thomas Huth

	* src/change.c:
	Only re-initialize the DSP if really necessary
	[4e564f30474e]

	* src/falcon/dsp_core.c, src/falcon/dsp_core.h, src/falcon/dsp_cpu.c:
	More DSP patches by Laurent Sallafranque.
	- Changed C++ comments to normal C style
	- Removed some debugging code
	- Preparation of the functions for DMA, SSI and SCI
	[f41a8b6f3495]

2009-02-12  Thomas Huth

	* src/falcon/dsp.c, src/falcon/dsp.h, src/falcon/dsp_core.c,
	src/falcon/dsp_core.h, src/uae-cpu/newcpu.c:
	Glued the new single-threaded DSP code to the 68k CPU emulation
	[4ff8fe7b11b7]

	* src/falcon/dsp_core.c, src/falcon/dsp_cpu.c:
	Fixed compiler warnings
	[429ca01bc56d]

	* src/falcon/dsp_cpu.c:
	Sourcecode beautification: Changed indentation in dsp_add56 and
	dsp_sub56
	[f493646a1b4a]

	* src/falcon/dsp.c, src/falcon/dsp.h, src/falcon/dsp_core.c,
	src/falcon/dsp_core.h, src/falcon/dsp_cpu.c, src/falcon/dsp_cpu.h,
	src/falcon/dsp_disasm.c:
	Big bunch of DSP fixes from Laurent Sallafranque. DSP thread has
	been removed (will run from main thread), no more Mutex and
	Semaphores. This should help to get the host interface timing
	sensitive DSP programs working, too. Also added DSP interrupts.
	[c23aa941a486]

	* src/change.c:
	Reverted the last patch (argv can remain const char **) and applied
	a proper fix for the problem (free() takes a void* as argument)
	[00d7933c3b6a]

2009-02-13  Nicolas Pomarede

	* src/rs232.c:
	Fix crash 'division by 0' when timer D data register $fffa25 is 0
	and rs232 is enabled. A data value of 0 should be interpreted as 256
	(same as in mfp.c)
	[2b92a014c1f5]

2009-02-11  Eero Tamminen

	* src/file.c:
	use matching return type
	[bf0e678ff536]

	* src/mfp.c:
	int -> interrupt_id in mfp.c functions calling interrupts
	[430b4c04dff2]

2009-02-10  Eero Tamminen

	* src/gemdos.c:
	remove redundant code, check for missing PATHSEP
	[8ed54bb0e952]

	* src/gemdos.c:
	"new" is reserved word in C++
	[6feceb34afa2]

	* src/msa.c:
	use SDL types in msa.c like code elsewhere does
	[6dc1cfa5d394]

	* src/scandir.c:
	replace ifdef with TODO. Code should include correct header,
	whatever that is for Windows.
	[02aa27df94a4]

	* src/gemdos.c, src/scandir.c:
	move INVALID_HANDLE_VALUE where it's needed (Windows code) and
	define it only if needed (Cygwin, not VC?).
	[4e1303932aa5]

2009-02-08  Nicolas Pomarede

	* doc/todo.txt:
	Add note for spec512 mode in mid res.
	[b3af44cf67af]

	* src/includes/video.h, src/uae-cpu/newcpu.c, src/video.c:
	Handle a very rare case of simultaneous HBL exceptions. If a pending
	HBL triggers an exception because SR becomes < $2200, then any new
	HBL signal occuring during the 56 first cycles used by the 68000 to
	prepare the exception for this pending hbl should be ignored. (fixes
	top border flickering in Monster Business and colors flickering in
	Super Monaco GP)
	[07bf4fcf2013]

2009-02-08  Thomas Huth

	* src/spec512.c:
	Fixed Spec512 palette bug that occured when CurrentInstrCycles were
	not a multiple of 4. This fixes the color bugs in the scroller
	screen of the Fuzion CD 02.
	[866e81cb0327]

2009-02-07  Thomas Huth

	* src/gui-sdl/Makefile:
	Extend list of include paths so that gui-sdl files can find
	config.h, too.
	[c004ad225ff3]

	* src/file.c, src/ide.c, src/includes/control.h,
	src/includes/stMemory.h, src/memorySnapShot.c, src/paths.c,
	src/stMemory.c, src/zip.c:
	Cleaned up header file include statements. config.h is now included
	from main.h, so there is often no need anymore to include it
	directly from other files.
	[c5fb5114bb9c]

	* src/includes/main.h:
	Switched version string back to development string
	[3ba1a34c6fd6]

	* config-default.h:
	Define inline to __inline for Visual-C
	[51c6d792fc19]

	* src/change.c, src/falcon/araglue.h, src/falcon/dsp_core.c,
	src/file.c, src/gemdos.c, src/gui-win/hatari-winicon.rc, src/ide.c,
	src/includes/log.h, src/includes/main.h, src/main.c, src/paths.c,
	src/sound.c:
	Applied some patches from Kenneth Kaufman to make Hatari better
	compilable with Visual-C
	[353a1f354ce0]

	* src/falcon/dsp.c:
	Replaced call to non-existant function showPC with m68k_getpc()
	[f0c2dde0081e]

	* src/falcon/nvram.c:
	Do not redefine debug macro. The D(x) macro is already defined in
	araglue.h, so there is no need to redefine it in the nvram.c file.
	[badbfb72b03a]

	* src/falcon/dsp_cpu.c:
	Fixed parallel X: Y: move "Read S2" register access (thanks to
	Laurent Sallafranque for the patch)
	[30c192747154]

2009-02-04  Eero Tamminen

	* doc/emutos.txt, doc/manual.html:
	Update EmuTOS notes to new Hatari features, improve text
	[220bc2ddac37]

	* doc/manual.html:
	Add Thomas' IDE usage instructions to manual with some additional
	information.
	[916afea2024f]

	* src/psg.c, src/spec512.c, src/uae-cpu/newcpu.c:
	';;' -> ';' (clean out extra ';' characters)
	[5211af90b1e1]

2009-02-03  Thomas Huth

	* website/scrshots6.html:
	Added more DSP screenshots by Laurent Sallafranque
	[26405a8a4f18]

2009-01-31  Nicolas Pomarede

	* doc/release-notes.txt, src/includes/video.h, src/mfp.c, src/video.c:
	Handle a rare case where 'move.b #8,$fffa1f' to start the timer B
	overlaps the end of line signal. In the case where the write is made
	just a few cycles before the actual signal for end of line, we must
	ensure that the write was really effective before the end of line,
	else we should not generate a timer B interrupt for this line.
	(fixes Pompey Pirate Menu #57)
	[dbcb5752a40b]

2009-01-30  Thomas Huth

	* src/falcon/dsp_disasm.c:
	Replaced sprintf with strcpy to get rid of compiler warnings with
	newest GCC versions
	[4fb3ecf5a226]

	* src/hdc.c, src/includes/hdc.h:
	Added proper error checking for fwrite and fread in the HDC code.
	[56e19d4f070c]

	* src/wavFormat.c:
	Reworked WAV recording code. 1) Simplified the writing of the header
	structure. 2) Bytes per second value was wrong, it's fixed now. 3)
	Added proper return value checks for all calls to fwrite().
	[642e98bb94d8]

	* doc/todo.txt:
	Added DSP emulation TODOs by Laurent Sallafranque
	[36dbe6688153]

2009-01-29  Jean-Baptiste Berlioz

	* src/blitter.c:
	fix blitter_fileid and comments overwritten by mistake.
	[395c57c7e3ec]

2009-01-29  Eero Tamminen

	* configure.ac, src/control.c:
	Test SDL_config.h presense.

	If SDL_config.h is missing, just assume SDL doesn't support X11.
	[f9fcdb59f6a9]

	* src/control.c:
	SDL_config.h isn't always present, include it only if HAVE_X11
	defined
	[b083806536a6]

	* src/main.c:
	ignore all unnecessary events, not just joystick motion
	[b728a18285f0]

2009-01-28  Thomas Huth

	* src/debugui.c, src/paths.c:
	Check return values to avoid possible errors.
	[b01c62e8dc95]

	* website/news.shtml:
	Display the news from the BerliOS project page, too.
	[10ec838dae1f]

2009-01-28  Jean-Baptiste Berlioz

	* src/blitter.c:
	Fix blitter.c version.
	[b1f24941e3dc]

	* src/blitter.c:
	Improve blitter implementation and cycles counting.
	[86ca15e7a297]

2009-01-27  Eero Tamminen

	* doc/compatibility.html, doc/emutos.txt:
	links to TT demos + TT-highres slideshow. Updates
	[2bb9b1b5519d]

2009-01-26  Eero Tamminen

	* doc/compatibility.html:
	update
	[6433d756212f]

	* src/main.c:
	Process all motion events before returning from event handler.

	This way analog joystick movements don't slow down Hatari input
	event processing and emulated mouse behaves more responsively on
	slow machines (or e.g. under Valgrind).
	[1ca8ebe2324a]

2009-01-25  Eero Tamminen

	* src/control.c:
	X11 stuff isn't enough, SDL X11 videodriver is also needed
	[2da10bf03a1b]

2009-01-24  Nicolas Pomarede

	* src/video.c:
	Remove test code
	[b0ebc16ea81b]

	* src/video.c:
	Better detection of lines with 2 bytes removed on the right by
	switching to 60 Hz before the end of a 50 HZ line. Some old demos
	are not restoring 50 Hz immediatly (which could distort the image on
	some TV/monitor), but at the start of the next line (fixes menu in
	BBC 10 games compilation).
	[791a781c0083]

2009-01-24  Eero Tamminen

	* website/docs.html:
	alsa-midi.txt -> midi-linux.txt rename
	[c7832763f00f]

	* tools/hatari-local-midi-ring.sh:
	add usage example
	[d68cde3eff04]

	* doc/alsa-midi.txt, doc/midi-linux.txt:
	rename alsa-midi.txt to midi-linux.txt, add contents, better titles
	[af26b93db51a]

	* doc/images/devices.png, doc/manual.html:
	update manual devices section
	[32fabe424170]

2009-01-24 : *** Version 1.2.0 ***

2009-01-24  Thomas Huth

	* doc/release-notes.txt:
	Updated release-notes for version 1.2.0
	[cb68d9e26e92]

	* src/gui-sdl/dlgAbout.c:
	Adjusted About-dialog title (version number is longer nowadays)
	[a160c28cffca]

	* doc/authors.txt:
	Added Tobe to authors.txt
	[97109e1d79f6]

	* doc/local-hatari-midi-ring.sh, tools/hatari-local-midi-ring.sh:
	Moved MIDI ring shell script to tools folder
	[ec5ff5914128]

	* src/dialog.c, src/gui-sdl/dlgMain.c, src/gui-sdl/dlgMemory.c,
	src/includes/dialog.h:
	Fixed inappropriate "Emulator must be reset..." dialogs when loading
	memory snapshots. The dialogs occured when loading a memory snapshot
	with a different machine type than the previous one. To avoid these,
	the emulator must not do the normal configuration post-processing
	when loading a memory snapshot.
	[89be70b9fdff]

	* doc/todo.txt:
	Updated TODO list.
	[f595f5da4b71]

	* src/audio.c, src/bios.c, src/blitter.c, src/cart.c, src/cartData.c,
	src/cfgopts.c, src/configuration.c, src/control.c,
	src/createBlankImage.c, src/cycles.c, src/debugui.c, src/dialog.c,
	src/dim.c, src/dmaSnd.c, src/fdc.c, src/file.c, src/gemdos.c,
	src/hdc.c, src/ikbd.c, src/int.c, src/ioMem.c, src/ioMemTabFalcon.c,
	src/ioMemTabST.c, src/ioMemTabSTE.c, src/ioMemTabTT.c, src/joy.c,
	src/keymap.c, src/log.c, src/m68000.c, src/memorySnapShot.c,
	src/mfp.c, src/msa.c, src/options.c, src/paths.c, src/printer.c, src
	/uae-cpu/hatari-glue.c:
	Replaced the obsolete RCSIDs with new file-ID strings
	[4f62ef3707c1]

	* Info-Hatari.plist, src/gui-osx/English.lproj/InfoPlist.strings:
	Increased version number in the Mac OS X files to 1.2.0, too
	[02d5ef64a08e]

	* configure.ac, doc/doxygen/Doxyfile, hatari.spec, readme.txt,
	src/includes/main.h, src/memorySnapShot.c:
	Increased version number to 1.2.0
	[ab6a74b1f638]

	* src/falcon/dsp_cpu.c:
	dsp56k: Fix decoding for NORM instruction (thanks to Matthias
	Alles).
	[63d282ebc118]

2009-01-24  Nicolas Pomarede

	* src/psg.c:
	No need to test for 'movep', as this already implies byte access ;
	testing for SIZE_BYTE is enough.
	[60748ca51e0f]

2009-01-24  Thomas Huth

	* tools/hmsa/Makefile:
	Use LIBS from main Makefile.cnf
	[97710f162f97]

	* src/ide.c:
	Added memalign function for MinGW
	[a56f7d9fa956]

	* Makefile-MinGW.cnf, src/file.c:
	select() requires extra header and libws2_32 on MinGW
	[50d9c2f4e9e6]

2009-01-23  Eero Tamminen

	* doc/release-notes.txt:
	mention midi option change in release notes
	[936b6c375ed0]

2009-01-22  Nicolas Pomarede

	* src/video.c:
	Allow to mix low/mid res lines on the same screen when STE
	horizontal scroll is used
	[95ef7304d20a]

2009-01-21  Nicolas Pomarede

	* doc/release-notes.txt:
	Update release notes for 1.2
	[a6b349946167]

	* src/video.c:
	Implement STE horizontal scroll using $ff8264/65 for medium res too.
	(fixes cool_ste.prg from http://www.atari-
	forum.com/viewtopic.php?f=5&t=15795#p137656)
	[e0f04de6f8fe]

	* src/video.c:
	Update comment
	[bb75889b4563]

2009-01-21  Eero Tamminen

	* src/gui-sdl/dlgDisk.c, src/shortcut.c:
	fix potential zip_path leak
	[3e717d4e6d9c]

	* doc/compatibility.html, doc/manual.html:
	err, 1.2, not 1.3
	[443ddef9cbe7]

	* doc/hatari.1, doc/manual.html:
	update midi/rs232/ide option docs
	[b553686af78c]

	* doc/compatibility.html:
	version update: devel -> 1.2/1.3
	[0ae9bfac6ea9]

	* doc/alsa-midi.txt, doc/local-hatari-midi-ring.sh:
	update for midi option changes
	- separate options for input and output
	- add example on how to create a local midi ring with fifos
	[8071f5dc579d]

	* src/midi.c:
	try open only if filename, error dialog if open fails
	[b8b1795b3436]

	* src/options.c:
	Replace midi/rs232 options with separate input & output options.
	Remove redundant change comments & update fileid string.
	[9267a283c741]

	* src/file.c:
	special-case empty filename
	[16df9ea66a7b]

2009-01-20  Eero Tamminen

	* tools/hmsa/Makefile, tools/hmsa/hmsa.c:
	include Makefile.cnf, fix warning
	[f670b872f288]

2009-01-19  Eero Tamminen

	* src/floppy.c, src/includes/floppy.h:
	Floppy_EjectBothDrives() can be static, PhysicalSector functions
	don't exist, log about disk flush on Eject.
	[0504bf5d33fc]

2009-01-18  Thomas Huth

	* tools/zip2st.sh:
	Restrict disk image sizes to Atari ST compatible ones.
	[cbce42fb2566]

	* src/ide.c:
	Cleaned up IDE code.
	- Declared local variables as static.
	- Removed unused code.
	- Rewrote the Init and UnInit functions to only (de-)allocate
	ressources if really necessary.
	[632579d64f93]

	* src/floppy.c, src/includes/floppy.h:
	Fixed ugly bug that could write data to the wrong disk image. When
	exchanging floppy disk images, and the old image has been modified,
	Hatari accidentially wrote the old image to the new file, thus
	destroying the new image.
	[9728630c7e12]

2009-01-18  Eero Tamminen

	* doc/alsa-midi.txt:
	update/correct midi networking instructions
	[5aad3a1ad4f4]

2009-01-18  Nicolas Pomarede

	* src/includes/video.h, src/uae-cpu/hatari-glue.c, src/video.c:
	Add the function Video_Reset_Glue(). When the 68000 RESET
	instruction is called, the GLUE chip responsibles for generating the
	H/V sync signals should be reset, which means video freq and video
	res should be set to 0 (fixes Pompey Pirate 44 which jump to the
	start of the tos and expect the resolution to be set to low res, not
	mid res)
	[70dd352e89dd]

2009-01-16  Thomas Huth

	* src/midi.c:
	Do not consider it as fatal anymore when the MIDI input file can not
	be opened.
	[765aa8904021]

2009-01-16  Nicolas Pomarede

	* src/video.c:
	Handle a special "strange" case when writing only to the upper byte
	of the color reg (instead of writing 16 bits at once with .W/.L). In
	that case, the byte written to address x is automatically written to
	address x+1 too. So : move.w #0,$ff8240 -> color 0 is now
	$000 move.b #7,$ff8240 -> color 0 is now $707, not
	$700 ! move.b #$55,$ff8241 -> color 0 is now $755
	($ff8240 remains unchanged)
	[bb853f7e7fb8]

2009-01-16  Thomas Huth

	* src/change.c:
	Re-initialize MIDI subsystem if user has change MIDI settings.
	[9937ef203026]

	* src/midi.c:
	ACIA GPIP bit is now emulated for the MIDI input, too. This fixes
	Oxyd 2 in MIDI two player mode.
	[04e709013704]

	* Makefile.cnf.in:
	Added missing INSTALL_SCRIPT variable
	[cdbb660c700b]

2009-01-13  Eero Tamminen

	* doc/compatibility.html, doc/release-notes.txt, doc/todo.txt:
	note that MIDI input works now
	[87990958bdea]

2009-01-13  Thomas Huth

	* src/midi.c:
	Fixed MIDI output emulation. If the second bit in the MIDI ACIA
	status register is set, this means that the transfer register is
	empty, _not_ that it is full. This fixes the sound output problems
	with "Sequencer ONE" for example.
	[d2d97c8d0916]

2009-01-12  Eero Tamminen

	* doc/alsa-midi.txt, src/midi.c:
	updates about GUIs & fixed sound SW issues
	[5bdbbf815a26]

2009-01-12  Thomas Huth

	* configure.ac, src/ide.c:
	Added autoconf test for malloc.h (it's not available on all systems)
	[a715a992d992]

2009-01-11  Eero Tamminen

	* tools/zip2st.sh:
	use suitable disk size, more error checks, exclude .zip from .st
	name
	[a57c0fd5c845]

2009-01-10  Thomas Huth

	* configure.ac, src/ide.c:
	Added autoconf tests for posix_memalign, memalign and valloc
	[5ac0d1f31756]

2009-01-09  Thomas Huth

	* src/ide.c:
	ENOMEDIUM was not defined on Mac OS X
	[6b6f38ff09cf]

2009-01-07  Thomas Huth

	* src/ide.c:
	Support read-only IDE hard disk images, too.
	[8999884be039]

2009-01-10  Thomas Huth

	* src/gui-osx/PrefsController.m:
	Fixes to make the OS X GUI compilable again.
	[b5037cf442f0]

2009-01-09  Thomas Huth

	* config-default.h:
	Avoid to re-define BIN2DATADIR. On Mac OS X, BIN2DATADIR is already
	defined in the XCode project file, so it should not be defined in
	config.h again.
	[2d49ec0c4911]

	* src/falcon/dsp_cpu.c:
	dsp56k: Cleanup for MOVEC instruction parameter decoding
	[cba3d8ab0541]

2009-01-06  Eero Tamminen

	* Makefile, Makefile-default.cnf:
	install zip2st
	[8ad784574afb]

	* src/reset.c:
	add midi.h include to fix compile warning
	[fa750f3970f6]

2009-01-05  Eero Tamminen

	* website/links.html:
	link to Hatari UI page + update on my page desc
	[ece1ccce0dea]

	* website/index.html:
	n770,n800,n810
	[2c1c1724f2d6]

	* website/docs.html:
	- libpng is optional, development files are needed for building
	- more notes about things to configure to get more performance
	[61f5daf11021]

	* etc/README:
	note about paths in n810.cfg
	[4a9a00f16d68]

	* doc/alsa-midi.txt:
	add Debian package names and link to kaconnect
	[0f3c9ba5bf0b]

2009-01-05  Thomas Huth

	* src/ide.c, src/includes/ide.h, src/main.c:
	Added IDE hard disk emulation. The code is based on the IDE
	emulation code of QEMU. Tested successfully with AHDI 6, Cecile and
	HD-Driver demo version, however partitioning seems only to work with
	Cecile so far.
	[0aa2196d97cc]

	* tools/zip2st.sh:
	Fix access rights after unpacking since .zip files created with
	STZip sometimes have the rights messed up
	[2c09bdc31988]

	* src/configuration.c:
	Allow special file names for RS232 emulation, too.
	[97a53484dd03]

2009-01-04  Thomas Huth

	* tools/zip2st.sh:
	Added a simple script for converting .ZIP files into .ST disk
	images.
	[f453ff6ac1e1]

2009-01-03  Thomas Huth

	* src/gui-sdl/dlgDevice.c:
	MIDI input can now be configured in the GUI, too.
	[b933fd402a86]

2009-01-01  Thomas Huth

	* src/configuration.c, src/control.c, src/includes/configuration.h,
	src/includes/int.h, src/includes/midi.h, src/int.c, src/midi.c,
	src/options.c, src/reset.c:
	Added basic MIDI input support.
	[425a961bd2a6]

	* src/file.c, src/includes/file.h:
	Added a new function which can be used to poll a file descriptor for
	input.
	[922cb75dc394]

2008-12-31  Thomas Huth

	* doc/alsa-midi.txt:
	Added information about how to use soundcards with built-in MIDI
	synthesis capability
	[4580e079f856]

2008-12-29  Thomas Huth

	* website/contact.html:
	General update of the contact web page.
	[8a3fa6b7e0ca]

	* doc/authors.txt:
	Replaced '@' character with 'at' to confuse spam-bots
	[44bf905b1326]

	* doc/compatibility.html, doc/manual.html:
	Fixed HTML code so that it passes the HTML validator again.
	[46ee1c8e8e24]

	* website/backgnd.png, website/contact.html, website/docs.html,
	website/download.html, website/favicon.ico, website/hatari-
	small.png, website/hatari.css, website/hatari.png,
	website/index.html, website/links.html, website/news.shtml,
	website/scrshots.html, website/scrshots1.html,
	website/scrshots2.html, website/scrshots3.html,
	website/scrshots4.html, website/scrshots5.html,
	website/scrshots6.html:
	The website is now tracked in the HG repository, too.
	[a0efc9e93050]

2008-12-29  Jean-Baptiste Berlioz

	* src/blitter.c, src/cycles.c, src/spec512.c:
	improve blitter timings improved blitter timings when accessing
	hardware registers.
	[4f5ac6ad2a21]

2008-12-29  Thomas Huth

	* doc/todo.txt:
	HBLs have now been disabled in VDI extended resolution mode, thus
	removing the corresponding item from the TODO list.
	[8dd0823686e1]

2008-12-28  Thomas Huth

	* src/uae-cpu/newcpu.c:
	Do not continuesly call main event handler when CPU has been
	stopped. When the emulated CPU was stopped, Hatari used up to 99% of
	the resources of the host CPU because Main_EventHandler was called
	continuesly. This has now been removed since it was also not
	required anymore.
	[909b04e93755]

2008-12-27  Thomas Huth

	* src/ikbd.c, src/includes/ikbd.h, src/includes/int.h, src/int.c,
	src/video.c:
	Introduced a new Int event handler which takes care of sending
	keyboard, joystick and mouse events regularly. This way the IKBD
	code is now independend from the HBL and VBL timings (on which it
	depended before).
	[5f7b3e42e756]

	* src/mfp.c, src/video.c:
	Disabled HBL emulation in extended VDI resolution mode for better
	performance.
	[c8440d223814]

	* src/includes/log.h, src/ioMem.c, src/log.c:
	Added traces for generic IO memory accesses.
	[da220d747c4d]

2008-12-26  Thomas Huth

	* src/falcon/dsp_cpu.c:
	More dsp56k fixes (from the Aranym repository): Immediate value for
	REP is 12bit wide. Simplified REP and DO instruction parameter
	decoding.
	[b49cbba9c4df]

2008-12-26  Nicolas Pomarede

	* src/video.c:
	On ST/STE, set unused bits to 1 when reading $ff820a.
	[76a55836b2a2]

	* src/video.c:
	On ST/STE, set unused bits to 1 when reading $ff8260 (fix Awesome
	Menu 16)
	[422d0df3257d]

2008-12-26  Thomas Huth

	* src/ikbd.c:
	Fixed IKBD mouse + joystick enabling during IKBD reset time. If only
	joystick reporting has been enabled during reset time, the mouse is
	not turned on, too. Now both sensitive games are working right,
	Barbarian 1 and Super Cars II.
	[ca7492cecad9]

	* .cvsignore, src/.cvsignore, src/falcon/.cvsignore, src/gui-
	sdl/.cvsignore, src/uae-cpu/.cvsignore, tools/hmsa/.cvsignore:
	Removed old .cvsignore files
	[15fc6b07ccdb]

	* .hgignore:
	Added more generated files to the .hgignore list.
	[4363b80a4640]

	* .hgignore:
	Extended .hgignore file
	[8035836146b9]

	* hatari.spec:
	Changed URL from sourceforge.net to berlios.de
	[a3878f0177c2]

2008-12-23  Nicolas Pomarede

	* doc/compatibility.html:
	Add note for Illusion Demo by Dune.
	[193f7aa2ec27]

2008-12-22  Thomas Huth

	* src/ikbd.c:
	Fixed fire button problem in 'New Zealand Story' and added some more
	trace debug output.
	[eea4fb4bf961]

2008-12-21  Nicolas Pomarede

	* src/blitter.c, src/cycles.c, src/includes/m68000.h, src/m68000.c,
	src/spec512.c:
	Add a simple BusMode variable to store when the bus is owned by the
	blitter (for better cycle accuracy when the blitter accesses video
	registers).
	[8fd466ed996c]

	* src/includes/fdc.h:
	Update comment : hbl -> cpu cycles
	[84657579fd42]

	* src/includes/psg.h, src/ioMemTabFalcon.c, src/ioMemTabST.c,
	src/ioMemTabSTE.c, src/ioMemTabTT.c, src/psg.c:
	Better emulation of read/write accesses to $ff8801/03 (fixes music
	in the game X-Out).
	[f68f588beac1]

2008-12-20  Nicolas Pomarede

	* src/uae-cpu/newcpu.c:
	Typo in comment
	[abcfcd83ec66]

	* src/uae-cpu/newcpu.c:
	Faster evaluation for 'while' in m68k_run_1
	[d6c34d200823]

2008-12-20  Nicolas Pomarede

	* src/includes/log.h, src/log.c, src/psg.c:
	Change trace types for read/write access
	[2025b1a9ab2b]

2008-12-20  Thomas Huth

	* doc/compatibility.html, doc/manual.html, src/gui-osx/SDLMain.m:
	Changed the URL from hatari.sourceforge.net to hatari.berlios.de
	[ef8e17f0f47c]

	* doc/authors.txt, tools/hmsa/readme-hmsa.txt:
	Updated my e-mail address
	[de856335e45a]

2008-12-19  Thomas Huth

	* doc/fr/hatari.1, doc/hatari.1, readme.txt:
	Changed the URL from sourceforge.net to berlios.de
	[1ea96b7976f8]

2008-12-15  Nicolas Pomarede

	* src/fdc.c, src/includes/fdc.h:
	Add a dummy function for the type III command Read Address which set
	status as if the command succeeded (but does nothing in fact). Fix
	loader routines used in Pompey Pirates compilations (23, 27, ...)
	that uses Read Address only to update the status register.
	[92e123a23cb2]

	* src/mfp.c:
	Add trace when reading gpip in $fffa01
	[9303debc1250]

2008-12-14  Eero Tamminen

	* doc/compatibility.html:
	VGA slideshow works now (some issues are still there, but they could
	be bug in the program, not Hatari...)
	[6cc356cec16b]

2008-12-14  Nicolas Pomarede

	* src/spec512.c:
	Improve cycle position when writing to color registers (by comparing
	with a real STF). This should give less artefacts with multipalettes
	pictures (fix Froggies Over The Fence Main Menu).
	[410fe08cf34c]

	* src/video.c:
	Remove no more used variable.
	[f690fe8d7eef]

	* src/uae-cpu/newcpu.c:
	No need to check for pending interrupt in m68k_run_1 if the cpu is
	in STOP state, this will be handled in do_specialties() (else, the
	call to do_specialties_interrupt() could acknowledge the int too
	soon and prevent exiting the STOP state). Fix regression introduced
	in 2008/12/11 for Oh Crickey's hidden screen by ULM.
	[4670f94b1738]

2008-12-13  Nicolas Pomarede

	* src/blitter.c:
	Small change on NFSR by TobÃ©
	[c3feee8716db]

	* doc/compatibility.html:
	No more crash in Mindbomb's 3D Balls screen since Hatari 1.1.0
	[77f13249f224]

2008-12-13  Eero Tamminen

	* doc/compatibility.html, doc/emutos.txt:
	Wolf3D (even v0.8a) has started to work both with GEMDOS HD emu and
	EmuTOS
	[10f542325c1c]

2008-12-12  Eero Tamminen

	* doc/compatibility.html:
	- As far as I can see, Next:Illusion screen doesn't have issues
	anymore (due to latest Blitter updates I assume)
	- Utopos statusbar doesn't flicker anymore for v1.12 demo nor v1.61
	full version as it did earlier. I was able to get latter to flicker
	once, but couldn't repeat it and the v1.50 demo statusbar still
	flickers, but I assume those are bugs in the programs, not Hatari.
	[9bb9826cb2a4]

2008-12-12  Nicolas Pomarede

	* doc/compatibility.html:
	Suretrip 49% by Checkpoint and digi-sound in Swedish New Year's TCB
	screen are now OK.
	[6cc7aa2a1ccc]

2008-12-12  Thomas Huth

	* src/blitter.c, src/includes/blitter.h, src/ioMemTabFalcon.c,
	src/ioMemTabST.c, src/ioMemTabSTE.c:
	Improved blitter emulation from TobÃ©:

	This new code try to emulate the internal blitter processes as
	described in the official documentation. It does not perform any
	operation if it's not necessary, so it doesn't need a cycle table,
	the timings are accurate because the logic is accurate. The
	registers are kept up to date, the words-per-line never reach zero,
	and the source and destination registers are incremented as
	described in the docs. When started with 0 in either words-per-lines
	or lines-per-block, the value stored in these registers is set to
	65536.
	[ba8cbab3da98]

2008-12-11  Nicolas Pomarede

	* src/includes/mfp.h, src/mfp.c, src/uae-cpu/newcpu.c:
	Return TRUE of FALSE in MFP_CheckPendingInterrupts() instead of
	void. Create do_specialties_interrupt() to check only the special
	flags related to MFP/video interrupts and factorize some code. When
	testing for simultaneous interrupts, call do_specialties_interrupt()
	not do_specialties().
	[2fb5c83c8a8a]

	* src/includes/main.h:
	Change window's title from 1.1.0 to devel
	[0e81594ffcf5]

2008-12-10  Nicolas Pomarede

	* src/video.c:
	Add 4 cycles tolerance for the 60/50 switch used to produce a 0 byte
	line.
	[73b0becf4327]

	* src/memorySnapShot.c:
	Change version number. Latest snapshots are no more compatible with
	1.1.0
	[75d589785f53]

	* src/includes/video.h, src/uae-cpu/newcpu.c, src/video.c:
	Much more accurate behaviour for HBL/VBL : handle 8 cycles HBL/VBL
	jitter as on a real STF and allow VBL to interrupt HBL 312 at the
	same point as on STF too. Fix Fullscreen in Suretrip 49% by
	Checkpoint and digi sound in Swedish New Year's TCB screen.
	[cc80273b5fbc]

2008-12-01  Thomas Huth

	* Hatari.xcodeproj/project.pbxproj:
	Added missing files to OS X target
	[171b0a9a5f7f]

2008-11-29  Nicolas Pomarede

	* doc/compatibility.html:
	European Demos by Overlander won't run if HD emulation is ON
	[f9764c21b319]

2008-11-29 : *** Version 1.1.0 ***

2008-11-29 12:29  Thomas Huth

	* Info-Hatari.plist, configure.ac, hatari.spec,
	  doc/doxygen/Doxyfile, src/memorySnapShot.c,
	  src/gui-osx/English.lproj/InfoPlist.strings, src/includes/main.h:
	  Increased version number to 1.1.0

2008-11-29 12:21  Thomas Huth

	* readme.txt, doc/authors.txt, doc/release-notes.txt: Updated docs
	  for version 1.1.0

2008-11-28 22:26  Thomas Huth

	* etc/: README, win-ce.cfg: Added win-ce.cfg file for Hatari on
	  Windows Mobile devices

2008-11-28 22:02  Thomas Huth

	* doc/emutos.txt: Rearranged paragraphs and wordings a little bit,
	  and corrected debug section.

2008-11-28 18:54  Thomas Huth

	* src/floppy.c: Fixed the bug that floppy B: was not ejected and
	  saved at exit when floppy A: was also inserted.

2008-11-27 21:17  Eero Tamminen

	* doc/compatibility.html: latest DSP changes improved Bad Mood
	  graphics a lot, but made the game *much* slower (at least to
	  react to user input).

2008-11-26 21:26  Thomas Huth

	* src/falcon/dsp_cpu.c: Merged changes from Aranym repository: More
	  fixes from Laurent Sallafranque.  - Fix calculation of overflow
	  bit in add56/sub56.  - Fix registers S2,D2 for TCC instruction.

2008-11-25 22:25  Thomas Huth

	* src/falcon/dsp_cpu.c: Fixed dsp_div calculation. Thanks to
	  Laurent Sallafranque for the patch.

2008-11-25 22:17  Thomas Huth

	* src/falcon/dsp_cpu.c: Fixed SR calculation in LSL and LSR of the
	  DSP56k emulation. Thanks to Laurent Sallafranque for the patch.

2008-11-25 21:51  Thomas Huth

	* src/: configuration.c, joy.c, includes/configuration.h: Enable
	  the real joystick by default now instead of the
	  joystick-with-cursor-keys emulation.

2008-11-24 21:46  Eero Tamminen

	* doc/manual.html: minor tweaks

2008-11-23 20:21  Eero Tamminen

	* doc/manual.html: simplify/clarify the joyemu paragraphs

2008-11-23 16:09  Thomas Huth

	* doc/manual.html: Updated some more obsolte sections in the manual

2008-11-23 13:49  Eero Tamminen

	* doc/: manual.html, images/devices.png, images/discs.png,
	  images/sound.png, images/tos.png: - crop all screenshots to have
	  just the dialog content + update their   sizes accordingly.  make
	  them floats unless they're longer than   the associated text -
	  PNG screenshot support - minor platform list update - build
	  instructions updates - fix "--trace help" - re-order/clarify fsel
	  text a bit - improve frameskip explanation - be explicit about
	  the sound record file name extension effect - shortcut
	  explanations improvements + consistency - joy keys are
	  configurable - emphatize GEMDOS emu issue

2008-11-23 13:44  Eero Tamminen

	* doc/: compatibility.html, emutos.txt: - note about dynabusters+
	  screen flicker - add sudoku to emutos lists & sort ST program
	  names like others are

2008-11-23 13:13  Nicolas Pomarede

	* doc/release-notes.txt: Some improvements were made for STE video
	  registers

2008-11-23 12:49  Nicolas Pomarede

	* src/: sound.c, includes/sound.h: Bye bye old sound core :)

2008-11-23 12:43  Eero Tamminen

	* doc/images/memory.png: old memory screenshot missed autosave
	  checkbox, update

2008-11-23 12:36  Eero Tamminen

	* doc/hatari.1: fix: --trace help

2008-11-23 11:48  Thomas Huth

	* doc/manual.html: Updated the screen and keyboard dialog and the
	  GEMDOS HD sections.

2008-11-23 11:27  Thomas Huth

	* src/: main.c, control.c: Silenced debug output in normal log mode

2008-11-23 10:48  Thomas Huth

	* doc/compatibility.html: DMA sound is distorted in 'Systematic
	  error' demo

2008-11-22 19:21  Eero Tamminen

	* src/shortcut.c: - Boss key also pauses emulation (so that Hatari
	  CPU use and sound stop) - Pause&unpause emulation before&after
	  disk dialog as is done for options - Unpause emulation for
	  warn&cold reset

2008-11-22 18:04  Eero Tamminen

	* src/main.c: Not safe to ignore events.  Seems to stop also SDL
	  processing them internally, not just propagating them to the
	  application.	By default SDL enables all events execpt for
	  SYSWMEVENT, so setting the event states can be just removed.

2008-11-22 17:01  Thomas Huth

	* Hatari.xcodeproj/project.pbxproj: Cleaned up the Xcode project
	  file a little bit.

2008-11-22 16:59  Thomas Huth

	* src/gui-osx/: PrefsController.h, PrefsController.m,
	  SDLMain.nib/classes.nib, SDLMain.nib/info.nib,
	  SDLMain.nib/keyedobjects.nib: Fixed the 'Load config' and 'Save
	  Config' buttons and removed the non-working Spec512 Slider from
	  the OS X GUI.

2008-11-22 15:31  Thomas Huth

	* src/gui-osx/: PrefsController.m, Shared.m: Made the OS X GUI
	  compilable again.

2008-11-22 11:43  Thomas Huth

	* src/gui-osx/SDLMain.m: Removed the obsolete screen snapshot FPS
	  parameter also from the OS X GUI.

2008-11-21 22:27  Eero Tamminen

	* doc/compatibility.html: finetuning

2008-11-21 22:14  Eero Tamminen

	* doc/: compatibility.html, emutos.txt: more things found working

2008-11-21 19:28  Eero Tamminen

	* src/gui-sdl/sdlgui.c: dialog processing should ignore all motion
	  events

2008-11-20 22:46  Eero Tamminen

	* src/: main.c, screen.c: Move event selection from screen.c to
	  main.c and ignore unneeded events.  Fixes internal GUI
	  fileselector CPU usage with analog joysticks (that haven't been
	  properly centered) that caused it to constantly poll doDialog().

2008-11-20 22:34  Eero Tamminen

	* src/keymap.c: Ignore empty keymap file names (Keymap_Init() calls
	  Keymap_LoadRemapFile() unconditionally).

2008-11-19 00:17  Thomas Huth

	* src/dmaSnd.c: Decrement nMwTransferSteps _before_ writing the
	  registers in DmaSnd_InterruptHandler_Microwire(). If not the
	  shifting finished 8 cycles too late compared to a real STE.
	  (Thanks to David Savinkoff for the hint)

2008-11-18 22:14  Eero Tamminen

	* etc/: README, n810.cfg: Use directories that exist already and
	  are user visible in the normal 770/N8x0 UI.  Remove irrelevant
	  settings.

2008-11-18 21:12  Eero Tamminen

	* src/gui-sdl/dlgNewDisk.c: Fix the case when the configured disk
	  path doesn't end in slash.

2008-11-18 21:10  Eero Tamminen

	* src/gui-sdl/dlgFileSelect.c: * Use File_DirExists() instead of
	  statting directly.

	  * Handle existing path with non-existing file better. Earlier
	  File	 selector moved to CWD in this case, now it keeps in the
	  directory and   just suggest the given filename.

	    This doesn't change the normal Hatari behaviour as Hatari paths
	    default to CWD, but it helps packages providing Hatari config
	  files
	    with pre-defined file save paths.

2008-11-18 20:57  Eero Tamminen

	* src/: file.c, includes/file.h: add File_DirExists() function

2008-11-18 20:56  Eero Tamminen

	* src/keymap.c: Use more correct File_Exists() in
	  Keymap_LoadRemapFile() instead of File_DoesFileNameEndWithSlash()
	  and give warning &return also when that check fails & indent rest
	  of the function appropriately.

2008-11-18 20:53  Eero Tamminen

	* src/: shortcut.c, gui-sdl/dlgDisk.c: remove redundant
	  File_DoesFileNameEndWithSlash() calls as File_Exists() already
	  checks that the given thing isn't a directory.

2008-11-18 00:13  Nicolas Pomarede

	* src/uae-cpu/newcpu.c: Improve interrupts' precision when multiple
	  ints happened at the same time during the STOP instruction (HBL
	  could be wrongly delayed of 4 cycles)

2008-11-17 23:13  Nicolas Pomarede

	* doc/compatibility.html: Add the No Cooper demo to the STF list

2008-11-16 20:02  Eero Tamminen

	* doc/: release-notes.txt, todo.txt: More TODOs done by Thomas

2008-11-16 19:52  Eero Tamminen

	* doc/compatibility.html: - According to pouet.net Badger isn't STE
	  demo so remove it from list - Tribute to Rainbow Tos works now
	  fine

2008-11-16 19:01  Thomas Huth

	* doc/compatibility.html: Updated V8 music demo and Songs Of The
	  Unexpected

2008-11-16 17:27  Eero Tamminen

	* doc/compatibility.html, src/ikbd.c: - Thomas' Utopos fix fixed
	  also DB2000 - Added pouet.net links + some other minor updates

2008-11-16 16:48  Thomas Huth

	* src/gui-sdl/dlgFileSelect.c: Do not show hidden files by default

2008-11-16 15:56  Thomas Huth

	* gpl.txt: Updated license text to the latest version of the GPL 2
	  (from http://www.gnu.org/licenses/old-licenses/gpl-2.0.txt)

2008-11-16 15:51  Eero Tamminen

	* doc/: manual.html, images/fileselector.png, images/keyboard.png,
	  images/screen.png: update fileselector, screen and keyboard
	  screenshots

2008-11-16 15:21  Eero Tamminen

	* doc/: hatari.1, manual.html: Update command line options and
	  keyboard shortcuts.  Use hatari.1 HTML version of command line
	  options also for manual.html

2008-11-16 11:23  Thomas Huth

	* src/gui-sdl/dlgScreen.c: Removed unused FPS code in the screen
	  dialog

2008-11-16 11:19  Thomas Huth

	* src/: screen.c, video.c, falcon/videl.c, falcon/videl.h,
	  includes/screen.h: Recording an animation now also works in TT
	  and Falcon mode.

2008-11-16 10:42  Thomas Huth

	* src/: configuration.c, screenSnapShot.c, shortcut.c,
	  gui-sdl/dlgScreen.c, includes/configuration.h,
	  includes/screenSnapShot.h: Removed the obsolete nFramesPerSecond
	  setting - it is possible to use the frame-skip option instead.

2008-11-15 22:53  Thomas Huth

	* src/: configuration.c, shortcut.c, includes/configuration.h:
	  Added shortcut for inserting floppy disk A:

2008-11-15 22:02  Thomas Huth

	* src/ikbd.c: If both, joystick and mouse, are enabled, always
	  report button as mouse event. This is needed for the game 'Big
	  Run'

2008-11-15 21:41  Thomas Huth

	* doc/: hatari.1, fr/hatari.1: Replaced ~/.hatari.cfg with
	  ~/.hatari/hatari.cfg

2008-11-15 21:39  Thomas Huth

	* doc/compatibility.html: Added 'Death of the left border' and
	  'Swedish new year' demos

2008-11-15 21:03  Thomas Huth

	* src/gui-sdl/dlgKeyboard.c: The 'Disable key repeat in fast
	  forward mode' option can now be configured in the SDL GUI.

2008-11-15 20:04  Thomas Huth

	* src/change.c: When looking for a disk change, check also for a
	  change within a ZIP file

2008-11-15 19:55  Thomas Huth

	* src/: floppy.c, gui-sdl/dlgDisk.c, includes/floppy.h: Removed the
	  obsolete EmulationDrives[].szFileName since the floppy file name
	  is now stored in the ConfigureParams structure.

2008-11-15 16:37  Nicolas Pomarede

	* src/video.c: Fix regression introduced in rev 1.125 that affected
	  Braindamage Demo.

2008-11-15 15:17  Thomas Huth

	* src/: dmaSnd.c, int.c, includes/dmaSnd.h, includes/int.h:
	  Shift/rotate the microwire registers automatically within 16
	  usec. This fixes the hang at the end of the 2nd screen in the
	  Paradox XMAS 2004 demo.

2008-11-15 15:00  Nicolas Pomarede

	* src/: ioMemTabFalcon.c, ioMemTabSTE.c, ioMemTabTT.c: Add specific
	  handler for register $ff820d (video screen low)

2008-11-15 14:58  Nicolas Pomarede

	* src/video.c: More traces for STE registers

2008-11-15 11:00  Thomas Huth

	* src/blitter.c: Improved blitter timings (thanks to TobÃÂ© for the
	  patch)

2008-11-15 10:42  Thomas Huth

	* src/change.c: The emulator must be reset when the user changes
	  the size of the RAM

2008-11-13 23:57  Eero Tamminen

	* doc/compatibility.html: Utopos works with Thomas latest change

2008-11-13 23:14  Thomas Huth

	* src/ikbd.c: Hack for the he game Utopos (>= v1.5): It expects the
	  joystick data to be sent within a certain amount of time after
	  the IKBD_Cmd_ReturnJoystickAuto command, without checking the
	  ACIA control register first

2008-11-13 22:16  Thomas Huth

	* src/dmaSnd.c: Do not reset the microwire data register shifting
	  index when a program continuesly writes to the data register.
	  This fixes the initial problem with the X-Mas 2004 demo by
	  Paradox.

2008-11-12 23:46  Eero Tamminen

	* etc/: README, n810.cfg: add etc/ subdirectory for device specific
	  configuration files

2008-11-12 23:08  Eero Tamminen

	* src/gui-sdl/dlgFileSelect.c: If fileselector is given
	  non-existing path, use CWD instead of just not showing the file
	  select at all (user doesn't understand it, especially as there's
	  no warning/error about it).

2008-11-12 23:06  Eero Tamminen

	* src/configuration.c: User should be given warning if
	  configuration changes saving fails.

2008-11-12 21:36  Eero Tamminen

	* src/str.c: Thomas noted that indexed accesses are slower (I had
	  to check the assembler output to believe that GCC really cannot
	  better optimize indexed accesses in functions that don't call
	  other functions with pointers) and that without them he prefers
	  use of while loops so changing functions closer to what they were
	  earlier.  Sorry for the code churn.

2008-11-10 20:23  Nicolas Pomarede

	* src/mfp.c: Non important typo

2008-11-10 01:13  Thomas Huth

	* src/ikbd.c: Fix for Utopos: Reset internal joystick state so that
	  a new joystick packet is send each time the ReturnJoystickAuto
	  command is send to the IKBD

2008-11-10 00:25  Thomas Huth

	* src/main.c: Fixed crash that occured when pressing F12 in Falcon
	  mode: Statusbar tried to update the SDL surface with
	  Screen_Draw(), but this function can only be used in ST/STE mode.

2008-11-09 21:20  Eero Tamminen

	* src/main.c: take into account that options key might be
	  configured only with a modifier key or not at all.

2008-11-09 21:04  Eero Tamminen

	* src/main.c: User can configure options key (F12) to something
	  else, ask SDL for the key name (this uses the previous "str-funcs
	  return a string" change).

2008-11-09 21:02  Eero Tamminen

	* src/: str.c, includes/str.h: - Str_Trunc() doesn't need to zero
	  rest of string, ending it is enough - str functions return the
	  modified string.    This allows for nicer code in caller  - make
	  code more idiomatic C (for loops instead of whiles)...

2008-11-08 00:18  Eero Tamminen

	* doc/compatibility.html: oops, fix

2008-11-08 00:08  Eero Tamminen

	* doc/compatibility.html: comment updates + link to froggies demo

2008-11-07 23:30  Thomas Huth

	* src/: cartData.c, cart_asm.s: Check 0x601A program header magic
	  before trying to load and execute a program from the GEMDOS
	  harddisk. Hatari now no longer crashes when trying to Pexec a
	  file that was not a valid PRG.

2008-11-07 23:17  Nicolas Pomarede

	* doc/compatibility.html: More pouet.net links and sort STF demos

2008-11-06 22:35  Eero Tamminen

	* doc/compatibility.html: - Game updates from Matthias & Thomas &
	  my own testing - Demo status updates and new demos checked by
	  Nicolas - Started changing ST demos to be listed according to
	  group like STE ones - Added pouet.net links some STE demos and
	  demos Nicolas listed - Armada demos are actually Agression...

2008-11-05 19:23  Thomas Huth

	* src/joy.c: Left + Right (and Up + Down) can't be enabled at the
	  same time. This patch fixes the crashes in Robocop 2.

2008-11-04 22:05  Eero Tamminen

	* src/: configuration.c, screen.c, includes/configuration.h: Make
	  also top border configurable and add sanity checks for border
	  values.

2008-11-04 21:59  Eero Tamminen

	* doc/compatibility.html: - ST games to alphabetical order - next
	  release is 1.1 (1.? -> 1.1) - checked sound issues in noise
	  tracker / powerup

2008-11-04 21:39  Eero Tamminen

	* doc/: authors.txt, compatibility.html, release-notes.txt: -
	  compatibility list updates from Nicolas - draft list of changes
	  for release notes - update authors list

2008-11-03 23:29  Nicolas Pomarede

	* src/spec512.c: Removed unused modifications ; correct fix for the
	  palette problem on the 1st line is in video.c >= 1.127

2008-11-03 21:48  Thomas Huth

	* src/gemdos.c: Do not intercept GEMDOS trap calls to the printer
	  anymore. All printer data is now handled in hardware emulation.
	  Thanks to David Savinkoff for the patch.

2008-11-03 21:46  Thomas Huth

	* src/: mfp.c, psg.c, includes/mfp.h: Add Falcon Centronics ACK
	  interrupt capability (Thanks to David Savinkoff for the patch).

2008-11-03 21:24  Thomas Huth

	* src/: bios.c, xbios.c: Removed obsolete BIOS interception code.

2008-11-03 20:34  Thomas Huth

	* src/video.c: The first palette must be saved at the beginning of
	  the very first visible line, not at the end. This fixes the
	  graphical glitches that appear in the Coreflakes demo in the very
	  first visible line on the screen.

2008-11-02 23:18  Thomas Huth

	* src/uae-cpu/memory.c: Call SDL_Quit() before exit() to make sure
	  that the old video mode is restored properly

2008-11-02 17:27  Eero Tamminen

	* Makefile: install also "hmsa"

2008-11-02 17:06  Eero Tamminen

	* doc/compatibility.html: - More accurate list of Molz issues from
	  Anders - Some updates to current emulation state

2008-11-02 16:28  Thomas Huth

	* src/: configuration.c, includes/screen.h: Allow up to 47 lines in
	  the bottom border (but use only 45 by default since some demos
	  show garbage in the last 2 lines)

2008-11-02 16:19  Thomas Huth

	* src/screen.c: Fixed STScreenEndHorizLine initialization

2008-11-01 17:53  Nicolas Pomarede

	* src/spec512.c: Revert previous patch for now, not the correct
	  solution to this bug, more work needed

2008-11-01 16:25  Nicolas Pomarede

	* src/spec512.c: Fix a long standing bug : the 1st visible line of
	  the screen could have a wrong palette (fix Text Zoomer in Core
	  Flakes demo by New Core)

2008-10-30 21:25  Eero Tamminen

	* doc/: compatibility.html, emutos.txt: minor finetuning for EmuTOS
	  texts, add DHS "More or Less Zero" demo

2008-10-30 20:01  Eero Tamminen

	* src/includes/control.h: Control_CheckUpdates() returns now bool,
	  se define needs too

2008-10-29 21:41  Thomas Huth

	* src/includes/stMemory.h: Fixed crash that occured with GEMDOS HD
	  emulation when ENABLE_SMALL_MEM was set. The STRAM_ADDR macro did
	  not distinguish between ST-Ram and ROM/IO memory yet.

2008-10-29 21:12  Eero Tamminen

	* src/log.c: exit() -> return, trace options can nowadays changed
	  at run-time so exit() is wrong (and returning FALSE is handled
	  correctly by options.c calling this).

2008-10-28 21:43  Eero Tamminen

	* Makefile-default.cnf: add arch specific optimization flag
	  examples

2008-10-28 21:37  Eero Tamminen

	* src/dialog.c: forgot to commit this with other
	  Main_PauseEmulation() changes

2008-10-28 21:24  Eero Tamminen

	* src/Makefile: make ENABLE_DSP_EMU overridable with env variable +
	  update its comment

2008-10-27 22:44  Eero Tamminen

	* doc/: emutos.txt, todo.txt: split Hatari TODOs to emulation and
	  other todos and remove things that have already been done.

2008-10-26 23:39  Eero Tamminen

	* src/: change.c, control.c, main.c, screen.c, shortcut.c,
	  statusbar.c, includes/main.h, includes/statusbar.h: - don't show
	  paused message when switching between fullscreen/windowed mode
	  -> add option to PauseEmulation() for this - get rid of paused
	  message faster when unpausing   -> change AddMessage() timeout
	  from secs for msecs - some comment updates

2008-10-26 20:15  Eero Tamminen

	* src/: control.c, main.c, includes/control.h: Get back into
	  battery saving (remote) pause (not SDL one) if such had been
	  requested.

2008-10-26 12:06  Eero Tamminen

	* src/control.c: have link to actual bug in comment

2008-10-26 01:29  Eero Tamminen

	* src/statusbar.c: - more accurate name: <led>.timeout	->
	  <led>.expire - add .expire member to message to clear the code -
	  fix the message timeout when there are multiple messages

2008-10-26 00:34  Nicolas Pomarede

	* src/sound.c: Save/restore all variables used by the new sound
	  engine in Sound_MemorySnapShot_Capture

2008-10-26 00:32  Eero Tamminen

	* src/debugui.c: add missing newline

2008-10-26 00:31  Eero Tamminen

	* src/uae-cpu/newcpu.c: remove duplicate bEnableDebug check

2008-10-26 00:20  Eero Tamminen

	* src/statusbar.c: Cannot assert if screen size doesn't match
	  requested one as in fullscreen mode Hatari may not get the
	  requested size.  If available video mode is smaller, disable
	  statusbar; if larger, re-calculate variables.

2008-10-25 23:25  Nicolas Pomarede

	* src/sound.c: Use doxygen style comments for functions

2008-10-25 22:55  Eero Tamminen

	* src/control.c: - Use Main_Un/PauseEmulation() for stopping the
	  emulation more cleanly - Add Control_GetUISocket() and check the
	  X socket for events so that	Hatari window expose events can be
	  processed even when the remote UI   has asked Hatari/SDL to be
	  completely stopped (to save battery) - ControlSendEmbedInfo ->
	  bSendEmbedInfo

2008-10-25 22:31  Eero Tamminen

	* src/: main.c, shortcut.c: - Debug "UI" should do clean
	  pause/unpause too

2008-10-25 22:19  Eero Tamminen

	* src/: configuration.c, main.c, shortcut.c,
	  includes/configuration.h, includes/main.h: - Pause key acts as
	  "pause" unless --debug is used when it invokes   the Debug UI

2008-10-25 19:42  Nicolas Pomarede

	* src/: sound.c, includes/sound.h: Cosmetic changes in new engine :
	  remove unused code, indent, add more comments, ...

2008-10-24 00:16  Eero Tamminen

	* doc/emutos.txt: Checked/added Falcon games

2008-10-24 00:16  Eero Tamminen

	* doc/compatibility.html: - With latest DSP change, Bad Mood
	  actually draws something half sensible - Tank Blaster works

2008-10-23 18:50  Thomas Huth

	* src/falcon/dsp_cpu.c: Latest updates from Aranym: - Fixes in
	  L:xxx,register parallel move, both directions.  - Fixes in
	  register,L:xxx when limiting occurs.	-  Fixes for LSL,BCHG
	  instructions.

2008-10-22 22:55  Eero Tamminen

	* doc/: compatibility.html, emutos.txt: - correct state of couple
	  Falcon demos & apps	(some Whip! effects actually work) - list
	  some EmuTOS compatible Falcon demos and apps

2008-10-22 20:56  Thomas Huth

	* src/gemdos.c: Improved check for file attributes during
	  Fsfirst/Fsnext. This fixes FSELECT.PRG by M. Patzel. Thanks to
	  Thomas Schaerer for the hint.

2008-10-21 23:15  Eero Tamminen

	* src/: screen.c, statusbar.c, falcon/hostscreen.c,
	  gui-sdl/dlgScreen.c, includes/statusbar.h: - Statusbar shows also
	  in fullscreen - Statusbar height calculation needs to take into
	  account screen width	 because the the gui-sdl font selection
	  does - Toggling Statusbar from Display options doesn't toggle
	  overlay LED	(even when it's enabled, it's shown only when
	  statusbar isn't)

2008-10-21 21:04  Eero Tamminen

	* src/statusbar.c: all SDL_UpdateRect calls here have now debug
	  prints

2008-10-20 22:56  Eero Tamminen

	* doc/compatibility.html: Remove the exlamation marks now that I've
	  checked the required DSP modes.

2008-10-20 22:31  Thomas Huth

	* src/psg.c: Save LastStrobe to memory snapshots, too (just in
	  case...)

2008-10-20 22:23  Thomas Huth

	* src/: mfp.c, printer.c, psg.c, includes/mfp.h: These patches make
	  Hatari emulate printer port capture more accurately.

	  In psg.c : Centronics STROBE is used Exclusively, LastWriteToIOB
	  PORTB checking is Removed.

	  In mfp.c : MFP_EXCEPT_GPIP0 interrupt is added to
	  MFP_CheckPendingInterrupts() to create BUSY interrupt capability
	  in hatari.

	  In printer.c : All data presented to PORTB will now be passed
	  unfiltered to the printer, the same as Atari hardware would do
	  it. Thus, filtering, tab expanding, and associated code is
	  removed.

	  Thanks to David Savinkoff for the patch!

2008-10-20 22:15  Eero Tamminen

	* doc/compatibility.html: add Illusion 64 (one more demo that works
	  only when DSP emu is disabled)

2008-10-19 22:52  Eero Tamminen

	* doc/compatibility.html: add couple of New Beat demos (work fine)
	  and music applications (don't work) + few other demos

2008-10-19 15:06  Nicolas Pomarede

	* src/: sound.c, includes/sound.h: Remove unused float code.

2008-10-16 23:30  Nicolas Pomarede

	* src/psg.c: Register select in $ff8800 should not be masked with
	  0xf, but further read/write when register >= 16 should be
	  ignored.  (fix long standing bug in European Demo Intro)

2008-10-16 20:25  Nicolas Pomarede

	* src/sound.c: Remove gcc warning

2008-10-16 00:14  Nicolas Pomarede

	* src/mfp.c: Revert useless test when data reg for timer A/B is
	  decremented from a previous 0 value (as we use Uint8)

2008-10-15 23:06  Nicolas Pomarede

	* src/sound.c: Set sample to 0 instead of 0x9a when volume is 0
	  (this way the volume 0 of the ym is aligned with the sample 0
	  level)

2008-10-14 23:34  Nicolas Pomarede

	* src/sound.c: Full support for 5 bits volume when computing
	  envelopes. All internal volumes operations are made with 5 bits
	  for maximum accuracy (as on a real YM-2149)

2008-10-14 22:00  Eero Tamminen

	* doc/compatibility.html: Went through all games & demos marked as
	  none/dummy and checked whether they work with DSP emulation
	  enabled. Almost none did, added more info about that.  Updated a
	  couple of other games/demos.

2008-10-13 22:29  Eero Tamminen

	* doc/compatibility.html: Falcon updates: - Add Bad Mood & ChainZ
	  games (not working) - Add a few working and not working demos and
	  apps - Some things that worked earlier only when DSP emulation
	  is disabled, work now also when it's enabled

2008-10-13 22:26  Eero Tamminen

	* doc/emutos.txt: add more STE and debugging info

2008-10-11 00:10  Thomas Huth

	* src/gui-osx/: PrefsController.h, PrefsController.m,
	  SDLMain.nib/classes.nib, SDLMain.nib/info.nib,
	  SDLMain.nib/keyedobjects.nib, SDLMain.nib/objects.nib: Merged
	  some of the OS X GUI updates from Jerome Vernet

2008-10-11 00:01  Thomas Huth

	* Hatari.xcodeproj/project.pbxproj: Cleaned up the sources list in
	  the Mac OS X project file.

2008-10-10 20:21  Thomas Huth

	* src/falcon/: dsp_core.c, dsp_core.h, dsp_cpu.c: Merged dsp56k
	  changes from Aranym: - Recode sub/add on 56bits in a simpler way.
	  - BSET/BCLR were not clearing/setting A2/B2 when changing bit in
	  A/B	accumulator (from Laurent Sallafranque).  - try to fix
	  detection of end of loop for DO instruction.

2008-10-09 00:34  Nicolas Pomarede

	* src/uae-cpu/newcpu.c: Fix special case for MFP exception handling
	  with cpu >= 68020

2008-10-05 22:42  Nicolas Pomarede

	* src/ikbd.c: Remove double ';'

2008-10-05 22:41  Nicolas Pomarede

	* src/utils.c: Add rcsid

2008-10-05 22:31  Nicolas Pomarede

	* src/uae-cpu/newcpu.h: Add a parameter ExceptionSource to
	  Exception(). This allows to remove the possible ambiguity when
	  MFP vector base is changed in $fffa17 and the resulting exception
	  number could conflict with a 'normal' cpu exception.	Fix High
	  Fidelity Dreams by Aura which set MFP vector base to $c0 instead
	  of $100.

2008-10-05 21:55  Thomas Huth

	* src/configuration.c: Set bDisableKeyRepeat = FALSE by default.

2008-10-05 19:55  Nicolas Pomarede

	* src/: m68000.c, mfp.c, video.c, includes/m68000.h, uae-cpu/fpp.c,
	  uae-cpu/gencpu.c, uae-cpu/newcpu.c: Add a parameter
	  ExceptionSource to Exception(). This allows to remove the
	  possible ambiguity when MFP vector base is changed in $fffa17 and
	  the resulting exception number could conflict with a 'normal' cpu
	  exception.  Fix High Fidelity Dreams by Aura which set MFP vector
	  base to $c0 instead of $100.

2008-10-04 13:41  Nicolas Pomarede

	* src/mfp.c: Fix reading $fffa21 while timer B occurs in some rare
	  cases (Wolfenstein 3D intro)

2008-10-04 13:35  Nicolas Pomarede

	* src/includes/video.h: Fix reading $fffa21 while timer B occurs in
	  some rare cases (Wolfenstein 3D intro)

2008-10-03 10:27  Thomas Huth

	* src/falcon/dsp_disasm.c: Mark all instructions that may change
	  SR. (Code from Patrice Mandin)

2008-10-03 10:25  Thomas Huth

	* src/falcon/dsp_cpu.c: Try again to fix carry bit computation.
	  (Code from Patrice Mandin)

2008-10-03 00:01  Nicolas Pomarede

	* src/fdc.c: FDCTrackRegister, FDCSectorRegister and
	  FDCDataRegister are 8 bits registers. When writing to $ff8604,
	  only keep the lowest 8 bits.	(fix High Fidelity Dreams by Aura)

2008-09-29 22:44  Thomas Huth

	* src/falcon/dsp_cpu.c: dsp56k fixes: SUB/ADD/CMP: Simply set carry
	  bit if MSB changed, clear otherwise. (Thanks to Patrice Mandin
	  for this)

2008-09-29 22:15  Thomas Huth

	* src/: cartData.c, cart_asm.s: Fixed a bug in the 68k part of the
	  GEMDOS HD emulation: The stack got messed up when a program tried
	  to run pexec with a program name that did not existed on the
	  emulated GEMDOS HD.

2008-09-28 18:56  Eero Tamminen

	* doc/: compatibility.html, emutos.txt: minor updates

2008-09-28 16:13  Eero Tamminen

	* doc/hatari.1: Add documentation for missing command line options
	  and files + other improvements

2008-09-27 21:01  Thomas Huth

	* Hatari.xcodeproj/project.pbxproj: Added ym2149_fixed_vol.h to
	  Xcode project file.

2008-09-27 16:51  Thomas Huth

	* doc/fr/clavier-exemple.txt: No need to remap the function keys

2008-09-27 16:43  Thomas Huth

	* src/gemdos.c: Work-around for the file selector bug in TOS 1.02
	  (Bug #1648169)

2008-09-27 15:36  Thomas Huth

	* src/fdc.c: According to Volker Seebode, HDCCommand.byteCount must
	  not be reset during FDC_ResetDMAStatus(). (Bug #2130450)

2008-09-27 15:21  Thomas Huth

	* src/hdc.c: DMA counter wasn't updated after HDC commands (Bug
	  #2130480). Thanks to Volker Seebode for the patch

2008-09-27 13:09  Thomas Huth

	* src/falcon/dsp_cpu.c: MAC/MACR should not change Carry bit (from
	  Laurent Sallafranque)

2008-09-26 21:29  Eero Tamminen

	* doc/emutos.txt: Add separate section on how to debug EmuTOS
	  issues based on info from Thomas.

2008-09-26 18:39  Thomas Huth

	* src/falcon/hostscreen.c: Removed unused code.

2008-09-26 00:23  Nicolas Pomarede

	* src/video.c: On STE, allow to change video address, hw scroll and
	  linewidth when line >= nLastVisibleHbl (fix Power Rise / Xtrem D
	  demo)

2008-09-25 22:05  Thomas Huth

	* src/keymap.c: Added some more keycodes, this time for german Mac
	  keyboards.

2008-09-25 20:36  Nicolas Pomarede

	* src/sound.c: Correctly stop sound after a reset when using old
	  sound engine

2008-09-24 22:01  Eero Tamminen

	* doc/emutos.txt: added STE (enhanced) demos

2008-09-23 01:22  Eero Tamminen

	* doc/emutos.txt: - add STE programs working after Thomas' EmuTOS
	  DMA sound cookie fix - fine-tune the texts

2008-09-21 23:59  Thomas Huth

	* src/falcon/dsp_cpu.c: DSP56k cpu fix: DIV instruction calculation
	  (from Laurent Sallafranque)

2008-09-21 23:57  Thomas Huth

	* src/falcon/dsp_disasm.c: DSP56k disasm fix:  mask out address
	  bits to 32K, to read current instruction

2008-09-20 14:06  Thomas Huth

	* Makefile: Build hmsa from the main Makefile, too.

2008-09-20 14:05  Thomas Huth

	* tools/hmsa/Makefile: Added distclean target

2008-09-20 14:01  Thomas Huth

	* src/options.c: Fixed rcsid label

2008-09-20 13:33  Thomas Huth

	* doc/: hatari.1, fr/hatari.1: Fixed more unquoted dashes in
	  manpages

2008-09-20 13:28  Thomas Huth

	* src/main.c: Oops, reverted last change, didn't want to commit
	  that...

2008-09-20 13:25  Thomas Huth

	* doc/hatari.1, src/main.c: Fixed unquoted dashes in manpage (patch
	  taken from the Debian package, thanks to Teemu Hukkanen)

2008-09-19 20:55  Nicolas Pomarede

	* src/sound.c: Allow to mix volumes with a table (as measured on a
	  real ST) or with a linear mean of the 3 volumes.  Default to
	  linear mixing for now as it gives better results.  Don't center
	  the samples, keep them 16 bits signed but in the range [0,32767]
	  (suppress small sounds when pausing/resuming audio device)

2008-09-16 23:14  Eero Tamminen

	* doc/compatibility.html: - sort STE demos by group/author - add
	  one STE game and several STE demos

2008-09-16 22:31  Thomas Huth

	* src/falcon/dsp_cpu.c: Fixed lua with a Ny destination register,
	  and parallel move, fix B,A as it is not a full 56bit transfer
	  (Thanks to Patrice and Laurent for the patch)

2008-09-15 23:08  Thomas Huth

	* src/falcon/: dsp_cpu.c, dsp_disasm.c: Merged changes from Aranym
	  CVS: - dsp56k fixes:	 -LUA instruction must not change source
	  register.    -Parallel moves: disasm for dsp_pm_4, fixes in
	  dsp_pm_1.  (Thanks to Laurent Sallafranque for the patches)

2008-09-14 23:45  Eero Tamminen

	* doc/emutos.txt: add STE games and update notes

2008-09-14 21:33  Nicolas Pomarede

	* src/uae-cpu/newcpu.c: TRAP was returning 38 cycles instead of 34
	  (Phaleon/Illusion Demo by Next)

2008-09-14 19:53  Eero Tamminen

	* Makefile-MinGW.cnf, config-default.h, src/Makefile: Cygwin
	  improvements from Guillaume D: - src/Makefile: ALLOBJS was added
	  twice under Cygwin - config-default.h: Cygwin doesn't have the
	  "cfmakerow" function - Makefile-MinGW.cnf: overridable SDL_CFLAGS
	  & SDL_LIBS

2008-09-14 13:01  Nicolas Pomarede

	* src/mfp.c: Add more traces Apply Timer D patch only if ctrl reg
	  is != 0

2008-09-14 12:43  Nicolas Pomarede

	* src/uae-cpu/newcpu.c: Improve log

2008-09-13 00:27  Eero Tamminen

	* doc/: compatibility.html, emutos.txt: - Added Super Hang-On to
	  compatibility list - Added compatibility information to
	  emutos.txt along   with lots of other information I had in old
	  mails etc

2008-09-11 22:38  Thomas Huth

	* src/main.c: Removed unnecessary header file includes

2008-09-11 22:33  Thomas Huth

	* src/main.c: Fixed the problem that loading the global
	  configuration file only worked on UNIX-style operating systems
	  which use a '/' as path seperator.

2008-09-07 21:24  Eero Tamminen

	* src/statusbar.c: - Fix TOS version string - Move messages after
	  FS, that looks better in screen with borders

2008-09-07 00:18  Nicolas Pomarede

	* src/: sound.c, includes/ym2149_fixed_vol.h: Use a table to
	  convert the 3 voices' volume to a sample. New mixing for
	  tone/volume/enveloppe using this table.

2008-09-06 23:08  Eero Tamminen

	* src/statusbar.c: - Fix frameskip text Rect width - Add drawing of
	  recording led   - In overlay mode, this overrides the floppy led
	  (color)

2008-09-06 21:14  Eero Tamminen

	* src/statusbar.c: - center the text on drawing instead of
	  centering the string to char array - Add frameskip showing ("FS:
	  0")

2008-09-05 23:40  Eero Tamminen

	* src/statusbar.c: fix/improve docs

2008-09-05 23:29  Eero Tamminen

	* src/: change.c, main.c, statusbar.c, tos.c, includes/statusbar.h,
	  includes/tos.h: Statusbar improvements: - show by default RAM,
	  machine and TOS information - functionality to show other
	  messages (with timeout) - optional debug printf()s - all
	  variables static Other files: - tos.c: change info about etos
	  into extern - main.c: ask statusbar to update default info in
	  suitable   place (after TOS loaded) and show initial help text if
	  default shortcut is used for Options - change.c: ask statusbar
	  to update info when needed

2008-09-05 23:10  Eero Tamminen

	* src/int.c: fix compiler warnings on TRACE() calls for Sint64
	  changes

2008-09-05 20:39  Nicolas Pomarede

	* src/video.c: No need to test 60/50 Hz switch if display has not
	  started yet.

2008-09-04 23:26  Thomas Huth

	* src/mfp.c: Fixed mask for TX buffer empty interrupt.

2008-09-04 23:18  Thomas Huth

	* src/: blitter.c, mfp.c, includes/mfp.h: Added Blitter-done
	  interrupt

2008-09-04 19:52  Thomas Huth

	* src/: int.c, includes/int.h: Changed type of CycleTime back to
	  32-bit so that the 64 bits are only used internally. Also removed
	  the assert statements.

2008-09-04 12:53  Thomas Huth

	* src/int.c: Set cycle counters to INT_MAX during reset (just in
	  case...).

2008-09-04 12:41  Thomas Huth

	* src/: int.c, includes/int.h: Increased size of internal interrupt
	  cycle counter variables to 64 bit. This fixes Sedma's
	  Blittermania for example since the internal DMA sound cycle
	  counter does not overflow anymore.

2008-09-03 23:25  Eero Tamminen

	* doc/compatibility.html: add new demos + update info on some
	  others

2008-09-02 21:46  Nicolas Pomarede

	* src/hdc.c: Update HD led when processing a command

2008-09-02 21:26  Thomas Huth

	* Hatari.xcodeproj/project.pbxproj: Updated the Xcode project file

2008-09-02 20:56  Eero Tamminen

	* src/: gemdos.c, psg.c, statusbar.c, includes/statusbar.h: - add
	  timeout based HD led and separate function for enabling it
	  (floppy leds API remains ON/OFF toggling which is needed for
	  more accurate control that the PSG emulation can provide) -
	  gemdos.c enables HD led when HD emu calls are used - rename "C:"
	  to "HD:", one led is enough for all HDs

2008-09-02 13:10  Thomas Huth

	* src/int.c: Added some assertions to be able to detect overflows
	  in the Int_AddXXXInterrupt functions

2008-09-02 13:08  Thomas Huth

	* src/: ikbd.c, video.c: Decreased IKBD_RESET_CYCLES since the old
	  value caused an overflow in Int_AddRelativeInterrupt(). Now the
	  mouse in Barbarian (from Psygnosis) is working again.

2008-09-02 12:09  Thomas Huth

	* src/: blitter.c, dmaSnd.c, fdc.c, ikbd.c, int.c, mfp.c, video.c,
	  includes/int.h: Removed the offset parameter from
	  Int_AddRelativeInterrupt() since the function
	  Int_AddRelativeInterruptWithOffset() is already used for starting
	  a relative Int with offset

2008-09-02 11:53  Thomas Huth

	* src/: blitter.c, dmaSnd.c, fdc.c, ikbd.c, video.c: Cleaned up
	  superfluous white spaces

2008-08-21 18:05  Thomas Huth

	* src/ikbd.c: Added a workaround for a problem with the game USS
	  John Young / FOF54: It checks whether the transmit-buffer-empty
	  bit is cleared after writing a byte to the IKBD.

2008-08-20 20:01  Eero Tamminen

	* Makefile-default.cnf: - Add check for X11 - move CFLAGS check
	  inside ifneq to speedup non-matching case - use the expanded :=
	  notation so that shell commands are run only once

2008-08-19 22:53  Eero Tamminen

	* src/screenSnapShot.c: Invert RGB byte order for little endian
	  32-bits in PNG saving.

2008-08-19 22:36  Eero Tamminen

	* doc/alsa-midi.txt: minor update

2008-08-19 22:05  Eero Tamminen

	* src/: change.c, gui-sdl/dlgScreen.c: * Change screen options
	  "force 8-bpp" option to statusbar/led toggle	 - Checkbox value
	  taken just from statusbar state, but it sets both	statusbar
	  and led state * Support in change.c for toggling statusbar (+
	  comment improvements)

2008-08-19 21:47  Eero Tamminen

	* src/: configuration.c, options.c, screen.c, statusbar.c,
	  includes/configuration.h, includes/statusbar.h: * add support for
	  overlay drive led to statusbar.c   - and appropriate small update
	  to screen.c * config file and commandline option for
	  enabling/disabling it * enable statusbar & drive-led by default
	  so they get more testing

2008-08-19 21:43  Eero Tamminen

	* src/gui-sdl/dlgScreen.c: align VDI checkbox and texts
	  horizontally with other checkboxes and texts

2008-08-19 21:15  Eero Tamminen

	* src/: configuration.c, main.c, options.c, video.c,
	  gui-sdl/dlgScreen.c, includes/video.h: add support for automatic
	  frameskip and enable it by default

2008-08-19 02:09  Thomas Huth

	* src/: audio.c, dmaSnd.c, sound.c, wavFormat.c, includes/sound.h,
	  includes/wavFormat.h: Changed sound sample type from 8-bit mono
	  unsigned to 16-bit stereo signed.

2008-08-18 22:53  Thomas Huth

	* Makefile-default.cnf: Automatic libpng default configuration

2008-08-18 21:13  Eero Tamminen

	* src/screenSnapShot.c: fix include order and use if instead of
	  ifdef like other config.h checks do

2008-08-18 20:35  Eero Tamminen

	* src/screenSnapShot.c: add support for saving PNGs

2008-08-18 20:16  Thomas Huth

	* src/sound.c: Added workaround for a problem with the GCC 4.2
	  compiler.

2008-08-18 20:12  Thomas Huth

	* configure.ac: Added simple check for libpng

2008-08-18 19:39  Thomas Huth

	* doc/keymap-sample.txt: SDL headers are usually in
	  /usr/include/SDL, not in /usr/share/SDL

2008-08-18 19:35  Thomas Huth

	* doc/fr/clavier-exemple.txt: Added french keymapping file. Thanks
	  to Jerome Vernet for the mappings!

2008-08-16 17:49  Eero Tamminen

	* src/: screen.c, statusbar.c, falcon/hostscreen.c,
	  includes/statusbar.h: Simplify statusbar code by moving the SDL
	  update call to statusbar.c (which also fixes hostscreen.c
	  update).  SDL_UpdateRects() requires Statusbar_Update() to be
	  done outside screen locks, move that.

2008-08-15 19:08  Matthias Arndt

	* src/includes/sound.h: cleanup of sound.h - moved common definitions
	  for both cores out of the #ifdef OLD_SOUND block

2008-08-14 00:26  Nicolas Pomarede

	* src/sound.c: More cast changes

2008-08-14 00:01  Nicolas Pomarede

	* src/sound.c: Add more explicit casts, as reported by
	  -Wconversion. Might help with gcc 4.2 on OS X.

2008-08-13 20:44  Eero Tamminen

	* src/: psg.c, statusbar.c, includes/statusbar.h: - Set led on
	  drive B: access - Enums for different drives - Comment about
	  things that statusbar could also show

2008-08-13 00:14  Nicolas Pomarede

	* src/sound.c: Fix StSound to generate samples in the range -32768
	  - 32767 instead of 0 - 32767. Much better result.

2008-08-12 21:40  Eero Tamminen

	* src/: Makefile, configuration.c, leds.c, options.c, psg.c,
	  screen.c, statusbar.c, falcon/hostscreen.c,
	  includes/configuration.h, includes/leds.h, includes/statusbar.h:
	  - Replace leds (over Atari screen) with NoSTalgia style statusbar
	  - As statusbar increases the SDL screen size, change:   -
	  screen.c updates to use an SDL_Rect that doesn't contain the
	  statusbar   - hostscreen.c screen height variable to ignore
	  statusbar part

2008-08-12 21:36  Eero Tamminen

	* src/: gui-sdl/sdlgui.c, includes/sdlgui.h: Prepare SDL GUI
	  functions for statusbar support: - Add small SDLGui_GetFontSize()
	  function - Change SDLGui_Text() to extern - Allow calling
	  SDLGui_Init() multiple times

2008-08-12 21:00  Nicolas Pomarede

	* src/: includes/sound.h, sound.c: Frequency change between 44, 22
	  and 11 kHz was not correctly handled in new StSound method.

2008-08-10 16:32  Nicolas Pomarede

	* src/: sound.c, includes/sound.h: Import StSound 1.2 rendering
	  engine to replace the current method.

2008-08-10 12:39  Nicolas Pomarede

	* src/sound.c: Revert modif : don't set per=1 when per=0, this
	  cause sharp sound with some sample replay routines.

2008-08-07 23:19  Eero Tamminen

	* src/screen.c: - revert earlier 32->24 change and comment why the
	  surface   needs to be re-created - rename leds related variables
	  and add comments to clarify	how it works

2008-08-07 22:18  Eero Tamminen

	* src/: leds.c, includes/configuration.h: move main.h inclusion to
	  .c

2008-08-07 21:41  Eero Tamminen

	* src/: leds.c, screen.c: remove dummy led light blinking, fix
	  partial screen update for led

2008-08-07 20:39  Nicolas Pomarede

	* src/psg.c: Set drive light ON if drive A is selected

2008-08-07 20:16  Eero Tamminen

	* src/screen.c: - Add support for leds/indicators for ST/e screen
	  modes - Change unused bSwapScreen argument (for fullscreen) in
	  Screen_Blit()   to SDL_Rect * for led update area (in case only
	  leds are updated) - Instead of re-creating SDL screen surface as
	  32-bits when 24-bits	 is selected in Screen_SetResolution(),
	  just set 32-bits to 24

2008-08-07 20:07  Eero Tamminen

	* src/falcon/hostscreen.c: add led/indicator show/hide to render
	  begin/end for TT and Falcon video modes

2008-08-07 20:05  Eero Tamminen

	* src/: configuration.c, options.c: add configuration option for
	  leds/indicators like floppy light

2008-08-07 20:04  Eero Tamminen

	* src/: Makefile, leds.c, includes/leds.h: add gfx side of floppy
	  light support

2008-08-06 21:28  Eero Tamminen

	* src/includes/configuration.h: add include files needed by this

2008-08-06 01:42  Thomas Huth

	* src/falcon/: dsp_core.c, dsp_core.h, dsp_cpu.c: Merged changes
	  from Aranym repository: - Use proper SDL function to wait for
	  thread to finish - rewrite of dsp_core - Remove states - Simply
	  unlock semaphore on read/write - Defined stuff shared between cpu
	  and dsp thread as volatile - It seems most dsp programs always
	  handshake when reading from dsp host port

2008-08-06 01:26  Thomas Huth

	* src/falcon/: araglue.h, dsp_disasm.c, hostscreen.c, hostscreen.h,
	  nvram.c, videl.c: Replaced Aranym integer types with SDL integer
	  types

2008-08-05 21:23  Eero Tamminen

	* doc/compatibility.html: use CSS class instead of bgcolor
	  attribute for colors

2008-08-02 21:25  Eero Tamminen

	* doc/compatibility.html: sort ST games alphabetically similarly to
	  STE and Falcon games lists

2008-08-02 20:53  Eero Tamminen

	* doc/compatibility.html: mark issues with color instead of <em>.
	  Move Ray's TT/Falcon intros to TT section as that has less
	  entries.

2008-08-01 19:14  Thomas Huth

	* src/falcon/: dsp.c, dsp_core.c: Replaced old uint8 types

2008-08-01 01:31  Thomas Huth

	* src/falcon/: dsp_core.c, dsp_core.h, dsp_cpu.c: Merged Patrice's
	  latest changes: - Move around mutex lock/unlock - Replace uae
	  data type by SDL data types

2008-07-31 22:45  Thomas Huth

	* src/falcon/dsp_core.h: SDL_thread.h must be included, too,
	  because it is missing in SDL.h on older SDL versions like 1.2.7

2008-07-31 21:43  Thomas Huth

	* src/falcon/araglue.h: DSP code needs some functions from
	  string.h, so this header file must be included, too.

2008-07-31 21:23  Thomas Huth

	* doc/compatibility.html: Added V8 music system and Songs of the
	  Unexpected

2008-07-31 01:09  Eero Tamminen

	* doc/compatibility.html: update info

2008-07-30 18:48  Eero Tamminen

	* src/control.c: - add support for remotely:   - toggling devices
	  - setting paths - remove support for using "stdin" for control
	  socket.  hatari-console.py   is nicer and e.g. WinSock wouldn't
	  support select with stdin

2008-07-30 18:45  Eero Tamminen

	* doc/compatibility.html: update compatibility list as discussed on
	  hatari-devel

2008-07-30 00:12  Thomas Huth

	* src/falcon/dsp_cpu.c: Patch from Aranym: Calculate how many
	  instructions we executed per second, seem we are very far from
	  real hw

2008-07-30 00:10  Thomas Huth

	* src/falcon/: Makefile, dsp.c: Forgot to define DSP_EMULATION=1
	  when DSP was enabled.

2008-07-29 23:56  Thomas Huth

	* src/Makefile: Added the new file dsp_core.c to the main Makefile

2008-07-29 23:38  Eero Tamminen

	* src/screen.c: ; after CALL_VAR macro like elsewhere, fix
	  following code indenting

2008-07-29 23:32  Thomas Huth

	* src/falcon/: Makefile, araglue.h, dsp.c, dsp.h, dsp_core.c,
	  dsp_core.h, dsp_cpu.c, dsp_cpu.h, dsp_disasm.c, dsp_disasm.h:
	  Merged Patrice's latest changes to the DSP emulation code in
	  Aranym: Implementation of DSP emulation in plain C. Thanks a lot
	  Patrice!

2008-07-29 23:27  Eero Tamminen

	* src/options.c: shorter and more consistent option descriptions

2008-07-28 22:38  Thomas Huth

	* src/ikbd.c: Added missing IKBD commands for status inquiries.

2008-07-28 21:49  Thomas Huth

	* src/ikbd.c: Some IKBD commands like 0x0d, 0x16 and 0x1c need an
	  additional delay until the first byte is sent back from the IKBD.
	  The 'Unlimited bobs' screen from the Dragonnels demo is working
	  now.

2008-07-28 00:37  Thomas Huth

	* src/falcon/: dsp_cpu.c, dsp_disasm.c, dsp_disasm.h: Patches from
	  Aranym: Add function so we know when LC was decremented.

2008-07-27 23:44  Thomas Huth

	* src/falcon/: dsp.c, dsp.h, dsp_cpu.c: Reworked state change for
	  dsp thread, and always force execution of dsp when cpu read/write
	  from host port

2008-07-27 22:36  Thomas Huth

	* src/falcon/dsp_cpu.c: Patch from Aranym: Fixed wrong calculation
	  of E bit in SR and added missing masking of ZUE value for CC
	  calculation

2008-07-27 20:33  Nicolas Pomarede

	* src/includes/sound.h: Remove unnecessary 'extern' variables

2008-07-27 20:26  Nicolas Pomarede

	* src/: sound.c, ymFormat.c, includes/sound.h, psg.c: Better
	  separation between accesses to the YM hardware registers and the
	  sound rendering routines (to ease replacement by another sound
	  rendering module)

2008-07-25 20:15  Eero Tamminen

	* tools/hmsa/hmsa.c: fix build

2008-07-24 00:00  Thomas Huth

	* src/falcon/dsp_cpu.c: Merged some more changes from Aranym
	  repository

2008-07-23 23:20  Thomas Huth

	* src/falcon/dsp_cpu.c: Patch from Aranym: Change detection of
	  polling loop

2008-07-23 23:12  Thomas Huth

	* src/falcon/dsp_cpu.c: Patch from Aranym: Split write_memory in
	  disasm/non disasm version

2008-07-23 23:11  Thomas Huth

	* src/falcon/dsp_disasm.c: Patch from Aranym: Fix disasm to match
	  memory mapping changes

2008-07-23 00:26  Thomas Huth

	* src/falcon/: dsp.c, dsp_cpu.c: Sync'ed DSP sources with Aranym
	  repository: Change X, Y and P memory mapping to match what
	  happens on Falcon.

2008-07-22 23:45  Thomas Huth

	* src/falcon/: dsp.c, dsp.h, dsp_cpu.c, dsp_disasm.c: Put the DSP
	  variables in a struct and introduced the getDSP function for
	  Hatari, too, so that the code gets much closer to the original
	  Aranym sources again. This helps a lot when sync'ing the sources
	  with Aranym.

2008-07-22 22:55  Thomas Huth

	* src/: includes/ikbd.h, includes/int.h, ikbd.c, int.c: When a byte
	  arrives at our virtual ACIA, do not trigger the corresponding MFP
	  interrupt immediately but some cycles later. This fixes the V8
	  music system demo.

2008-07-22 22:34  Thomas Huth

	* src/control.c: Fixed compiler warning

2008-07-21 22:39  Thomas Huth

	* src/falcon/dsp_cpu.c: Copied new DSP update-Rn-modulo function
	  from the Aranym CVS repository.

2008-07-19 15:51  Nicolas Pomarede

	* src/video.c: If using an invalid resolution value 0x03 in
	  $ff8260, use 0x00 (low res) instead (fix Omegakul screen in Omega
	  Demo from 1988)

2008-07-19 00:15  Thomas Huth

	* src/falcon/: dsp_cpu.c, dsp_disasm.c: Synced DSP sources with
	  Aranym repository. This fixes the register encoding of the
	  following DSP instructions: Tcc, AND, EOR & OR (cheers to Patrice
	  Mandin for the changes)

2008-07-18 21:02  Thomas Huth

	* src/falcon/dsp.c: When using DSP_HOST_FORCEEXEC we've got delay a
	  little bit to free some CPU cycles for the DSP thread.

2008-07-16 23:12  Thomas Huth

	* src/: ikbd.c, log.c, includes/log.h: Introduced more IKBD trace
	  levels and replaced old WinSTon IKBD debug code with HATARI_TRACE
	  calls.

2008-07-15 00:52  Thomas Huth

	* src/falcon/dsp_disasm.c: Fixed the register encoding of the ADD,
	  SUB and TFR instructions of the DSP disassembler (Y0 and X1 were
	  swapped).

2008-07-14 19:42  Thomas Huth

	* src/main.c: Fixed bug: HostScreen_UnInit was only called when
	  also DSP emulation was enabled.

2008-07-14 17:03  Nicolas Pomarede

	* src/video.c: Left border removal in 60 Hz gives a total line size
	  of 184 bytes instead of 186.

2008-07-13 00:26  Nicolas Pomarede

	* doc/compatibility.html: All parts of the B.I.G. Demo are working
	  fine

2008-07-12 23:51  Nicolas Pomarede

	* src/ikbd.c: Faster mouse in Dragonnels and Froggies Over The
	  Fence

2008-07-12 17:55  Nicolas Pomarede

	* src/: ikbd.c, includes/ikbd.h, uae-cpu/hatari-glue.c: Add support
	  for custom 6301 programs. This is not a 6301 emulator, we're just
	  replacing the read/write functions with some customs one, based
	  on the CRC of the bytes sent to the 6301 RAM.  This fixes
	  'Froggies Over The Fence', 'Transbeauce 2' and 'Dragonnels'.

2008-07-12 15:17  Nicolas Pomarede

	* src/mfp.c: Correct a rare case when stopping a timer and the
	  internal data counter is already < 1 (fix Froggies Over The Fence
	  Menu)

2008-07-10 23:19  Nicolas Pomarede

	* src/: Makefile, utils.c, includes/utils.h: Add utils.c to store
	  various utility functions (crc32, ...)

2008-07-08 23:17  Thomas Huth

	* src/falcon/dsp_cpu.c: Ooops, DSP_DISASM should not be defined by
	  default.

2008-07-08 23:13  Thomas Huth

	* src/falcon/dsp_cpu.c: Fixed the DSP_CHECK_MEM_ACCESS defines
	  (#endifs were placed at the wrong lines).

2008-07-08 22:55  Eero Tamminen

	* doc/compatibility.html: updates to Falcon compatibility

2008-07-08 22:26  Nicolas Pomarede

	* src/m68000.c: Add pairing for LSL/ABCD (and all variants)
	  (Rainbow Wall part in Dragonnels Demo)

2008-07-08 00:14  Thomas Huth

	* Hatari.xcodeproj/project.pbxproj: Refreshed Xcode project file.
	  Thanks to Jerome Vernet for the update

2008-07-07 23:34  Thomas Huth

	* doc/authors.txt, src/Makefile, src/falcon/dsp_cpu.c: Fixed bug in
	  the DSP modulo addressing mode. The first two Falcon DSP programs
	  (SPHERE.PRG and Virtual City) are working now! Big thanks to
	  Laurent Sallafranque for the patch!

2008-07-07 23:22  Nicolas Pomarede

	* src/video.c: Better timer B position when right border is removed
	  (fix Oxygene screen in Transbeauce 2)

2008-06-29 23:33  Thomas Huth

	* src/blitter.c, doc/compatibility.html: During blitter operations,
	  check for pending interrupts even more often. This fixes the
	  Doughnut screen in Just Musix 2 and the the bouncing vector ball
	  screen in Braindamage demo.

2008-06-28 13:22  Nicolas Pomarede

	* src/: video.c, ioMemTabSTE.c, includes/video.h: On STE, add
	  support for $ff8264 (horizontal scrolling with no prefetch) and
	  refactor the scrolling routines in a more generic way (fix
	  Digiworld 2 by ICE)

2008-06-27 00:00  Thomas Huth

	* src/gui-osx/PrefsController.m: Restore ConfigureParams when the
	  user selected 'Cancel' in the emulator-must-be-reset alert
	  dialog.

2008-06-26 23:33  Thomas Huth

	* src/tos.c: Assert that we are using at least a 68020 CPU for TOS
	  versions > 3.00

2008-06-26 22:00  Eero Tamminen

	* src/options.c: - show --control-socket option only if it's
	  available - remove redundant "This is" from front of Hatari
	  name/version

2008-06-26 01:01  Thomas Huth

	* doc/compatibility.html: Added EPSS demo, and corrected Obsession
	  and Braindamage description.

2008-06-23 22:56  Eero Tamminen

	* src/: change.c, control.c, dialog.c, main.c, screen.c,
	  falcon/hostscreen.c, includes/control.h, includes/main.h: -
	  implicit reboot after settings change should be OKed from   user
	  even if alerts are shown only for warnings/errors - fix (reboot
	  requiring) configuration changes canceling   (broken by
	  configuration handling refactoring) - move Hatari window
	  embedding from main.c to control.c - external UI can now ask to
	  be notified about Hatari   SDL window size changes - support
	  window embedding also in Falcon/TT screen modes

2008-06-17 23:17  Eero Tamminen

	* src/: floppy.c, includes/floppy.h: support ejecting floppy from
	  command line

2008-06-17 08:10  Thomas Huth

	* src/gui-osx/PrefsController.m: Fixed comment

2008-06-16 22:24  Thomas Huth

	* src/gui-osx/: PrefsController.m, SDLMain.m: Fixed the OS X GUI so
	  that it is compilable again.

2008-06-16 21:34  Nicolas Pomarede

	* src/video.c: Ensure unused lines are cleared in 60 Hz when Hatari
	  is configured to display the screen's borders.

2008-06-16 21:22  Thomas Huth

	* src/rs232.c: Fixed RS232 baud rate setting (always use the by-16
	  prescaler)

2008-06-16 19:10  Thomas Huth

	* src/ioMem.c: Writing to IO space is not allowed in user mode.
	  Thanks to George Nakos for the hint!

2008-06-15 14:02  Eero Tamminen

	* src/shortcut.c: - add savemem shortcut parsing - remove parsing
	  for debug interface shortcut (debug commands can   be invoked
	  nowadays directly without the debug interface)

2008-06-13 23:43  Eero Tamminen

	* src/main.c: add note about the MinGW issue

2008-06-13 23:09  Eero Tamminen

	* src/: floppy.c, includes/floppy.h: - Change floppy eject alert to
	  printf (the alert wasn't triggered   earlier as bInformUser
	  wasn't used anywhere) - unsigned short (int) -> Uint16

2008-06-13 19:44  Thomas Huth

	* src/main.c: Fixed the prototype of main() so that Hatari compiles
	  on Windows and Mac OS X again. Also removed saving of the current
	  working directory in memory snap shots (it is not really
	  required).

2008-06-13 08:36  Thomas Huth

	* src/blitter.c: Blitter runs at 16 MHz in the Falcon

2008-06-12 23:16  Eero Tamminen

	* configure.ac: note about getting install-sh complained by
	  configure

2008-06-12 22:51  Eero Tamminen

	* src/options.c: use standard strchr() instead of BSD index()

2008-06-12 20:03  Thomas Huth

	* src/blitter.c: According to Cyprian's blitter test program, the
	  blitter starts 4 cycles earlier already.

2008-06-12 19:55  Thomas Huth

	* src/blitter.c: Fix for the game Obsession: Update the pending
	  interrupt functions regularly, also in blitter hog mode.

2008-06-11 22:01  Eero Tamminen

	* src/: main.c, options.c: fix compile warning

2008-06-10 21:53  Eero Tamminen

	* src/options.c: - add "--vdi <bool>" option - add support for
	  options postfixed with a digit - add "--joy<port> <type>" option
	  - remove "-a" shortcut for --disk-a (not really needed)

2008-06-08 22:09  Eero Tamminen

	* src/floppy.c: Should the filenames be absolute (in config file)?

2008-06-08 22:04  Eero Tamminen

	* src/: change.c, floppy.c, gui-sdl/dlgDisk.c, includes/floppy.h: -
	  dialog may not eject disk directly, just set the file name to
	  none,   otherwise ejecting doesn't work - remove unused
	  bInformUser from floppy eject - add bool return value on whether
	  there was a floppy that was ejected - 0 -> '\0' is a bit more
	  explicit (readable) for strings

2008-06-08 21:30  Eero Tamminen

	* src/: change.c, dialog.c, includes/change.h: change.c can apply
	  changes regardless of whether the new values are in
	  ConfigureParams or some other struct.  This makes it easier to
	  have configuration changes editing (or calling some that edits)
	  ConfigureParams directly.

2008-06-08 19:37  Eero Tamminen

	* src/: change.c, configuration.c, floppy.c, log.c, main.c,
	  options.c, paths.c, gui-sdl/dlgDisk.c, includes/configuration.h,
	  includes/floppy.h, includes/options.h: * Add floppy disk image
	  file names (and their zip paths)   to Hatari configuration *
	  Insert the floppies in Change_CopyChangedParamsToConfiguration()
	  based on changes in these * Separated in floppy.c setting disk
	  image names from actually   inserting them * Above three allow
	  fixing the gui-sdl/dlgDisk.c FIXMEs.	  Changes to floppy
	  settings are now cancellable like all other settings	* Remove
	  bootdisk stuff from Opt_ParseParameters() arguments,	 main.c and
	  change.c as it's now unnecessary * Add following options:
	  --disk-a <file>   Disk image in floppy drive A   --disk-b <file>
	  Disk image in floppy drive B * Fixed log level name in level
	  parsing * Cleaned up some old comments and how main.c handles
	  working dir  (latter still ugly) and added few more Log lines to
	  floppy.c

2008-06-08 18:07  Eero Tamminen

	* src/: dialog.c, gui-sdl/dlgDevice.c, includes/dialog.h,
	  gui-sdl/dlgDisk.c, gui-sdl/dlgJoystick.c, gui-sdl/dlgKeyboard.c,
	  gui-sdl/dlgMain.c, gui-sdl/dlgMemory.c, gui-sdl/dlgNewDisk.c,
	  gui-sdl/dlgRom.c, gui-sdl/dlgScreen.c, gui-sdl/dlgSound.c,
	  gui-sdl/dlgSystem.c: prepare for being able to cancel floppy
	  changes: - backup ConfigureParams before opening Hatari dialogs -
	  use ConfigureParams directly from the dialog Currently code needs
	  additional Params struct and copying it, I'll fix that after
	  fixing the floppy disk code.

2008-06-07 20:42  Nicolas Pomarede

	* src/: video.c, includes/screen.h, includes/video.h: Rename some
	  video constants to avoid confusion with the values used in
	  screen.h

2008-06-04 01:06  Thomas Huth

	* src/falcon/dsp_cpu.c: Return value was also wrong in JSCLR.
	  Thanks to Laurent Sallafranque for the patch.

2008-06-04 01:01  Thomas Huth

	* src/blitter.c: 1) Blitter uses the bus for 64 _bus_ cycles, not
	  64 CPU cycles. 2) Added cycle timings for FXSR and NFSR. Big
	  thanks to Cyprian Konador for the hints and his blitter test
	  programs!

2008-06-03 21:41  Eero Tamminen

	* src/: main.c, screen.c, includes/main.h: fix window embedding
	  when Hatari returns from the fullscreen mode

2008-06-03 20:10  Nicolas Pomarede

	* src/: blitter.c, log.c, includes/log.h: Add tracing options for
	  the blitter

2008-06-02 22:07  Eero Tamminen

	* src/: change.c, keymap.c, main.c, options.c, paths.c,
	  includes/options.h, includes/paths.h: add missing consts and
	  ctype.h includes

2008-06-01 23:38  Thomas Huth

	* src/falcon/dsp_cpu.c: Fixed bug in the DSP instruction JSSET: The
	  saved PC was 1 instruction wrong after the RTS (the next
	  instruction was jumped). Thanks to Laurent Sallafranque for the
	  patch.

2008-06-01 23:33  Thomas Huth

	* src/falcon/dsp.c: Fixed compilation bug when DSP_HOST_FORCEEXEC
	  was set to 1 (thanks to Laurent Sallafranque for the hint)

2008-06-01 12:26  Nicolas Pomarede

	* src/: screen.c, includes/screen.h: Display 45 lines instead of 47
	  in bottom overscan, else some demos will show garbages in the
	  last 2 lines.

2008-05-31 19:57  Nicolas Pomarede

	* src/video.c: Ignore consecutive writes of the same value to
	  freq/res register

2008-05-26 21:09  Thomas Huth

	* src/gui-osx/AlertHooks.h: useAlertHooks is now bool instead of
	  BOOL.

2008-05-25 21:58  Thomas Huth

	* src/: int.c, joy.c, keymap.c, m68000.c, memorySnapShot.c, mfp.c,
	  options.c, printer.c, psg.c, reset.c, rs232.c, rtc.c, screen.c,
	  screenSnapShot.c, shortcut.c, spec512.c, tos.c, video.c, xbios.c,
	  zip.c, gui-sdl/dlgAlert.c, gui-sdl/dlgDisk.c,
	  gui-sdl/dlgFileSelect.c, gui-sdl/dlgMain.c, includes/int.h,
	  includes/joy.h, includes/m68000.h, includes/main.h,
	  includes/memorySnapShot.h, includes/mfp.h, includes/options.h,
	  includes/printer.h, includes/psg.h, includes/rs232.h,
	  includes/screen.h, includes/screenSnapShot.h, includes/sdlgui.h,
	  includes/shortcut.h, includes/spec512.h, includes/tos.h,
	  includes/video.h, includes/xbios.h, includes/zip.h: BOOL ==> bool

2008-05-25 12:54  Eero Tamminen

	* src/: configuration.c, options.c: fix bFastForward config
	  variable type and improve -D option description

2008-05-25 11:18  Thomas Huth

	* src/blitter.c: Call IO mem handlers when the blitter writes to
	  the IO registers. This is required for Protracker STE (by
	  Equinox) for example.

2008-05-23 17:10  Thomas Huth

	* src/blitter.c: Ugly hack for the game Obsession: When the blitter
	  is running in HOG mode, it seems to have a lower priority than
	  DMA sound.

2008-05-23 16:44  Thomas Huth

	* src/main.c: Got to use RomMem instead of STRam for
	  ENABLE_SMALL_MEM

2008-05-23 16:18  Thomas Huth

	* src/cart.c: Got to use RomMem instead of STRam for
	  ENABLE_SMALL_MEM

2008-05-21 21:46  Eero Tamminen

	* doc/compatibility.html: re-test 20 years

2008-05-21 19:50  Eero Tamminen

	* doc/compatibility.html: Sierpinski overdose works

2008-05-20 20:31  Eero Tamminen

	* doc/compatibility.html: update for latest Blitter fixes

2008-05-20 00:35  Thomas Huth

	* src/blitter.c: The  Do_Blit function can now abort and resume
	  exactly after 64 cycles. Also changed the way the blitting is
	  started (not directly anymore when writing to the control
	  register - it is now started after some few CPU cycles like on
	  the real hardware)

2008-05-19 23:00  Thomas Huth

	* src/falcon/: hostscreen.c, hostscreen.h, nvram.c, videl.c:
	  Replaced 'BOOL' by 'bool'

2008-05-19 22:34  Thomas Huth

	* src/: bios.c, cfgopts.c, configuration.c, createBlankImage.c,
	  dialog.c, dim.c, dmaSnd.c, fdc.c, floppy.c, gemdos.c, hdc.c,
	  ikbd.c, includes/bios.h, includes/configuration.h,
	  includes/dialog.h, includes/dim.h, includes/dmaSnd.h,
	  includes/fdc.h, includes/floppy.h, includes/gemdos.h,
	  includes/hdc.h, includes/ikbd.h: Replaced 'BOOL' by 'bool'

2008-05-19 22:12  Thomas Huth

	* src/gui-osx/PrefsController.m: Made OS X GUI compilable again

2008-05-19 02:07  Thomas Huth

	* src/blitter.c: Enabled cycle accurate blitter emulation after
	  fixing two remaining bugs. The game 'Roger' from Tobe works now
	  with the right speed.

2008-05-19 01:33  Thomas Huth

	* src/: blitter.c, int.c, includes/blitter.h, includes/int.h: First
	  steps towards cycle accurate blitter emulation (not working yet)

2008-05-18 22:45  Thomas Huth

	* src/blitter.c: Some more source code simplifications

2008-05-10 19:42  Thomas Huth

	* src/includes/control.h: Fixing some problems that occured when
	  compiling Hatari with MinGW

2008-05-10 00:38  Eero Tamminen

	* src/control.c: improve remote control help + debugging

2008-05-10 00:37  Eero Tamminen

	* src/debugui.c: more places where flushing is needed

2008-05-09 22:57  Eero Tamminen

	* src/debugui.c: debug log needs to be flushed to get to file

2008-05-09 22:55  Thomas Huth

	* src/: blitter.c, ioMemTabFalcon.c, ioMemTabST.c, ioMemTabSTE.c,
	  includes/blitter.h: More blitter code clean-up

2008-05-09 21:11  Eero Tamminen

	* src/: debugui.c, options.c: Allow setting command line options
	  from the debugger with 'o' command.  If you still want to disable
	  debugger from within the debugger, use "o -D" instead of "o".

2008-05-09 20:25  Eero Tamminen

	* src/: Makefile, change.c, control.c, main.c, options.c,
	  includes/change.h, includes/control.h: control socket code
	  changes: - move control socket code to its own control.c file -
	  if sockets are not available, disable all control socket   socket
	  related code instead of just functions using socket/select - add
	  debugger remote control support - add support for stopping and
	  continuing Hatari emulation	(needed for remote debugging) - add
	  help also for top level remote commands (when   encountering
	  command that it doesn't recognize)

2008-05-09 20:19  Eero Tamminen

	* src/debugui.c: - make debug logging robust also when calling
	  input parser	 directly instead of through the debugger prompt

2008-05-08 22:41  Eero Tamminen

	* src/: debugui.c, includes/debugui.h: - BOOL -> bool - Prepare for
	  external debug UI:   - make log file handling more robust (also
	  renamed the variable)   - split command parsing out of the
	  function reading it from user

2008-05-07 22:53  Eero Tamminen

	* src/: change.c, keymap.c, includes/change.h, includes/keymap.h: -
	  support both ASCII chars and keycodes for key press/release
	  simulation - move ASCII->keycode key simulation to keymap.c -
	  change BOOL to bool in change.c

2008-05-06 23:09  Eero Tamminen

	* src/change.c: in the key press/release synthetizing: - ASCII
	  characters need to be converted to ST keycodes - Uppercase
	  characters need simulating also SHIFT press/release

2008-05-06 20:05  Eero Tamminen

	* configure.ac: - enable tracing by default - fix --disable-tracing
	  and --disable-small-mem

2008-05-05 21:39  Nicolas Pomarede

	* src/sound.c: When setting period to 0, the YM seems to produce
	  the same sound as if period was in fact set to 1 (fix ESwat buggy
	  replay)

2008-05-04 22:03  Thomas Huth

	* src/: change.c, mfp.c, scandir.c: Fixed compiler warnings

2008-05-04 21:21  Thomas Huth

	* src/: Makefile, bios.c, fdc.c, gemdos.c, ikbd.c, keymap.c,
	  main.c, misc.c, msa.c, reset.c, screen.c, sound.c, xbios.c,
	  includes/misc.h: Removed misc.c and misc.h

2008-05-04 21:08  Thomas Huth

	* src/blitter.c: Removed the macro-mania from blitter.c ... the new
	  code might be somewhat slower, but is hopefully much better
	  maintainable and extensible now

2008-05-04 19:43  Thomas Huth

	* src/: debugui.c, str.c, includes/str.h: Moved string functions to
	  str.c

2008-05-04 19:30  Thomas Huth

	* src/debugui.c: Fixed return value of function getRange()

2008-05-03 22:20  Nicolas Pomarede

	* src/fdc.c: More infos in the traces and add some 'FIXME' notes on
	  type II read sector with bit 'm' set

2008-05-03 21:09  Thomas Huth

	* src/options.c: Boot always from floppy if it is specified after
	  the hard disk directory

2008-05-03 20:58  Thomas Huth

	* src/: audio.c, blitter.c, file.c, log.c, main.c, msa.c, sound.c,
	  st.c, vdi.c, wavFormat.c, ymFormat.c, includes/audio.h,
	  includes/blitter.h, includes/file.h, includes/log.h,
	  includes/main.h, includes/msa.h, includes/sound.h, includes/st.h,
	  includes/vdi.h, includes/wavFormat.h, includes/ymFormat.h: The
	  BOOL typedef in main.h always clashed with the definintion
	  somewhere in windows.h - and something similar also happens on
	  Mac OS X ... instead of always fixing the header inclusion order,
	  it's maybe better to get rid of BOOL and use the defines from
	  stdbool.h instead. These are now the first steps into this
	  direction.

2008-05-03 20:29  Thomas Huth

	* config-default.h, configure.ac, src/change.c: Added autoconf
	  check for unix domain sockets

2008-04-28 23:26  Eero Tamminen

	* src/: change.c, shortcut.c, includes/change.h,
	  includes/shortcut.h: - disable control socket when WIN32 is
	  defined   (--no-cygwin would require Winsock use) - add support
	  for synthetizing rightclick/doubleclick/keyevent   through the
	  control socket - change related functions to return error (FALSE)
	  when they fail

2008-04-28 22:22  Nicolas Pomarede

	* src/fdc.c: Add more detailled traces for all commands

2008-04-27 13:22  Nicolas Pomarede

	* src/uae-cpu/: gencpu.c, readcpu.c: "strange" mode : Areg is
	  possible as a source in move.b, eg move.b a1,(a0) (dc.w $1089)
	  (Blood Money in Superior Compil 65)

2008-04-26 00:17  Eero Tamminen

	* src/change.c: - fix command debug output - read can include
	  several commands send by the other end.    use newline to
	  separate the commands

2008-04-26 00:15  Eero Tamminen

	* src/log.c: allow run-time disabling of all traces with 'none'

2008-04-23 22:55  Eero Tamminen

	* src/: Makefile, change.c, dialog.c, main.c, options.c,
	  shortcut.c, includes/change.h, includes/options.h,
	  includes/shortcut.h: - Move configuration change code from
	  dialog.c to new change.c file - Return FALSE instead of exiting
	  or errors in options.c option parsing - Exit in main.c if option
	  parsing returns FALSE - Add new --control-socket Hatari option to
	  options.c - call change.c socket/stdin checking function from
	  main.c event loop - Receive command line options through socket
	  or stdin in change.c	 and with help of option.c, change the co.
	  settings - Add function to do shortcut actions based on their
	  name to shortcut.c - call that from change.c

2008-04-23 19:59  Nicolas Pomarede

	* src/psg.c: Mask for noise period is 0x1f, not 0x3f ...

2008-04-21 22:49  Eero Tamminen

	* src/cfgopts.c: try fixing for Str_Trim() that really removes all
	  whitespace

2008-04-20 18:04  Eero Tamminen

	* src/str.c: trim all white space instead of just spaces and tabs

2008-04-20 15:11  Nicolas Pomarede

	* src/psg.c: Mask bit 0-5 of reg 6 (noise period) in case a program
	  would read it.

2008-04-20 14:16  Nicolas Pomarede

	* src/mfp.c: In TRACE call, replace get_long by STMemory_ReadLong,
	  else we could get bus error when restoring a gemdos snapshot and
	  --trace mfp_exception was used (because get_long checks we're in
	  supervisor mode, which is not necessarily the case)

2008-04-19 10:04  Nicolas Pomarede

	* src/uae-cpu/newcpu.c: Add wait states extra cycles before testing
	  pending interrupts

2008-04-18 22:35  Nicolas Pomarede

	* src/mfp.c: Handle read at $fffa21 occuring at the same time the
	  Timer B counter is decremented by the end of line interrupt (fix
	  flickering bottom border in B.I.G. Demo screen 1)

2008-04-18 22:31  Nicolas Pomarede

	* src/: cycles.c, video.c, includes/video.h: Handle read at $fffa21
	  occuring at the same time the Timer B counter is decremented by
	  the end of line interrupt (fix flickering bottom border in B.I.G.
	  Demo screen 1)

2008-04-18 19:02  Nicolas Pomarede

	* src/uae-cpu/table68k: extb.l (8 bits -> 32 bits) is only
	  available on CPUs >= 68020

2008-04-16 20:49  Nicolas Pomarede

	* src/m68000.c: Add pairing for LSR/ADD (and all variants) (Zoolook
	  part in ULM New Year Demo)

2008-04-15 23:51  Nicolas Pomarede

	* src/: m68000.c, includes/m68000.h: Add some pairing combinations
	  (verified on STF) : BTST/Bcc, MUL/DIV, MUL/MOVE, EXG/MOVE

2008-04-14 00:11  Thomas Huth

	* src/: Makefile, cfgopts.c, gemdos.c, keymap.c, misc.c, str.c,
	  includes/misc.h, includes/str.h: Moved string functions to new
	  file str.c

2008-04-13 20:08  Nicolas Pomarede

	* src/mfp.c: Add traces for Timer A/B in event count mode (ctrl=8)

2008-04-12 17:41  Nicolas Pomarede

	* src/video.c: Correct position of end of line / timer B interrupt
	  when detecting a 'right-2' line.

2008-04-11 22:24  Nicolas Pomarede

	* src/: video.c, includes/video.h: Cycle precise position for the
	  end of line / timer B interrupt, depending on the current freq
	  (50 or 60 Hz) (slightly improve bottom border in B.I.G. Demo
	  screen 1)

2008-04-09 21:55  Eero Tamminen

	* src/video.c: debug output to stderr if using printf

2008-04-09 00:11  Thomas Huth

	* src/gemdos.c: The emudrives structure is now saved into memory
	  snapshots, too, so that the memory snapshots should now work
	  better when GEMDOS HD emulation is turned on.

2008-04-08 00:08  Nicolas Pomarede

	* src/: video.c, includes/video.h: Use different values for
	  VblVideoCycleOffset if system is STF or STE (4 cycles
	  difference).	With the specific value of LineRemoveTopCycle on
	  STE, this fixes the end part of Pacemaker by Paradox (which
	  missed 8 cycles to work in STE mode)

2008-04-07 23:47  Thomas Huth

	* src/: gemdos.c, memorySnapShot.c: Added missing GEMDOS variable
	  to memory snapshots

2008-04-07 22:40  Eero Tamminen

	* src/: options.c, includes/options.h, uae-cpu/newcpu.c: add bios +
	  xbios interception debug option

2008-04-07 21:49  Thomas Huth

	* src/log.c: Fixed compiler warning

2008-04-07 21:43  Thomas Huth

	* src/: cart.c, includes/m68000.h, includes/main.h: Moved the 68k
	  related #defines from main.h to m68000.h

2008-04-07 21:04  Eero Tamminen

	* configure.ac: fix HATARI_TRACE_ACTIVATED define name

2008-04-06 21:20  Eero Tamminen

	* src/: ikbd.c, mfp.c, psg.c, spec512.c, video.c: - revert some
	  tracing changes, Nicolas likes the earlier way better   (when
	  HATARI_TRACE_PRINT is defined always to printf, compiler
	  warnings about unused variables go away)

2008-04-06 21:16  Eero Tamminen

	* src/includes/log.h: fix AHATARI_TRACE_PRINT issue

2008-04-06 20:38  Eero Tamminen

	* src/includes/log.h: add gcc format parameter checks for logging

2008-04-06 20:37  Eero Tamminen

	* src/includes/ikbd.h: remove protos for static functions

2008-04-06 14:57  Eero Tamminen

	* src/ikbd.c: declare locally used functions static

2008-04-06 14:39  Eero Tamminen

	* src/: ikbd.c, log.c, mfp.c, psg.c, spec512.c, video.c,
	  includes/log.h, uae-cpu/newcpu.c: - make sure nothing of tracing
	  is left in code when it's disabled - as tracing help code is
	  still there, allow seeing it when tracing   is otherwise disabled

2008-04-06 13:58  Eero Tamminen

	* src/includes/log.h: fix include

2008-04-06 13:20  Eero Tamminen

	* configure.ac, src/includes/log.h: Move HATARI_TRACE_ACTIVATED
	  from src/includes/log.h to top level config.h and add configure
	  option for enabling tracing to configure.ac.	By default tracing
	  is disabled, you need to use configure or enable tracing from
	  config.h now.

2008-04-06 12:33  Eero Tamminen

	* src/: log.c, vdi.c, includes/log.h: add VDI tracing

2008-04-06 11:07  Eero Tamminen

	* src/: bios.c, gemdos.c, log.c, options.c, xbios.c,
	  includes/log.h: - add tracing to bios, xbios and gemdos (what
	  functions are called) - better log option parsing function names
	  & returntype

2008-04-06 11:01  Eero Tamminen

	* src/shortcut.c: adding missing include

2008-04-04 23:18  Eero Tamminen

	* src/: configuration.c, keymap.c, shortcut.c,
	  includes/configuration.h: make debug interface shorcut
	  configurable

2008-04-04 22:57  Eero Tamminen

	* src/: configuration.c, log.c, main.c, options.c,
	  includes/configuration.h, includes/log.h: add options for: - text
	  and alert log levels - trace file (also new config option) if log
	  or trace file open fails, exit

2008-04-04 00:17  Nicolas Pomarede

	* src/: video.c, includes/video.h: Use different values for
	  RestartVideoCounterCycle if system is STF or STE.

2008-04-03 23:15  Eero Tamminen

	* src/gemdos.c: ERROR -> WARN (not serious enough to need a dialog)

2008-04-03 23:11  Eero Tamminen

	* src/: configuration.c, fdc.c, hdc.c, main.c, memorySnapShot.c,
	  tos.c, ymFormat.c, falcon/nvram.c, includes/log.h: - add LOG_TODO
	  log level for features that are not yet emulated   and convert
	  some LOG_DEBUGs to it - finetune log levels in preparation of
	  joining of Log_Printf()   and Log_AlertDlg()

2008-04-03 22:35  Eero Tamminen

	* src/: log.c, includes/log.h: HatariTraceLevel -> HatariTraceFlags
	  (more correct name)

2008-04-03 22:30  Eero Tamminen

	* src/: Makefile, fdc.c, ikbd.c, int.c, log.c, mfp.c, options.c,
	  psg.c, spec512.c, trace.c, video.c, includes/log.h,
	  includes/m68000.h, includes/trace.h, uae-cpu/newcpu.c: - join
	  trace.c/h to log.c/h - improve make depend

2008-04-03 22:27  Eero Tamminen

	* src/falcon/nvram.c: one more missing nMonitorType change

2008-04-03 22:19  Eero Tamminen

	* src/gui-sdl/dlgScreen.c: missed nFrameSkips & nMonitorType
	  changes

2008-04-03 19:42  Nicolas Pomarede

	* src/video.c: Remove fprintf used for debug

2008-04-02 22:55  Nicolas Pomarede

	* src/video.c: Correct a wrong value of nStartHBL when going 60Hz
	  between cycles 508 and 512 on line 33.

2008-04-02 20:02  Eero Tamminen

	* src/ymFormat.c: failure needs WARN, not INFO

2008-03-31 19:28  Eero Tamminen

	* src/: video.c, includes/configuration.h, configuration.c,
	  dialog.c, keymap.c, main.c, options.c, screen.c, shortcut.c,
	  stMemory.c: - add "n" (numeric) prefix to FrameSkips &
	  MonitorType for consistency - rename nMinMaxSpeed to more correct
	  bFastForward option and make it bool - add --fast-forward command
	  line option

2008-03-31 00:24  Nicolas Pomarede

	* src/int.c: ActiveInterrupt was not saved in the snapshot, which
	  randomly caused errors when restoring a snapshot doing video/cpu
	  synchronization.  Call Int_SetNewInterrupt() after loading the
	  snapshot to correctly set internal state.

2008-03-30 22:47  Eero Tamminen

	* src/log.c: if \n missing, add it like in the other function

2008-03-30 : *** Version 1.0.1 ***

2008-03-30 12:38  Thomas Huth

	* Info-Hatari.plist, configure.ac, hatari.spec, readme.txt,
	  doc/release-notes.txt, doc/doxygen/Doxyfile,
	  src/gui-osx/English.lproj/InfoPlist.strings, src/includes/main.h:
	  Changes for bug-fixed version 1.0.1

2008-03-30 12:08  Thomas Huth

	* src/trace.c: Print an error message when trace code has not been
	  compiled in, but the user still wants to use it.

2008-03-30 00:03  Thomas Huth

	* src/uae-cpu/add_cycles.pl: add_cycles.pl is not required anymore
	  (it's done in gencpu.c already).

2008-03-30 00:01  Thomas Huth

	* src/memorySnapShot.c: Video_SetSystemTimings is already done
	  during reset, no need to do it here again.

2008-03-29 21:33  Thomas Huth

	* src/convert/: macros.h, spec320x16.c, spec320x32.c, spec640x16.c,
	  spec640x32.c: The spec512 conversion routines did not work on
	  little endian ARM CPUs yet due to an unaligned memory access.
	  Introduced GET_SPEC512_OFFSET_PIXELS macro to fix this problem.

2008-03-29 17:59  Thomas Huth

	* src/rs232.c: Replaced STRam with IoMem

2008-03-29 12:05  Nicolas Pomarede

	* src/: video.c, memorySnapShot.c, includes/video.h: Use different
	  video timings depending on the machine type. For example on STE,
	  top/bottom border removal can occur at cycle 500 instead of 504
	  on STF (fix bottom border in the game 'Skulls')

2008-03-28 23:33  Eero Tamminen

	* src/main.c: for some reason (race condition?) destroying SDL
	  wmwindow can cause an X error when the actual SDL window is
	  reparented.  It works better if the wmwindow is just unmapped.

2008-03-28 18:48  Eero Tamminen

	* src/trace.c: stdlib.h needed for free()

2008-03-26 23:31  Thomas Huth

	* doc/authors.txt: Added Fredrik Noring

2008-03-26 23:15  Thomas Huth

	* src/: ioMem.c, psg.c: Rewrote the PSG mirror register code to
	  handle the case when a program writes a long-word to 0xff8802
	  (MOVE.L #xyz,$ffff8802). Before this change the PSG shadow
	  register at 0xff8804 was not used yet (happens e.g. in sampling
	  screens in the Lost Boys "Ooh Crikey Wot A Scorcher"). Big thanks
	  to Fredrik Noring for the hint!

2008-03-26 21:16  Eero Tamminen

	* src/screen.c: Thomas noted that windowed mode used SW_SURFACE
	  whereas fullscreen uses HW_SURFACE.  On my machine it didn't make
	  any difference...  I suspect SDL just doesn't use HW_SURFACE if
	  one isn't available (on my machine & SDL version?), but I'll
	  revert the this part to be sure it doesn't break anything.

2008-03-26 20:19  Eero Tamminen

	* src/screen.c: remove rendundant check, clearer fullscreen check

2008-03-26 20:17  Nicolas Pomarede

	* src/video.c: Clear unused pixels for border tricks left+2, left+8
	  and right-106

2008-03-26 19:45  Thomas Huth

	* src/screen.c: Use the right rendering functions when the SDL
	  suggests bit depth = 8.

2008-03-25 22:50  Eero Tamminen

	* src/options.c: restore 15-bit support option

2008-03-25 20:26  Nicolas Pomarede

	* src/video.c: On STE, add 16 pixels to the left border instead of
	  the right one when doing move.w #1,$ffff8264 / clr.b $ffff8264
	  (Just Musix 2 Menu by DHS)

2008-03-25 19:06  Thomas Huth

	* src/blitter.c: Do not increment source address when using Blitter
	  operation mode 0 or 15. This fixes the Grotesque demo by Omega.
	  Thanks to Fredrik Noring for the hint!

2008-03-19 01:24  Thomas Huth

	* src/spec512.c: Make sure that scan line count does not get higher
	  than max amount of allowed scanlines. (This fix is needed for Dan
	  Dare 3, for example)

2008-03-19 00:56  Thomas Huth

	* src/uae-cpu/: .cvsignore, Makefile: Automatic dependencies for
	  the UAE CPU core Makefile

2008-03-18 01:56  Thomas Huth

	* Makefile-MinGW.cnf, src/file.c, src/paths.c,
	  src/gui-sdl/dlgDisk.c: Fixing some problems that occured when
	  compiling Hatari with MinGW

2008-03-17 17:27  Thomas Huth

	* src/main.c: Full screen resolution is already set correctly
	  during screen init, there is no need anymore to do it here again.

2008-03-17 : *** Version 1.0.0 ***

2008-03-17 15:15  Thomas Huth

	* configure.ac, src/main.c: Fixed X11 window reparenting checks

2008-03-17 12:40  Thomas Huth

	* Info-Hatari.plist, readme.txt, doc/release-notes.txt,
	  doc/doxygen/Doxyfile, src/includes/main.h: Update for version
	  1.0.0

2008-03-14 21:13  Nicolas Pomarede

	* src/video.c: Handle writes to ff8205/07/09, linewidth and hw
	  scroll that overlaps the end of the line.  Apply linewidth before
	  changing video address.  (bump mapping part in Pacemaker by
	  Paradox and maze part in Braindamage by Agression)

2008-03-14 10:42  Thomas Huth

	* doc/: hatari.1, manual.html, fr/hatari.1: Updated the command
	  line options to match the current executable again.

2008-03-14 00:17  Thomas Huth

	* src/: fdc.c, reset.c: Slightly improved FDC update interrupt
	  handling. This fixes the NO COOPER demo loader problem.

2008-03-13 23:08  Thomas Huth

	* configure.ac: Added comment about autoreconf

2008-03-13 21:32  Eero Tamminen

	* Makefile.cnf.in, configure.ac, src/main.c: * Makefile.cnf.in,
	  configure.ac: add optional X11 support for embedding * main.c: if
	  PARENT_WIN_ID environment variable is set,   embed Hatari SDL
	  window inside the indicated window

2008-03-13 20:26  Thomas Huth

	* Hatari.xcodeproj/project.pbxproj: Building Hatari without
	  optimization is a _very_ bad idea... enabled -O2 for XCode builds
	  now.

2008-03-13 13:32  Thomas Huth

	* src/options.c: --debug is only used for turning debugging on,
	  since there is no need to turn this off (it's not saved in the
	  config file)

2008-03-11 21:11  Eero Tamminen

	* src/: configuration.c, options.c, spec512.c,
	  includes/configuration.h: * Add --spec512 option controlling the
	  compromize between color   display accuracy with spec512 tricks
	  and (huge) performance   penalty.  * remove redundant check from
	  --bpp option

2008-03-11 15:31  Thomas Huth

	* src/screen.c: Screen must be updated completely when switching
	  back from Spec512 rendering to normal mode. This fixes some gfx
	  glitches in Paul Simoes Overscan demo for example.

2008-03-11 14:50  Thomas Huth

	* src/: includes/m68000.h, uae-cpu/newcpu.c: Cycle pairing is now
	  only taken into consideration in the function m68k_run, between
	  two opcodes.

2008-03-10 23:36  Thomas Huth

	* src/: options.c, screen.c: Allow to use the 32 bpp screen
	  rendering functions

2008-03-10 22:57  Thomas Huth

	* src/convert/: macros.h, routines.h, spec320x32.c, spec640x32.c:
	  Added 32 bpp screen conversion functions for Spec512 screens

2008-03-10 19:53  Thomas Huth

	* src/convert/: low320x32.c, low640x32.c, macros.h, med640x32.c:
	  Added 32 bpp screen conversion functions for low and medium
	  resolution

2008-03-09 13:53  Nicolas Pomarede

	* src/: mfp.c, m68000.c, video.c, includes/m68000.h: Fix exception
	  processing when MFP vector base $fffa17 is changed to $10 ('Toki'
	  end part fullscreen)

2008-03-09 02:42  clafou

	* Hatari.xcodeproj/project.pbxproj: Updated XCode Project file

2008-03-08 14:12  Nicolas Pomarede

	* src/: mfp.c, trace.c, includes/trace.h: Add trace when writing to
	  MFP registers

2008-03-07 01:41  Thomas Huth

	* src/reset.c: Start FDC 'update interrupt' after reset.

2008-03-03 22:08  Thomas Huth

	* src/gui-osx/PrefsController.m: Made the OS X preferences dialog
	  compilable again

2008-03-03 21:01  Thomas Huth

	* src/gui-osx/SDLMain.m: Updated calls to
	  Floppy_InsertDiskIntoDrive and MemorSnapShot_Capture/Restore
	  (they have additional parameters now)

2008-03-02 21:14  Eero Tamminen

	* doc/hatari.1, src/options.c: move TOS under memory options

2008-03-02 21:09  Eero Tamminen

	* doc/hatari.1: split system options to further memory and CPU
	  options, and otherwise re-order options according to Hatari help

2008-03-02 21:03  Eero Tamminen

	* src/options.c: * -m is still useful, we're not going to remove it
	  for v1.0 * split system options to:	- memory options   - cpu
	  options   - misc system options * reorder sections a bit so that
	  more commonly used items are first

2008-03-02 20:45  Eero Tamminen

	* src/options.c: - fix the option ID given to help/exit function -
	  don't assume things, exit on all parsing issues (joystick &
	  memsize)

2008-03-01 23:56  Eero Tamminen

	* doc/hatari.1, src/options.c: separate section for VDI options

2008-03-01 23:40  Eero Tamminen

	* doc/hatari.1: update options

2008-03-01 23:37  Eero Tamminen

	* src/: configuration.c, dialog.c, options.c, screen.c,
	  gui-sdl/dlgScreen.c, includes/configuration.h: As discussed on
	  the devel list: * convert --force8bpp (boolean) to --bpp
	  (integer) option * --sound supports now off/low/mid/hi for
	  enabling/disabling   sound and setting it's quality * added
	  --cpuclock option

2008-03-01 22:49  Eero Tamminen

	* src/options.c: move --slowfdc to disk options

2008-03-01 22:13  Eero Tamminen

	* doc/hatari.1: split options to categories, similarly as in hatari
	  -h add missing options and capitalize option descriptions

2008-03-01 21:54  Eero Tamminen

	* src/options.c: add true/false to bool alternatives

2008-03-01 21:47  Eero Tamminen

	* src/options.c: - "none" can be used as filename to disable
	  devices and HDs - fix to sound bool

2008-03-01 21:00  Eero Tamminen

	* src/options.c: set the order of options in the parsing fuction to
	  same as in the option output sections

2008-03-01 20:33  Eero Tamminen

	* src/: Makefile, main.c: Oops... Revert embed testing code

2008-03-01 20:27  Eero Tamminen

	* src/: Makefile, main.c, options.c: * These were now converted to
	  take a <bool> argument so that they	can also be disabled:
	  --borders <y/n>   --force8bpp <y/n>	--compatible <y/n>
	  --blitter <y/n>   --slowfdc <y/n>   --sound <y/n>   (was earlier
	  --nosound) * If floppy is given, but no HD (dir), disable booting
	  from HD

2008-03-01 18:59  Eero Tamminen

	* src/options.c: add support for option sections and split options
	  to sections

2008-02-29 23:42  Thomas Huth

	* doc/manual.html: Some minor improvements

2008-02-29 22:12  Thomas Huth

	* doc/todo.txt: Updated the TODO list

2008-02-29 22:11  Thomas Huth

	* src/: fdc.c, int.c, video.c, includes/fdc.h, includes/int.h: The
	  FDC update is now done with a dedicated 'interrupt' function
	  instead of using the HBL (which is no longer hardwired to 512
	  cycles, so this was quite a way to update the FDC nowadays).

2008-02-29 21:24  Thomas Huth

	* src/: gui-sdl/dlgAlert.c, gui-sdl/dlgFileSelect.c,
	  gui-sdl/dlgMain.c, gui-sdl/sdlgui.c, includes/sdlgui.h: Cancel
	  buttons can now be activated by pressing the ESC key.

2008-02-29 20:22  Thomas Huth

	* src/convert/: spec320x16.c, spec640x16.c: Fixed Spec512 plotting
	  on big endian machines.

2008-02-26 21:50  Eero Tamminen

	* src/options.c: fix -j description, fit --trace description to 80
	  chars

2008-02-24 23:34  Thomas Huth

	* src/configuration.c: Use compatible CPU and high sound quality as
	  default settings

2008-02-24 23:28  Thomas Huth

	* src/configuration.c: Disable auto-save by default

2008-02-24 21:56  Eero Tamminen

	* doc/manual.html: Minor updates for 1.0 and couple of typo fixes

2008-02-24 21:45  Thomas Huth

	* doc/hatari.1, src/m68000.c, src/options.c,
	  src/includes/options.h: Added --memstate command line option.

2008-02-24 21:10  Thomas Huth

	* src/: configuration.c, m68000.c, main.c, memorySnapShot.c,
	  shortcut.c, gui-sdl/dlgMemory.c, includes/configuration.h,
	  includes/m68000.h, includes/memorySnapShot.h,
	  uae-cpu/hatari-glue.c, uae-cpu/hatari-glue.h: It is now possible
	  to automatically load/save memory snap-shots at start/exit

2008-02-23 23:16  Thomas Huth

	* src/gui-sdl/: dlgKeyboard.c, dlgMain.c, dlgMemory.c, dlgScreen.c,
	  dlgSound.c, sdlgui.c: Sourcecode beautification

2008-02-23 23:14  Thomas Huth

	* src/: Makefile, gui-sdl/Makefile, gui-sdl/dlgDisc.c,
	  gui-sdl/dlgDisk.c, gui-sdl/dlgNewDisc.c, gui-sdl/dlgNewDisk.c:
	  Renamed dlg*Disc.c into dlg*Disk.c

2008-02-23 22:15  Thomas Huth

	* src/falcon/nvram.c: Fix compiler warning

2008-02-23 22:15  Thomas Huth

	* src/convert/: high640x8.c, low320x16.c, low320x8.c, low640x16.c,
	  low640x8.c, med640x16.c, med640x8.c, spec320x16.c, spec640x16.c,
	  vdi16.c, vdi2.c, vdi4.c: Sourcecode beautification

2008-02-23 17:51  Thomas Huth

	* src/: configuration.c, paths.c, printer.c, falcon/nvram.c:
	  Introduced ~/.hatari directory. Configuration file, hatari.nvram
	  and some other files are now loaded from this directory instead
	  of $HOME.

2008-02-23 16:30  Thomas Huth

	* src/: configuration.c, screen.c, includes/configuration.h,
	  includes/screen.h: The size of the left and right border can now
	  be configured in the configuration file of Hatari.

2008-02-21 23:34  Thomas Huth

	* src/: Makefile, screen.c, convert/high640x1.c,
	  convert/routines.h, convert/vdi2.c: Removed unused convert
	  functions

2008-02-21 23:24  Thomas Huth

	* doc/todo.txt: Added some more TODO items

2008-02-20 23:47  Thomas Huth

	* src/: Makefile, configuration.c, main.c, paths.c, screen.c,
	  screenSnapShot.c, includes/main.h, includes/paths.h: Moved path
	  handling to a separate file, paths.c

2008-02-20 22:03  Eero Tamminen

	* doc/compatibility.html: update

2008-02-20 21:31  Nicolas Pomarede

	* src/video.c: Fix typo.

2008-02-20 21:07  Nicolas Pomarede

	* src/: ioMem.c, video.c, includes/ioMem.h, includes/video.h:
	  Better support for writing to ff8205/07/09 on STE.

2008-02-19 22:19  Eero Tamminen

	* doc/compatibility.html: major improvements on Coreflakes and
	  minor one on Braindamage demo

2008-02-19 19:51  Eero Tamminen

	* src/memorySnapShot.c: Add missing include for FPU save/restore
	  functions

2008-02-19 00:24  Nicolas Pomarede

	* src/: ioMemTabFalcon.c, ioMemTabST.c, ioMemTabSTE.c,
	  ioMemTabTT.c, video.c: Improve reading/writing video counter and
	  apply LineWidth in the correct order on STE.

2008-02-17 17:40  Eero Tamminen

	* doc/compatibility.html: E605 demo works now

2008-02-16 19:05  Nicolas Pomarede

	* src/m68000.c: FPU save/restore was removed by mistake

2008-02-16 15:04  Nicolas Pomarede

	* src/m68000.c: Add pairing for MULS/DIVS (needs to be checked on a
	  real ST)

2008-02-15 23:31  Eero Tamminen

	* doc/compatibility.html: update 2 ST demos

2008-02-12 23:05  Nicolas Pomarede

	* src/m68000.c: Add pairing for LSR/MOVEA (and all other bit
	  shifting instructions)

2008-02-11 23:35  Nicolas Pomarede

	* src/m68000.c: Add pairing for MULS/MOVEA

2008-02-11 00:22  Thomas Huth

	* src/gui-osx/English.lproj/InfoPlist.strings: Increased version
	  number

2008-02-10 20:42  Thomas Huth

	* doc/fr/hatari.1: Updated the french translation of the man page
	  (thanks to Tudori Benoit for the update)

2008-02-09 22:39  Thomas Huth

	* doc/todo.txt, src/includes/screen.h: Set SCREENBYTES_LEFT again
	  to 16 so that the Hatari screen fits into a 800x600 fullscreen
	  resolution again. This really should be made more flexible one
	  day...

2008-02-09 12:15  Thomas Huth

	* src/: m68000.c, memorySnapShot.c, uae-cpu/fpp.c,
	  uae-cpu/savestate.h: Save FPU register in memory snapshots, too

2008-02-09 11:42  Thomas Huth

	* src/video.c: Silenced compiler warning

2008-02-09 09:35  Thomas Huth

	* src/video.c: Fixed STE hw scrolling of last pixels in a line when
	  the right border has been opened (Mind Rewind and E605 demos).

2008-02-08 21:15  Nicolas Pomarede

	* src/video.c: Handle overscan lines combined with horizontal
	  scroll on STE

2008-02-08 20:02  Nicolas Pomarede

	* src/m68000.c: Add pairing for LSL/LEA (and all other bit shifting
	  instructions)

2008-02-07 00:15  Nicolas Pomarede

	* src/mfp.c: Handle "fast" MFP timer, no more need to patch the
	  TOS's timer D

2008-02-06 23:14  Thomas Huth

	* doc/images/screen.png: Updated screenshot of screen dialog

2008-02-06 22:35  Eero Tamminen

	* doc/compatibility.html: - update compatibility notes for few of
	  the programs - add generic status notes for ST & STE
	  compatibility

2008-02-06 01:05  Thomas Huth

	* doc/compatibility.html: Added Pirates, some HTML cleanup

2008-02-05 23:31  Thomas Huth

	* Makefile, Makefile-default.cnf: 'make install' must fail if the
	  user did not configured the Makefile.cnf properly

2008-02-04 23:09  Nicolas Pomarede

	* src/video.c: Better handling of writes to hwscroll on STE

2008-02-04 22:41  Thomas Huth

	* src/uae-cpu/: Makefile, gencpu.c: Found a nice way to patch-in
	  the CurrentInstructionCycles without using the perl script (so
	  there is one dependency less for building Hatari)

2008-02-04 22:01  Eero Tamminen

	* doc/compatibility.html: update

2008-02-04 19:11  Thomas Huth

	* src/gui-sdl/sdlgui.c: When editing a text field in a dialog,
	  enable the SDL unicode translation to be able to also get the
	  non-alphanumerical characters from the keyboard

2008-02-04 00:36  Thomas Huth

	* src/video.c: Do not set pNewVideoRaster before first visible line
	  on the screen

2008-02-03 23:52  Thomas Huth

	* src/options.c: --vdi-planes takes a parameter, so show this in
	  the help text

2008-02-03 23:00  Nicolas Pomarede

	* src/video.c: Better handling of writes to video counter addr on
	  STE

2008-02-03 20:29  Thomas Huth

	* doc/emutos.txt: Added a short note about the tos.img that is
	  shipped with the official releases of Hatari. (text is based on
	  the README.tos file which is part of the Fedora RPM of Hatari)

2008-02-03 19:31  Eero Tamminen

	* doc/compatibility.html: - add compatibility notes section - note
	  which items need Hatari v1.0 and/or TOS 1.2

2008-02-03 15:33  Thomas Huth

	* doc/hatari.1: Updated the man-page

2008-02-03 15:04  Thomas Huth

	* doc/: authors.txt, compatibility.html: Updated the documentation

2008-02-02 19:18  Nicolas Pomarede

	* src/: trace.c, includes/trace.h: Add a trace option for STE video
	  registers (video_ste)

2008-02-02 18:33  Nicolas Pomarede

	* src/: video.c, includes/video.h: Improve detection of left border
	  removal and 0 byte line by switching res

2008-02-02 18:30  Nicolas Pomarede

	* src/m68000.c: Add pairing for CMP/Bcc

2008-02-02 18:20  Nicolas Pomarede

	* src/uae-cpu/add_cycles.pl: Change comments

2008-02-01 23:08  Thomas Huth

	* doc/: compatibility.html, todo.txt: Updated the compatibility
	  list a little bit

2008-02-01 07:03  Thomas Huth

	* src/uae-cpu/newcpu.c: Run all pending interrupt functions after
	  each instruction to avoid starvation of lesser frequent functions
	  (this fixes the problems that occured recently when 'patch
	  timer-d' was disabled)

2008-01-31 16:49  Eero Tamminen

	* doc/todo.txt: put disk image format todos under one heading

2008-01-28 23:20  Thomas Huth

	* doc/release-notes.txt, doc/todo.txt, src/dmaSnd.c, src/ikbd.c,
	  src/int.c, src/memorySnapShot.c, src/mfp.c, src/screen.c,
	  src/spec512.c, src/video.c, src/includes/ikbd.h,
	  src/includes/int.h, src/includes/m68000.h, src/includes/screen.h:
	  Merged the remaining patches from Nicolas Pomarede: Improved MFP
	  emulation, better support for sync-scrolling and other video
	  tricks, ACIA reset emulation, and improved Int_* functions

2008-01-28 08:46  Thomas Huth

	* src/uae-cpu/gencpu.c: More cycle fixes from Nicolas (BCLR timings
	  and d8(An,Xn) address mode timings, fixes Anomaly demo)

2008-01-28 08:40  Thomas Huth

	* src/m68000.c: Add pairing for LSR/MOVE (and all other bit
	  shifting instructions). Thanks to Nicolas for the patch

2008-01-26 21:29  Thomas Huth

	* src/: m68000.c, includes/m68000.h: The next set of Nicolas'
	  patches: Support for CPU instruction cycles pairing

2008-01-26 17:44  Thomas Huth

	* src/cart.c: Initialize Hatari's illegal opcodes only if really
	  necessary (thanks to Nicolas Pomarede for this patch)

2008-01-25 23:43  Thomas Huth

	* src/uae-cpu/: Makefile, add_cycles.pl, gencpu.c, hatari-glue.h,
	  newcpu.c, newcpu.h, readcpu.h: Added Nicolas Pomarede's CPU
	  patches: Improved cycles emulation, exception stack frames,
	  illegal opcodes, etc.

2008-01-25 23:36  Thomas Huth

	* src/uae-cpu/table68k: chk.l is only available on CPUs >= 68020
	  (thanks to Nicolas Pomarede for the patch)

2008-01-24 22:41  Thomas Huth

	* src/: cycles.c, video.c, includes/cycles.h, includes/video.h:
	  Some more of Nicolas Pomarede's patches: Preparation for CPU
	  cycles and video updates

2008-01-24 22:21  Thomas Huth

	* src/: ioMemTabFalcon.c, ioMemTabST.c, ioMemTabSTE.c,
	  ioMemTabTT.c, psg.c, includes/psg.h: Added Nicolas Pomarede's
	  patch for improved PSG wait state cycles emulation

2008-01-24 19:53  Thomas Huth

	* src/: Makefile, fdc.c, options.c, trace.c, includes/fdc.h,
	  includes/trace.h: Added Nicolas Pomarede's trace code (required
	  for his upcoming other patches)

2008-01-23 20:32  Thomas Huth

	* src/xbios.c: Use the new M68000_GetPC() wrapper instead of
	  m68k_getpc()

2008-01-12 20:14  Eero Tamminen

	* src/: file.c, gui-sdl/dlgDisc.c, gui-sdl/dlgFileSelect.c,
	  gui-sdl/dlgNewDisc.c, includes/file.h, includes/sdlgui.h:
	  Bugfixes to: - DlgFileSelect_HandleSdlEvents() caused invalid
	  memory access - dlgNewDisc.c:Dialog_BrowseDisk() used the new
	  filename even   when inserting the co. disk image failed

	  Refactor SDLGui_FileSelect() completely: - make path arguments
	  const and return the path instead of modifying   the arguments
	  (making assumptions of their size)   - Modify dlgNewDisc.c
	  functions and SDLGui_FileConfSelect() accordingly - split four
	  functions out of it, two to file.c

2008-01-12 19:22  Eero Tamminen

	* src/zip.c: add missing newlines to Log_Printf()s

2008-01-12 18:44  Eero Tamminen

	* src/: zip.c, includes/zip.h: - fix string length assumption -
	  const ZIP_GetFilesDir() args

2008-01-12 03:04  Thomas Huth

	* src/keymap.c: Added some more keymaps, useful on the MacBook
	  (Thanks to Desty for the keymap list on atari-forum.com)

2008-01-10 00:34  Thomas Huth

	* src/: file.c, gemdos.c, includes/file.h: Fcreate must return
	  PATH-NOT-FOUND when a program like ST-Zip 2.6 tries to create a
	  file in a directory that does not exist yet.

2008-01-07 22:54  Eero Tamminen

	* src/floppy.c: return in correct place, otherwise you get disk
	  inserted regardless of whether it actually succeeded or not (+
	  zero/-1 malloc for driveB)

2008-01-06 22:27  Eero Tamminen

	* src/: screen.c, video.c, includes/screen.h: use defines for TT
	  resolutions similarly to ST resolutions

2008-01-06 21:43  Thomas Huth

	* src/: screen.c, video.c, includes/screen.h, includes/video.h:
	  Initialize the TTRes variable during reset. Also moved the STRes
	  variable to video.c (it suits better to that file).

2008-01-06 19:31  Eero Tamminen

	* src/main.c: > The readlink function does not append a zero to the
	  string, so we have
	  > to zero the whole string memory before using readlink...

	  It returns the number of bytes written, so just set terminator
	  (still, a bad/ugly/inconsistent API)

2008-01-06 17:42  Thomas Huth

	* src/main.c: The readlink function does not append a zero to the
	  string, so we have to zero the whole string memory before using
	  readlink... (Thanks to Eero for the hint)

2008-01-05 21:26  Thomas Huth

	* src/video.c: Moved code that updates the TT palette into a new
	  function. Also added special handling for monochrome TT video
	  modes (palette seems to be hardwired to black and white there).

2008-01-04 20:28  Thomas Huth

	* src/main.c: The GetModuleFileName stuff does not work as
	  expected... disabled it again.

2008-01-04 12:13  Thomas Huth

	* src/main.c: Some small improvements to the new datadir
	  determination code.

2008-01-03 20:32  Thomas Huth

	* hatari.spec: Added 'Prefix:' line to create a relocatable RPM
	  package.

2008-01-03 20:13  Thomas Huth

	* tools/hmsa/: Makefile, hmsa.c: hmsa is now compilable again.

2008-01-03 13:09  Thomas Huth

	* src/: includes/main.h, Makefile, configuration.c, main.c,
	  scandir.c, screen.c, falcon/Makefile, gui-sdl/Makefile: Determine
	  the locatation of the executable at runtime. The datadir is then
	  calculated relative the the path of the executable. This way the
	  Hatari package gets relocatable since there are no more absolute
	  path names in the executable.

2008-01-03 13:04  Thomas Huth

	* .cvsignore: Added hatari.1.gz to cvsignore file.

2008-01-02 22:48  Thomas Huth

	* src/gemdos.c: Added missing defines for compiling with MinGW

2008-01-02 21:55  Thomas Huth

	* src/configuration.c: Fixed bug in config file handling: keyboard
	  shortcuts without modifiers for loading and saving memory
	  snapshots have been mapped to the wrong configuration variable.

2008-01-02 21:33  Thomas Huth

	* hatari.spec: Updated the RPM spec file to suit the latest version
	  of the Makefiles.

2008-01-02 21:30  Thomas Huth

	* configure.ac: The @docdir@ autoconf variable is only available
	  since autoconf 2.60. So this version is now the minimum
	  prerequisite for the configure script of Hatari.

2008-01-02 21:01  Thomas Huth

	* src/rs232.c: Silenced 'uninitialized variable' warning that only
	  occured when compiling with -O3 on GCC 4.1

2008-01-02 13:51  Thomas Huth

	* src/configuration.c: Removed special configuration for CeGCC
	  again - this can be handled with a proper configuration file, so
	  there is no need for this in the source code.

2007-12-31 15:54  Thomas Huth

	* src/joy.c: No need to include dialog.h in joy.c

2007-12-31 15:23  Thomas Huth

	* src/scandir.c: The scandir() function now also works with CeGCC.

2007-12-31 14:05  Thomas Huth

	* src/screen.c: Correctly set up bInFullScreen before setting the
	  very first screen resolution.

2007-12-31 13:21  Thomas Huth

	* src/: ikbd.c, printer.c: Cleaned up #includes

2007-12-30 21:43  Thomas Huth

	* src/configuration.c: Added special configuration for Windows
	  Mobile / CeGCC

2007-12-30 21:02  Thomas Huth

	* config-default.h, configure.ac, src/stMemory.c,
	  src/falcon/Makefile, src/includes/ioMem.h,
	  src/includes/stMemory.h, src/uae-cpu/Makefile,
	  src/uae-cpu/memory.c: Added ENABLE_SMALL_MEM hack to force Hatari
	  to use less memory (this is required for Windows Mobile / CeGCC
	  which does not like things like the 16 MiB STRam array, causing a
	  really huge BSS segment)

2007-12-24 16:56  Thomas Huth

	* config-default.h, configure.ac, src/main.c: Added proper check
	  for setenv() function (required for Solaris)

2007-12-23 19:54  Thomas Huth

	* src/: debugui.c, uae-cpu/build68k.c, uae-cpu/readcpu.c:
	  Parameters for functions from ctype.h should be unsigned (this is
	  required for Solaris where the functions from ctype.h are
	  implemented as macros which directly use the parameter as index
	  into an array)

2007-12-23 18:30  Thomas Huth

	* src/scandir.c: Need to include stdlib.h for proper prototype of
	  malloc when compiling for Solaris

2007-12-21 22:41  Eero Tamminen

	* Makefile: check for the case when Makefile-default.cnf or
	  config-default.h file is newer than the user's own configuration
	  and complain

2007-12-20 13:12  Thomas Huth

	* src/gemdos.c: Use HAVE_GLOB_H define instead of WIN32 define for
	  testing for the availability of glob.h

2007-12-20 13:11  Thomas Huth

	* acsite.m4, config-default.h, configure.ac: Added BIN2DATADIR
	  macro to be able to determine the datadir from the bindir (this
	  is needed for relocatable RPMs etc.)

2007-12-20 13:01  Thomas Huth

	* src/file.c: Also handle a '.' when it is located at the very end
	  of the path string (without trailing slash)

2007-12-20 12:41  Thomas Huth

	* src/file.c: Handle a '..' also when it is located at the very end
	  of the path string (without trailing slash)

2007-12-20 12:39  Thomas Huth

	* config-MinGW.h, config-default.h: Merging the settings from
	  config-MinGW.h into config-default.h, so that config-MinGW.h is
	  not needed any longer.

2007-12-20 01:37  Thomas Huth

	* src/: vdi.c, video.c: More sourcecode beautification...

2007-12-20 01:15  Thomas Huth

	* src/: screen.c, shortcut.c, sound.c: More sourcecode
	  beautification...

2007-12-19 12:54  Thomas Huth

	* src/: reset.c, rtc.c, screenSnapShot.c, xbios.c: Sourcecode
	  beautification

2007-12-19 12:13  Thomas Huth

	* src/: mfp.c, misc.c, msa.c: Sourcecode beatification + clean-up

2007-12-18 21:55  Thomas Huth

	* config-default.h, configure.ac, src/rs232.c: Added checks for
	  cfmakeraw and strings.h

2007-12-18 21:35  Thomas Huth

	* src/falcon/videl.c: videl.c uses STRam ... let's include
	  stMemory.h

2007-12-18 21:35  Thomas Huth

	* src/: cfgopts.c, file.c, gemdos.c, memorySnapShot.c, scandir.c,
	  unzip.c, zip.c: Put some pre-processor tests for strings.h into
	  the include sections since some systems like CeGCC do not have
	  strings.h.

2007-12-18 19:56  Thomas Huth

	* src/: cart.c, tos.c, includes/stMemory.h: Introduced RomMem
	  'variable' to be able to separate the ROM accesses from the STRam
	  accesses (sometimes in the future).

2007-12-18 19:36  Thomas Huth

	* src/rtc.c: Replaced STRam by IoMem

2007-12-18 18:24  Thomas Huth

	* src/dmaSnd.c: dmaSnd.c uses STRam, so let's include stMemory.h

2007-12-18 18:09  Thomas Huth

	* src/: reset.c, stMemory.c, tos.c: Moved memory init code to tos.c
	  - we really should not touch the STRam before we've called
	  memory_init().

2007-12-18 00:42  Thomas Huth

	* src/: m68000.c, main.c: Sourcecode beautification

2007-12-18 00:03  Thomas Huth

	* src/: ikbd.c, int.c, keymap.c: Sourcecode beautification

2007-12-16 23:09  Eero Tamminen

	* src/: file.c, floppy.c, main.c, gui-sdl/dlgFileSelect.c,
	  includes/file.h, includes/floppy.h: next self-conttained set of
	  patches that get rid of the assumption that all file strings are
	  FILE_MAX sized: * Rename file.c functions to CamelCaps for
	  consistency	* File_splitpath -> File_SplitPath   *
	  File_makepath -> File_MakePath * File_MakePath() and
	  File_FindPossibleExtFileName() return   an allocated path instead
	  of modifying their arguments * Adopt floppy.c and dlgFileSelect.c
	  to file.c changes * make Floppy_CreateDiskBFileName() and
	  Floppy_ZipInsertDiskIntoDrive()   args const and to return the
	  result instead of modifying the args *
	  Floppy_InsertDiskIntoDrive() takes size arg for the argument it
	  modifies -> Give that arg in main.c

2007-12-16 22:47  Eero Tamminen

	* doc/compatibility.html: update to latest CVS: addsub works,
	  cavemania partially

2007-12-14 03:09  Thomas Huth

	* doc/compatibility.html: Added 'Stretch' STE screen  extender. And
	  the Bird demo seems to be working again.

2007-12-11 20:02  Eero Tamminen

	* src/: gui-sdl/dlgDevice.c, gui-sdl/dlgDisc.c,
	  gui-sdl/dlgFileSelect.c, gui-sdl/dlgKeyboard.c,
	  gui-sdl/dlgMemory.c, gui-sdl/dlgRom.c, gui-sdl/dlgSound.c,
	  includes/sdlgui.h: Clean up the SDL GUI code by adding a new
	  function for file selection and removing the corresponding
	  (slightly differing) codes from the other SDL GUI files. Refactor
	  the large dlgDisc.c function at the same time.

2007-12-11 01:41  Thomas Huth

	* src/zip.c: Fixed off-by-one malloc bug (thanks to Eero for the
	  hint!)

2007-12-09 22:25  Eero Tamminen

	* src/: video.c, includes/video.h: Add defines for mono/71Hz

2007-12-04 00:56  Thomas Huth

	* Makefile, Makefile.cnf.in: Also install the documentation files
	  during a 'make install'

2007-12-03 23:11  Thomas Huth

	* src/: dialog.c, includes/dialog.h: Dialog_DoNeedReset is required
	  for the Mac OS X GUI, too, so this function must not be static.

2007-11-29 12:29  Thomas Huth

	* src/stMemory.c: memtop and phystop must _always_ be dividable by
	  512 or certain TOS versions might crash during boot.

2007-11-29 12:13  Thomas Huth

	* src/: vdi.c, includes/vdi.h, gui-sdl/dlgScreen.c: Allow a more
	  fine granular stepping in the VDI screen resolution dialog.

2007-11-25 16:14  Thomas Huth

	* src/: gemdos.c, vdi.c, includes/gemdos.h: Check destination
	  buffer length in GemDOS_CreateHardDriveFileName

2007-11-25 15:31  Thomas Huth

	* src/: configuration.c, dialog.c, memorySnapShot.c, options.c,
	  vdi.c, gui-sdl/dlgScreen.c, includes/configuration.h,
	  includes/vdi.h: Getting rid of the inflexible fixed-size VDI
	  screen resolutions.

2007-11-25 15:23  Thomas Huth

	* src/stMemory.c: Screen size must _always_ be at least 32 kiB

2007-11-25 15:05  Thomas Huth

	* src/gui-sdl/dlgAlert.c: Fixed off-by-one bug in alert dialog
	  formatting function

2007-11-24 20:45  Thomas Huth

	* src/stMemory.c: The VDI resolution screen size is now calculated
	  in a more flexible way.

2007-11-20 23:11  Thomas Huth

	* src/gui-sdl/dlgAlert.c: Cosmetic changes for the source code and
	  the alert dialog

2007-11-19 22:20  Thomas Huth

	* src/file.c: Fixed another bug: File_SplitPath did not work right
	  anymore (path string was too short).

2007-11-19 22:19  Thomas Huth

	* src/: ikbd.c, memorySnapShot.c: Some IKBD variables were not
	  saved in the memory snapshot file (caused problems with Airball)
	  - this has been fixed now.

2007-11-01 13:51  Thomas Huth

	* src/options.c: Improved options parsing functions (nicer
	  printout, and all strings are now copied with the new Opt_StrCpy
	  function to simplify the code and to always avoid buffer
	  overflows)

2007-11-01 12:03  Thomas Huth

	* src/zip.c: Set pointers to NULL after free'ing memory (to avoid
	  the possibility of dangling pointers)

2007-10-31 22:43  Eero Tamminen

	* src/: file.c, includes/file.h: ...and File_Save() gets Uint8*
	  too...

2007-10-31 22:31  Eero Tamminen

	* src/: cart.c, dim.c, file.c, main.c, msa.c, reset.c, st.c, tos.c,
	  vdi.c, ymFormat.c, zip.c, includes/file.h, includes/ymFormat.h,
	  includes/zip.h: * Add missing checks to file.c function   (and
	  remove irrelevant "security lenght check" in Clean function) * In
	  File_QueryOverwrite() alloc suitable sized buffer instead   of
	  using FILENAME_MAX stack array * Const things that can be consted
	  in file.c and zip.c	(and change one elseif construction to
	  switch-case there too) * Remove the dangerous and unused pAddress
	  argument from File_Read()   (it didn't have corresponding buffer
	  size argument) * Remove casts in several files by setting
	  File_Read() and File_Save   buffers to Uint8* and change unsigned
	  int/char in msa.c to Uint8 & Uint16 * Set ymFormat.c global
	  variables as static * Calling YMFormat_EndRecording() called
	  YMFormat_FreeRecording(), so	 "inlined" latter (in main.c it's
	  already called through Sound_EndRecording()) * ymFormat already
	  gets filename in YMFormat_BeginRecording(),	so use that instead
	  of getting it again from config in EndRecording.
	  (Dialog_CopyDialogParamsToConfiguration() calls EndRecording()
	  if recording is enabled so it cannot change in middle)

2007-10-31 22:01  Eero Tamminen

	* src/gui-sdl/dlgAlert.c: fix dialog text centering when there's
	  only one line of text

2007-10-31 00:33  Thomas Huth

	* src/cfgopts.c: Add a newline after each section when creating new
	  hatari.cfg files.

2007-10-31 00:22  Thomas Huth

	* src/configuration.c: Only convert keyboard MappingFileName string
	  to absolute path if it really contains a valid string

2007-10-30 02:13  Thomas Huth

	* src/spec512.c: Fixed buffer overflow in ST high so that this mode
	  now works stable again.

2007-10-25 01:19  Thomas Huth

	* src/video.c: Use 224 cycles per line in monochrome mode - seems
	  to be a more reasonable value than 226 cycles.

2007-10-23 23:02  Thomas Huth

	* src/video.c: Monochrome mode now runs in 71 Hz, and 60 Hz color
	  mode now also really runs with 60 Hz refresh rate

2007-10-23 22:00  Thomas Huth

	* src/: configuration.c, main.c, options.c,
	  includes/configuration.h: Moved bConfirmQuit from System to Log
	  section

2007-10-21 16:50  Eero Tamminen

	* src/: video.c, includes/video.h: more global variables that can
	  be static

2007-10-21 14:21  Eero Tamminen

	* src/: includes/vdi.h, vdi.c: - min VDI size 320x200 - align up
	  from min limit, down from max limit

2007-10-20 21:01  Eero Tamminen

	* src/gui-sdl/dlgAlert.c: center query dialog text horizontally

2007-10-19 23:56  Eero Tamminen

	* src/: sound.c, wavFormat.c, ymFormat.c, includes/ymFormat.h: -
	  convertStreams in ymformat can be static - calls to wav recording
	  function show up in profiler (ARM, frameskip 8)   although
	  recording is not enabled so check the bRecordWav before calling
	  that function (it would be nice if GCC could already do whole
	  program   optimization instead of just object level ones)

2007-10-19 21:54  Eero Tamminen

	* src/: main.c, options.c: fix compiler warning, better quit
	  message

2007-10-16 22:41  Eero Tamminen

	* doc/manual.html: document --confirm-quit

2007-10-16 22:39  Eero Tamminen

	* src/: configuration.c, dialog.c, main.c, options.c, shortcut.c,
	  gui-sdl/dlgAlert.c, includes/configuration.h, includes/dialog.h,
	  includes/main.h: Show user a confirmation dialog when Hatari is
	  quit through: - the window close button, - the options dialog
	  quit button, or - quit shortcut key.	It's enabled by default
	  (except when quit is invoked from the internal debugger).

	  There's also a --confirm-quit command line option and
	  corresponding configuration option for disabling (and
	  re-enabling) this query dialog.

2007-10-16 00:00  Thomas Huth

	* src/: includes/fdc.h, fdc.c, ioMemTabFalcon.c: The register
	  0xff860f is now emulated in Falcon mode. Writing to floppy disk
	  images works now also with TOS 4.0x.

2007-10-11 23:37  Thomas Huth

	* src/uae-cpu/fpp-unknown.h: Now using the conversion functions
	  from Aranym in the FPU core to convert between integer and
	  single/double floats. This fixes for example some rendering bugs
	  in NeoN Grafix. Thanks to Ole Dittmann for the hint!

2007-10-07 16:21  Thomas Huth

	* Makefile-MinGW.cnf, Makefile-default.cnf, Makefile.cnf.in,
	  configure.ac, src/uae-cpu/Makefile: Support for ranlib

2007-10-07 16:09  Thomas Huth

	* src/: rs232.c, scandir.c, includes/scandir.h: Hack for compiling
	  Hatari with cegcc

2007-10-07 16:07  Thomas Huth

	* src/: gemdos.c, uae-cpu/sysdeps.h: Do not include errno.h by
	  default in sysdeps.h

2007-10-04 22:22  Thomas Huth

	* src/uae-cpu/hatari-glue.c: Added missing call to
	  build_cpufunctbl()

2007-10-04 22:08  Thomas Huth

	* src/dialog.c: Query user if it is OK to reset the emulator after
	  changing certain options in the setup dialog.

2007-09-29 23:54  Thomas Huth

	* src/m68000.c: Fixed stupid typo: SPCFLAG_STOP must be cleared of
	  course when an interrupt happened.

2007-09-26 23:42  Thomas Huth

	* src/: m68000.c, uae-cpu/newcpu.c, uae-cpu/newcpu.h: Renamed
	  reg_caar and reg_cacr back to caar and cacr (like in the original
	  UAE CPU core)

2007-09-22 11:30  Thomas Huth

	* src/uae-cpu/fpp.c: Use the IEEE big endian header file where
	  possible

2007-09-17 22:32  Thomas Huth

	* src/: gemdos.c, m68000.c, uae-cpu/fpp.c, uae-cpu/hatari-glue.c,
	  uae-cpu/hatari-glue.h, uae-cpu/memory.c, uae-cpu/newcpu.c,
	  uae-cpu/options_cpu.h: To be closer to the original CPU core
	  sources again, the variables address_space_24, cpu_level and
	  cpu_compatible are now everywhere handled like in UAE again.

2007-09-09 22:49  Thomas Huth

	* Makefile-MinGW.cnf, Makefile-default.cnf, src/Makefile,
	  src/configuration.c, src/debugui.c, src/dialog.c, src/gemdos.c,
	  src/ide.c, src/ioMem.c, src/m68000.c, src/main.c, src/mfp.c,
	  src/msa.c, src/options.c, src/shortcut.c, src/stMemory.c,
	  src/tos.c, src/vdi.c, src/video.c, src/falcon/Makefile,
	  src/includes/m68000.h, src/includes/main.h, src/uae-cpu/Makefile:
	  Merged common changes from WINUAE_CPU_BRANCH back to HEAD.

2007-09-07 13:31  Eero Tamminen

	* doc/manual.html, src/configuration.c, src/options.c, src/vdi.c,
	  src/includes/configuration.h, src/includes/vdi.h: - fix: VDI
	  screen alignment is dependent on width in bytes, not pixels -
	  fix: fixed-sized VDI resolutions need to be constrained in
	  monochrome - add --vdi-planes command line argument - rename
	  --vdix & --vdiy arguments to --vdi-x and --vdi-y -
	  KeyLoadMem/keySaveMem are configurable like other shortcuts -
	  have configuration values in .cfg file in same order as they
	  are in Hatari structs (makes cross-checking them easier) - give
	  all VDI settings to VDI_SetResolution() as arguments

2007-08-26 21:54  Eero Tamminen

	* src/: gemdos.c, includes/gemdos_defines.h: Fix GemDOS Open, it
	  shouldn't truncate like it did with "wb" mode (write only).  Use
	  "rb+" mode instead (read/write), that's the best we can using
	  fopen(). (only open() would allow open write-only without
	  truncating).

	  Use chmod() in GemDOS Fattrib function so that it can set files
	  read-only.

	  Complain in Create and Fattrib if volume label attrib is used and
	  add some FIXMEs for rest of attribs.

	  (Change also these functions to bail out on errors instead of
	  using else clauses, this way they don't need to be indented as
	  much and it's easier to see the function exit point.)

2007-08-26 19:56  Eero Tamminen

	* doc/manual.html: describe --vdix and --vdiy options

2007-08-26 19:16  Eero Tamminen

	* src/: configuration.c, options.c, vdi.c,
	  includes/configuration.h, includes/vdi.h, uae-cpu/hatari-glue.c:
	  Add support for specifying VDI mode width and height from command
	  line (makes memory earlier snapshots incompatible).

	  Make a couple of variables in vdi.c static (required changing
	  hatari-glue.c slightly).

2007-08-22 01:28  Thomas Huth

	* src/: configuration.c, m68000.c, tos.c, includes/m68000.h: Added
	  wrapper function for checking cpu_level and cpu_compatible
	  variables.

2007-08-15 01:18  Thomas Huth

	* src/: gemdos.c, m68000.c: Adapted gemdos.c and m68000.c for the
	  new CPU core

2007-08-15 00:38  Thomas Huth

	* Makefile-MinGW.cnf, Makefile-default.cnf: Disabled -Wshadow since
	  the WinUAE CPU core heavily (ab)uses shadowed variables

2007-08-09 23:17  Thomas Huth

	* src/: includes/main.h, dialog.c, main.c, mfp.c, shortcut.c,
	  video.c, includes/m68000.h, debugui.c: Added wrappers for
	  m68k_getpc, m68k_setpc, MakeSR, MakeFromSR, set_special and
	  unset_special

2007-08-09 23:05  Thomas Huth

	* src/: ide.c, ioMem.c, msa.c, options.c, stMemory.c, vdi.c: CPU
	  headers are not hard-coded to the uae-cpu folder anymore.

2007-08-07 02:39  Thomas Huth

	* src/: Makefile, falcon/Makefile, uae-cpu/Makefile: Now it is
	  easier to choose the CPU core in the Makefiles

2007-07-29 23:17  Eero Tamminen

	* src/cfgopts.c: refactor and cleanup configuration update a bit

2007-06-29 22:01  Thomas Huth

	* src/gui-sdl/dlgScreen.c: The 'Frame Skip 8' option could not be
	  selected - fixed now.

2007-06-29 21:54  Thomas Huth

	* src/cfgopts.c: Do not abort with an error if the end of the file
	  has been reached.

2007-05-18 19:53  Thomas Huth

	* src/screen.c: Do not scale mouse in VDI screen mode

2007-05-14 22:25  Eero Tamminen

	* doc/manual.html: fix typos

2007-05-14 22:07  Eero Tamminen

	* doc/alsa-midi.txt: add link to wikipedia/midimaze

2007-05-14 13:25  clafou

	* Hatari.xcodeproj/project.pbxproj: XCode project: Updated nvram
	  file references

2007-05-13 11:23  Thomas Huth

	* configure.ac: Handling of datadir variable has changed in
	  autoconf 2.60.

2007-05-12 14:12  Thomas Huth

	* src/unzip.c: Fixed some 'variable might be used uninitialized'
	  warnings

2007-05-12 14:04  Thomas Huth

	* Makefile.cnf.in: Added datarootdir to make autoconf 2.60 happy

2007-05-12 : *** Version 0.95 ***

2007-05-12 13:29  Thomas Huth

	* doc/release-notes.txt: Added hmsa tool

2007-05-12 13:22  Thomas Huth

	* doc/release-notes.txt: Added release notes for version 0.95

2007-05-12 13:16  Thomas Huth

	* doc/: hatari.1, manual.html: Added keyboard shortcuts for loading
	  and saving memory snapshots into the documentation files

2007-05-12 13:08  Thomas Huth

	* src/memorySnapShot.c: Bumped version number to 0.95

2007-05-12 12:46  Thomas Huth

	* Makefile-default.cnf: CC seems always to be predefined by make -
	  so don't use the '?=' operator to assign this variable in
	  Makefile.cnf

2007-05-12 12:17  Thomas Huth

	* Info-Hatari.plist, configure.ac, readme.txt,
	  doc/doxygen/Doxyfile, src/includes/main.h: Bumped version number
	  to 0.95

2007-05-12 12:06  Thomas Huth

	* doc/: compatibility.html, manual.html: Updated documentation

2007-05-12 11:24  Thomas Huth

	* src/cfgopts.c: tmpfile() does not work on some exotic systems.
	  Added a workaround for this situation.

2007-05-06 16:11  Thomas Huth

	* hatari.spec: Added spec file for building RPMs

2007-04-16 21:42  Thomas Huth

	* src/ioMemTabTT.c: Re-ordered VME / SCC entries

2007-04-04 17:23  Thomas Huth

	* src/falcon/: hostscreen.c, videl.c: Disable videl debug output by
	  default.

2007-04-03 19:31  Thomas Huth

	* doc/: manual.html, images/screen.png: Updated the screen setup
	  dialog

2007-04-03 00:35  Thomas Huth

	* src/ioMemTabFalcon.c: Falcon IO memory table is now much closer
	  to the original Falcon than before.

2007-04-02 22:26  Thomas Huth

	* doc/: manual.html, images/system.png: Updated the system dialog
	  documentation.

2007-04-02 21:46  Thomas Huth

	* src/falcon/: hostscreen.c, videl.c: Workarounds for old C
	  compilers

2007-04-02 20:42  Thomas Huth

	* src/includes/main.h: Use build date as version number for CVS
	  builds.

2007-03-10 18:49  Thomas Huth

	* src/options.c: Added (very) short description what Hatari is all
	  about.

2007-03-10 18:46  Thomas Huth

	* doc/authors.txt, src/gui-sdl/dlgAbout.c: Updated authors
	  information.

2007-03-05 23:19  Thomas Huth

	* src/keymap.c: Improved error handling

2007-02-27 21:53  Eero Tamminen

	* src/: configuration.c, file.c: - add absolute file naming to
	  other paths requiring it   (and remove special handling from
	  rs232 as it doesn't use File_Open() - add stdin special handling
	  to File_Open() just in case somebody in   the future wants to
	  give some configuration from stdin ;-)

2007-02-25 23:14  Eero Tamminen

	* src/: file.c, options.c, printer.c: - fix stupid bugs from file.c
	  - move trivial printer.c functions so that ancient compilers know
	  to inline them too + fix comment typo

2007-02-25 22:34  Eero Tamminen

	* src/file.c: typo

2007-02-25 22:33  Eero Tamminen

	* doc/: alsa-midi.txt, manual.html: alsa-midi.txt: midi networking
	  example manual.html:	 update options

2007-02-25 22:20  Eero Tamminen

	* src/: configuration.c, file.c, log.c, midi.c, options.c,
	  printer.c, includes/file.h, includes/printer.h: allow setting the
	  output file for log, midi and printer and special-case
	  stdout/stderr: - move file open / close with stdout/stderr
	  checking from log.c to file.c - wrapper function which
	  shortcircuits absolute path function when   filename is
	  stdout/stderr - use the new File_Open() and File_Close()
	  functions in log.c, midi.c   and printer.c Cleanup printer.c a
	  bit: - change functions to static - replace "unsigned char" with
	  Uint8 - remove redundant code

2007-02-22 22:25  Thomas Huth

	* src/ioMemTabFalcon.c: There is no TT palette in Falcon mode

2007-02-19 00:55  Thomas Huth

	* doc/compatibility.html: Added Humans, TT-Wars and Oxyd-TT.

2007-02-17 23:19  Eero Tamminen

	* doc/compatibility.html: - replace "no" with "-" as that makes
	  tables more readable - check which programs really require dummy
	  and which none emu

2007-02-17 23:14  Eero Tamminen

	* src/: dmaSnd.c, includes/dmaSnd.h: make casts to double
	  unnecessary + add one more define

2007-02-17 19:43  Thomas Huth

	* src/dmaSnd.c: Initial support for Falcon DMA sample sound
	  frequencies.

2007-02-16 20:31  Eero Tamminen

	* doc/alsa-midi.txt: link to one more nice article

2007-02-13 21:44  Matthias Arndt

	* src/falcon/: nvram.c, nvram.h: added symbolic labels for NVRAM
	  cells

2007-02-13 20:32  Thomas Huth

	* src/: Makefile, nvram.c, falcon/nvram.c, falcon/nvram.h,
	  includes/nvram.h, falcon/Makefile: Moved nvram.c and nvram.h to
	  falcon folder.

2007-02-12 00:04  Thomas Huth

	* tools/hmsa/.cvsignore: Added cvsignore file

2007-02-12 00:00  Thomas Huth

	* src/tos.c: Don't check the machine type when running with EmuTOS
	  (since it can handle all types)

2007-02-10 00:55  Eero Tamminen

	* doc/compatibility.html: added some more demos and gfx programs

2007-02-07 22:50  Thomas Huth

	* doc/todo.txt: Updated TODO list

2007-02-07 19:25  Thomas Huth

	* tools/hmsa/hmsa.c: Added missing #include <stdarg.h>

2007-02-07 01:54  Thomas Huth

	* src/nvram.c: Cleaned up NVRAM emulation a little bit.

2007-02-04 22:38  Eero Tamminen

	* doc/: compatibility.html, todo.txt: LS2 Roland-MT32 midi driver
	  works just fine with ALSA

2007-02-04 21:41  Eero Tamminen

	* doc/: alsa-midi.txt, compatibility.html: Add instructions how to
	  setup MIDI output on Linux with ALSA

2007-02-04 15:10  Eero Tamminen

	* doc/manual.html: add "usage" to command line options

2007-02-02 00:23  Thomas Huth

	* tools/hmsa/: Makefile, floppy.c, floppy.h, hmsa.c, hmsa.h,
	  readme-hmsa.txt: New tool: MSA disk image converter.

2007-02-01 23:03  Eero Tamminen

	* doc/compatibility.html: added STE highresmode demo

2007-02-01 22:37  Eero Tamminen

	* doc/compatibility.html: added all falcon apps, games and demos
	  from the ASCII list

2007-01-30 22:45  Eero Tamminen

	* doc/: compatibility.html, manual.html: - split the software
	  compatibility list to a separate HTML page from   the Hatari
	  manual, the list was getting pretty long - some updates to
	  emulated HW support cli options

2007-01-30 21:33  Eero Tamminen

	* src/: Makefile, configuration.c, dialog.c, ioMem.c,
	  ioMemTabFalcon.c, main.c, options.c, psg.c, falcon/Makefile,
	  includes/configuration.h, includes/ioMemTables.h: - user can now
	  specify one of none/dummy/emu DSP emulation types - changed
	  ENABLE_DSP to ENABLE_DSP_EMU define - fix Makefile
	  CPPFLAGS/CFLAGS usage

2007-01-29 21:50  Eero Tamminen

	* src/falcon/videl.c: add missing SDL_endian.h include

2007-01-29 00:05  Thomas Huth

	* src/video.c: Variable bUseSTShifter must be stored in memory
	  snapshots, too.

2007-01-28 23:59  Thomas Huth

	* src/tos.c: Added TOS version check to prevent the user from
	  running TOS 1.0x in TT or Falcon mode (which is an invalid
	  combination)

2007-01-28 23:41  Thomas Huth

	* src/: configuration.c, m68000.c, memorySnapShot.c,
	  includes/configuration.h, includes/main.h: Hatari now saves
	  system configuration to memory snapshots, too.

2007-01-23 21:34  Eero Tamminen

	* src/: video.c, falcon/videl.c, includes/video.h: Fix Falcon/Videl
	  code ST/E palette handling.  ST/E palette is used if ST shifter
	  register is written after Falcon one (which should be set to
	  4-bit color mode).

2007-01-19 00:37  Thomas Huth

	* src/video.c: Must also set TT resolution when writing to ST
	  shifter mode register.

2007-01-19 00:21  Thomas Huth

	* src/: dialog.c, gui-sdl/dlgSystem.c: Changing the machine type
	  now works as expected (thanks to Sebastien Molines for the hint)

2007-01-18 10:27  Eero Tamminen

	* src/: ioMemTabTT.c, video.c, includes/video.h: commit yesterdays
	  work: - ST palette accesses on TT are diverted to another
	  callback - overwrite part of TT palette with ST-palette as
	  required The TT palette support should now be complete.

2007-01-18 10:24  Eero Tamminen

	* src/: Makefile, dialog.c, dmaSnd.c, ioMem.c, ioMemTabFalcon.c,
	  main.c, options.c, psg.c, reset.c, screen.c, video.c,
	  falcon/Makefile, includes/ioMemTables.h: commit yesterdays work:
	  - remove ENABLE_FALCON (Falcon support works well enough) - add
	  ENABLE_DSP instead (by default disabled)

2007-01-16 22:14  Eero Tamminen

	* src/: ioMemTabTT.c, video.c, includes/video.h: Added support for
	  the TT-palette handling on top of Thomas' Videl usage for TT
	  resolutions. TT-support for ST-palette setting is still to do.

2007-01-16 20:00  clafou

	* Hatari.xcodeproj/project.pbxproj, src/gui-osx/PrefsController.h,
	  src/gui-osx/PrefsController.m,
	  src/gui-osx/SDLMain.nib/classes.nib,
	  src/gui-osx/SDLMain.nib/info.nib,
	  src/gui-osx/SDLMain.nib/objects.nib: Updated Cocoa UI to match
	  changes to the SDL UI

2007-01-16 19:42  Thomas Huth

	* doc/doxygen/Doxyfile, src/audio.c, src/bios.c, src/blitter.c,
	  src/cart.c, src/cfgopts.c, src/configuration.c,
	  src/createBlankImage.c, src/cycles.c, src/debugui.c,
	  src/dialog.c, src/dim.c, src/dmaSnd.c, src/fdc.c, src/file.c,
	  src/floppy.c, src/gemdos.c, src/hdc.c, src/ide.c, src/ikbd.c,
	  src/int.c, src/ioMem.c, src/ioMemTabFalcon.c, src/joy.c,
	  src/keymap.c, src/log.c, src/m68000.c, src/main.c,
	  src/memorySnapShot.c, src/mfp.c, src/midi.c, src/misc.c,
	  src/msa.c, src/nvram.c, src/options.c, src/printer.c, src/psg.c,
	  src/reset.c, src/rs232.c, src/rtc.c, src/scandir.c, src/screen.c,
	  src/screenSnapShot.c, src/shortcut.c, src/sound.c, src/spec512.c,
	  src/st.c, src/stMemory.c, src/tos.c, src/unzip.c, src/vdi.c,
	  src/video.c, src/wavFormat.c, src/xbios.c, src/ymFormat.c,
	  src/zip.c: The source code now features comments that can be
	  parsed with Doxygen to generate a nice source code documentation.
	  (Thanks to Tuduri Benoit for the patch)

2007-01-15 18:42  Thomas Huth

	* src/: memorySnapShot.c, video.c, includes/main.h: TT resolution
	  must be saved in memory snapshot files, too. (Also increased
	  version number now that snapshot file layout has been changed)

2007-01-15 14:50  Thomas Huth

	* src/falcon/videl.c: Implemented horizontal fine scrolling for
	  Videl emulation in 8bpp mode.

2007-01-13 12:57  Thomas Huth

	* src/: gui-sdl/dlgAbout.c, gui-sdl/dlgAlert.c,
	  gui-sdl/dlgDevice.c, gui-sdl/dlgDisc.c, gui-sdl/dlgFileSelect.c,
	  gui-sdl/dlgJoystick.c, gui-sdl/dlgKeyboard.c, gui-sdl/dlgMain.c,
	  gui-sdl/dlgMemory.c, gui-sdl/dlgRom.c, gui-sdl/dlgScreen.c,
	  gui-sdl/dlgSound.c, gui-sdl/dlgSystem.c, gui-sdl/sdlgui.c,
	  includes/sdlgui.h: Default button can now be selected by pressing
	  RETURN

2007-01-13 11:00  Thomas Huth

	* src/: reset.c, screen.c, video.c: Take also care of VDI extended
	  resolution mode when emulator is running in TT or Falcon mode.

2007-01-12 00:01  Thomas Huth

	* src/spec512.c: Lowered threshold for detecting a spec512 screen

2007-01-09 18:26  ggnkua

	* src/Makefile: My first test commit! Modified Makefile and
	  src/makefile slightly to allow compilation under Cygwin

2007-01-09 01:07  Thomas Huth

	* src/: screen.c, video.c, falcon/videl.c, falcon/videl.h,
	  includes/video.h: Low-res zooming now works in TT mode, too.

2007-01-08 21:25  Thomas Huth

	* Makefile-default.cnf: libreadline disabled by default.

2007-01-07 22:42  Eero Tamminen

	* src/: options.c, gui-sdl/dlgScreen.c: - sync frameskips in
	  options.c and dlgScreen.c code, the max. framesync   is now 8
	  everywhere - GUI supports now frameskips of 0,1,2,4,8 and won't
	  crash   if the frameskips variable has some other value - trivial
	  cleanup for --monitor option

2007-01-07 12:06  Thomas Huth

	* doc/fr/hatari.1: Added french man-page (thanks to Benoit Tuduri)

2007-01-06 12:15  Thomas Huth

	* src/dialog.c: When changing the monitor type, only reset if
	  emulator is in Falcon mode or if the user changes between color
	  and mono monitor.

2007-01-06 11:47  Thomas Huth

	* src/: configuration.c, options.c, screen.c, video.c,
	  gui-sdl/dlgScreen.c, includes/configuration.h: The frames that
	  should be skipped after each displayed frame can now be set up in
	  the GUI, too. Also removed the 'interleave' option in the GUI, it
	  has now been replaced by the monitor settings (TV or RGB)

2007-01-02 23:20  Thomas Huth

	* src/: gui-win/opencon.c, gui-win/opencon.h, Makefile, main.c,
	  gui-win/Makefile: The debugger now also works when Hatari is
	  built on MinGW

2007-01-02 22:11  Thomas Huth

	* Makefile-MinGW.cnf, config-MinGW.h, src/Makefile: Improved MinGW
	  build system

2007-01-02 22:05  Thomas Huth

	* src/gui-win/: Makefile, hatari-winicon.ico, hatari-winicon.rc:
	  Icon for Windows build. (Thanks to ggn for the icon and .rc file)

2007-01-02 21:27  Thomas Huth

	* src/main.c: setenv is not available on MinGW

2006-12-29 16:22  Thomas Huth

	* src/debugui.c: Debugger now uses config.h to check if readline is
	  available

2006-12-29 15:20  Thomas Huth

	* .cvsignore, Makefile, config-default.h, configure.ac,
	  src/Makefile, src/rs232.c: Introduced config.h file

2006-12-28 22:28  Thomas Huth

	* Makefile: Also delete Makefile.cnf when doing a distclean

2006-12-28 22:25  Thomas Huth

	* acsite.m4, configure.ac, src/debugui.c: The built-in debugger now
	  supports readline() for a higher convenience.

2006-12-28 22:22  Thomas Huth

	* .cvsignore: Ignore variable Makefile.cnf

2006-12-28 21:48  Thomas Huth

	* Makefile, Makefile-default.cnf, Makefile.cnf: Introduced
	  Makefile-default.cnf

2006-12-28 20:07  Thomas Huth

	* src/gemdos.c: Changed some functions to use FILENAME_MAX instead
	  of MAX_GEMDOS_PATH.

2006-12-28 19:33  Thomas Huth

	* src/debugui.c: Changed debugger commands: 'q' now quits the
	  emulator, 'c' can be used to continue the current program

2006-12-27 22:28  Thomas Huth

	* src/: configuration.c, shortcut.c, includes/configuration.h:
	  Added keyboard shortcuts for saving and restoring memory
	  snapshots

2006-12-23 20:45  Thomas Huth

	* src/: configuration.c, vdi.c: Set up the VDI emulation variables
	  and DESKTOP.INF file only when VDI resolution emulation is really
	  enabled.

2006-12-21 00:27  Thomas Huth

	* src/rs232.c: By default, there is no termios.h on Windows

2006-12-20 15:14  Thomas Huth

	* src/: main.c, screen.c, falcon/hostscreen.c, includes/screen.h:
	  Improved mouse movement scaling so that the ST mouse cursor
	  movements are now always in sync with the host mouse (also when
	  the zoomed Videl emulation is being used).

2006-12-19 22:54  Thomas Huth

	* src/: nvram.c, zip.c: Fixed compiler warnings from GCC 4.1

2006-12-19 12:00  Thomas Huth

	* src/gui-sdl/dlgFileSelect.c: Fixed typo

2006-12-19 11:56  Thomas Huth

	* src/falcon/hostscreen.c: Improved Videl screen zooming a little
	  bit

2006-12-19 11:55  Thomas Huth

	* src/gui-sdl/: dlgDevice.c, dlgDisc.c, dlgFileSelect.c,
	  dlgJoystick.c, dlgKeyboard.c, dlgMain.c, dlgMemory.c,
	  dlgNewDisc.c, dlgRom.c, dlgScreen.c, dlgSound.c, sdlgui.c: The
	  SDL GUI now tests if the screen size is big enough to display the
	  dialogs

2006-12-18 22:27  Eero Tamminen

	* src/: dialog.c, main.c, screen.c, vdi.c, includes/screen.h: -
	  cleaned up screen.c functions by changing then to return (med)
	  rez	mode instead of messing with global STRes variable -
	  removed separate mixed low/med rez mode, the rest of code handles
	  mixed low/med fine without it - added Sreen_ModeChange() i.e.
	  explicit screen size change function - removed PrevSTRes global
	  (it was redundant with above)

2006-12-18 21:19  Thomas Huth

	* src/spec512.c: Changed the way how spec512 pictures are detected
	  - now also screens with less than 32 changes per line can be
	  detected as color cycling screens.

2006-12-18 11:57  Thomas Huth

	* src/uae-cpu/newcpu.c: Copied movec_illg function from WinUAE

2006-12-18 11:22  Thomas Huth

	* src/gemdos.c: Added error message when permissions for reading a
	  file are missing

2006-12-17 11:21  Eero Tamminen

	* src/: Makefile, configuration.c, dialog.c, ioMem.c,
	  ioMemTabFalcon.c, main.c, options.c, psg.c, falcon/Makefile,
	  includes/configuration.h, includes/ioMemTables.h: - Build DSP
	  emulation if ENABLE_FALCON is set - add configuration and command
	  line option for enabling the DSP   (overwrites some
	  IoMemTable_Falcon[] entries with suitable values)

2006-12-11 21:17  Eero Tamminen

	* doc/manual.html: - add new command line options - update other
	  options - --slowfdc isn't anymore needed with demos nor games -
	  Thomas' latest updates fixed scrolling in a couple of:   -
	  overscan ST demos   - STE game demos

2006-12-11 19:06  Eero Tamminen

	* src/: configuration.c, dialog.c, main.c, options.c, screen.c,
	  video.c, falcon/hostscreen.c, falcon/videl.c,
	  gui-sdl/dlgScreen.c, includes/configuration.h: - Removes usage of
	  the now redundant Configuration.Screen.bUseHighRes - Separates
	  the confusing ChosenDisplayMode configuration to   more explicit
	  bForce8Bpp and bZoomLowRes variables everywhere   -> This makes
	  the related ifs in screen.c, videl.c, main.c etc. clearer   - Now
	  furher changing the zoom boolean to zoom factor integer would be
	  much easier especially as Videl supports more than just
	  doubling - Changes bFrameSkip boolean to FrameSkips integer	->
	  Videl code is slow, with e.g. "--frameskips 4" the Falcon
	  emulation	 with zoomed screen takes much less CPU   -> Could
	  be better supported in Hatari screen dialog, currently      I've
	  mapped the checkbox to frameskip 1 and 2 - Added command line
	  options for --borders, --force8bpp, --zoom, --frameskips - Move
	  cpu_level and cpu_compatible variable settings from
	  Opt_ParseParameters(), Dialog_CopyDialogParamsToConfiguration()
	  and	Configuration_Load() to Configuration_WorkOnDetail() as all
	  those   first three functions were anyway calling the last one.
	  (TOS loading still does CPU settings by itself)  - Move STRes
	  setting from Opt_ParseParameters() to
	  Configuration_WorkOnDetail() - Rename
	  Configuration_WorkOnDetails() to more clear/appropriate
	  Configuration_Apply() and call it explicitly from main.c and
	  dialog.c   instead of also from Configuration_Load() as loading
	  and applying config	are different actions.	I also removed call
	  to it from option parsing,   it's IMHO cleaner to have it in
	  main.c - Fix doing zoom on, low -> med-res, zoom off, med ->
	  low-res   (previously screen size didn't get smaller in last
	  step) - Set --slow-fdc and mono option deprecated (monitor should
	  be used instead   of mono) and remove "experimental" from blitter
	  option descriptions.	- use setenv() instead of putenv() in
	  main() as I was mailed that nowadays	 former is more standard
	  (despite Linux manual page...) - Indentation fixes

2006-12-10 22:00  Thomas Huth

	* src/: reset.c, video.c, includes/video.h: Cleaned up the
	  HBL/Timer B interrupt code a little bit.

2006-12-07 21:23  Thomas Huth

	* src/video.c: Disabled debug output

2006-12-05 22:58  Thomas Huth

	* src/psg.c: Silenced debug output

2006-12-04 00:33  Thomas Huth

	* src/: reset.c, video.c, includes/video.h, uae-cpu/newcpu.c:
	  Changed horizontal screen timings to be much closer to the
	  original shifter

2006-12-03 16:35  Thomas Huth

	* src/gemdos.c: Check for valid return values when calling
	  localtime()

2006-12-01 20:42  Eero Tamminen

	* src/falcon/videl.c: - fix compiler warning about local variable
	  shadowing global one - replace some shifts with SDL_SwapBE16()
	  calls and remove related   BYTEORDER ifdefs as SDL_SwapBE16()
	  already handles that

2006-12-01 20:39  Eero Tamminen

	* src/falcon/Makefile: Add CPPFLAGS like into other Makefiles

2006-11-26 18:50  Thomas Huth

	* src/: screen.c, video.c: Moved printer check from screen.c to
	  video.c.

2006-11-25 12:26  Thomas Huth

	* src/: ioMemTabTT.c, video.c, falcon/videl.c, falcon/videl.h,
	  includes/video.h: The TT shifter modes are now handled, too.

2006-11-21 23:40  Thomas Huth

	* src/falcon/videl.c: Adjust line length when register FF8265 is
	  set.

2006-11-20 22:43  Thomas Huth

	* src/screenSnapShot.c: Added missing closedir() - leaving the
	  directory handles open caused problems after a while when
	  recording animations.

2006-11-20 01:21  Thomas Huth

	* src/ioMemTabFalcon.c: Registers 0xff820e and 0xff8264 are present
	  on the Falcon so do not do a 'void read' there.

2006-11-20 01:20  Thomas Huth

	* src/falcon/videl.c: Size of register ff8260 is only byte, not
	  word.

2006-11-17 19:08  Matthias Arndt

	* src/: dmaSnd.c, psg.c: * added some minor Falcon specifics to PSG
	  and DMA Audio code

2006-11-15 20:34  Eero Tamminen

	* src/gemdos.c: make glob/globfree static so that MinGW GCC doesn't
	  complain on Windows

2006-11-14 22:08  Eero Tamminen

	* src/: hatari-icon.bmp, screen.c: - convert icon to 8-bit so that
	  color keying can make it transparent - free the icon after use so
	  that it doesn't leak

2006-11-13 23:25  Thomas Huth

	* src/hatari-icon.bmp, Makefile, src/screen.c: Added icon.

2006-11-13 21:41  Eero Tamminen

	* Makefile.cnf, src/Makefile, src/gui-sdl/Makefile,
	  src/uae-cpu/Makefile: handle CPPFLAGS (consistently) in Makefiles
	  and make it overridable

2006-11-13 00:34  Thomas Huth

	* src/: Makefile, gemdos.c: Patches for MinGW (GEMDOS HD emu now
	  does not crash the emulator anymore)

2006-11-12 19:48  Eero Tamminen

	* src/: reset.c, includes/reset.h: Reset_ST is called only from
	  reset.c, so make it static

2006-11-12 16:09  Eero Tamminen

	* doc/manual.html: Add "20 years" demo to the list

2006-11-01 21:29  Eero Tamminen

	* src/nvram.c: make global nvram array static

2006-11-01 12:05  Thomas Huth

	* src/gui-sdl/dlgScreen.c: Screen dialog now shows all Falcon
	  monitor types.

2006-10-29 12:00  Thomas Huth

	* src/ioMemTabTT.c: Enabled NVRAM/RTC emulation for TT mode, too.

2006-10-29 10:25  Thomas Huth

	* src/: Makefile, ioMemTabFalcon.c, main.c, nvram.c, tos.c,
	  includes/nvram.h: Added NVRAM/RTC emulation for the Falcon mode.

2006-10-28 21:13  Eero Tamminen

	* src/main.c: set SDL_VIDEO_X11_WMCLASS to help (X11) window
	  managers in window grouping

2006-10-28 21:07  Eero Tamminen

	* Makefile: note about DESTDIR

2006-10-25 21:00  Eero Tamminen

	* src/: configuration.c, options.c, stMemory.c,
	  includes/configuration.h: Add monitor type command line option
	  and support for all Falcon monitor types.

2006-10-23 19:56  Eero Tamminen

	* src/video.c: include missing videl.h

2006-10-22 22:51  Eero Tamminen

	* src/options.c: machine: st/ste -> 8Mhz

2006-10-20 22:12  Eero Tamminen

	* doc/manual.html: Add STE STrEet Fighter 2 from Patrice Mandin

2006-10-20 13:49  Eero Tamminen

	* src/options.c: Fix st/ste command line setting in case user had
	  saved tt/falcon setting

2006-10-19 22:09  Eero Tamminen

	* src/falcon/: hostscreen.c, hostscreen.h, videl.c, videl.h: makes
	  some thing static that are not called from outside the object
	  file and remove their prototypes from header

2006-10-19 22:08  Eero Tamminen

	* src/reset.c: #include "falcon/videl.h"

2006-10-18 02:08  Thomas Huth

	* src/tos.c: Added support for TOS 4.00 and 4.01.

2006-10-15 23:35  Thomas Huth

	* src/falcon/hostscreen.c: Fixed problem with the SDL-GUI using the
	  wrong screen surface when the Videl emulation was active (Thanks
	  to Emmanuel Anne for the hint).

2006-10-15 23:24  Thomas Huth

	* src/tos.c: Added support for TOS 4.02 and 4.92.

2006-10-15 23:21  Thomas Huth

	* src/: stMemory.c, includes/tos.h: Do not erase RAM TOS images
	  during memory initialization.

2006-10-15 23:20  Thomas Huth

	* src/uae-cpu/newcpu.c: Jump to debug interface when encountering
	  an uninitialized exception handler.

2006-10-12 22:56  Thomas Huth

	* src/ioMemTabFalcon.c: Some programs poll the DSP registers for a
	  change. Simulate some action there to get these programs running.

2006-10-10 22:14  Thomas Huth

	* src/gemdos.c: Improved error output in the GEMDOS HD emulation a
	  little bit.

2006-10-10 22:13  Thomas Huth

	* src/: screen.c, falcon/hostscreen.c, falcon/hostscreen.h:
	  Toggling between fullscreen and window mode now also works with
	  the Videl emulation.

2006-10-09 19:41  Thomas Huth

	* doc/todo.txt: Updated the TODO file.

2006-10-08 14:11  Thomas Huth

	* src/falcon/hostscreen.h: hostscreen.h now also uses araglue.h

2006-10-08 14:10  Thomas Huth

	* src/: ioMemTabFalcon.c, main.c, psg.c, falcon/.cvsignore,
	  falcon/araglue.h, falcon/dsp.c, falcon/dsp.h, falcon/dsp_cpu.c,
	  falcon/dsp_cpu.h, falcon/dsp_disasm.c, falcon/dsp_disasm.h: Made
	  the DSP code compilable for Hatari

2006-10-08 13:53  Thomas Huth

	* src/falcon/: dsp.c, dsp.h, dsp_cpu.c, dsp_cpu.h, dsp_disasm.c,
	  dsp_disasm.h: Copied DSP emulation code from Aranym to Hatari.
	  (Thanks to the Aranym developers, especially Patrice Mandin, for
	  this code)

2006-10-07 15:32  Thomas Huth

	* src/: dialog.c, falcon/hostscreen.c, falcon/videl.c,
	  falcon/videl.h: Enabled zooming function of the Videl emulation
	  code.

2006-10-07 14:22  Thomas Huth

	* src/screen.c: Disabled resolution switching in screen.c when
	  Videl emulation is running.

2006-10-07 13:41  Thomas Huth

	* src/falcon/: hostscreen.c, hostscreen.h, videl.c, videl.h:
	  Cleaned up the videl code a little bit (thanks to Eero for the
	  patch).

2006-10-07 13:01  Thomas Huth

	* src/options.c: Slightly improved text output strings.

2006-10-06 01:31  Thomas Huth

	* src/falcon/hostscreen.c: Fixed Videl palette color problem and
	  cleaned up a little bit (removed backgroundSurf)

2006-10-04 22:34  Thomas Huth

	* src/: Makefile, ioMemTabFalcon.c, main.c, reset.c, video.c,
	  falcon/Makefile, falcon/hostscreen.c, falcon/hostscreen.h,
	  falcon/videl.c, falcon/videl.h: Integrated the Videl emulation
	  into Hatari.

2006-10-04 20:39  Thomas Huth

	* src/falcon/: hostscreen.c, videl.c: Copied Falcon Videl emulation
	  code from Aranym 0.9.4. Many thanks to the Aranym authors for
	  their code!

2006-10-03 12:38  Thomas Huth

	* src/: configuration.c, file.c: Some more changes for Amiga OS.
	  Thanks to Ventzislav Tzvetkov for the patches!

2006-10-03 12:07  Thomas Huth

	* src/: memorySnapShot.c, includes/main.h: Increased version number
	  to 0.91

2006-10-03 11:59  Thomas Huth

	* src/gui-sdl/dlgSystem.c: Added TT and Falcon checkbox to the
	  system dialog

2006-09-29 13:20  Thomas Huth

	* src/stMemory.c: The Falcon memory (and monitor) configuration
	  register is now initialized to make TOS 4.04 happy.

2006-09-29 12:45  Thomas Huth

	* src/tos.c: Disabled ROM CRC check for TOS 4.04

2006-09-29 03:07  Thomas Huth

	* src/: ioMemTabFalcon.c, tos.c: Some more patches to get TOS 4.04
	  finally booting :-).

2006-09-29 00:58  Thomas Huth

	* src/ioMem.c: Added missing break statement

2006-09-28 20:27  Eero Tamminen

	* src/: main.c, misc.c, sound.c, includes/misc.h: Random is only
	  used when generating the noise sound channel, so move all random
	  stuff to sound.c

2006-09-28 17:21  Thomas Huth

	* src/st.c: Added flag for RISC OS to prevent it from interfering
	  with the .ST disk image files (Thanks to James Lampard for the
	  patch).

2006-09-27 10:58  Thomas Huth

	* src/: Makefile, configuration.c, ide.c, options.c, tos.c,
	  includes/configuration.h, includes/ide.h, uae-cpu/memory.c:
	  Infrastructure for intercepting read/write accesses to IDE IO
	  memory region.

2006-09-27 00:01  Thomas Huth

	* src/file.c: Slightly improved Files_Exists(): The function now
	  works with block/character devices again.

2006-09-26 21:12  Eero Tamminen

	* src/: int.c, m68000.c, mfp.c, video.c, includes/int.h,
	  includes/m68000.h, uae-cpu/newcpu.c: - move the
	  PendingInterruptFunction & PendingInterruptCount   from m68000.c
	  to int.c, this allows making some functions static   (used only
	  by memory snapshot though and it makes the memory   snapshots
	  from earlier version uncompatible) - add new
	  Int_AddRelativeInterruptNoOffset() and use it in mfp.c   so that
	  nCyclesOver variable can be static - typedef the interrupt types
	  enum and use that type in the public	 interrupt functions - use
	  interrupt define in video.c call instead of "magic NULL" - remove
	  redundant type casts and initial zero values for static variables
	  - return is not a function...

2006-09-26 21:04  Eero Tamminen

	* src/convert/: high640x8.c, low320x16.c, low320x8.c, low640x16.c,
	  low640x8.c, macros.h, med640x16.c, med640x8.c, spec640x16.c,
	  vdi16.c, vdi2.c, vdi4.c: Optimize by calculating some values
	  before loop: - Screen4BytesPerLine = PCScreenBytesPerLine/4 -
	  Screen2BytesPerLine = PCScreenBytesPerLine/2 - update =
	  ScrUpdateFlag & PALETTEMASK_UPDATEMASK

2006-09-26 17:16  Thomas Huth

	* doc/authors.txt: Added James Lampard to the list of contributors

2006-09-26 17:13  Thomas Huth

	* src/rs232.c: cfmakeraw was missing on RiscOS, too. Thanks to
	  James Lampard for the hint.

2006-09-26 15:52  Thomas Huth

	* src/rs232.c: tcgetattr, tcsetattr, cfsetospeed and cfsetispeed
	  need to be defined on AmigaOS

2006-09-13 22:21  Eero Tamminen

	* src/: mfp.c, includes/mfp.h: - optimize:   - MFP timer lookup
	  table; integer fraction calculation is faster     than use of
	  floats   - one more function can be static and MFP_StartTimer_*
	  args fit into Uint16 - cleanup: return is not a function

2006-09-12 23:43  Thomas Huth

	* src/tos.c: Since we have to patch TOS 3.06 for Hatari, the
	  useless ROM CRC code in TOS 3.06 is now ignored, too.

2006-09-12 23:21  Thomas Huth

	* src/: Makefile, ioMem.c, ioMemTabFalcon.c, options.c, tos.c,
	  includes/configuration.h, includes/ioMemTables.h: Added some
	  experimental code (not working yet)

2006-09-12 19:55  Eero Tamminen

	* src/file.c: fix to infinite loop when Hatari cmdline option
	  taking a file is given a directory instead

2006-09-12 19:22  Thomas Huth

	* doc/manual.html: Some minor improvements to the manual

2006-09-02 15:13  Eero Tamminen

	* Makefile.cnf: Allow user to override following Makefile variables
	  with environment variables: CC, HOSTCC, BINDIR, DATADIR, CONFDIR

2006-08-31 21:24  Thomas Huth

	* src/: Makefile, ioMemTabST.c, ioMemTabSTE.c, ioMemTabTT.c,
	  ioMemTables.c: ioMemTables.c has been split up into smaller,
	  better maintainable parts.

2006-08-30 21:54  Thomas Huth

	* src/: spec512.c, ymFormat.c: Sourcecode beautification

2006-08-27 19:20  clafou

	* Hatari.xcodeproj/project.pbxproj,
	  src/gui-osx/SDLMain.nib/objects.nib: For v.0.90 OSX version:
	  Xcode project file updated (added new files scandir.h and
	  scandir.c), prefs window edited to make the 1st tab open first

2006-08-22 : *** Version 0.90 ***

2006-08-24 19:34  Thomas Huth

	* doc/release-notes.txt: Forgot to mention some items

2006-08-22 20:39  Thomas Huth

	* configure.ac, readme.txt, src/memorySnapShot.c,
	  src/includes/main.h: Increased version number to 0.90

2006-08-22 20:37  Thomas Huth

	* doc/: hatari.1, release-notes.txt, todo.txt: Updated the docs for
	  the new public version.

2006-08-16 22:14  Thomas Huth

	* doc/: authors.txt, manual.html: Updated the documentation files.

2006-08-14 20:32  Thomas Huth

	* src/gui-sdl/dlgDevice.c: Printer file browse button now works
	  again.

2006-08-14 01:33  Thomas Huth

	* src/: fdc.c, hdc.c, includes/hdc.h: Debugged and improved the
	  ACSI emulation code. Creating (formating and partitioning) new
	  hard disk images with AHDI v5.0 should be working fine now.

2006-08-11 11:25  Eero Tamminen

	* src/hdc.c: - add more info on the hd root sector partition table
	  - in GetInfo, get only the data for partition table	(reading 64
	  bytes did go unnecessarily to 2d sector in the image)

2006-08-10 21:10  Thomas Huth

	* src/: hdc.c, includes/hdc.h: Added 'MODE SENSE' and 'FORMAT
	  DRIVE' commands to make HDX from AHDI 5.0 happy. Also had to set
	  the FDC/HDC GPIP bit for non-existing controllers when HDX scans
	  for available hard disks.

2006-08-10 19:26  Thomas Huth

	* src/: fdc.c, hdc.c, includes/hdc.h: Removed annoying check for
	  existing partitions and added stub for 'REQUEST SENSE' ACSI
	  command.

2006-08-10 14:14  Eero Tamminen

	* doc/memory-usage.txt: updated/fixed the analysis

2006-08-09 10:16  Eero Tamminen

	* doc/manual.html: minor updates for: - configurable shortcut keys
	  - change in how joystick cursor key emu works - keymap handling

2006-08-09 10:14  Eero Tamminen

	* src/: configuration.c, keymap.c, shortcut.c, video.c,
	  includes/configuration.h, includes/shortcut.h: Shortcut keys can
	  now be configured from the Hatari configuration file.  There are
	  separate sections for shortcut keybindings with and without a
	  modifier key.  Same shortcut action can be bound both to a key
	  with and without a modifier (e.g. F12 & Modifier+o are bound for
	  the the options dialog by default).

2006-08-09 10:11  Eero Tamminen

	* doc/keymap-sample.txt: improved comments

2006-08-09 10:10  Eero Tamminen

	* src/: joy.c, options.c, includes/joy.h: Joystick shortcut
	  (Altgr+j): - toggles cursor emu between port 0, port 1 and being
	  disabled from those, - it doesn't disable cursor emu from any
	  other port, and - it restores the previous joystick value
	  (disabled/real) to the port when   the cursor emu is toggled off
	  from the port I.e. it affects only cursor emulation and only in
	  ports 0 & 1.	The -j <port> option doesn't disable the cursor emu
	  from other ports anymore either (like it did with the patch I had
	  commited earlier).

2006-08-08 09:19  Thomas Huth

	* src/: file.c, floppy.c, hdc.c: Source code beautification

2006-08-05 22:56  Eero Tamminen

	* doc/manual.html: add name of the keymap example file

2006-08-05 10:33  Thomas Huth

	* src/: hdc.c, includes/hdc.h: Improved HDC debugging output.

2006-08-02 22:09  Eero Tamminen

	* doc/manual.html, src/options.c: - added option -k/--keymap for
	  setting the keyboard mapping file - documented this and the
	  updated -j option in manual

2006-08-02 13:51  Eero Tamminen

	* src/: configuration.c, joy.c, options.c, gui-sdl/dlgJoystick.c,
	  includes/configuration.h: add port parameter to the -j option +
	  use JOYSTICK_COUNT where appropriate

2006-08-02 12:54  Eero Tamminen

	* src/file.c: add 'else' missing from previous change to
	  File_makepath()

2006-08-02 11:53  Eero Tamminen

	* doc/manual.html: updated STE right border stuff

2006-08-02 09:45  Thomas Huth

	* src/main.c: Improved mouse handling in ST-Medium and zoomed
	  ST-Low resolutions: The ST mouse cursor is now better in sync
	  with the mouse cursor of the host system.

2006-08-01 22:18  Thomas Huth

	* src/gui-sdl/dlgFileSelect.c: The user can now choose wether
	  hidden files should be displayed in the file selector or not.

2006-08-01 11:23  Thomas Huth

	* src/: audio.c, sound.c, includes/sound.h: Fixed problems with
	  sound buffer synchronization in fast-forward mode

2006-08-01 11:19  Thomas Huth

	* src/zip.c: Header file sys/dir.h is only needed on QNX

2006-07-31 00:49  Thomas Huth

	* src/gui-sdl/: dlgFileSelect.c, font10x16.bmp, font10x16.h,
	  font5x8.bmp, font5x8.h: In the SDL-GUI file selector, a button
	  for the home folder has been added.

2006-07-30 22:42  Thomas Huth

	* Makefile, src/Makefile, src/gui-sdl/Makefile,
	  src/uae-cpu/Makefile: Added 'distclean' target to Makefiles and
	  improved creation of Makefile.dep

2006-07-30 22:17  Thomas Huth

	* src/uae-cpu/: Makefile, sysdeps.h: The host compiler should not
	  use the SDL_CFLAGS from the target system. So the UAE variables
	  types are now mapped to the types from stdint.h instead of
	  SDL_types.h

2006-07-27 22:00  Thomas Huth

	* src/zip.c: Patch for compiling on QNX

2006-07-27 21:57  Thomas Huth

	* src/rs232.c: 230400 are not supported on all systems

2006-07-23 17:44  Thomas Huth

	* Makefile-MinGW.cnf: Added Makefile configuration for MinGW

2006-07-23 17:32  Thomas Huth

	* src/: configuration.c, file.c, gui-sdl/dlgFileSelect.c,
	  includes/main.h: Better support for MingW: Hatari now basically
	  supports backslashes as path separators, too.

2006-07-22 18:25  Thomas Huth

	* src/: Makefile, gui-sdl/Makefile, uae-cpu/Makefile: Updated
	  Makefiles so that they work better with MinGW

2006-07-22 17:49  Thomas Huth

	* src/: gemdos.c, scandir.c: Made Hatari really compilable with
	  MinGW

2006-07-20 23:43  Thomas Huth

	* src/: Makefile, file.c, gemdos.c, scandir.c,
	  gui-sdl/dlgFileSelect.c, includes/file.h, includes/scandir.h:
	  Moved scandir code to a separate file and also added scandir for
	  Windows (Thanks to Mark Keates for the scandir code for Windows).

2006-07-20 23:00  Thomas Huth

	* src/keymap.c: Now using proper SDLKey type.

2006-07-15 12:41  clafou

	* Hatari.xcodeproj/project.pbxproj,
	  src/gui-osx/CreateFloppyController.m,
	  src/gui-osx/PrefsController.h, src/gui-osx/PrefsController.m,
	  src/gui-osx/SDLMain.h, src/gui-osx/SDLMain.m,
	  src/gui-osx/SDLMain.nib/classes.nib,
	  src/gui-osx/SDLMain.nib/info.nib,
	  src/gui-osx/SDLMain.nib/objects.nib: Fullscreen now a menu item,
	  Create Floppy window bug fixed

2006-07-12 23:12  clafou

	* Info-Hatari.plist, Hatari.xcodeproj/project.pbxproj: Added
	  Universal Binary compilation for MacOS X

2006-07-11 20:52  Thomas Huth

	* src/: cfgopts.c, file.c, gemdos.c, memorySnapShot.c, unzip.c,
	  zip.c: strcasecmp is defined in strings.h, not in string.h!
	  (Thanks to Anatol for the hint)

2006-07-05 20:08  clafou

	* Hatari.xcodeproj/project.pbxproj, src/gui-osx/hatari.x32: Removed
	  obsolete file

2006-07-03 23:00  clafou

	* Hatari.xcodeproj/project.pbxproj: Added Cocoa UI for MacOSX

2006-07-03 22:54  clafou

	* src/gui-osx/: AlertHooks.h, AlertHooks.m,
	  CreateFloppyController.h, CreateFloppyController.m, Hatari.icns,
	  PrefsController.h, PrefsController.m, SDLMain.h, SDLMain.m,
	  Shared.h, Shared.m, hatari.x32, English.lproj/InfoPlist.strings,
	  SDLMain.nib/classes.nib, SDLMain.nib/info.nib,
	  SDLMain.nib/objects.nib: Added Cocoa UI for MacOSX

2006-07-03 22:36  clafou

	* src/: dialog.c, gui-sdl/dlgAlert.c, gui-sdl/dlgMain.c,
	  includes/dialog.h, includes/main.h: Added Cocoa UI for MacOSX

2006-06-27 01:03  Thomas Huth

	* src/: int.c, m68000.c, screen.c, includes/ikbd.h, includes/int.h,
	  includes/ioMemTables.h, includes/m68000.h: Now using correct
	  variable types for variables that store a pointer to a function
	  (Thanks to Mark Keates for the patch)

2006-06-22 22:03  Eero Tamminen

	* doc/manual.html: fix typo

2006-06-13 22:26  Thomas Huth

	* src/main.c: Slightly improved the wait-on-vbl function. Should
	  now result in a better tradeoff between speed accuracy and CPU
	  time consumption on Mac OS X.

2006-06-13 22:22  Thomas Huth

	* src/sound.c: Added additional check to avoid the creation of too
	  many new samples (e.g. when running in max. speed mode)

2006-05-21 11:13  Eero Tamminen

	* doc/manual.html: updated the command line options in regards to
	  memory and TT support, updated the STE demo list, added new table
	  for 68030 software compatibility and added note about the
	  scrollwheel to the mouse section.

2006-05-20 10:05  Thomas Huth

	* src/: gemdos.c, includes/gemdos.h: Fixed GEMDOS-HD Dsetpath
	  emulation: No more buffer overruns and crashes when a program
	  does a lot Dsetpath("..") calls.

2006-05-04 21:36  Thomas Huth

	* src/gemdos.c: Renamed variable name 'Char' to 'c' since 'Char' is
	  a pre-defined name on AmigaOS (Thanks to Ventzislav Tzvetkov for
	  the hint).

2006-04-19 23:46  Thomas Huth

	* src/: includes/joy.h, joy.c, main.c: Joysticks are now closed at
	  exit.

2006-04-05 17:34  Thomas Huth

	* src/: ioMemTables.c, memorySnapShot.c, video.c, includes/main.h,
	  includes/video.h: Hatari can now emulate the STE shifter bug that
	  is used in some games like Obsession to enhance the resolution to
	  336x200.

2006-03-23 23:03  Thomas Huth

	* src/ioMemTables.c: Moved wrongly placed entry in IO-mem-table to
	  correct location.

2006-03-23 21:56  Eero Tamminen

	* src/includes/main.h: Remove obsolete variable definition from
	  main.h (produced error with gcc v4)

2006-03-03 00:17  Thomas Huth

	* src/video.c: Added basic support for shortening a screen line by
	  2 bytes: Some few sync-scrolling screens are now working.

2006-03-02 23:20  Thomas Huth

	* src/: video.c, includes/video.h: Fixed byte size of left and
	  right border: Programs that only open one of these two borders
	  should be working fine now (e.g. the overscan screen in the
	  'Amiga demo' from TEX)

2006-03-02 10:17  Thomas Huth

	* src/cart.c: Forgot to free allocated memory in case of an error.

2006-03-02 10:06  Thomas Huth

	* src/: cart.c, configuration.c, gui-sdl/dlgRom.c: Slightly
	  improved cartridge loading (now checking correctly for illegal
	  file names etc.).

2006-03-02 09:42  Thomas Huth

	* src/file.c: File_Read now returns the correct number of bytes
	  that have been read.

2006-03-01 21:54  Thomas Huth

	* src/unzip.c: Fixed typo.

2006-03-01 21:46  Thomas Huth

	* src/: tos.c, unzip.c: Sourcecode beautification.

2006-03-01 17:31  Thomas Huth

	* src/includes/video.h: Removed unused legacy defines.

2006-02-27 12:07  Thomas Huth

	* src/: cart_asm.s, cart_mus.x32, hatari.x32: Renamed hatari.x32 to
	  cart_mus.x32

2006-02-23 22:00  Thomas Huth

	* src/spec512.c: Improved Spectrum512 picture generation - many
	  Spec512 pictures look now much better! (Thanks to Emmanuel Anne
	  for this patch)

2006-02-21 22:45  Thomas Huth

	* src/uae-cpu/memory.c: Speed optimization: Use STRam array
	  directly instead of using it indirectly via a pointer
	  (*STmemory).

2006-02-21 20:09  Eero Tamminen

	* src/keymap.c: use Log_Printf() instead of fprintf(stderr...)

2006-02-21 15:15  Thomas Huth

	* src/: reset.c, stMemory.c, tos.c, includes/stMemory.h: Moved
	  memory initialization to stMemory.c. The memory is now also
	  cleared up to STRamEnd, not only up to 4MiB.

2006-02-21 14:47  Thomas Huth

	* Makefile.cnf: Disabled -Wcast-align again

2006-02-21 14:41  Thomas Huth

	* src/gemdos.c: Fixed GCC compiler warnings.

2006-02-19 22:48  Eero Tamminen

	* src/options.c: improved comments

2006-02-17 22:01  Eero Tamminen

	* src/keymap.c: - bugfix: keycode variables need to be signed for
	  check about undefined   key (value < 0) to work - tell use if
	  keycode opening failed

2006-02-17 22:00  Eero Tamminen

	* src/options.c: add missing array initializer

2006-02-17 21:59  Eero Tamminen

	* src/blitter.c: remove unused skew argument

2006-02-16 23:19  Eero Tamminen

	* src/gemdos.c: use ferror(), fwrite() doesn't return an error code

2006-02-16 23:07  Eero Tamminen

	* src/dim.c: fix cast warning

2006-02-16 22:51  Eero Tamminen

	* doc/memory-usage.txt: added document on Hatari memory usage

2006-02-15 20:16  Thomas Huth

	* src/screen.c: STE color table can be used for both modes, ST and
	  STE. This change fixes a problem when running Hatari with
	  '--machine st --tos tos106.rom'

2006-02-13 22:18  Eero Tamminen

	* src/: fdc.c, includes/m68000.h: added defines for two magic
	  values

2006-02-13 22:18  Eero Tamminen

	* src/: ikbd.c, gemdos.c, ioMem.c, spec512.c, vdi.c,
	  includes/ikbd.h, includes/ioMem.h, includes/spec512.h: -
	  "unsigned char" -> Uint8 - "unsigned short" -> Uint16 - Made some
	  global variables static - Moved CYCLEPALETTE definition to
	  spec512.c as it's not used elsewhere

2006-02-12 22:35  Eero Tamminen

	* src/misc.c: typo fixes for comments

2006-02-12 22:28  Eero Tamminen

	* src/: audio.c, blitter.c, cart.c, cartData.c, dmaSnd.c, file.c,
	  floppy.c, ikbd.c, int.c, ioMem.c, ioMemTables.c, keymap.c,
	  rs232.c, screen.c, sound.c, tos.c, vdi.c, xbios.c, zip.c,
	  convert/macros.h, includes/audio.h, includes/file.h,
	  includes/ioMemTables.h, includes/zip.h: Make some predefined
	  arrays into const.  This required adding consts to some other
	  places too (e.g. few public file.h functions)

2006-02-12 22:24  Eero Tamminen

	* src/Makefile: add options.c

2006-02-12 22:23  Eero Tamminen

	* src/: gemdos.c, includes/gemdos.h, includes/gemdos_defines.h: -
	  minor cleanup in gemdos.h:   - move defines and structs used only
	  in gemdos.c, to there   - move error and file attribute defines
	  to internal gemdos_define.h - renamed badly/misleadingly named
	  defines:   - MAX_PATH -> MAX_GEMDOS_PATH     (was used wrong in
	  main.c option parsing) - make some gemdos.c variables static /
	  const

2006-02-12 19:53  Eero Tamminen

	* src/: main.c, options.c, includes/options.h: - Move the Hatari
	  option parsing from main.c to its own options.c file	 and
	  rewrite it to be more automatic (at the same time fixes a few
	  bugs	 in sizeof<->strlen comparison strncpy usage).	- Add const
	  and static keywords where appropiate

2006-02-09 23:02  Eero Tamminen

	* src/uae-cpu/: build68k.c, fpp.c, gencpu.c, newcpu.c, newcpu.h,
	  readcpu.c, readcpu.h: make the large opcode tables const, also
	  some other array

2006-02-09 22:55  Eero Tamminen

	* src/gui-sdl/: font10x16.h, font5x8.h, sdlgui.c: Make font data
	  const

2006-02-08 23:51  Eero Tamminen

	* src/memorySnapShot.c: const all rscids

2006-02-08 23:49  Eero Tamminen

	* src/: audio.c, bios.c, blitter.c, cart.c, cartData.c, cfgopts.c,
	  configuration.c, createBlankImage.c, cycles.c, debugui.c,
	  dialog.c, dim.c, dmaSnd.c, fdc.c, file.c, floppy.c, hdc.c,
	  ikbd.c, int.c, ioMem.c, ioMemTables.c, joy.c, keymap.c, log.c,
	  m68000.c, mfp.c, midi.c, misc.c, msa.c, printer.c, psg.c,
	  reset.c, rs232.c, rtc.c, screen.c, screenSnapShot.c, shortcut.c,
	  sound.c, spec512.c, st.c, stMemory.c, tos.c, unzip.c, vdi.c,
	  video.c, wavFormat.c, xbios.c, ymFormat.c, zip.c: const all
	  rscids + MFP float table

2006-02-08 23:46  Eero Tamminen

	* src/: gui-sdl/dlgAbout.c, gui-sdl/dlgAlert.c,
	  gui-sdl/dlgDevice.c, gui-sdl/dlgDisc.c, gui-sdl/dlgFileSelect.c,
	  gui-sdl/dlgJoystick.c, gui-sdl/dlgKeyboard.c, gui-sdl/dlgMain.c,
	  gui-sdl/dlgMemory.c, gui-sdl/dlgNewDisc.c, gui-sdl/dlgRom.c,
	  gui-sdl/dlgScreen.c, gui-sdl/dlgSound.c, gui-sdl/dlgSystem.c,
	  gui-sdl/sdlgui.c, uae-cpu/build68k.c, uae-cpu/fpp.c,
	  uae-cpu/gencpu.c, uae-cpu/hatari-glue.c, uae-cpu/memory.c,
	  uae-cpu/newcpu.c, uae-cpu/readcpu.c: const all rscid's

2006-02-08 10:17  Thomas Huth

	* src/: memorySnapShot.c, includes/main.h: Increased version number
	  to 0.82.

2006-02-08 10:17  Thomas Huth

	* src/video.c: Improved overscan emulation - e.g. the Level 16
	  fullscreen in the union demo is working now.

2006-02-08 10:16  Thomas Huth

	* src/includes/screen.h: Increased the size of the bottom border.

2006-02-07 17:32  Thomas Huth

	* src/: video.c, includes/screen.h, includes/video.h: Added support
	  for 60 Hz screen timings. Spectrum512 pictures that require 60 Hz
	  are now working.

2006-02-04 22:34  Eero Tamminen

	* src/: cycles.c, includes/cycles.h: make Cycles_UpdateCounters
	  static

2006-02-04 17:44  Eero Tamminen

	* src/: rs232.c, includes/rs232.h: - Made global funcs and
	  variables that could be into static - This required moving the
	  static function earlier in the code	(made the diff much larger)

2006-01-30 23:26  Thomas Huth

	* src/convert/: low320x16.c, low320x8.c, low640x16.c, low640x8.c,
	  med640x16.c, med640x8.c, spec320x16.c, spec640x16.c, vdi16.c,
	  vdi2.c, vdi4.c: Removed unnecessary casts to (void *).

2006-01-30 23:06  Thomas Huth

	* src/: cart.c, cartData.c: Rewrote the comments at the top of the
	  file a little bit.

2006-01-30 22:53  Thomas Huth

	* doc/todo.txt: Added new items to the TODO list.

2006-01-29 20:54  Eero Tamminen

	* src/: mfp.c, includes/mfp.h: made several MFP variables and
	  functions static

2006-01-29 20:07  Eero Tamminen

	* src/dmaSnd.c: make DmaSoundMode static

2006-01-29 18:44  Eero Tamminen

	* src/video.c: fix typo in comment

2006-01-26 22:52  Thomas Huth

	* src/: Makefile, cycles.c, int.c, memorySnapShot.c, sound.c,
	  spec512.c, video.c, includes/cycles.h, includes/int.h,
	  includes/m68000.h, includes/sound.h: Started new framework for
	  better cycle counting.

2006-01-23 22:08  Thomas Huth

	* src/: reset.c, spec512.c, video.c, includes/main.h,
	  includes/screen.h, includes/video.h: First steps towards 60 Hz
	  video timing: cycles-per-line and scanlines-per-frame values are
	  now stored in a variable instead of a fix define.

2006-01-23 21:54  Eero Tamminen

	* src/fdc.c: () -> (void)

2006-01-23 20:47  Thomas Huth

	* src/uae-cpu/gencpu.c: Improved PEA and LEA cycles again (thanks
	  to Ijor for the explanation)

2006-01-20 18:42  Thomas Huth

	* src/: fdc.c, mfp.c, includes/fdc.h: Smarter FDC timings: Delay is
	  aborted when a program reads the FDC interrupt bit in the GPIP
	  register. (Thanks to Emmanuel Anne for the idea)

2006-01-12 21:35  Thomas Huth

	* src/convert/: low640x16.c, low640x8.c: Removed redundant
	  AdjustLinePaletteRemap() function calls (Thanks to Emmanuel Anne
	  for the patch).

2006-01-02 21:55  Thomas Huth

	* src/: cart.c, reset.c, includes/cart.h: Improved cartridge image
	  loading: Hatari now supports ZIPed cartridges and .STC
	  cartridges.

2005-12-25 20:59  Thomas Huth

	* src/screen.c: Added additional check if a resolution change is
	  really necessary.

2005-12-25 19:30  Thomas Huth

	* src/uae-cpu/gencpu.c: Corrected cycles for LEA and PEA
	  instructions (e.g. this is needed for the Level-16 fullscreen in
	  the 'Union demo')

2005-12-19 00:20  Thomas Huth

	* src/: file.c, tos.c, zip.c, includes/file.h, includes/zip.h:
	  Improved ZIP file reading: E.g. Hatari can now also load ROM
	  images from a ZIP file.

2005-12-18 19:50  Thomas Huth

	* src/zip.c: Sourcecode beautification.

2005-12-18 19:02  Thomas Huth

	* src/: fdc.c, ikbd.c, m68000.c, mfp.c, midi.c, psg.c, rs232.c,
	  includes/m68000.h, uae-cpu/newcpu.c: Improved the emulation of
	  wait state cycles for certain IO memory registers.

2005-12-17 11:22  Thomas Huth

	* src/joy.c: Made some variables static.

2005-12-02 22:08  Eero Tamminen

	* src/: int.c, includes/int.h: Set a few variables and
	  Int_SetNewInterrupt() function static.

	  Hopefully this helps to make faster the UpdateInterrupt and
	  SetNewInterrupt functions which are in top 10 slowest functions
	  when profiling Posh demo with valgrind+callgrind.

2005-11-30 21:50  Eero Tamminen

	* doc/manual.html: added popstars and overdose demos

2005-11-30 21:18  Eero Tamminen

	* doc/manual.html: add hallucinations demo, pooz game and update
	  info on wolf3d v0.8

2005-11-30 18:01  Matthias Arndt

	* doc/manual.html: small corrections in manual.html

2005-11-23 20:08  Thomas Huth

	* src/main.c: Added mouse wheel support by simulating a curser
	  keypress.

2005-11-23 18:43  Thomas Huth

	* src/gemdos.c: The Pexec function now detects hard drive file
	  names in a better way. Now you can drag and drop a file from a
	  floppy to an application on the hard drive, or launch an
	  associated application by clicking on a data file on a floppy.
	  Thanks to Emmanuel Anne for the patch!

2005-11-23 18:20  Thomas Huth

	* src/dim.c: Updated comment about the .DIM headers.

2005-11-15 13:24  Thomas Huth

	* src/: main.c, video.c, includes/main.h: Improved the delay loop
	  for systems where SDL_Delay is very inaccurate.

2005-11-07 20:22  Thomas Huth

	* doc/todo.txt: Added some more items to the TODO list

2005-11-03 21:46  Eero Tamminen

	* doc/manual.html: update on Pacemaker demo

2005-11-01 22:16  Eero Tamminen

	* doc/manual.html: minor updates, added chaos engine

2005-11-01 21:21  Thomas Huth

	* src/blitter.c: In smudge mode, the halftone offset is now
	  determined before _each_ halftone access, not only once before
	  the blitting operations starts. This fixes some screens in the
	  Pacemaker demo by Paradox.

2005-10-29 12:37  Eero Tamminen

	* doc/manual.html: add ZX Spectrum emu

2005-10-28 17:40  Matthias Arndt

	* doc/manual.html: added Badger Badger by MjjProd to working STE
	  demos

2005-10-24 22:42  Eero Tamminen

	* doc/manual.html: - added a few more apps - noted which of the
	  tested apps/games were demos

2005-10-22 00:00  Eero Tamminen

	* src/blitter.c: oops, disable debug output

2005-10-21 23:58  Eero Tamminen

	* src/: blitter.c, ioMemTables.c, includes/blitter.h: Do changes to
	  the blitter.c code: - LineNum -> Control register name change
	  (line number is just low nibble of the control register) -
	  Convert types and helper functions to SDL and Hatari ones - Add
	  defines for register addresses (IMHO nicer) - Fix (one) bug with
	  Smudge mode - Add documentation comments

2005-10-21 11:23  Thomas Huth

	* src/mfp.c: Due to a small bug, interrupt-in-service registers
	  where not cleared when a program entered automatic MFP EOI mode.
	  Fixed now. Popstars and Spinning-Wheels by YM-Rockerz are working
	  now.

2005-10-20 23:04  Eero Tamminen

	* doc/manual.html: Added many applications and a few demos to ST &
	  STE compatibility lists

2005-10-20 09:52  Thomas Huth

	* src/: ioMem.c, ioMemTables.c, main.c, includes/configuration.h,
	  includes/ioMemTables.h: Added IO memory table for the Atari TT.

2005-10-19 10:16  Thomas Huth

	* src/tos.c: Patch TOS 3.06 to disable PMMU CPU access.

2005-10-16 01:02  Eero Tamminen

	* src/: blitter.c, includes/blitter.h: blitter.c cleanup: - make
	  Do_Blit static - remove 'register' keywords (with today's C
	  compilers they are redundant)

2005-10-15 16:00  Thomas Huth

	* src/gui-sdl/dlgJoystick.c: Fixed stupid bug that prevented proper
	  SDL joystick selection.

2005-10-14 22:28  Eero Tamminen

	* doc/hatari.1: - Add stuff relevant for the new STE support - Wrap
	  all text to 80 columns - Add FILES section

2005-10-14 22:27  Eero Tamminen

	* doc/manual.html: Add Pacemaker STE demo

2005-10-12 : *** Version 0.80 ***

2005-10-12 11:35  Thomas Huth

	* readme.txt: Changes for Hatari version 0.80.

2005-10-12 11:06  Thomas Huth

	* configure.ac, doc/authors.txt, doc/release-notes.txt,
	  src/memorySnapShot.c, src/includes/main.h: Changes for Hatari
	  version 0.80.

2005-10-12 11:05  Thomas Huth

	* doc/todo.txt: Added TODO list.

2005-10-11 22:43  Eero Tamminen

	* doc/manual.html: added Accompanist ST app

2005-10-11 19:13  Thomas Huth

	* doc/: authors.txt, manual.html: Updated the documentation a
	  little bit to suit the latest version of Hatari.

2005-10-09 00:15  Eero Tamminen

	* doc/manual.html: added hero STE game

2005-10-08 11:48  Eero Tamminen

	* doc/manual.html: update ST demo section

2005-10-08 09:32  Eero Tamminen

	* doc/manual.html: improved the ST applications section

2005-10-08 08:53  Eero Tamminen

	* doc/manual.html: added ultimate arena STE game

2005-10-06 23:28  Eero Tamminen

	* doc/manual.html: sort STE games, add Astrodia

2005-10-06 20:47  Thomas Huth

	* doc/: manual.html, images/joystick.png, images/main.png: Updated
	  the main menu and the joystick setup dialog in the manual.

2005-10-05 16:14  Thomas Huth

	* src/: joy.c, includes/joy.h: Hatari supports more than one fire
	  button for STE joypads.

2005-10-04 23:44  Thomas Huth

	* src/: debugui.c, dialog.c: Sourcecode beautification.

2005-10-04 17:31  Thomas Huth

	* src/: configuration.c, dialog.c, gemdos.c, hdc.c,
	  memorySnapShot.c, tos.c, gui-sdl/dlgDisc.c,
	  includes/configuration.h, includes/main.h, includes/tos.h:
	  Improved hard disk emulation: Adding and removing a GEMDOS or
	  ACSI hard disk should now work right.

2005-10-04 15:13  Thomas Huth

	* src/tos.c: Improved TOS patches: Anti-STE patches are now only
	  applied when running in plain ST emulation and DMA boot patches
	  are now also applied when only GEMDOS HD emulation is turned on.

2005-10-04 14:43  Thomas Huth

	* src/: mfp.c, includes/mfp.h: Changed type of variables from
	  'unsigned char' to 'Uint8'.

2005-10-04 11:45  Thomas Huth

	* src/: screen.c, includes/video.h: Fixed SDL header includes.

2005-10-04 11:24  Thomas Huth

	* src/main.c: Sound buffer index variables are now reset after
	  pausing the emulation.

2005-09-29 10:36  Thomas Huth

	* src/: gui-sdl/dlgJoystick.c, gui-sdl/sdlgui.c, includes/sdlgui.h:
	  It is now possible to re-define the keys for the joystick
	  emulation in the GUI.

2005-09-28 23:44  Thomas Huth

	* src/gui-sdl/dlgJoystick.c: SDL joystick name is now displayed in
	  the GUI, too.

2005-09-27 10:53  Thomas Huth

	* src/: shortcut.c, sound.c, includes/sound.h: When switching from
	  maximum to normal speed mode, do not reset complete sound
	  emulation anymore, only the needed sound buffer index variable.

2005-09-26 20:24  Thomas Huth

	* src/keymap.c: When releasing a short-cut key, a key scan code was
	  still sent to the emulated ST. Fixed now.

2005-09-26 17:20  Thomas Huth

	* src/: dmaSnd.c, fdc.c, floppy.c, rs232.c, wavFormat.c, zip.c,
	  gui-sdl/sdlgui.c, includes/floppy.h, includes/wavFormat.h,
	  uae-cpu/fpp.c: Fixed GCC 4.0 compiler warnings.

2005-09-25 23:32  Thomas Huth

	* src/: configuration.c, ioMemTables.c, joy.c, keymap.c, main.c,
	  mfp.c, psg.c, gui-sdl/dlgJoystick.c, includes/configuration.h,
	  includes/joy.h: Added support for STE joypads and parallel port
	  joysticks.

2005-09-15 11:42  Thomas Huth

	* src/keymap.c: Removed some keys from the scancode detection
	  function that are on different locations on qwertz and azerty
	  keyboards.

2005-09-15 02:11  Thomas Huth

	* src/: dmaSnd.c, ioMemTables.c, includes/dmaSnd.h: Emulation of
	  shifting/rotating microwire registers. Needed for some games like
	  'Clogged up' that check the microwire registers for end of
	  transfer.

2005-09-13 22:55  Eero Tamminen

	* doc/manual.html: updates to the STE games

2005-09-13 03:10  Thomas Huth

	* doc/manual.html, doc/release-notes.txt, src/bios.c, src/cart.c,
	  src/configuration.c, src/createBlankImage.c, src/dialog.c,
	  src/dim.c, src/fdc.c, src/file.c, src/floppy.c, src/gemdos.c,
	  src/hdc.c, src/ioMemTables.c, src/main.c, src/memorySnapShot.c,
	  src/msa.c, src/printer.c, src/st.c, src/tos.c, src/unzip.c,
	  src/zip.c, src/gui-sdl/dlgDisc.c, src/gui-sdl/dlgMain.c,
	  src/gui-sdl/dlgNewDisc.c, src/includes/configuration.h,
	  src/includes/dialog.h, src/includes/dim.h, src/includes/fdc.h,
	  src/includes/file.h, src/includes/floppy.h,
	  src/includes/gemdos.h, src/includes/main.h, src/includes/msa.h,
	  src/includes/printer.h, src/includes/st.h, src/includes/unzip.h,
	  src/includes/zip.h: Changed "disc" to "disk" (the correct
	  spelling for floppy and hard disk).

2005-09-09 22:40  Eero Tamminen

	* doc/manual.html: add powerup to STE enhanced games

2005-09-01 22:53  Eero Tamminen

	* doc/: manual.html, update-index.sh: - added script helping in
	  html index creation - added index to the manual

2005-09-01 21:38  Eero Tamminen

	* doc/images/memory.png: updated memory dialog

2005-09-01 21:20  Eero Tamminen

	* src/video.c: fix comment on videobase alignment on TT

2005-08-31 09:33  Matthias Arndt

	* doc/manual.html: added initial STE compatibility list to the
	  manual

2005-08-29 22:13  Thomas Huth

	* src/: joy.c, video.c, includes/video.h: Removed redundant
	  variable VBLCounter. Changed frame skip code so that VDI screen
	  rendering should now be a little bit faster. Removed the
	  confusing and redundant BORDERMASK_TOP/BOTTOM code.

2005-08-29 21:29  Thomas Huth

	* src/: video.c, includes/video.h: Made some functions static.

2005-08-22 00:20  Thomas Huth

	* src/floppy.c: Code now checks if HD emulation is enabled before
	  it tries to boot from hard drive.

2005-08-21 23:15  Thomas Huth

	* src/dmaSnd.c: Forgot to add a #include "memorySnapShot.h"

2005-08-21 23:13  Thomas Huth

	* src/: dmaSnd.c, memorySnapShot.c, reset.c, includes/dmaSnd.h: DMA
	  sound variables are now cleared by ST reset and saved to memory
	  snapshot files, too.

2005-08-15 00:41  Thomas Huth

	* src/ioMemTables.c: Fixed a stupid bug: IO-Memory handler for
	  0xff8265 must not be IoMem_VoidRead since this returns 0xff
	  (which is completely wrong here).

2005-08-14 21:51  Eero Tamminen

	* src/video.c: ScanLineWidth => ScanLineSkip

2005-08-14 20:29  Eero Tamminen

	* src/uae-cpu/memory.c: fix typo in comment

2005-08-13 13:21  Thomas Huth

	* src/: configuration.c, main.c, tos.c, gui-sdl/dlgMemory.c,
	  includes/configuration.h, includes/tos.h, uae-cpu/memory.c,
	  uae-cpu/memory.h: Improved the RAM size setting: Up to 14 MiB ST
	  RAM are now possible.

2005-08-13 10:59  Thomas Huth

	* doc/manual.html, src/main.c: Added --machine command line option
	  to select ST or STE mode.

2005-08-11 09:55  Thomas Huth

	* src/keymap.c: Added key with symbolic code 223.

2005-08-08 16:10  Thomas Huth

	* src/: ioMemTables.c, video.c, includes/video.h: STE Screen base
	  address low register is now set to zero if a program writes to
	  med or high register. Also improved the video address calculation
	  function Video_CalculateAddress().

2005-08-08 14:08  Thomas Huth

	* src/: video.c, includes/main.h: STE fine scrolling now also works
	  with overscan screens (see e.g. the MIND REWIND demo). It should
	  now also work on little endian machines (not tested yet).

2005-08-06 20:34  Thomas Huth

	* doc/images/: fileselector.png, keyboard.png, system.png: Added
	  new screenshots.

2005-08-06 20:33  Thomas Huth

	* doc/images/: fileselector.png, keyboard.png, system.png: Removed
	  old screenshots.

2005-08-06 20:30  Thomas Huth

	* doc/manual.html: Updated the manual: Added STE features, updated
	  some screenshots, etc.

2005-08-06 14:32  Thomas Huth

	* src/: Makefile, dmaSnd.c, int.c, ioMemTables.c, mfp.c, sound.c,
	  video.c, includes/dmaSnd.h, includes/int.h, includes/sound.h:
	  Added experimental STE DMA sound emulation.

2005-08-05 21:45  Thomas Huth

	* src/fdc.c: Decreased FDC time of waiting so that --slowfdc also
	  works with TOS 1.06.

2005-08-03 14:36  Thomas Huth

	* src/video.c: Implemented STE monochrome fine scrolling.

2005-08-03 02:55  Thomas Huth

	* src/: includes/video.h, video.c: Added experimental STE
	  horizontal fine scrolling.

2005-07-30 16:02  Eero Tamminen

	* src/: Makefile, screen.c, screenConvert.c, convert/high640x1.c,
	  convert/high640x8.c, convert/low320x16.c, convert/low320x8.c,
	  convert/low640x16.c, convert/low640x8.c, convert/macros.h,
	  convert/med640x16.c, convert/med640x8.c, convert/routines.h,
	  convert/spec320x16.c, convert/spec640x16.c, convert/vdi16.c,
	  convert/vdi2.c, convert/vdi4.c, includes/screen.h,
	  includes/screenConvert.h: Huge re-factoring to screenConvert.c
	  and associated files: - Moved lookup tables and macros from
	  screenConvert.c to   convert/macros.h   - Cleaned up the macros
	  so that there's less than half of code left - Moved functions and
	  variables from screenConvert.c to screen.c   - I also cleaned up
	  these functions   - As a result, I removed screenConvert.c -
	  Moved includes/screenConvert.h to includes/routines.h - Included
	  convert/macros.h and convert/routines.h to screen.c As a result,
	  I could do following: - Declare all convert/*.c functions static
	  - Hide half of includes/screen.h variables to screen.c
	  exclusively Additionally I: - Removed the global PixelWorkspace,
	  ScrX and ScrY variables and used   local variables in convert/*.c
	  functions instead (I pass the vertical   value to palette adjust
	  function as argument) For Spec512 I didn't have a test-case,
	  everything else is tested and "should" work

2005-07-30 14:27  Eero Tamminen

	* src/screen.c: fix STe palette for 8-bit screen

2005-07-30 12:09  Eero Tamminen

	* src/: screen.c, includes/screen.h, includes/vdi.h: cleanup: -
	  Make screen.c functions that are not called elsewhere static	 -
	  changed their order for this a bit - Fix typos in comments (+
	  reformat some of them to fit 80-columns)

2005-07-30 11:26  Eero Tamminen

	* src/: ioMemTables.c, video.c, includes/video.h: Add STe Video
	  Address Counter write support: - video.c:
	  Video_ScreenCounter_WriteByte() and entries for it to to
	  ioMemTables for STe (From Thomas, not me)

2005-07-30 11:19  Eero Tamminen

	* src/: video.c, includes/video.h: video.[ch]: Add support for for
	  STe hardware scrolling registers: - Writing Video Base address
	  low byte (checked in VBL) - Writing Line-Offset and Video Base
	  Address Pixel Offset registers   (ScanLineWidth & HWScrollCount,
	  checked in HBL)

2005-07-30 11:07  Eero Tamminen

	* src/: screen.c, screenConvert.c, spec512.c, video.c,
	  includes/screen.h: Add STe palette support to Hatari: - Add STe
	  palette masking to:	- video.c:Video_ColorReg_WriteWord() -
	  Remove ST color value masking from:	-
	  screenConvert.c:AdjustLinePaletteRemap()   - spec512.c   I'm
	  assuming it's enough to do masking in video.c - In screen.[hc]:
	  - Increase ST2RGB table size to STe palette size   -
	  Screen_SetupRGBTable() handles now also STe palette bits   -
	  Screen_CreatePalette() handles now also STe palette bits

2005-07-30 10:44  Eero Tamminen

	* Makefile.cnf, src/memorySnapShot.c, src/gui-sdl/Makefile,
	  src/includes/memorySnapShot.h: - add more warnings in CFLAGS	 -
	  disable them for gui-sdl/* - Add more consts to
	  memorySnapShot.[ch]

2005-07-26 10:41  Thomas Huth

	* src/ioMemTables.c: Changed joypad interception functions so that
	  Dynabusters+ can now be started.

2005-07-20 11:30  Thomas Huth

	* src/gemdos.c: Added Fattrib() GEMDOS call.

2005-07-15 21:30  Thomas Huth

	* src/: fdc.c, gemdos.c, m68000.c, screen.c, spec512.c, stMemory.c,
	  vdi.c, video.c, xbios.c, ymFormat.c, includes/fdc.h,
	  includes/m68000.h, includes/screen.h, includes/spec512.h,
	  includes/stMemory.h, includes/vdi.h, includes/video.h: Changed
	  some variable types to more sane ones (e.g. unsigned long to
	  Uint32).

2005-06-07 17:10  Matthias Arndt

	* doc/: manual.html, images/devices.png, images/discs.png,
	  images/fileselector.png, images/joystick.png,
	  images/keyboard.png, images/main.png, images/memory.png,
	  images/screen.png, images/sound.png, images/system.png,
	  images/tos.png: added some explanatory pictures of the GUI to the
	  manual

2005-06-07 00:29  Thomas Huth

	* src/: floppy.c, includes/floppy.h: Some cosmetic changes.

2004-06-05 : *** Version 0.70 ***

2005-06-05 19:36  Thomas Huth

	* readme.txt: Changes for version 0.70.

2005-06-05 19:29  Thomas Huth

	* gpl.txt, doc/manual.html, src/gui-sdl/dlgAlert.c: Update FSF
	  postal address.

2005-06-05 19:01  Thomas Huth

	* configure.ac, doc/manual.html, doc/release-notes.txt,
	  src/memorySnapShot.c, src/includes/main.h: Changes for version
	  0.70.

2005-06-05 16:56  Thomas Huth

	* src/shortcut.c: Added additional shortcut keys for options dialog
	  and fullscreen (for systems which do not have F11 and F12)

2005-06-05 16:19  Thomas Huth

	* src/: cfgopts.c, configuration.c, createBlankImage.c, floppy.c,
	  log.c, main.c, memorySnapShot.c, screenSnapShot.c, sound.c,
	  tos.c, wavFormat.c, ymFormat.c, includes/cfgopts.h,
	  includes/configuration.h, includes/log.h, includes/main.h,
	  uae-cpu/newcpu.c: Improved the logging functions.

2005-06-01 15:44  Thomas Huth

	* src/: createBlankImage.c, file.c, includes/file.h: Fixed some
	  compiler warnings when building Hatari on Solaris 8.

2005-05-11 10:09  Thomas Huth

	* src/dialog.c: Hatari does not temporarily leave the fullscreen
	  mode anymore when the user changes the display mode options.

2005-04-14 15:22  Thomas Huth

	* src/gemdos.c: Removed unnecessary debugging code.

2005-04-07 12:15  Thomas Huth

	* src/: fdc.c, gemdos.c, printer.c, wavFormat.c, includes/fdc.h:
	  Sourcecode beautification.

2005-04-05 16:41  Thomas Huth

	* src/: Makefile, audio.c, bios.c, debug.c, dialog.c, errlog.c,
	  fdc.c, floppy.c, gemdos.c, hdc.c, ikbd.c, int.c, ioMem.c, joy.c,
	  keymap.c, log.c, m68000.c, main.c, memorySnapShot.c, mfp.c,
	  printer.c, rs232.c, sound.c, tos.c, video.c, xbios.c, zip.c,
	  includes/debug.h, includes/errlog.h, includes/log.h,
	  includes/main.h: Replaced the obsolete errlog.c and debug.c by
	  the new log.c.

2005-04-05 16:20  Thomas Huth

	* src/gui-sdl/dlgMain.c: Added the new additional parameter for
	  Configuration_Load.

2005-04-04 17:27  Thomas Huth

	* src/: file.c, includes/file.h: Cleaned up: Changed some "char *"
	  to "const char *" and removed the unused File_Delete() function.

2005-04-04 17:26  Thomas Huth

	* Makefile.cnf, Makefile.cnf.in, src/Makefile, src/configuration.c,
	  src/main.c, src/includes/configuration.h: Hatari can now also
	  load a global configuration file (e.g. /etc/hatari.cfg).

2005-04-04 13:38  Thomas Huth

	* src/gemdos.c: Some code cleaned up. Added READ-ONLY bit to
	  GemDOS_ConvertAttribute().

2005-04-01 13:14  Thomas Huth

	* src/: audio.c, bios.c, blitter.c, cfgopts.c, configuration.c,
	  gemdos.c: Sourcecode beautification (indentation with tabs
	  instead of spaces etc.).

2005-03-17 10:01  Thomas Huth

	* src/: cartData.c, cart_asm.s: The pexec code in the cartridge now
	  works with 68010 - 68040 CPUs, too.

2005-03-15 11:23  Thomas Huth

	* src/ioMem.c: Added some boundary checks to avoid crashes when a
	  program does a 'move.l $fffffe,d0' for example. Thanks to Eero for
	  the hint.

2005-03-14 14:08  Thomas Huth

	* src/gemdos.c: Fixed some memory leaks in the Gemdos drive
	  emulation functions (thanks to Eero Tamminen for the patch!).

2005-03-11 11:10  Thomas Huth

	* src/: gemdos.c, msa.c, includes/ioMem.h, includes/stMemory.h,
	  uae-cpu/maccess.h, uae-cpu/memory.c, uae-cpu/newcpu.h: Fixed some
	  GCC compiler warnings on certain architectures when compiling
	  with the -Wcast-align parameter.

2005-03-10 10:45  Thomas Huth

	* src/file.c: Corrected a typo

2005-03-10 10:41  Thomas Huth

	* src/: file.c, floppy.c: Now using malloc instead of local arrays
	  to avoid possible buffer overflows.

2005-03-09 23:54  Thomas Huth

	* src/: video.c, includes/video.h: Cleaned up the variables of
	  video.c (removed unused, declared some as static, fixed types)
	  and added support for the video address low byte in STE mode.

2005-03-08 00:44  Thomas Huth

	* src/unzip.c: Fixed GCC compiler warnings for compiling with
	  -Wstrict-prototypes.

2005-03-08 00:15  Thomas Huth

	* Makefile.cnf, src/cfgopts.c, src/configuration.c, src/errlog.c,
	  src/file.c, src/floppy.c, src/gemdos.c, src/ikbd.c, src/ioMem.c,
	  src/main.c, src/memorySnapShot.c, src/mfp.c, src/screen.c,
	  src/spec512.c, src/tos.c, src/ymFormat.c,
	  src/gui-sdl/dlgFileSelect.c, src/gui-sdl/sdlgui.c,
	  src/includes/cfgopts.h, src/includes/errlog.h,
	  src/includes/file.h, src/includes/floppy.h,
	  src/includes/gemdos.h, src/includes/ikbd.h, src/includes/main.h,
	  src/includes/tos.h, src/includes/video.h,
	  src/includes/ymFormat.h, src/uae-cpu/Makefile,
	  src/uae-cpu/newcpu.c, src/uae-cpu/readcpu.c: Another Hatari code
	  cleanup patch from Eero Tamminen: It makes more things that can
	  be static, into static.  It makes more things that can be const,
	  into const.  It removes some unused variables and declaration.
	  It fixes a couple of prototypes.  It fixes a couple of signed vs.
	  unsigned comparisons.  And it renames some local variables that
	  shadow global variables.

2005-02-28 09:47  Matthias Arndt

	* doc/manual.html: documented most recent options like optional
	  writeprotection for disk images and the updated System dialogue

2005-02-25 14:56  Thomas Huth

	* src/: spec512.c, includes/main.h: Cleaned up a little bit.

2005-02-25 14:28  Thomas Huth

	* src/: configuration.c, fdc.c, floppy.c, gui-sdl/dlgDisc.c,
	  includes/configuration.h, includes/floppy.h: The user can now
	  choose wether a floppy disk image should be write protected or
	  not.

2005-02-25 10:17  Thomas Huth

	* src/gui-sdl/dlgSystem.c: Added STE mode warning.

2005-02-24 21:26  Thomas Huth

	* src/: configuration.c, file.c, main.c, gui-sdl/dlgDisc.c,
	  gui-sdl/dlgFileSelect.c, gui-sdl/dlgRom.c, includes/file.h: Added
	  some safety checks to avoid problems with invalid paths.

2005-02-24 18:16  Thomas Huth

	* doc/authors.txt, src/includes/stMemory.h, src/gemdos.c,
	  src/tos.c, src/sound.c: Patches for compiling Hatari on a 64-bit
	  Alpha machine (thanks to "Jo" for the patches!).

2005-02-13 17:18  Thomas Huth

	* src/: Makefile, audio.c, configuration.c, dim.c, file.c,
	  gemdos.c, int.c, keymap.c, main.c, memAlloc.c, misc.c, msa.c,
	  screen.c, screenSnapShot.c, shortcut.c, sound.c, tos.c, vdi.c,
	  video.c, ymFormat.c, zip.c, gui-sdl/dlgDevice.c,
	  gui-sdl/dlgDisc.c, gui-sdl/dlgKeyboard.c, gui-sdl/dlgMemory.c,
	  gui-sdl/dlgNewDisc.c, gui-sdl/dlgSound.c, includes/main.h,
	  includes/memAlloc.h, includes/misc.h: Code cleanup: Removed some
	  unused and some redundant functions (especially from memAlloc.c)

2005-02-13 00:11  Thomas Huth

	* src/: includes/sdlgui.h, gui-sdl/dlgAbout.c, gui-sdl/dlgAlert.c,
	  gui-sdl/dlgDevice.c, gui-sdl/dlgDisc.c, gui-sdl/dlgFileSelect.c,
	  gui-sdl/dlgJoystick.c, gui-sdl/dlgKeyboard.c, gui-sdl/dlgMain.c,
	  gui-sdl/dlgMemory.c, gui-sdl/dlgNewDisc.c, gui-sdl/dlgRom.c,
	  gui-sdl/dlgScreen.c, gui-sdl/dlgSound.c, gui-sdl/dlgSystem.c,
	  gui-sdl/sdlgui.c: It is now possible to scroll the file list in
	  the file selection dialog with the mouse wheel and with the
	  cursor keys.

2005-02-12 18:04  Thomas Huth

	* src/: configuration.c, m68000.c, gui-sdl/dlgSystem.c,
	  includes/configuration.h, includes/m68000.h: Added support for 16
	  and 32 MHz CPU clock.

2005-02-12 17:15  Thomas Huth

	* src/gui-sdl/sdlgui.c: Fixed a small bug - now checking for valid
	  object number before accessing the dialog object flags.

2005-02-11 20:57  Thomas Huth

	* src/blitter.c: Changed the blitter behaviour: Bitblits are now
	  executed immediately when a program writes to .

2005-02-11 00:01  Thomas Huth

	* src/gemdos.c: A small patch to Fsfirst: Now we only return the
	  volume name if the program does not search for other file types,
	  too. This fixes a problem with the game Mortar.

2005-02-10 01:11  Thomas Huth

	* src/: configuration.c, dialog.c, ioMem.c, ioMemTables.c, main.c,
	  tos.c, gui-sdl/dlgSystem.c, includes/configuration.h,
	  includes/ioMem.h, includes/ioMemTables.h: Added basic STE support
	  (just enough to run TOS 1.06 and 1.62) and improved the "System"
	  setup dialog.

2005-02-02 22:53  Thomas Huth

	* src/: fdc.c, ioMem.c, ioMemTables.c, m68000.c, includes/ioMem.h,
	  includes/m68000.h, uae-cpu/newcpu.c: Added "void IO memory"
	  handler and renamed some variables.

2005-01-31 23:15  Thomas Huth

	* src/: ioMemTables.c, Makefile, fdc.c, ioMem.c, includes/ioMem.h,
	  includes/ioMemTables.h: Moved IO memory handler table to a
	  separate file, improved its accuracy and split it into two
	  tables, one for plain ST and one for Mega-ST (with blitter and
	  RTC enabled).

2005-01-29 23:42  Thomas Huth

	* src/: ioMem.c, includes/ioMem.h: Rewrote the IO memory access
	  function logic. Now it is possible to correctly emulate the
	  addresses in the IO memory region that cause a bus error only in
	  certain circumstances (e.g. access to 0xff8202). And the code is
	  now a little bit less confusing, I hope ;-)

2005-01-19 00:32  Thomas Huth

	* src/: Makefile, blitter.c, configuration.c, debugui.c, dialog.c,
	  fdc.c, ikbd.c, intercept.c, ioMem.c, m68000.c, main.c,
	  memorySnapShot.c, mfp.c, midi.c, psg.c, video.c,
	  includes/blitter.h, includes/fdc.h, includes/ikbd.h,
	  includes/intercept.h, includes/ioMem.h, includes/m68000.h,
	  includes/main.h, includes/mfp.h, includes/midi.h, includes/psg.h,
	  includes/video.h, uae-cpu/memory.c: Cleaned up IO hardware
	  register emulation: Moved functions from intercept.c to other
	  files, especially the new file ioMem.c.Rewrote some functions and
	  got rid of unused old code.

2005-01-09 10:55  Thomas Huth

	* src/: cart.c, cartData.c, cart_asm.s, hatari.x32,
	  includes/cart.h: Added a cartridge program that shows some
	  information about the keyboard shortcuts.

2005-01-04 17:12  Thomas Huth

	* src/floppy.c: Added some checks for illegal sector numbers to
	  avoid crashes (thanks to Eero Tamminen for the hint).

2004-12-27 01:03  Thomas Huth

	* src/: includes/screen.h, includes/screenDraw.h, screen.c, vdi.c:
	  More clean up in screen.c - finally got completely rid of the
	  obsolete screenDraw.h

2004-12-26 20:22  Thomas Huth

	* src/: screen.c, includes/screen.h, includes/screenDraw.h: Rewrote
	  the Screen_SetConvertDetails() function

2004-12-19 : *** Version 0.60 ***

2004-12-19 14:46  Thomas Huth

	* configure.ac, readme.txt, doc/manual.html, doc/release-notes.txt,
	src/cart.c, src/includes/main.h: Changes for version 0.60

2004-12-19 11:59  Thomas Huth

	* Makefile: Added DESTDIR for 'make install'

2004-12-18 18:28  Matthias Arndt

	* doc/manual.html: added cartridge documentation and altered video
	dialog to the manual

2004-12-14 22:29  Thomas Huth

	* doc/hatari.1: Added --cartridge and --window options in the man
	file.

2004-12-09 22:06  Thomas Huth

	* src/: cart.c, main.c, tos.c, gui-sdl/dlgRom.c: Added the
	possibility to load an alternative cartridge image file.

2004-12-08 11:27  Thomas Huth

	* src/: cart.c, cart_asm.s, cartimg.c, gemdos.c, tos.c,
	includes/cart.h, includes/main.h, uae-cpu/hatari-glue.c,
	uae-cpu/hatari-glue.h, uae-cpu/newcpu.c: Improved, fixed and
	cleaned up the cartridge code.

2004-12-06 00:30  Thomas Huth

	* src/: Makefile, configuration.c, dialog.c, main.c, screen.c,
	tos.c, gui-sdl/Makefile, gui-sdl/dlgMain.c, gui-sdl/dlgRom.c,
	gui-sdl/dlgScreen.c, gui-sdl/dlgTosGem.c, includes/configuration.h,
	includes/dialog.h, includes/main.h, includes/screen.h: Cleaned up
	the screen options: Moved VDI resolution setup to the "Screen"
	dialog and renamed the "interlaced mode" to "interleaved mode".

2004-12-03 21:42  Thomas Huth

	* src/: main.c, reset.c, screen.c, gui-sdl/dlgMain.c,
	includes/main.h: PC mouse pointer is now better in sync with the ST
	mouse pointer.

2004-12-01 00:05  Thomas Huth

	* src/: screen.c, includes/screen.h, includes/screenDraw.h: Started
	to clean up the screen resolution setup code mess.

2004-11-14 17:47  Matthias Arndt

	* doc/manual.html: added --windowed option to manual

2004-11-14 03:34  Thomas Huth

	* src/: ikbd.c, main.c, screen.c, includes/main.h: First mouse
	movement is now ignored to avoid problems with certain ST programs
	(e.g. Serenade disk 54). ikbd.c is now independent from
	bInitGemDOS.

2004-10-31 18:32  Thomas Huth

	* Makefile.cnf.in, src/Makefile, src/file.c, src/int.c, src/main.c,
	src/memorySnapShot.c, src/reset.c, src/gui-sdl/Makefile,
	src/gui-sdl/dlgAbout.c, src/gui-sdl/dlgAlert.c,
	src/includes/dialog.h, src/includes/int.h, src/includes/main.h,
	src/includes/sdlgui.h: Added alert box to the GUI (based on code
	taken from ARAnyM - cheers!) and cleaned up some files (e.g.
	removed obsolete USE_DEBUGGER code lines)

2004-10-01 10:49  Thomas Huth

	* src/: file.c, includes/file.h: Cleaned up the scandir() function
	a little bit.

2004-09-24 18:06  Thomas Huth

	* src/configuration.c: Added missing #include "audio.h"

2004-09-24 14:55  Thomas Huth

	* src/: configuration.c, dialog.c, main.c, screen.c,
	includes/configuration.h, includes/dialog.h, includes/screen.h:
	Cleaned up configuration options. Window/fullscreen mode is now
	correctly initialized from the configuration file. Added --window
	command line option to force a start in window mode. (Thanks to wwp
	for the hint)

2004-09-24 13:19  Thomas Huth

	* src/audio.c: Fixed a bug in the initialization phase of the sound
	subsystem that caused the sound init to fail when the user
	specified another sound rate than 22050 in the configuration file
	(thanks to wwp for the patch).

2004-08-11 16:41  Matthias Arndt

	* doc/manual.html: sorted Appendix C into 3 sections: games, demos
	and applications, some cleanup

2004-08-03 23:18  Thomas Huth

	* src/rs232.c: BeOS seems to lack cfmakeraw(), so we use our own
	cfmakeraw() now there, too

2004-07-26 23:32  Thomas Huth

	* doc/release-notes.txt: Adjusted release date.

2004-07-26 23:32  Thomas Huth

	* src/rs232.c: Added correct type cast for system where speed_t is
	a typedef to unsigned int.

2004-07-26 : *** Version 0.50 ***

2004-07-26 14:12  Thomas Huth

	* src/rs232.c: Fixed a little typing error.

2004-07-26 13:39  Thomas Huth

	* src/rs232.c: Added a cfmakeraw() function for Solaris.

2004-07-25 15:50  Thomas Huth

	* doc/authors.txt, src/intercept.c, src/rs232.c, src/xbios.c,
	src/includes/rs232.h: RS232 baud rate is now set up directly from
	the ST hardware registers, so there is no more need to patch the
	XBIOS to read the values from Rsconf().

2004-07-23 10:41  Thomas Huth

	* src/: file.c, includes/file.h: Enabled scandir() and alphasort()
	for Solaris so that Hatari now also compiles on this OS.

2004-07-20 16:46  Thomas Huth

	* doc/: hatari.1, manual.html, release-notes.txt: Updated the
	documentation files.

2004-07-16 22:06  Thomas Huth

	* src/gui-sdl/: font10x16.bmp, font10x16.h: Added missing "="
	character.

2004-07-15 22:33  Thomas Huth

	* src/rs232.c: Added semaphore to sync free space in input buffer.

2004-07-13 19:29  Thomas Huth

	* src/unzip.c: zlib.h is now included in a correct way.

2004-07-13 18:38  Thomas Huth

	* readme.txt, src/includes/main.h: Increased version number to 0.50

2004-07-13 18:33  Thomas Huth

	* src/screen.c: Disabled double buffering because the GUI is not
	yet ready for it.

2004-07-08 10:52  Matthias Arndt

	* doc/manual.html: fixed some manual glitches

2004-07-08 10:50  Matthias Arndt

	* doc/manual.html: documented serial support in the manual

2004-07-06 22:14  Thomas Huth

	* src/: rs232.c, xbios.c, includes/rs232.h: Fixed RS232 emulation
	and added termios code for setting the device parameters.

2004-07-05 22:06  Thomas Huth

	* src/: configuration.c, dialog.c, main.c, rs232.c,
	gui-sdl/dlgDevice.c, includes/configuration.h, includes/rs232.h:
	The RS232 settings can now be configured in the GUI.

2004-07-05 19:23  Thomas Huth

	* doc/authors.txt: Added new contributors.

2004-07-05 18:53  Thomas Huth

	* src/cfgopts.c: Improved the configuration saving function: New
	configuration options / options that are not yet listed in the
	config file are now correctly saved, too

2004-07-05 17:38  Thomas Huth

	* src/gui-sdl/dlgDisc.c: Added buttons to eject the floppies and
	the hard disc image.

2004-07-01 22:56  Thomas Huth

	* src/: fdc.c, main.c, includes/configuration.h: Added option
	--slowfdc to slow down the FDC emulation for certain games/demos.

2004-07-01 22:54  Thomas Huth

	* src/floppy.c: Added a check if the track that should be
	read/written is still on the disk image, so that Hatari does not
	crash anymore with misbehaving ST programs.

2004-06-24 21:29  Thomas Huth

	* src/floppy.c: Cleaned up Floppy_FindDiscDetails() so that it
	should now also work on CPUs that do not support unaligned memory
	access.

2004-06-24 16:52  Thomas Huth

	* src/: main.c, includes/audio.h, audio.c, dialog.c, shortcut.c:
	Enabling/disabling the sound should now work as expected.

2004-06-18 20:07  Thomas Huth

	* src/gui-sdl/sdlgui.c: Saving the background graphics before
	displaying a dialog now also works with 8 BPP screen surfaces.

2004-06-17 15:00  Matthias Arndt

	* doc/manual.html: Manual: fixed some typing bugs, added URL,
	general cleanup

2004-06-15 23:49  Thomas Huth

	* src/dim.c: Added support for writing DIM images (but it is still
	disabled by default).

2004-06-11 14:48  Thomas Huth

	* src/gui-sdl/: dlgDevice.c, dlgKeyboard.c, dlgMain.c, dlgMemory.c,
	dlgScreen.c, dlgTosGem.c, sdlgui.c: SDLGui_DoDialog() now saves and
	restores the background graphics, so calling Screen_SetFullUpdate()
	and Screen_Draw() in the dialogs is no longer necessary. This fixes
	an ugly redrawing bug that appeared when loading memory snap shots
	from a different screen resolution.

2004-06-11 12:04  Thomas Huth

	* src/: dialog.c, m68000.c, main.c, mfp.c, shortcut.c, video.c,
	includes/m68000.h, uae-cpu/Makefile, uae-cpu/events.h,
	uae-cpu/newcpu.c, uae-cpu/newcpu.h: Some speed optimization: Now
	using regs.spcflags in a better way (for MFP interrupts and for
	quitting the emulator).

2004-05-25 13:36  Matthias Arndt

	* doc/manual.html: slight corrections to the manual including
	project credits

2004-05-05 11:23  Thomas Huth

	* Makefile.cnf, Makefile.cnf.in, configure.ac, src/Makefile,
	src/uae-cpu/Makefile: Added some more configuration variables to
	the build files to improve the compilation process (especially
	cross compilation).

2004-05-03 17:34  Thomas Huth

	* src/zip.c: Changed a variable from signed to unsigned type
	(Thanks to Eero for the patch).

2004-04-30 21:23  Thomas Huth

	* src/createBlankImage.c: Added #include dim.h

2004-04-28 11:04  Thomas Huth

	* src/: Makefile, createBlankImage.c, dim.c, file.c, floppy.c,
	main.c, msa.c, st.c, zip.c, gui-sdl/dlgFileSelect.c,
	includes/dim.h, includes/file.h, includes/floppy.h,
	includes/main.h, includes/msa.h, includes/st.h, includes/zip.h: 1)
	Hatari now supports reading of .DIM disk images.  2) Buffers for
	the disk images are now allocated dynamically, it is now save	 to
	use disk images with a size greater than 1.5MB.  3) Reading and
	writing of GZipped files is now supported in the basic	  functions
	in file.c ==> The emulator can now save to GZipped MSA disk images,
	   too.

2004-04-24 13:25  Thomas Huth

	* doc/hatari.1: Added man-page for Hatari written by Marco Herrn
	(Thanks!).

2004-04-24 09:55  Thomas Huth

	* src/uae-cpu/maccess.h: Fixed a stupid typo.

2004-04-24 09:53  Thomas Huth

	* src/uae-cpu/Makefile: Fixed a cross-compiling problem: HOSTCC
	must not use the cross compilers CFLAGS!

2004-04-23 17:33  Thomas Huth

	* src/: bios.c, cart.c, debugui.c, fdc.c, gemdos.c, hdc.c, ikbd.c,
	int.c, intercept.c, m68000.c, main.c, mfp.c, reset.c, rs232.c,
	rtc.c, sound.c, spec512.c, stMemory.c, tos.c, vdi.c, video.c,
	xbios.c, includes/decode.h, includes/intercept.h,
	includes/m68000.h, includes/main.h, includes/stMemory.h,
	uae-cpu/events.h, uae-cpu/memory.c, uae-cpu/newcpu.c: Removed
	obsolete header file decode.h (Thanks to Eero for the patch). Fixed
	a bug with double bus errors that caused a crash of the emulator.

2004-04-22 10:40  Thomas Huth

	* src/uae-cpu/maccess.h: Moved byte access functions to the end of
	the file because they are the same in all cases. (Thanks to Eero
	for the patch)

2004-04-20 18:53  Thomas Huth

	* src/uae-cpu/: maccess-non-aligned.h, maccess-big.h,
	maccess-i86.h, maccess.h, memory.h: Cleaned up the memory access
	functions.

2004-04-20 15:58  Thomas Huth

	* Makefile.cnf, configure.ac: Adjusted CFLAGS.

2004-04-19 10:53  Thomas Huth

	* Makefile.cnf, src/audio.c, src/bios.c, src/blitter.c,
	src/cfgopts.c, src/configuration.c, src/createBlankImage.c,
	src/debug.c, src/debugui.c, src/dialog.c, src/errlog.c, src/fdc.c,
	src/file.c, src/floppy.c, src/gemdos.c, src/hdc.c, src/ikbd.c,
	src/int.c, src/intercept.c, src/joy.c, src/keymap.c, src/main.c,
	src/memorySnapShot.c, src/mfp.c, src/midi.c, src/misc.c, src/msa.c,
	src/printer.c, src/reset.c, src/rtc.c, src/screen.c,
	src/screenConvert.c, src/screenSnapShot.c, src/shortcut.c,
	src/sound.c, src/st.c, src/stMemory.c, src/tos.c, src/unzip.c,
	src/vdi.c, src/video.c, src/wavFormat.c, src/xbios.c, src/zip.c,
	src/gui-sdl/dlgAbout.c, src/gui-sdl/dlgDisc.c,
	src/gui-sdl/dlgJoystick.c, src/gui-sdl/dlgMain.c,
	src/gui-sdl/dlgScreen.c, src/gui-sdl/sdlgui.c,
	src/includes/cfgopts.h, src/includes/createBlankImage.h,
	src/includes/debugui.h, src/includes/fdc.h, src/includes/file.h,
	src/includes/gemdos.h, src/includes/hdc.h,
	src/includes/screenConvert.h, src/includes/screenSnapShot.h,
	src/includes/sdlgui.h, src/includes/sound.h,
	src/includes/stMemory.h, src/uae-cpu/Makefile,
	src/uae-cpu/build68k.c, src/uae-cpu/fpp.c, src/uae-cpu/gencpu.c,
	src/uae-cpu/hatari-glue.c, src/uae-cpu/maccess-non-aligned.h,
	src/uae-cpu/maccess.h, src/uae-cpu/newcpu.c, src/uae-cpu/readcpu.c:
	General source code improvements: Declared a lot of functions and
	variables as static that are only used in one file.  Functions
	without parameters now use correct ANSI prototypes.  Added
	accelerated memory access functions for systems that can do
	non-aligned memory access.  (Thanks to Eero Tamminen for the huge
	patch!)

2004-04-15 00:36  Thomas Huth

	* src/: gemdos.c, intercept.c, main.c, msa.c, stMemory.c, tos.c,
	video.c, includes/decode.h, includes/main.h, includes/stMemory.h,
	uae-cpu/maccess-big.h, uae-cpu/maccess-i86.h, uae-cpu/maccess.h,
	uae-cpu/memory.c, uae-cpu/memory.h: Made a lot of functions static
	(Thanks to Eero Tamminen for the patch).  The memory access
	functions from stMemory.c have been made "static inline" for better
	performance.  The STMemory_Swap68000* functions have been replaced
	by the SDL_SwapBE* functions.  Removed some old code from the
	maccess*.h files.

2004-04-07 12:24  Thomas Huth

	* src/: screen.c, includes/screen.h: Fixed SDL screen flipping in
	full screen mode (e.g. for Mac OS X). And the mouse pointer is now
	initially warped to the middle of the screen.

2004-04-06 18:20  Thomas Huth

	* src/: configuration.c, main.c, includes/configuration.h: Added a
	command line option to load an alternative configuration file.

2004-04-06 18:16  Thomas Huth

	* src/createBlankImage.c: Fixed disc creation function so that it
	now creates MS-DOS compatible disc images.

2004-04-06 12:38  Thomas Huth

	* src/gui-sdl/dlgFileSelect.c: Cleaned up the file selector code
	and enlarged the dialog window.

2004-04-05 20:52  Thomas Huth

	* Makefile: Replaced the old 8x8 font by two new fonts (5x8 and
	10x16). The fonts are now also compiled into the executable (thanks
	to Martin Doering and the Aranym developers for that code).

2004-04-05 20:49  Thomas Huth

	* src/: font8.bmp, gui-sdl/Makefile, gui-sdl/dlgAbout.c,
	gui-sdl/font10x16.bmp, gui-sdl/font10x16.h, gui-sdl/font5x8.bmp,
	gui-sdl/font5x8.h, gui-sdl/sdlgui.c, includes/sdlgui.h: Replaced
	the old 8x8 font by two new fonts (5x8 and 10x16). The fonts are
	now also compiled into the executable (thanks to Martin Doering and
	the Aranym developers for that code).

2004-04-02 21:57  Thomas Huth

	* src/fdc.c: Increased the motor slowing down count so that TOXIS
	(the virus killer program) is now working with Hatari, too.

2004-03-26 10:45  Matthias Arndt

	* doc/manual.html: added documentation of the Timer-D patch to the
	manual

2004-03-25 11:32  Matthias Arndt

	* doc/manual.html: updated the manual to include documentation for
	the disk image creation

2004-03-01 14:57  Thomas Huth

	* src/: configuration.c, intercept.c, mfp.c, gui-sdl/dlgSystem.c,
	includes/configuration.h, includes/main.h, includes/mfp.h,
	uae-cpu/hatari-glue.c: Improved Timer-D handling: - Timer-D is now
	patched correctly (Dragons Breath is working again).  - The Timer-D
	patch can now be switched on or off in the GUI.  - Removed the
	unused code of the old Timer-D patch (Hatari version <= 0.30).

2004-02-29 20:01  Thomas Huth

	* src/uae-cpu/newcpu.c: Added some code to detect double bus
	errors.

2004-02-22 10:35  Thomas Huth

	* src/: ikbd.c, mfp.c, midi.c, includes/mfp.h: Fixed a little bug
	in mfp.c and renamed MFP_KEYBOARD_BIT to MFP_ACIA_BIT etc.

2004-02-21 20:51  Thomas Huth

	* src/: intercept.c, mfp.c, rs232.c, includes/mfp.h,
	includes/rs232.h: Improved RS232 emulation: Now the MFP hardware
	registers are intercepted to receive and to send the bytes of the
	serial line.

2004-02-21 14:24  Thomas Huth

	* src/keymap.c: Added some more shorcut key modifiers (Thanks to
	Tony Smolar for the hint about KMOD_RALT on US-keyboards).

2004-02-21 11:01  Thomas Huth

	* src/rs232.c: Improved RS232 emulation: Now using two file
	handles, one for input and one for output data transfer.

2004-02-19 16:22  Thomas Huth

	* src/: intercept.c, m68000.c, includes/m68000.h, uae-cpu/memory.c,
	uae-cpu/newcpu.c: Improved emulation of the special status word in
	the exception stack frames of bus and address errors and fixed a
	bug that caused an bus error when executing an illegal instruction
	in user mode.

2004-02-12 16:56  Thomas Huth

	* src/: main.c, printer.c: Added some security checks to avoid
	possible buffer overflows (Thanks to Steve Kemp for finding the
	problematical code lines).

2004-02-11 12:08  Thomas Huth

	* src/: sound.c, includes/sound.h: Declared some functions and
	variables as static for better compiler optimizations (Thanks to
	Eero Tamminen for his patch).

2004-02-10 12:49  Thomas Huth

	* src/: audio.c, sound.c, includes/audio.h: Speed improvement:
	Audio functions do not use float calculations any more (Thanks to
	Eero Tamminen for his patch).

2004-02-10 12:45  Thomas Huth

	* configure.ac: Added some more checks to configure.ac (Thanks to
	Patrice Mandin for his patch).

2004-02-05 16:06  Thomas Huth

	* src/: bios.c, fdc.c, floppy.c, includes/floppy.h: Replaced
	bFloppyChanged by EmulationDrives.bMediaChanged

2004-01-13 12:07  Thomas Huth

	* src/: zip.c, gui-sdl/dlgFileSelect.c, includes/zip.h: Fixed some
	small memory leaks.

2004-01-12 13:21  Thomas Huth

	* src/: main.c, rs232.c, includes/rs232.h: The RS232 code has been
	rewritten to use portable functions (SDL threads and file functions
	from stdio.h).

2003-12-29 21:10  Thomas Huth

	* src/: Makefile, gui-sdl/Makefile, gui-sdl/dlgDisc.c,
	gui-sdl/dlgNewDisc.c: Added a dialog for creating new (blank)
	floppy disc images.

2003-12-28 23:32  Thomas Huth

	* src/: intercept.c, m68000.c, includes/m68000.h, uae-cpu/newcpu.c,
	uae-cpu/newcpu.h: Added experimental wait state cycles emulation.

2003-12-25 19:45  Thomas Huth

	* src/: file.c, gui-sdl/dlgTosGem.c, includes/file.h: Added a
	function called File_MakeAbsoluteName to create absolute file names
	from relative file names (thanks to Martin Doering for the idea).

2003-12-25 15:19  Thomas Huth

	* src/: configuration.c, createBlankImage.c, errlog.c, file.c,
	floppy.c, main.c, memorySnapShot.c, screenSnapShot.c, vdi.c,
	gui-sdl/dlgDevice.c, gui-sdl/dlgDisc.c, gui-sdl/dlgFileSelect.c,
	gui-sdl/dlgKeyboard.c, gui-sdl/dlgMemory.c, gui-sdl/dlgSound.c,
	gui-sdl/dlgTosGem.c, includes/configuration.h, includes/floppy.h,
	includes/main.h: Replaced MAX_FILENAME_LENGTH by FILENAME_MAX
	(thanks to Martin Doering for the hint)

2003-11-05 19:20  Thomas Huth

	* src/main.c: Added the --frameskip option again (it had been
	removed by accident).

2003-10-30 18:36  Thomas Huth

	* Makefile: "make install" now also installs a tos.img if possible.

2003-10-30 : *** Version 0.45 ***

2003-10-30 17:03  Thomas Huth

	* doc/release-notes.txt: Added changes for version 0.45

2003-10-29 18:14  Matthias Arndt

	* doc/manual.html: manual: documentation for build system updated

2003-10-28 17:44  Matthias Arndt

	* doc/manual.html: * updated the manual

2003-10-25 14:26  Thomas Huth

	* src/: blitter.c, m68000.c, memorySnapShot.c, gui-sdl/dlgMemory.c,
	  includes/blitter.h, includes/main.h, uae-cpu/newcpu.c,
	  uae-cpu/newcpu.h: Improved the memory snap shot function.

2003-10-25 14:19  Thomas Huth

	* readme.txt: Removed some text that describes how to use the
	  emulator since this is now located in the manual.html

2003-10-23 17:27  Thomas Huth

	* doc/manual.html: Added new keyboard shortcuts.

2003-10-23 16:30  Matthias Arndt

	* src/printer.c: * cleaned up main comment block in printer.c

2003-10-18 09:46  Thomas Huth

	* src/: configuration.c, shortcut.c, sound.c, video.c, ymFormat.c,
	  includes/shortcut.h: Added more shortcuts and removed old code
	  from shortcut.c

2003-10-18 09:41  Thomas Huth

	* src/: createBlankImage.c, includes/createBlankImage.h: Started to
	  clean up the "Create Blank Disc image" function.

2003-10-18 09:38  Thomas Huth

	* src/printer.c: Removed a fixed FIXME comment about printer file
	  name.

2003-10-18 09:36  Thomas Huth

	* src/includes/main.h: Removed unused defines.

2003-10-18 09:31  Thomas Huth

	* src/debugui.c: The SR can now be set in the debugger.

2003-10-17 11:48  Matthias Arndt

	* src/psg.c: * corrected a few ugly typing bugs * better
	  readability of the remarks for the printer dispatcher

2003-10-11 22:59  Thomas Huth

	* ChangeLog: Removed old ChangeLog - use a tool like cvs2cl to
	  create an up-to-date ChangeLog file!

2003-10-11 22:14  Thomas Huth

	* src/floppy.c: Added a check for valid disc side -
	  Floppy_ReadSectors now reports an error when a program tries to
	  read from side 2 of a single sided disc.

2003-10-10 18:41  Thomas Huth

	* src/uae-cpu/: events.h, newcpu.c, newcpu.h: Removed two unused
	  variables (broken_in and lastInstructionCycles).

2003-10-09 21:48  Thomas Huth

	* authors.txt, doc/authors.txt: Updated authors.txt and moved the
	  file to the doc/ subdirectory

2003-10-07 22:57  Thomas Huth

	* src/: intercept.c, video.c, includes/syncTables.h,
	  includes/video.h: Border opening is not done with the
	  syncTables.h anymore, but with a more generic code so that some
	  demos now also correctly show graphics in the right and left
	  border

2003-10-07 12:47  Matthias Arndt

	* doc/manual.html: * completed features list in the manual * added
	  documentation of the printer emulation to the manual * added
	  documentation of the memory snapshots to the manual

2003-09-28 21:57  Thomas Huth

	* src/: dialog.c, m68000.c, memorySnapShot.c, video.c,
	  gui-sdl/dlgMemory.c, includes/m68000.h,
	  includes/memorySnapShot.h: Re-activated the memory snap shot
	  functions.

2003-09-28 21:50  Thomas Huth

	* src/: configuration.c, includes/configuration.h: Midi, Printer
	  and RS232 are now saved to the configuration file, too.

2003-09-27 21:28  Thomas Huth

	* src/: Makefile, createDiscImage.c, main.c, misc.c,
	  includes/createDiscImage.h, includes/main.h, includes/misc.h:
	  Cleaned up files: Removed unused functions and variables.

2003-09-26 20:08  Thomas Huth

	* src/: bios.c, xbios.c, uae-cpu/newcpu.c: Updated BIOS and XBIOS
	  interception code.

2003-09-02 23:56  Thomas Huth

	* src/: main.c, uae-cpu/hatari-glue.c: Hatari now correctly
	  de-initialized the UAE CPU core.

2003-09-02 23:54  Thomas Huth

	* src/: gui-sdl/dlgDisc.c, zip.c: Fixed a problem that sometimes
	  caused a crash when browsing ZIPed disk images.

2003-08-15 18:09  Thomas Huth

	* src/: intercept.c, main.c, midi.c, includes/configuration.h,
	  includes/midi.h: Added initial midi emulation.

2003-08-12 16:44  Thomas Huth

	* src/: printer.c, gui-sdl/dlgDevice.c: The file name for printer
	  emulation can now be selected with the GUI.

2003-08-11 21:37  Thomas Huth

	* src/: configuration.c, ymFormat.c, gui-sdl/dlgDisc.c,
	  gui-sdl/dlgFileSelect.c, gui-sdl/dlgKeyboard.c,
	  gui-sdl/dlgSound.c, gui-sdl/dlgTosGem.c, gui-sdl/sdlgui.c,
	  includes/sdlgui.h: Added editable text fields to the SDL-GUI. It
	  is now also possible to select a destination file name for the
	  sound grabbing in the sound setup dialog

2003-08-10 19:08  Matthias Arndt

	* src/printer.c: corrected stupid string bug in printer.c, $HOME no
	  longer gets overwritten

2003-08-10 16:44  Thomas Huth

	* src/gui-sdl/.cvsignore: Added cvsignore file in the gui-sdl/
	  directory

2003-08-10 10:09  Matthias Arndt

	* doc/manual.html, src/gemdos.c, src/main.c, src/printer.c,
	  src/psg.c:
	  * fixed bit bug in psg.c - STROBE bit detection used wrong bit *
	  reenabled printer handling in gemdos.c * added commandline option
	  --printer to activate (experimental) printer	 support * added
	  Hatari User's Manual to doc/

2003-08-09 17:54  Matthias Arndt

	* src/: printer.c, psg.c:
	  - rewrote printer interception in psg.c  (to solve the problem
	  "music playing results in printing characters") - simple
	  emulation of STROBE signal for printing

2003-08-09 16:00  Matthias Arndt

	* Makefile.cnf, src/printer.c: [no log message]

2003-08-09 15:58  Matthias Arndt

	* Makefile.cnf, src/keymap.c, src/mfp.c, src/printer.c, src/psg.c,
	  src/includes/printer.h:
	  - added simple printer support (printing to file) - added printer
	  hook to psg.c - added flag correction to mfp.c

	  Todo: Configuration for printing support (filename, enabled)

2003-08-06 18:17  Thomas Huth

	* src/msa.c: Fixed a bug in the MSA compression function that could
	  create corrupted MSA disk images in some rare cases.

2003-08-05 18:39  Thomas Huth

	* src/uae-cpu/build68k.c: Now including string.h - this fixes a
	  compiler warning with GCC 3.0

2003-08-05 18:37  Thomas Huth

	* src/includes/sdlgui.h: Moved some define from sdlgui.c to
	  sdlgui.h

2003-08-05 18:36  Thomas Huth

	* src/includes/screen.h: Added prototype for
	  Screen_DidResolutionChange()

2003-08-05 18:34  Thomas Huth

	* src/uae-cpu/cpuopti.c: Removed unused file cpuopti.c

2003-08-05 18:33  Thomas Huth

	* src/: dialog.c, sdlgui.c, gui-sdl/dlgFileSelect.c,
	  gui-sdl/sdlgui.c: Moved sdlgui.c to the src/gui-sdl/ folder and
	  created a new file for the file selection dialog.

2003-08-05 18:29  Thomas Huth

	* .cvsignore, Makefile, Makefile.cnf, Makefile.cnf.in,
	  configure.ac, src/gui-sdl/Makefile, src/Makefile,
	  src/uae-cpu/Makefile: Added new build system: Now there is a top
	  level makefile configuration file and a configure.ac to create a
	  configure script.

2003-08-04 21:37  Thomas Huth

	* src/gui-sdl/: dlgAbout.c, dlgDevice.c, dlgDisc.c, dlgJoystick.c,
	  dlgKeyboard.c, dlgMain.c, dlgMemory.c, dlgScreen.c, dlgSound.c,
	  dlgSystem.c, dlgTosGem.c: Separated the SDL GUI dialogs from
	  dialog.c and put each dialog in a new file.

2003-08-02 17:45  Thomas Huth

	* src/uae-cpu/: maccess-big.h, maccess.h: Added accelerated memory
	  access functions.

2003-07-30 00:25  Thomas Huth

	* ChangeLog: Fixed some typos

2003-07-29 14:01  Thomas Huth

	* src/: int.c, m68000.c, mfp.c, video.c, includes/int.h,
	  includes/m68000.h, uae-cpu/hatari-glue.c, uae-cpu/hatari-glue.h,
	  uae-cpu/newcpu.c: Changed M68000_Exception(), intlev() and
	  do_specialties() and some other interrupt related parts: Pending
	  interrupts are now handled in the UAE CPU core.

2003-07-28 18:42  Thomas Huth

	* src/uae-cpu/maccess-i86.h: Revived old accelerated maccess.h for
	  i86 computers.

2003-07-21 00:52  Thomas Huth

	* src/gemdos.c: emudrives[0]->fs_currpath is now correctly
	  initialized - this fixes a problem with HD emulation on EmuTOS.

2003-07-11 17:48  Thomas Huth

	* doc/release-notes.txt: Added release notes file

2003-07-11 : *** Version 0.40 ***

2003-07-04 14:40  Thomas Huth

	* src/uae-cpu/newcpu.c: Disabled MFP interrupt cycles again since
	they currently seem to make some things running worse.

2003-07-04 14:38  Thomas Huth

	* src/configuration.c: bFrameSkip is now saved to the configuration
	file, too.

2003-06-28 16:42  Thomas Huth

	* doc/keymap-sample.txt: Added keymap sample file.

2003-06-28 16:36  Thomas Huth

	* readme.txt: Added comment about how to use incompatible MSA disk
	images.

2003-06-28 16:32  Thomas Huth

	* src/video.c: Main_EventHandler is now called every 64th hbl event
	so that the mouse moves smoother in VDI resolutions again.

2003-06-28 16:29  Thomas Huth

	* src/keymap.c: Fixed a little bug: Switching back to symbolic
	keymapping mode from loaded keymapping mode did not work right.

2003-06-23 20:49  Thomas Huth

	* src/: fdc.c, floppy.c, includes/floppy.h: When the user changes a
	floppy disk image, the write-protection signal of the FDC is now
	raised for a short time since some programs use this behaviour to
	check for changed disks.

2003-06-22 22:20  Thomas Huth

	* src/main.c: Now booting from harddrive when using the -d
	parameter (Thanks to Sven for the patch)

2003-06-20 15:13  Thomas Huth

	* src/: cartimg.c, reset.c, includes/main.h, uae-cpu/hatari-glue.c,
	uae-cpu/hatari-glue.h, uae-cpu/newcpu.c: Now using a separate
	illegal opcode for system initialization (setting the connected
	drive mask etc.), so that warm resets are working right again.
	(Thanks to Matthias Arndt for the hint)

2003-06-17 21:37  Thomas Huth

	* src/gemdos.c: Fixed a problem with Fsfirst and Fsnext so that HD
	emulation is now working with EmuTOS, too.

2003-06-17 20:03  Thomas Huth

	* src/: screen.c, uae-cpu/newcpu.c: Fixed two bugs that appeared in
	the extended VDI resolution emulation

2003-06-15 21:15  Thomas Huth

	* src/includes/main.h: Updated version number to 0.40

2003-06-15 21:14  Thomas Huth

	* src/dialog.c: Cosmetic changes to the screen setup dialog.

2003-06-12 22:41  Thomas Huth

	* src/: sdlgui.c, zip.c: It is now also possible to select a ZIP
	file in the file selector without choosing a disk image in the ZIP
	package (the first ST or MSA file will be used then)

2003-06-10 18:45  Thomas Huth

	* src/vdi.c: GemDOS_CreateHardDriveFileName() needs backslash as
	path seperator instead of a normal slash while creating the
	filename for /DESKTOP.INF or /NEWDESK.INF

2003-06-09 20:20  Thomas Huth

	* readme.txt: Updated readme.txt to suit the current version of
	Hatari (-> version 0.40)

2003-06-09 18:11  Thomas Huth

	* src/screen.c: 8 bpp mode is now working in windowed mode, too

2003-06-08 19:12  Thomas Huth

	* src/: intercept.c, rtc.c, includes/intercept.h, includes/rtc.h:
	Real time clock now also works with TOS 1.02 and 1.04

2003-06-08 15:54  Thomas Huth

	* src/main.c: The order of --hdimage and --harddrive does not
	matter anymore and there is now also a command line parameter to
	specify the emulated RAM size.

2003-06-08 15:49  Thomas Huth

	* src/: configuration.c, gemdos.c, hdc.c, includes/configuration.h:
	Hard disc image and directory can now be saved in the configuration
	file, too

2003-06-07 19:36  Thomas Huth

	* authors.txt: Added contributors to the file authors.txt

2003-06-07 15:43  Thomas Huth

	* src/floppy.c: Floppy_ReadSectors() now correctly returns FALSE if
	something went wrong

2003-06-02 18:20  Thomas Huth

	* src/uae-cpu/newcpu.c: Mode-change specialflag won't be cleared
	during reset anymore so that you can now change the compatibility
	cpu mode and reset the cpu at the same time

2003-06-02 18:18  Thomas Huth

	* src/keymap.c: Added more symbolic key mapping values (e.g. the
	pipe character key)

2003-06-02 18:17  Thomas Huth

	* src/gemdos.c: Pexec(6) is only available on TOS >= 1.04

2003-06-01 22:04  Thomas Huth

	* src/: dialog.c, keymap.c: Enabled the possibility to load an
	alternative keyboard mapping from a file.

2003-06-01 18:23  Thomas Huth

	* src/uae-cpu/newcpu.c: Corrected MFP interrupt cycle timing.

2003-05-25 00:12  Thomas Huth

	* src/ikbd.c: In Lotus Turbo Esprit Challange and some other games,
	the second joystick was not working so that two player mode was not
	usable. This has been fixed now.

2003-05-05 19:53  Thomas Huth

	* src/sdlgui.c: ypos wasn't reset when entering a ZIP directory for
	browsing.

2003-04-29 18:17  Thomas Huth

	* src/: dialog.c, configuration.c, main.c: Added buttons to load
	and save the configuration file. It is now no longer saved
	automatically when you quit Hatari. The configuration file is now
	also stored in the users home directory when the HOME environment
	variable has been set.

2003-04-29 18:12  Thomas Huth

	* src/includes/main.h: Corrected comment about scan lines per VBL
	in 60Hz

2003-04-28 19:48  Thomas Huth

	* src/: configuration.c, dialog.c, m68000.c, mfp.c,
	includes/main.h, includes/mfp.h: Removed the high-speed-CPU code.
	It wasn't working very well and I currently don't have the time and
	motivation to fix it.  Support for CPU emulation with more than
	8MHz will probably be included again later.

2003-04-25 23:11  Thomas Huth

	* src/dialog.c: The memory for zip_path was sometimes freed twice
	what caused Hatari to crash or hang.

2003-04-16 14:49  Thomas Huth

	* src/video.c: Disabled setting of the screen refresh rate again
	since it was currently breaking the sound in monochrome mode

2003-04-12 18:31  Thomas Huth

	* src/: dialog.c, sdlgui.c, includes/sdlgui.h: Moved call to
	SDLGui_PrepareFont() back to dialog.c, where it belongs to. Also
	removed unused debugging function SDLGui_OverlayText().

2003-04-12 18:28  Thomas Huth

	* src/: audio.c, sound.c, includes/sound.h: Slightly improved the
	sound callback function. It now tries to correctly fill up the
	sound buffer when not enough samples have been created

2003-04-12 18:26  Thomas Huth

	* src/: main.c, video.c, includes/video.h: Now using SDL_GetTicks
	instead of a SDL timer to sync the emulator with the VBL since SDL
	timers are not working right on some systems (MiNT).

2003-04-12 18:23  Thomas Huth

	* src/m68000.c: CYCLES_PER_SEC are now set correctly to 8MHz timing
	again.

2003-04-12 13:29  Thomas Huth

	* src/zip.c: Fixed a little bug: ZIPped .ST disk images were not
	loadable from the command line. Thanks to Markus Oberhumer for the
	patch.

2003-04-08 13:38  Emmanuel Anne

	* src/: configuration.c, dialog.c, m68000.c, mfp.c,
	includes/main.h, includes/mfp.h:
	add a setting to choose the cpu speed (in the gui, and nMinMax in
	the configuration file).

2003-04-08 13:37  Emmanuel Anne

	* src/: main.c, sdlgui.c, includes/sdlgui.h:
	add SDLGui_OverlayText to be able to display some text on overlay
	over the current screen, and call sdlgui_init at the end of
	main_init to prepare the font here (usefull for the overlay)

2003-04-07 13:34  Thomas Huth

	* src/cfgopts.c: Improved the configuration file loading/saving:
	Included the function trim() to allow white spaces in the cfg file
	(taken from Aranym - cheers); the temporary file name is now
	created properly with tmpfile(); changed the C++ comments to plain
	ANSI-C comments.

2003-04-06 20:52  Thomas Huth

	* src/: .cvsignore, Makefile: Added 'make depend' target to the
	Makefile

2003-04-06 15:05  Emmanuel Anne

	* src/: cart_asm.s, cartimg.c:
	patch from Paul Bates (winston author) which fixes the bus error
	problem in the gfabasic when run from a gemdos hd drive.

2003-04-06 00:25  Thomas Huth

	* src/: m68000.c, memorySnapShot.c, misc.c, video.c,
	includes/decode.h, includes/m68000.h, uae-cpu/memory.c,
	uae-cpu/newcpu.c: Improved bus errors (M68000_BusError) and added
	exception cycles

2003-04-04 18:28  Thomas Huth

	* src/: Makefile, audio.c, cfgopts.c, configuration.c,
	createBlankImage.c, dialog.c, fdc.c, file.c, floppy.c, gemdos.c,
	hdc.c, keymap.c, main.c, screen.c, video.c, includes/cfgopts.h,
	includes/configuration.h, includes/dialog.h: Added ASCII
	configuration file and moved configuration structs from dialog.h to
	configuration.h (where they belong to).

2003-04-04 14:48  Emmanuel Anne

	* src/: m68000.c, uae-cpu/newcpu.c, uae-cpu/memory.c:
	new bus error handling : the exception must be called AFTER the
	memory handler so that the rte returns to the instruction AFTER the
	cause of the bus error (or debugers might enter infinite loops).

2003-04-03 23:16  Thomas Huth

	* src/uae-cpu/: hatari-glue.c, memory.c: Setting the connected
	drive mask is now done in Opcode_GemDos()

2003-04-03 23:14  Thomas Huth

	* src/uae-cpu/: newcpu.c, newcpu.h: Now using special flag
	SPCFLAG_BUSERROR for correction PC after bus error. This should
	speed up the emulation a little bit

2003-04-03 23:13  Emmanuel Anne

	* src/fdc.c:
	this test works better to filter hdc, sorry.

2003-04-03 22:06  Emmanuel Anne

	* src/fdc.c:
	make the hdc fix more specific (it helped the hdc images from
	working !)

2003-04-03 22:05  Emmanuel Anne

	* src/keymap.c:
	try a reasonable default offset instead of -1 when the offset is
	unknown. It helps a lot with my french keyboard when the 1st key I
	press is 1 or 2 (both unknown !).

2003-04-03 22:04  Emmanuel Anne

	* src/ikbd.c:
	fix bad passing of command keyboards. This fixes bad keys when
	sr=$600 in adebug, so it might fix a few other things too...

2003-04-03 19:10  Emmanuel Anne

	* src/fdc.c:
	fix the crash when booting with a floppy and a gemdos directory

2003-04-02 22:54  Emmanuel Anne

	* src/gemdos.c:
	fix the bus error problem in gfa : it was because of a forgoten ";"
	! Also change ifdefs to make debuging easier (FILE_DEBUG and
	GEMDOS_VERBOSE)

2003-04-02 22:53  Emmanuel Anne

	* src/: intercept.c, tos.c, uae-cpu/hatari-glue.c,
	uae-cpu/hatari-glue.h, uae-cpu/memory.c, uae-cpu/newcpu.c:
	timer d and connected drives patches are not applied anymore to the
	tos. Instead the relevant memory addresses are intercepted. It
	should be as fast as before and it allows to boot ram tos and to be
	able to mount hd directories on them. Also it fixes the timer d
	problem on foreign toses (swedish...)

2003-04-01 23:02  Thomas Huth

	* src/tos.c: Now RAM TOS 1.00 can be loaded, too

2003-04-01 22:59  Thomas Huth

	* src/uae-cpu/memory.c: ROMmem_start --> f_RomMemStart

2003-04-01 18:11  Thomas Huth

	* src/: intercept.c, m68000.c, main.c, tos.c, uae-cpu/memory.c,
	uae-cpu/memory.h, includes/decode.h, uae-cpu/hatari-glue.c,
	uae-cpu/hatari-glue.h, includes/intercept.h: Improved memory
	mapping - The memory regions should now behave much more like on a
	real ST

2003-04-01 13:18  Emmanuel Anne

	* src/tos.c:
	allow to load "ram tos", that is tos at address $ad00 (in ram !)
	That's because I never found any french tos 1.04. most of the
	patches fail, but it allows to boot a floppy image anyway...

2003-03-31 15:34  Thomas Huth

	* src/uae-cpu/hatari-glue.c: Added SPCFLAG_MODE_CHANGE when CPU
	settings are changed

2003-03-31 15:32  Thomas Huth

	* src/zip.c: Sven's patch to use ZIP files from the command line

2003-03-31 13:05  Emmanuel Anne

	* src/uae-cpu/memory.c:
	writing to rom trigers a bus error (exception 2).  Notice : it
	might not be the Right Way to do it... but at least it allows crazy
	boy cd 24 to boot !

2003-03-31 13:04  Emmanuel Anne

	* src/uae-cpu/newcpu.h:
	prefetch buffer is aligned on word boundaries, not long word
	boundaries

2003-03-30 15:35  Thomas Huth

	* src/: Makefile, dialog.c, file.c, floppy.c, sdlgui.c, ymFormat.c,
	unzip.c, zip.c, includes/unzip.h, includes/zip.h, includes/file.h,
	includes/floppy.h, includes/sdlgui.h: Added Sven's patch for ZIPped
	and GZIPped disk images

2003-03-30 13:32  Thomas Huth

	* src/: configuration.c, dialog.c, keymap.c, main.c, screen.c,
	includes/dialog.h, includes/keymap.h: Keyboard mapping is now
	possible via both, scancode and ascii mapping

2003-03-29 14:09  Thomas Huth

	* src/: gemdos.c, misc.c, includes/misc.h: Renamed strupr to
	Misc_strupr since the old name conflicted with a library function
	when compiling for MiNT

2003-03-29 14:06  Thomas Huth

	* src/uae-cpu/Makefile: Introduced HOSTCC variable to be able to
	cross compile Hatari

2003-03-28 17:20  Thomas Huth

	* src/uae-cpu/: compiler.c, Makefile, compiler.h, gencpu.c,
	hatari-glue.c, memory.h, newcpu.c, newcpu.h, sysdeps.h: Removed
	compiler.c and compiler.h. compiler.h genereted a conflict with the
	system header compiler.h on MiNT, the necessary functions are now
	in newcpu.h.

2003-03-28 17:10  Emmanuel Anne

	* src/gemdos.c:
	fix for GemDos_GetDir (so that adebug can find its files when
	launched from the hd), and use GEMDOS_VERBOSE for debuging

2003-03-28 08:14  Emmanuel Anne

	* src/main.c:
	revert to previous version : we don't need --fd since "hatari
	<imagename>" does the job ! Sorry !

2003-03-27 16:55  Emmanuel Anne

	* src/floppy.c:
	fix bad reading of little images (too paranoid - didn't trust
	enough the bootsector !).

2003-03-27 16:54  Emmanuel Anne

	* src/main.c:
	added --fd <imagename> comand line option to insert a floppy image
	in drive a

2003-03-27 12:24  Emmanuel Anne

	* src/: screen.c, dialog.c, includes/screen.h,
	includes/screenDraw.h, includes/syncTables.h:
	lots of video changes (borders, and same options for windowed and
	fullscreen modes)

2003-03-27 12:23  Emmanuel Anne

	* src/intercept.c:
	top and bottom borders handling is now here (and much simpler than
	before)

2003-03-27 12:21  Emmanuel Anne

	* src/video.c:
	disable synctables for top and bottom borders (handled in
	intercept.c now)

2003-03-27 12:15  Emmanuel Anne

	* src/dialog.c:
	800x600 mode disappears, fullscreen and windowed modes share the
	same options

2003-03-27 12:15  Emmanuel Anne

	* src/spec512.c:
	a screen must have at least 150 lines with more than 1 palette to
	be recognized as a spc512 screen. It's because this code does not
	know how to display 1 palette/line, very bad for some demos...

2003-03-27 11:55  Emmanuel Anne

	* src/gemdos.c:
	remove a debug message, add a fix for SFirst to avoid a malloc(0)
	when there is no match

2003-03-25 22:03  Emmanuel Anne

	* src/gemdos.c: Fix 2 bugs in GemDOS_CreateHardDriveFileName : the
	form "path\filename" was not recognised, and a filename < 8 chars
	like "abc" could be chosen while looking for "ab".  These fixes now
	allow to run the Maggie disk mags directly from the disk without
	creating disk images.

2003-03-25 08:53  Emmanuel Anne

	* src/: dialog.c, screen.c, includes/screenDraw.h:
	re-enables the "use borders" option in the configuration dialog,
	and allow borders in fullscreen. Also, resize window/screen when
	borders are enabled/disabled.

2003-03-24 18:24  Emmanuel Anne

	* src/: keymap.c, main.c, includes/keymap.h:
	keyboard now uses scancodes instead of ascii codes.

2003-03-24 18:24  Emmanuel Anne

	* src/gemdos.c:
	when you double click on a file in a mounted hd directory with tos
	1.0, you don't receive the path, and the file was not converted
	properly.  Also, fix chdir when the path does not exist (correctly
	returns error code)

2003-03-24 14:30  Thomas Huth

	* src/configuration.c: Commented out saving/loading of number of
	drives - ACSI HD emulation wasn't working when this was
	saved/loaded, too

2003-03-24 12:00  Emmanuel Anne

	* src/: intercept.c, includes/intercept.h, uae-cpu/memory.c,
	uae-cpu/memory.h:
	add a hack to trick the tos to believe an ide controller is really
	present.  It makes the boot with tos 2.06 and a mounted hd
	directory much faster.

2003-03-24 11:59  Emmanuel Anne

	* src/uae-cpu/hatari-glue.c:
	fix a possible crash if check_prefs_changed_cpu is called too early
	(to restore parameters for example)

2003-03-24 11:31  Emmanuel Anne

	* src/: misc.c, ikbd.c:
	fix year in rtc (see the comments in ikbd.c).

2003-03-24 00:11  Thomas Huth

	* ChangeLog: Patches for monochrome mode, RTC, GEMDOS HD emulation
	and configuration files

2003-03-24 00:08  Thomas Huth

	* src/gemdos.c: Improved GEMDOS HD emulation

2003-03-24 00:07  Thomas Huth

	* src/: configuration.c, main.c: Re-enabled configuration file
	saving/loading

2003-03-23 22:13  Thomas Huth

	* src/: Makefile, intercept.c, rtc.c, includes/intercept.h,
	  includes/rtc.h: Added real time clock

2003-03-23 20:22  Thomas Huth

	* src/: misc.c, includes/misc.h: Fixed buggy BCD convertion
	  function

2003-03-23 20:20  Thomas Huth

	* src/: screen.c, includes/screen.h: Fixed problems with monochrome
	  resolution

2003-03-17 14:19  Thomas Huth

	* ChangeLog, src/stMemory.c, src/includes/stMemory.h: Hatari now
	  works on Sparc machines

2003-03-12 : *** Version 0.30 ***

2003-03-12 18:25  Thomas Huth

	* ChangeLog, readme.txt, src/includes/main.h, src/includes/tos.h,
	  src/uae-cpu/memory.c: Version 0.30 changes

2003-03-12 15:15  Thomas Huth

	* src/sound.c: Added Audio_Lock around critical variables

2003-03-12 15:13  Thomas Huth

	* src/audio.c: Changed samples format to unsigned again

2003-03-10 19:46  Thomas Huth

	* ChangeLog, src/audio.c, src/sound.c, src/wavFormat.c,
	  src/includes/audio.h, src/includes/sound.h,
	  src/includes/wavFormat.h: Fixed ugly sound problem

2003-03-09 16:39  Thomas Huth

	* ChangeLog, src/ikbd.c: IKBD_Cmd_ReadClock now works

2003-03-09 16:37  Thomas Huth

	* src/tos.c: Fixed problem on little endian systems

2003-03-08 12:29  Thomas Huth

	* src/m68000.c, src/mfp.c, src/video.c, ChangeLog: Fixed problem
	  with SR (IPL)

2003-03-07 18:10  Thomas Huth

	* src/: m68000.c, uae-cpu/hatari-glue.c, uae-cpu/hatari-glue.h,
	  uae-cpu/newcpu.c: Interrupts are handled now in the UAE's way

2003-03-07 18:08  Thomas Huth

	* src/floppy.c: Added warning when inserting disk with Pacifist bug

2003-03-06 18:41  Thomas Huth

	* src/dialog.c: Added possibility to choose fullscreen resolution

2003-03-04 20:28  Thomas Huth

	* ChangeLog, src/ikbd.c: Fixed bug with duplicated firebutton

2003-03-04 20:27  Thomas Huth

	* src/: audio.c, main.c, sound.c, video.c, wavFormat.c,
	  includes/audio.h, includes/sound.h, includes/main.h: Improved
	  audio timer function

2003-03-03 19:40  Thomas Huth

	* src/uae-cpu/build68k.c, src/uae-cpu/fpp.c, src/uae-cpu/gencpu.c,
	  src/uae-cpu/newcpu.c, src/uae-cpu/newcpu.h,
	  src/uae-cpu/readcpu.c, src/uae-cpu/readcpu.h,
	  src/uae-cpu/sysdeps.h, src/uae-cpu/table68k, ChangeLog: Synced
	  CPU core with UAE 0.8.22

2003-03-03 15:23  Thomas Huth

	* src/tos.c: Patches for TOS 2.05

2003-03-02 16:14  Thomas Huth

	* src/audio.c: Now only resetting sound system when really needed

2003-02-28 16:34  Thomas Huth

	* ChangeLog: Improved TOS patching routine

2003-02-28 16:31  Thomas Huth

	* src/: gemdos.c, m68000.c, main.c, reset.c, tos.c,
	  includes/reset.h, includes/tos.h: Improved TOS patching routine

2003-02-27 11:47  Thomas Huth

	* src/: cartimg.c, uae-cpu/hatari-glue.c, uae-cpu/newcpu.c: Removed
	  0xa0ff opcode

2003-02-02 23:41  Thomas Huth

	* ChangeLog, src/screen.c, src/screenConvert.c,
	  src/convert/low320x8.c, src/convert/low640x8.c,
	  src/convert/med640x8.c, src/convert/spec640x16.c,
	  src/includes/screenConvert.h: Rewrote some screen convertion
	  functions in C

2003-02-02 14:01  Thomas Huth

	* authors.txt: Added author of blitter emulator

2003-02-02 14:00  Thomas Huth

	* ChangeLog, src/tos.c, src/includes/tos.h: Fixed MMU RAM size bug

2003-01-30 21:51  Thomas Huth

	* src/uae-cpu/newcpu.c: Enabled bus/address error PC hack for
	  m68k_run1, too

2003-01-29 00:49  Thomas Huth

	* ChangeLog, src/uae-cpu/newcpu.c: Fixed bus/address error PC bug:
	  When a bus or address error occurred, the PC was often not set to the
	  right exception handler routine. This has been fixed now - thanks to
	  Philippe Gerin for finding the bug and the patch for solving it!

2002-12-30 18:44  Thomas Huth

	* src/uae-cpu/gencpu.c: Fixed compiler warning (with GCC 3.1)

2002-12-30 : *** Version 0.25 ***

2002-12-30 01:54  Thomas Huth

	* ChangeLog, readme.txt: Changes for version 0.25

2002-12-25 22:15  Thomas Huth

	* src/intercept.c: Added some more bus error regions

2002-12-24 15:47  Thomas Huth

	* src/: Makefile, m68000.c, includes/decode.h, includes/main.h,
	  includes/vdi.h, uae-cpu/Makefile, uae-cpu/events.h,
	  uae-cpu/gencpu.c, uae-cpu/hatari-glue.c, uae-cpu/hatari-glue.h,
	  uae-cpu/maccess.h, uae-cpu/memory.c, uae-cpu/memory.h,
	  uae-cpu/newcpu.c, uae-cpu/newcpu.h, uae-cpu/readcpu.c,
	  uae-cpu/readcpu.h, uae-cpu/sysdeps.h: Cleaned up headers & fixed
	  compiler warnings with -Wall

2002-12-23 15:54  Thomas Huth

	* src/cartimg.c, src/m68000.c, src/screen.c, src/tos.c, src/vdi.c,
	  src/includes/vdi.h, ChangeLog: Improved VDI resolution modes

2002-12-22 17:09  Thomas Huth

	* src/dialog.c, src/screen.c, src/screenConvert.c, src/vdi.c,
	  src/video.c, src/convert/vdi4.c, src/includes/screen.h,
	  ChangeLog: Added 4 color VDI screen mode

2002-12-01 00:18  Thomas Huth

	* ChangeLog, src/dialog.c, src/screen.c, src/vdi.c,
	  src/convert/vdi2.c: Improved VDI resolution modes

2002-11-28 22:28  Thomas Huth

	* src/: screen.c, screenConvert.c: Some patches for big endian
	  systems

2002-11-28 22:26  Thomas Huth

	* src/: dialog.c, vdi.c: Added resolution choice to TOS/GEM dialog

2002-10-13 16:47  Thomas Huth

	* ChangeLog, src/m68000.c, src/main.c, src/screen.c,
	  src/screenConvert.c, src/vdi.c, src/convert/vdi16.c,
	  src/includes/dialog.h, src/includes/m68000.h,
	  src/includes/screen.h, src/includes/vdi.h,
	  src/uae-cpu/hatari-glue.c, src/uae-cpu/hatari-glue.h,
	  src/uae-cpu/newcpu.c: Enabled big VDI screen resolutions in
	  Hatari

2002-10-01 23:48  Thomas Huth

	* src/: floppy.c, keymap.c: Some small bugs fixed

2002-10-01 23:47  Thomas Huth

	* src/: timer.c, includes/timer.h: Deleted unused files

2002-10-01 23:44  Thomas Huth

	* src/: Makefile, debugui.c, main.c: Removed timer.c

2002-09-28 16:32  Thomas Huth

	* src/wavFormat.c: Patches for big endian systems

2002-09-21 01:14  Thomas Huth

	* src/: configuration.c, main.c, includes/dialog.h: Introduced
	  System dialog

2002-09-21 01:13  Thomas Huth

	* ChangeLog, src/dialog.c, src/sound.c, src/wavFormat.c: Added
	  YM/WAV sound recording

2002-09-01 20:51  Thomas Huth

	* src/: configuration.c, dialog.c, intercept.c, main.c,
	  includes/dialog.h, includes/intercept.h: Blitter now configurable
	  via GUI

2002-08-11 23:04  Thomas Huth

	* ChangeLog, src/blitter.c, src/includes/blitter.h: Fixed blitter
	  bug

2002-07-08 23:11  Thomas Huth

	* ChangeLog, src/convert/spec320x16.c: Endianess patches

2002-07-08 23:08  Thomas Huth

	* src/: dialog.c, sdlgui.c: Check if font has been loaded

2002-07-05 00:03  Thomas Huth

	* ChangeLog, authors.txt, src/Makefile, src/blitter.c,
	  src/intercept.c, src/main.c, src/includes/blitter.h,
	  src/includes/intercept.h: Added blitter emulation

2002-07-03 18:51  Thomas Huth

	* ChangeLog, src/keymap.c: Patches for Macs

2002-07-03 18:50  Thomas Huth

	* src/: spec512.c, convert/spec320x16.c: Patch for spec512 on big
	  endian machines

2002-07-03 18:48  Thomas Huth

	* src/: audio.c, joy.c, main.c: Changed init of joystick and audio

2002-06-23 22:03  Thomas Huth

	* src/tos.c: Added extra-check if able to patch TOS 2.06

2002-04-27 16:59  Thomas Huth

	* src/includes/syncTables.h: Fixed GCC warnings

2002-03-21 18:28  Thomas Huth

	* src/: Makefile, audio.c, configuration.c, createBlankImage.c,
	  createDiscImage.c, debugui.c, dialog.c, errlog.c, file.c,
	  gemdos.c, hdc.c, ikbd.c, intercept.c, keymap.c, m68000.c, main.c,
	  memorySnapShot.c, mfp.c, printer.c, rs232.c, screen.c,
	  screenConvert.c, shortcut.c, sound.c, tos.c, video.c,
	  wavFormat.c, ymFormat.c, convert/low640x16.c,
	  convert/med640x16.c, includes/decode.h, includes/fdc.h,
	  includes/hdc.h, includes/intercept.h, includes/screenConvert.h,
	  includes/syncTables.h, uae-cpu/hatari-glue.h: Fixed compiler
	  warnings with -Wall

2002-02-25 18:19  Thomas Huth

	* readme.txt, src/screen.c, src/shortcut.c, src/includes/screen.h:
	  Added mouse grabbing

2002-02-22 16:50  Stefan Berndtsson

	* src/screenConvert.c: Using the SDL endian routines instead.

2002-02-21 16:04  Thomas Huth

	* ChangeLog, src/m68000.c, src/sound.c, src/includes/decode.h,
	  src/includes/m68000.h, src/includes/sound.h,
	  src/uae-cpu/events.h: Cleaned up

2002-02-21 16:03  Thomas Huth

	* src/tos.c: TOS 1.00 has been wrongly patched - fixed now

2002-02-21 15:06  Stefan Berndtsson

	* src/screenConvert.c: Big endian fix for monochrome display. I
	  hope it still works on little endian.

2002-02-18 : *** Version 0.20 ***

2002-02-18 18:07  Thomas Huth

	* ChangeLog, readme.txt, src/audio.c, src/dialog.c, src/file.c,
	  src/gemdos.c, src/main.c, src/sdlgui.c, src/includes/gemdos.h,
	  src/includes/main.h: Version 0.20 changes

2002-02-16 18:28  Thomas Huth

	* gpl.txt: Fixed Y2K bug

2002-02-11 18:38  Thomas Huth

	* src/: configuration.c, dialog.c, main.c, includes/dialog.h: HD
	  image now selectable in the GUI

2002-02-05 20:49  Thomas Huth

	* ChangeLog, src/file.c: Small bugfix for BeOS

2002-02-04 22:24  Thomas Huth

	* src/: Makefile, debugui.c, fdc.c, gemdos.c, hdc.c, main.c,
	  reset.c, tos.c, includes/gemdos.h, includes/hdc.h,
	  uae-cpu/hatari-glue.c: Added Svens HD-image patch

2002-02-02 15:57  Thomas Huth

	* src/: configuration.c, dialog.c, intercept.c, main.c, sdlgui.c,
	  includes/dialog.h, uae-cpu/hatari-glue.c, uae-cpu/hatari-glue.h,
	  uae-cpu/newcpu.c: Added CPU dialog

2002-02-02 15:53  Thomas Huth

	* authors.txt, readme.txt: Some minor changes

2002-01-14 19:40  Thomas Huth

	* ChangeLog, src/joy.c, src/main.c, src/includes/joy.h: Added real
	  joystick support

2002-01-10 09:01  Thomas Huth

	* src/: Makefile, gemdos.c, includes/file.h, uae-cpu/sysdeps.h:
	  Cleaned up/Patch for BeOS

2002-01-02 18:08  Thomas Huth

	* ChangeLog, src/dialog.c, src/m68000.c, src/main.c,
	  src/shortcut.c, src/includes/m68000.h, src/includes/main.h,
	  src/uae-cpu/events.h, src/uae-cpu/hatari-glue.c,
	  src/uae-cpu/memory.c, src/uae-cpu/memory.h, src/uae-cpu/newcpu.c:
	  Fixed some ST reset problems

2002-01-01 18:44  Thomas Huth

	* src/: audio.c, dialog.c, main.c, sdlgui.c, shortcut.c, sound.c,
	  includes/audio.h, includes/dialog.h, includes/main.h: Updated the
	  dialogs

2001-12-27 14:13  Thomas Huth

	* ChangeLog, src/dialog.c, src/main.c, src/sdlgui.c,
	  src/shortcut.c, src/uae-cpu/newcpu.c, src/uae-cpu/newcpu.h: First
	  working version of the GUI.

2001-12-26 19:24  Thomas Huth

	* src/: configuration.c, dialog.c, file.c, sdlgui.c,
	  includes/file.h, includes/sdlgui.h: Better gui, selecting discs
	  now works.

2001-12-25 17:24  Thomas Huth

	* src/file.c: Splitpath, makepath, scandir and alphasort added
	  here.

2001-12-25 17:21  Thomas Huth

	* src/: dialog.c, sdlgui.c, includes/sdlgui.h: Added some more
	  dialogs.

2001-12-25 17:19  Thomas Huth

	* ChangeLog, src/floppy.c, src/gemdos.c, src/main.c, src/misc.c,
	  src/ymFormat.c, src/includes/file.h, src/includes/main.h,
	  src/includes/misc.h: Cleaned up some files

2001-12-23 14:29  Thomas Huth

	* src/: ikbd.c, main.c, includes/ikbd.h: Better relative mouse
	  support.

2001-12-21 19:27  Thomas Huth

	* src/: statusBar.c, view.c, includes/statusBar.h, includes/view.h:
	  Cleaned up and removed view.c and statusbar.c

2001-12-21 19:25  Thomas Huth

	* ChangeLog, src/Makefile, src/audio.c, src/configuration.c,
	  src/dialog.c, src/floppy.c, src/gemdos.c, src/ikbd.c,
	  src/keymap.c, src/m68000.c, src/main.c, src/memorySnapShot.c,
	  src/mfp.c, src/printer.c, src/rs232.c, src/screen.c,
	  src/screenSnapShot.c, src/shortcut.c, src/video.c,
	  src/wavFormat.c, src/ymFormat.c, src/convert/high640x8.c,
	  src/includes/ikbd.h, src/includes/keymap.h: Relative SDL mouse
	  mode added, view.c and statusbar.c removed.

2001-12-16 21:27  Thomas Huth

	* src/: dialog.c, sdlgui.c: Designed some dialogs.

2001-12-10 22:43  Thomas Huth

	* src/includes/dialog.h: Cleaned up file.

2001-12-10 22:41  Thomas Huth

	* src/: .cvsignore, errlog.txt: errlog.txt removed.

2001-12-10 22:40  Thomas Huth

	* src/audio.c: Check for right sound init.

2001-12-10 22:38  Thomas Huth

	* src/font8.bmp, ChangeLog, src/.cvsignore, src/Makefile,
	  src/configuration.c, src/dialog.c, src/main.c, src/sdlgui.c,
	  src/shortcut.c, src/includes/sdlgui.h: First version of the GUI.

2001-12-09 13:16  Thomas Huth

	* src/: Makefile, audio.c, configuration.c, dialog.c, floppy.c,
	  main.c, includes/dialog.h: Cleaned up some files.

2001-11-02 22:45  Thomas Huth

	* src/tos.c: Made TOS loading more flexible.

2001-10-24 21:27  Thomas Huth

	* src/gemdos.c: scandir and alphasort for BeOS.

2001-10-12 19:23  Thomas Huth

	* src/debugui.c: Update to newest version of the debugger.

2001-10-11 18:29  Thomas Huth

	* src/screenSnapShot.c: Fixed bug that only allowed 8 snapshots.

2001-10-10 : *** Version 0.11 ***

2001-10-10 20:43  Thomas Huth

	* src/uae-cpu/.cvsignore: cvsignore for generated files.

2001-10-10 20:41  Thomas Huth

	* ChangeLog, readme.txt, src/gemdos.c, src/includes/main.h: Version
	  0.11 changes

2001-10-09 19:32  Thomas Huth

	* src/: Makefile, createBlankImage.c, debug.c, errlog.c, fdc.c,
	  floppy.c, ikbd.c, int.c, keymap.c, m68000.c, memAlloc.c, mfp.c,
	  misc.c, msa.c, printer.c, psg.c, reset.c, spec512.c, st.c,
	  timer.c, vdi.c, xbios.c, ymFormat.c, convert/high640x8.c,
	  includes/m68000.h: Changed a lot of C++ comments into C comments
	  (for plain ANSI-C compilers).

2001-10-09 19:29  Thomas Huth

	* src/: disass.c, includes/disass.h: no longer needed.

2001-09-28 20:30  Thomas Huth

	* src/: screen.c, screenConvert.c, convert/high640x8.c: Enhanced
	  the monochrome mode.

2001-09-24 19:32  Thomas Huth

	* src/: main.c, uae-cpu/hatari-glue.c, uae-cpu/newcpu.c: Added
	  compatible 68000 CPU mode.

2001-09-24 14:21  Thomas Huth

	* src/: screen.c, uae-cpu/hatari-glue.c: Some code cleaned up.

2001-09-20 18:54  Thomas Huth

	* ChangeLog, src/intercept.c, src/main.c, src/screen.c,
	  src/screenConvert.c, src/convert/low320x16.c,
	  src/convert/low640x16.c, src/convert/med640x16.c,
	  src/convert/spec320x16.c, src/includes/screenConvert.h: Added
	  screen flipping and mixed mode resolution.

2001-09-18 19:18  Thomas Huth

	* authors.txt, src/configuration.c, src/file.c, src/main.c,
	  src/screenConvert.c, src/stMemory.c, src/tos.c, src/view.c,
	  src/includes/file.h, src/uae-cpu/m68k.h_i86,
	  src/uae-cpu/maccess-i86.h: Added BeOS patches, new options and
	  cleaned up some files.

2001-09-16 17:05  Thomas Huth

	* src/ikbd.c: Enabled second test for bInitGemDOS, too.

2001-09-09 16:03  Sven de Marothy

	* src/main.c: Added HD emulation options

2001-09-09 16:02  Sven de Marothy

	* ChangeLog: Add HD emulation changes

2001-09-09 16:01  Sven de Marothy

	* src/uae-cpu/newcpu.c: Fixd gemdos_opcode & runoldgemdos_opcode
	  for HD emulation

2001-09-09 16:00  Sven de Marothy

	* src/uae-cpu/hatari-glue.h: Fixed HD emulation

2001-09-09 16:00  Sven de Marothy

	* src/uae-cpu/hatari-glue.c: Gemdos_opcode & oldgemdos_opcode
	  implemented for HD emulation

2001-09-09 15:58  Sven de Marothy

	* src/ikbd.c: Fixed annoying key clicks - bInitGemDos is now set

2001-09-09 15:57  Sven de Marothy

	* src/: cart.c, cartimg.c, gemdos.c, includes/cart.h,
	  includes/gemdos.h: Fixed HD emulation

2001-09-09 14:03  Thomas Huth

	* src/: screen.c, screenSnapShot.c, includes/screen.h,
	  includes/screenSnapShot.h: Enabled screen snapshots in
	  fullscreen, too.

2001-09-07 21:32  Thomas Huth

	* src/includes/m68000.h: Removed M68000_FindLastInstructionCycles.

2001-09-07 21:29  Thomas Huth

	* src/includes/ikbd.h: Increased KeyStates array.

2001-08-16 : *** Version 0.10a ***

2001-08-16 19:19  Thomas Huth

	* ChangeLog, readme.txt, src/Makefile, src/ikbd.c, src/shortcut.c,
	  src/view.c, src/includes/main.h: Version 0.10 changes.

2001-08-16 19:16  Thomas Huth

	* src/: m68000.c, video.c, uae-cpu/events.h, uae-cpu/gencpu.c,
	  uae-cpu/newcpu.c, uae-cpu/newcpu.h: Improved CPU cycles
	  emulation.

2001-08-15 21:25  Thomas Huth

	* src/: screenConvert.c, spec512.c, convert/high640x1.c,
	  convert/spec320x16.c, includes/spec512.h: Added Spec512 support.

2001-08-06 20:10  Thomas Huth

	* src/: debugui.c, shortcut.c: Added Svens debugger update.

2001-08-06 18:05  Thomas Huth

	* src/ikbd.c: Set IKBD_RESET_CYCLES back to 400000

2001-07-22 13:35  Thomas Huth

	* src/: ikbd.c, intercept.c, m68000.c, tos.c: Fixed some bugs.

2001-07-21 19:47  Thomas Huth

	* src/uae-cpu/: events.h, gencpu.c, hatari-glue.c, hatari-glue.h,
	  newcpu.c, newcpu.h, sysdeps.h: Improved cpu cycles a little bit.

2001-07-21 19:40  Thomas Huth

	* ChangeLog, readme.txt, src/configuration.c, src/m68000.c,
	  src/main.c, src/screen.c, src/shortcut.c, src/view.c,
	  src/includes/decode.h, src/includes/screen.h: Added shortcuts and
	  better fullscreen.

2001-07-11 22:54  Thomas Huth

	* authors.txt: Added Sven.

2001-07-11 22:51  Thomas Huth

	* ChangeLog, src/screen.c, src/screenConvert.c,
	  src/convert/low320x16.c, src/convert/med640x16.c: Added ST medium
	  resolution emulation.

2001-07-10 22:56  Thomas Huth

	* ChangeLog, src/Makefile, src/debugui.c, src/ikbd.c, src/main.c,
	  src/screen.c, src/screenConvert.c, src/shortcut.c, src/video.c,
	  src/view.c, src/convert/low320x16.c, src/convert/med640x16.c,
	  src/includes/debugui.h, src/includes/main.h: Cleaned up some
	  files and added Svens debugger patch.

2001-06-26 21:07  Thomas Huth

	* src/: Makefile, main.c, pcx.c, screen.c, screenSnapShot.c,
	  shortcut.c, view.c, includes/pcx.h, includes/shortcut.h: Added
	  Svens screenshot patch.

2001-06-12 21:22  Thomas Huth

	* src/: audio.c, screen.c, video.c, includes/screen.h,
	  includes/video.h: Fixed sound sync problems.

2001-06-10 16:15  Thomas Huth

	* ChangeLog, readme.txt, src/audio.c, src/configuration.c,
	  src/main.c, src/screen.c, src/shortcut.c, src/sound.c,
	  src/video.c, src/includes/audio.h, src/includes/configuration.h,
	  src/includes/main.h, src/includes/sound.h: Added sound support.


2001-06-01 : *** Version 0.05a ***
	* Created CVS Repository at SourceForge.net
	* Added joystick emulation.
	* Added Stefan's patch for ST-LOW res on big-endian machines,
	  his patch for also leaving Hatari by pressing F12, and
	  his fullscreen patch.
	* Changed all tabulator characters in the source to spaces.

2001-05-27 : *** Version 0.04a ***
	* Added Stefan Berndtsson's patch for big-endian machines.
	  Hatari now runs also with non-x86 Linux machines! Thanks Stefan!
	* Rewrote the ST-LOW resolution conversion routines in C
	  => ST-LOW now works!
	* Added some of the WinSTon patches Paul Bates recently published
	  at the WinSTon BBS (Thanks to Ladislav Adamec for the hint).
	* Cleaned up the source tree a little bit.

2001-04-03 : *** Version 0.03a ***
	* Rewrote some more assembler functions. FDC emulation now works!

2001-04-02  T. Huth
	* SDL Keyboard code finished and included a SDL-Key -> ST-Scancode table.

2001-03-29  T. Huth
	* Added mouse support.

2001-03-28 : *** Version 0.02a ***
	* Added very simple SDL support.
	* Rewrote a lot of assembler functions in C (e.g. intercept.c).
	* Adapted the UAE CPU. Now Hatari is able to boot a TOS 1.0x ROM, the
	  Desktop shows up, but no mouse and keyboard interaction yet.

2001-03-21 : *** Version 0.01a ***
	* Made the WinSTon source code compilable.
	* Added the UAE CPU sources.
